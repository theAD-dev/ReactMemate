{"version":3,"file":"static/js/8670.5f736c38.chunk.js","mappings":"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","sources":["components/layout/settings/templates/sms-template/sms-templates.js","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, OverlayTrigger, Spinner, Tooltip } from 'react-bootstrap';\nimport { PlusLg, InfoCircle } from \"react-bootstrap-icons\";\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Tooltip as PrimeTooltip } from 'primereact/tooltip'; // Renamed to avoid conflict\nimport { getSMSTemplates } from '../../../../../APIs/email-template';\nimport { useTrialHeight } from '../../../../../app/providers/trial-height-provider';\nimport Sidebar from '../../Sidebar';\nimport style from '../job-template.module.scss';\n\nconst SMSTemplates = () => {\n    const { trialHeight } = useTrialHeight();\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const has_work_subscription = !!profileData?.has_work_subscription;\n    const has_twilio = !!profileData?.has_twilio;\n    const [activeTab, setActiveTab] = useState('job-templates');\n\n    const smsTemplateQuery = useQuery({\n        queryKey: [\"smsTemplate\"],\n        queryFn: getSMSTemplates,\n    });\n\n    return (\n        <div className='settings-wrap'>\n            <Helmet>\n                <title>MeMate - SMS Templates</title>\n            </Helmet>\n            <div className=\"settings-wrapper\">\n                <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                <div className=\"settings-content setModalelBoots\">\n                    <div className='headSticky' style={{ position: 'relative' }}>\n                        <h1>Templates</h1>\n                        <div className='contentMenuTab'>\n                            <ul>\n                                <li><Link to=\"/settings/templates/email-templates\">Email Templates</Link></li>\n                                <li><Link to=\"/settings/templates/email-signatures\">Email Signatures</Link></li>\n                                <li><Link to=\"/settings/templates/proposal-templates\">Proposal Templates</Link></li>\n                                {!has_work_subscription ? (\n                                    <OverlayTrigger\n                                        key=\"top\"\n                                        placement=\"top\"\n                                        overlay={\n                                            <Tooltip className='TooltipOverlay width-300' id=\"tooltip-job-templates\">\n                                                Work environment is not available for this subscription type\n                                            </Tooltip>\n                                        }\n                                    >\n                                        <li style={{ opacity: '.5', cursor: 'not-allowed' }}><Link to=\"#\">Job Templates</Link></li>\n                                    </OverlayTrigger>\n                                ) : (\n                                    <li><Link to=\"/settings/templates/job-templates\">Job Templates</Link></li>\n                                )}\n                                <li className='menuActive'><Link to=\"/settings/templates/sms-templates\">SMS Templates</Link></li>\n                            </ul>\n                        </div>\n\n                    </div>\n                    <div className={`content_wrap_main mt-0`} style={{ height: `calc(100vh - 230px - ${trialHeight}px)` }}>\n                        <div className='content_wrapper'>\n                            <div className='listwrapper'>\n                                <div className=\"topHeadStyle mb-4 align-items-center\">\n                                    <h2 className='mb-0'>SMS Templates</h2>\n                                    {\n                                        has_twilio &&\n                                        <Link className='mb-0' to={'/settings/templates/sms-templates/new'}>\n                                            Create New Template <PlusLg color='#344054' size={20} />\n                                        </Link>\n                                    }\n                                </div>\n                                {smsTemplateQuery?.data?.map((sms, index) => (\n                                    <div key={sms.id} className={clsx(style.listbox, 'mb-2')}>\n                                        <PrimeTooltip position='top' className={style.customTooltip} target={`.info-${index}`} />\n                                        <h2 className={clsx(style.heading)}>\n                                            {sms?.title}\n                                            {/* {sms.type !== 'Custom' && (\n                                                <InfoCircle\n                                                    color='#667085'\n                                                    className={`ms-2 info-${index}`}\n                                                    data-pr-tooltip=\"This is a default sms template.\"\n                                                />\n                                            )} */}\n                                        </h2>\n                                        <Link to={`/settings/templates/sms-templates/${sms.id}?isCustom=${sms.type === 'Custom'}`}>\n                                            <Button className={clsx(style.editPencil, 'text-button p-0')} style={{ color: '#1AB2FF', visibility: 'hidden' }}>\n                                                edit\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    {smsTemplateQuery.isLoading && (\n                        <div\n                            style={{\n                                position: 'fixed',\n                                top: '50%',\n                                left: '50%',\n                                background: 'white',\n                                width: '60px',\n                                height: '60px',\n                                borderRadius: '4px',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                zIndex: 10,\n                            }}\n                            className=\"shadow-lg\"\n                        >\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SMSTemplates;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["SMSTemplates","_smsTemplateQuery$dat","trialHeight","useTrialHeight","profileData","JSON","parse","window","localStorage","getItem","has_work_subscription","has_twilio","activeTab","setActiveTab","useState","smsTemplateQuery","useQuery","queryKey","queryFn","getSMSTemplates","_jsxs","className","children","_jsx","Helmet","Sidebar","style","position","Link","to","OverlayTrigger","placement","overlay","Tooltip","id","opacity","cursor","height","PlusLg","color","size","data","map","sms","index","clsx","listbox","PrimeTooltip","customTooltip","target","heading","title","type","Button","editPencil","visibility","isLoading","top","left","background","width","borderRadius","display","justifyContent","alignItems","zIndex","Spinner","animation","role","React","_ref","ref","bsPrefix","variant","as","Component","props","useBootstrapPrefix","bsSpinnerPrefix","classNames","displayName"],"sourceRoot":""}