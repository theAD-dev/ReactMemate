{"version":3,"file":"static/js/3383.5bcdac34.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/react-bootstrap-icons/dist/icons/calendar.js","../node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Calendar = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-calendar', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z\"\n  }));\n});\nCalendar.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nCalendar.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null,\n  className: ''\n};\nexport default Calendar;","/*!\n* chartjs-plugin-annotation v3.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2024 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, DoughnutController, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, toRadians, isObject, valueOrDefault, defined, isFunction, callback, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, getAngleFromPoint, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(visibleElements, event) {\n      return filterElements(visibleElements, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(visibleElements, event, options) {\n      return getNearestItem(visibleElements, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(visibleElements, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(visibleElements, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(visibleElements, event, options) {\n  return visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(visibleElements, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(visibleElements, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {{value: number, start: number, end: number}} limit\n * @param {number} hitSize\n * @returns {boolean}\n */\nconst inLimit = (limit, hitSize) => limit.value >= limit.start - hitSize && limit.value <= limit.end + hitSize;\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} hitSize\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, hitSize) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hitSize, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {{borderWidth: number, hitTolerance: number}} hitsize\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, {borderWidth, hitTolerance}) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const inRangeX = point.x >= x - hitSize - EPSILON && point.x <= x2 + hitSize + EPSILON;\n  const inRangeY = point.y >= y - hitSize - EPSILON && point.y <= y2 + hitSize + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {Point} point\n * @param {rect: {x: number, y: number, x2: number, y2: number}, center: {x: number, y: number}} element\n * @param {InteractionAxis} axis\n * @param {{rotation: number, borderWidth: number, hitTolerance: number}}\n * @returns {boolean}\n */\nfunction inLabelRange(point, {rect, center}, axis, {rotation, borderWidth, hitTolerance}) {\n  const rotPoint = rotated(point, center, toRadians(-rotation));\n  return inBoxRange(rotPoint, rect, axis, {borderWidth, hitTolerance});\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\nconst boxAppering = (x, y) => ({x, y, x2: x, y2: y, width: 0, height: 0});\nconst defaultInitAnimation = {\n  box: (properties) => boxAppering(properties.centerX, properties.centerY),\n  doughnutLabel: (properties) => boxAppering(properties.centerX, properties.centerY),\n  ellipse: (properties) => ({centerX: properties.centerX, centerY: properties.centerX, radius: 0, width: 0, height: 0}),\n  label: (properties) => boxAppering(properties.centerX, properties.centerY),\n  line: (properties) => boxAppering(properties.x, properties.y),\n  point: (properties) => ({centerX: properties.centerX, centerY: properties.centerY, radius: 0, width: 0, height: 0}),\n  polygon: (properties) => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import('chart.js').FontSpec } FontSpec\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').Padding } Padding\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {Point} point\n * @param {{height: number, width: number}} labelSize\n * @param {{borderWidth: number, position: {LabelPositionObject|string}, xAdjust: number, yAdjust: number}} options\n * @param {Padding|undefined} padding\n * @returns {{x: number, y: number, x2: number, y2: number, height: number, width: number, centerX: number, centerY: number}}\n */\nfunction measureLabelRectangle(point, labelSize, {borderWidth, position, xAdjust, yAdjust}, padding) {\n  const hasPadding = isObject(padding);\n  const width = labelSize.width + (hasPadding ? padding.width : 0) + borderWidth;\n  const height = labelSize.height + (hasPadding ? padding.height : 0) + borderWidth;\n  const positionObj = toPosition(position);\n  const x = calculateLabelPosition$1(point.x, width, xAdjust, positionObj.x);\n  const y = calculateLabelPosition$1(point.y, height, yAdjust, positionObj.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\n/**\n * @param {LabelPositionObject|string} value\n * @param {string|number} defaultValue\n * @returns {LabelPositionObject}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {boolean}\n */\nconst shouldFit = (options, fitRatio) => options && options.autoFit && fitRatio < 1;\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {FontSpec[]}\n */\nfunction toFonts(options, fitRatio) {\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont : [optFont];\n  if (shouldFit(options, fitRatio)) {\n    return fonts.map(function(f) {\n      const font = toFont(f);\n      font.size = Math.floor(f.size * fitRatio);\n      font.lineHeight = f.lineHeight;\n      return toFont(font);\n    });\n  }\n  return fonts.map(f => toFont(f));\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\nfunction calculateLabelPosition$1(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\n\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{chart, properties, options}]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle || 'butt';\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle || 'miter';\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    const size = {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n    return size;\n  }\n  const fonts = toFonts(options);\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n */\nfunction drawLabel(ctx, rect, options, fitRatio) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const fonts = toFonts(options, fitRatio);\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\n/**\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\n/**\n * Drawa the callout component for labels.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {AnnotationElement} element - the label element\n */\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state.visibleElements, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state.visibleElements, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nclass DoughnutLabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: 0, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    if (!options.display || !options.content) {\n      return;\n    }\n    drawBackground(ctx, this);\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawLabel(ctx, this, options, this._fitRatio);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const meta = getDatasetMeta(chart, options);\n    if (!meta) {\n      return {};\n    }\n    const {controllerMeta, point, radius} = getControllerMeta(chart, options, meta);\n    let labelSize = measureLabelSize(chart.ctx, options);\n    const _fitRatio = getFitRatio(labelSize, radius);\n    if (shouldFit(options, _fitRatio)) {\n      labelSize = {width: labelSize.width * _fitRatio, height: labelSize.height * _fitRatio};\n    }\n    const {position, xAdjust, yAdjust} = options;\n    const boxSize = measureLabelRectangle(point, labelSize, {borderWidth: 0, position, xAdjust, yAdjust});\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      ...boxSize,\n      ...controllerMeta,\n      rotation: options.rotation,\n      _fitRatio\n    };\n  }\n}\n\nDoughnutLabelAnnotation.id = 'doughnutLabelAnnotation';\n\nDoughnutLabelAnnotation.defaults = {\n  autoFit: true,\n  autoHide: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  spacing: 1,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  yAdjust: 0\n};\n\nDoughnutLabelAnnotation.defaultRoutes = {\n};\n\nfunction getDatasetMeta(chart, options) {\n  return chart.getSortedVisibleDatasetMetas().reduce(function(result, value) {\n    const controller = value.controller;\n    if (controller instanceof DoughnutController &&\n      isControllerVisible(chart, options, value.data) &&\n      (!result || controller.innerRadius < result.controller.innerRadius) &&\n      controller.options.circumference >= 90) {\n      return value;\n    }\n    return result;\n  }, undefined);\n}\n\nfunction isControllerVisible(chart, options, elements) {\n  if (!options.autoHide) {\n    return true;\n  }\n  for (let i = 0; i < elements.length; i++) {\n    if (!elements[i].hidden && chart.getDataVisibility(i)) {\n      return true;\n    }\n  }\n}\n\nfunction getControllerMeta({chartArea}, options, meta) {\n  const {left, top, right, bottom} = chartArea;\n  const {innerRadius, offsetX, offsetY} = meta.controller;\n  const x = (left + right) / 2 + offsetX;\n  const y = (top + bottom) / 2 + offsetY;\n  const square = {\n    left: Math.max(x - innerRadius, left),\n    right: Math.min(x + innerRadius, right),\n    top: Math.max(y - innerRadius, top),\n    bottom: Math.min(y + innerRadius, bottom)\n  };\n  const point = {\n    x: (square.left + square.right) / 2,\n    y: (square.top + square.bottom) / 2\n  };\n  const space = options.spacing + options.borderWidth / 2;\n  const _radius = innerRadius - space;\n  const _counterclockwise = point.y > y;\n  const side = _counterclockwise ? top + space : bottom - space;\n  const angles = getAngles(side, x, y, _radius);\n  const controllerMeta = {\n    _centerX: x,\n    _centerY: y,\n    _radius,\n    _counterclockwise,\n    ...angles\n  };\n  return {\n    controllerMeta,\n    point,\n    radius: Math.min(innerRadius, Math.min(square.right - square.left, square.bottom - square.top) / 2)\n  };\n}\n\nfunction getFitRatio({width, height}, radius) {\n  const hypo = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n  return (radius * 2) / hypo;\n}\n\nfunction getAngles(y, centerX, centerY, radius) {\n  const yk2 = Math.pow(centerY - y, 2);\n  const r2 = Math.pow(radius, 2);\n  const b = centerX * -2;\n  const c = Math.pow(centerX, 2) + yk2 - r2;\n  const delta = Math.pow(b, 2) - (4 * c);\n  if (delta <= 0) {\n    return {\n      _startAngle: 0,\n      _endAngle: TAU\n    };\n  }\n  const start = (-b - Math.sqrt(delta)) / 2;\n  const end = (-b + Math.sqrt(delta)) / 2;\n  return {\n    _startAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: start, y}).angle,\n    _endAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: end, y}).angle\n  };\n}\n\nfunction drawBackground(ctx, element) {\n  const {_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise, options} = element;\n  ctx.save();\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  ctx.arc(_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise);\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: this.options.borderWidth, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureLabelRectangle(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        ctx.lineWidth += this.options.hitTolerance;\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hitSize);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hitSize, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hitSize, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return inLimit(limit, hitSize) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, hitSize);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hitSize - EPSILON && rotatedPoint[axis] <= limit.end + hitSize + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, hitSize) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hitSize, 2)) + (b / Math.pow(yRadius + hitSize, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, hitSize);\n    }\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return inLimit(limit, hitSize);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth, hitTolerance}, rad) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + hitSize),\n      bY: centerY - cos * (radius + hitSize)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  doughnutLabel: DoughnutLabelAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, elements, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, elements, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    get elements() {\n      return elements.filter((el) => el && el.options);\n    },\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"3.1.0\";\n\nconst chartStates = new Map();\nconst isNotDoughnutLabel = annotation => annotation.type !== 'doughnutLabel';\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations.filter(isNotDoughnutLabel), chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(isNotDoughnutLabel).filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDatasetDraw(chart, _args, options) {\n    draw(chart, _args.index, options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  getAnnotations(chart) {\n    const state = chartStates.get(chart);\n    return state ? state.elements : [];\n  },\n\n  // only for testing\n  _getAnnotationElementsAtEventForMode(visibleElements, event, options) {\n    return getElements(visibleElements, event, options);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n      colors: {\n        properties: ['backgroundColor', 'borderColor'],\n        type: 'color'\n      }\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n"],"names":["useCallbackRef","useState","value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","arguments","isReactNative","global","navigator","product","document","useLayoutEffect","toFnRef","refA","refB","useMemo","a","b","mergeRefs","useMounted","mounted","isMounted","usePrevious","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","dataProp","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","optionsSupported","onceSupported","options","passive","once","addEventListener","removeEventListener","e","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","createElement","contains","context","compareDocumentPosition","ownerDocument","toArray","Function","prototype","bind","slice","qsa","element","selector","querySelectorAll","_excluded","_extends","Object","assign","target","i","length","source","key","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Calendar","forwardRef","_ref","color","size","title","className","rest","React","xmlns","viewBox","width","height","fill","filter","Boolean","join","d","propTypes","PropTypes","defaultProps","interaction","modes","point","visibleElements","filterElements","intersect","nearest","minDistance","Number","POSITIVE_INFINITY","reduce","nearestItems","center","getCenterPoint","evenPoint","axis","x","y","getPointByAxis","distance","distanceBetweenPoints","push","sort","_index","getNearestItem","getElements","mode","inRange","inRangeByAxis","rotated","angle","cos","Math","sin","cx","cy","isOlderPart","act","req","EPSILON","clamp","from","to","min","max","inLimit","limit","hitSize","start","end","clampAll","obj","inBoxRange","_ref2","x2","y2","borderWidth","hitTolerance","inRangeX","inRangeY","inLabelRange","_ref3","_ref4","rect","rotation","toRadians","getElementCenterPoint","useFinalPosition","centerX","centerY","getProps","isPercentString","s","endsWith","toPercent","parseFloat","toPositivePercent","boxAppering","defaultInitAnimation","box","properties","doughnutLabel","ellipse","radius","label","line","polygon","getRelativePosition","position","getSize","positivePercent","measureLabelRectangle","labelSize","_ref5","padding","xAdjust","yAdjust","hasPadding","isObject","positionObj","toPosition","calculateLabelPosition$1","defaultValue","valueOrDefault","shouldFit","fitRatio","autoFit","toFonts","optFont","font","fonts","isArray","map","f","toFont","floor","lineHeight","isBoundToPoint","defined","xValue","yValue","adjust","initAnimationProperties","chart","initAnim","init","applyDefault","result","callback","execCallback","loadHooks","hooks","hooksContainer","activated","forEach","hook","isFunction","type","widthCache","Map","fontsKey","prev","item","string","isImageOrCanvas","content","toString","translate","ctx","_ref6","rotate","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","strokeWidth","textStrokeWidth","lines","mapKey","_measureText","has","set","save","count","text","measureText","restore","calculateLabelSize","get","drawBox","stroke","fillStyle","backgroundColor","beginPath","addRoundedRectPath","w","h","toTRBLCorners","borderRadius","closePath","borderShadowColor","drawLabel","globalAlpha","elementValue","opacity","isNumber","getOpacity","style","drawImage","labels","optColor","colors","textAlign","calculateTextAlignment","textBaseline","miterLimit","textStrokeColor","setTextStrokeStyle","_ref8","lhs","l","lh","strokeText","applyLabelDecoration","_ref9","_ref10","c","fillText","applyLabelContent","drawPoint","pointStyle","rad","RAD_PER_DEG","isNaN","notRadius","_ref7","xOffset","yOffset","cornerRadius","arc","TAU","moveTo","TWO_THIRDS_PI","lineTo","QUARTER_PI","PI","HALF_PI","SQRT1_2","drawPointStyle","positions","drawCallout","pointX","pointY","callout","calloutPosition","display","includes","xPoints","yPoints","index","rotatedPoint","resolveCalloutAutoPosition","resolveCalloutPosition","margin","isPointInRange","separatorStart","separatorEnd","getCalloutSeparatorAdjust","getCalloutSeparatorCoord","sideStart","sideEnd","side","getCalloutSideAdjust","getCalloutSideCoord","limitedLineScale","xScaleID","startProp","endProp","yScaleID","scaleValue","scale","fallback","parse","isFinite","getPixelForValue","retrieveScaleID","scales","scaleID","charAt","axes","values","id","getDimensionByScale","reverse","getChartPoint","chartArea","xScale","yScale","left","top","resolveBoxProperties","right","bottom","xDim","getChartDimensionByScale","xMin","xMax","yDim","yMin","yMax","resolvePointProperties","adjustCenterX","adjustCenterY","getChartCircle","resolveLineProperties","area","NaN","endValue","isHorizontal","resolveFullLineProperties","scaleId","dim","resolveLimitedLineProperties","resolveBoxAndLabelProperties","initProperties","elements","optionScope","resolveLabelElementProperties$1","calculatePosition","boxOpts","labelOpts","padStart","padEnd","toPadding","_ref11","calculateX","_ref12","calculateY","moveHooks","eventHooks","concat","handleEvent","state","listened","moveListened","previous","hovered","changed","dispatchMoveEvents","handleMoveEvents","listeners","dispatchEvent","click","handleClickEvents","_ref13","checkElements","$context","elementHooks","invokeHook","hooked","callbackHook","adjustScaleRange","annotations","range","scaleIDOption","limits","NEGATIVE_INFINITY","annotation","updateLimits","getScaleLimits","changeScaleLimit","handleTickRangeOptions","suggestedLimit","scaleOptions","scaleLimitDefined","verifyScaleIDs","verifyProperties","console","warn","prop","props","raw","BoxAnnotation","Element","mouseX","mouseY","draw","resolveElementProperties","defaults","drawTime","family","weight","z","defaultRoutes","descriptors","_fallback","DoughnutLabelAnnotation","_centerX","_centerY","_radius","_startAngle","_endAngle","_counterclockwise","drawBackground","_fitRatio","meta","getSortedVisibleDatasetMetas","controller","DoughnutController","autoHide","hidden","getDataVisibility","isControllerVisible","data","innerRadius","circumference","getDatasetMeta","controllerMeta","_ref14","offsetX","offsetY","square","space","spacing","angles","yk2","pow","r2","delta","sqrt","getAngleFromPoint","getAngles","getControllerMeta","_ref15","hypo","getFitRatio","boxSize","LabelAnnotation","visible","_visible","_ref16","hBorderWidth","getLabelSize","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","sqr","v","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","atan2","LineAnnotation","path","mx","currentDevicePixelRatio","my","isPointInStroke","isOnLabel","_ref24","epsilon","x1","y1","dx","dy","lenSq","xx","yy","intersects","_ref18","_ref19","rangeLimit","_ref17","inAxisRange","curve","startOpts","endOpts","startAdjust","endAdjust","getArrowHeads","startAngle","endAngle","ps","pe","Path2D","quadraticCurveTo","drawArrowHeadOnCurve","drawCurve","drawArrowHead","inside","_ref20","_ref21","isLineInArea","limitPointToArea","limitLineToArea","controlPoint","getControlPoint","labelProperties","textSize","sizes","calculateAutoRotation","rotatedSize","r","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","toDegrees","calculateLabelPosition","resolveLabelElementProperties","arrowHeadsDefaults","_ref22","_ref23","_ref25","lineSize","lineW","lineH","coordinate","labelSizes","halfSize","arrowStartOpts","arrowHeads","arrowEndOpts","getLineAdjust","arrowOpts","offset","arrowOffsetX","_ref26","_ref27","EllipseAnnotation","p","xRadius","yRadius","cosAngle","sinAngle","pointInEllipse","PointAnnotation","inPointRange","PolygonAnnotation","points","isInside","A","B","bY","bX","pointIsInPolygon","axisPoints","first","el","sides","elProps","buildPointElement","_ref28","_ref29","annotationTypes","describe","directUpdater","update","hooks$1","resolve","optDefs","resolveObj","isIndexable","resolveType","updateElements","animations","animOpts","Animations","resolveAnimations","add","splice","Array","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","skip","toSkip","updateSubElements","resolveAnnotationOptions","mainElement","subElements","definition","subElement","subResolver","override","elementClass","defs","create","chartStates","isNotDoughnutLabel","version","beforeRegister","pkg","ver","strict","parts","split","parseInt","Error","requireVersion","Chart","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","args","verifyScaleOptions","afterDataLimits","afterUpdate","scope","updateListeners","updateHooks","beforeDatasetsDraw","_args","clip","afterDatasetsDraw","beforeDatasetDraw","beforeDraw","afterDraw","beforeEvent","afterDestroy","delete","getAnnotations","_getAnnotationElementsAtEventForMode","numbers","common","_indexable","_scriptable","_allKeys","opts","additionalOptionScopes","caller","clipArea","drawableElements","main","sub","getDrawableElements","drawElement","unclipArea"],"sourceRoot":""}