{"version":3,"file":"static/js/3965.3fbf154d.chunk.js","mappings":"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","sources":["APIs/SettingsGeneral.js","../node_modules/@szhsin/react-menu/dist/esm/components/MenuGroup.mjs","components/layout/settings/projectstatus/ProjectStatus.js","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap-icons/dist/icons/chevron-down.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n  const { method = 'GET', headers = {}, body } = options;\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  const defaultHeaders = {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n    ...headers\n  };\n\n  const requestOptions = {\n    method,\n    headers: defaultHeaders,\n    body: JSON.stringify(body),\n    redirect: 'follow'\n  };\n\n  try {\n    const url = new URL(`${endpoint}`);\n    const response = await fetch(url, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    } else {\n      // Handle non-JSON responses\n      const text = await response.text();\n      return { message: 'Non-JSON response', body: text };\n    }\n\n  } catch (error) {\n    console.error('Fetch API error:', error);\n    throw error;\n  }\n};\n\nexport const getBillingPersonalInfo = async () => {\n  const endpoint = `/settings/subscriptions/tax-id/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateBillingPersonalInfo = async (data) => {\n  const endpoint = `/settings/subscriptions/tax-id/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getPaymentMethodInfo = async () => {\n  const endpoint = `/settings/subscriptions/payment-method/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const retryPayment = async () => {\n  const endpoint = `/subscriptions/retry/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updatePaymentMethodInfo = async (data) => {\n  const endpoint = `/settings/subscriptions/payment-method/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getReginalAndLanguage = async () => {\n  const endpoint = `/settings/organization/region-language/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateReginalAndLanguage = async (data) => {\n  const endpoint = `/settings/organization/region-language/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectStatus = async (data) => {\n  console.log('data: ', data);\n  if (data.id) delete data.id;\n  if (data.isNew) delete data.isNew;\n  if (data.isChanged) delete data.isChanged;\n  if (data.value) delete data.value;\n\n  const endpoint = `/settings/project-statuses/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n  const endpoint = `/settings/project-statuses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProjectStatusById = async (id) => {\n  const endpoint = `/settings/project-statuses/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n\n\n\n\n\n\nexport const SettingsGeneralInformation = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateGeneralInformation = async (data, photo) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => {\n    formData.append(key, data[key]);\n  });\n\n  if (photo?.croppedImageBlob) {\n    const photoHintId = nanoid(6);\n    formData.append('company_logo', photo?.croppedImageBlob, `${photoHintId}.jpg`);\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.text();\n    console.log('result>>>>>>>>>>: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const SettingsBankInformation = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateBankInformation = async (generalData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(generalData).forEach((key) => {\n    formData.append(key, generalData[key]);\n  });\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const ProjectStatusesList = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/project-statuses/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('project fetch error:', error);\n    throw error;\n  }\n};\n\n","import { forwardRef, useRef, useState, useContext } from 'react';\nimport { jsx } from 'react/jsx-runtime';\nimport { useLayoutEffect as useIsomorphicLayoutEffect } from '../hooks/useIsomorphicLayoutEffect.mjs';\nimport { getNormalizedClientRect } from '../positionUtils/getNormalizedClientRect.mjs';\nimport { useBEM } from '../hooks/useBEM.mjs';\nimport { useCombinedRef } from '../hooks/useCombinedRef.mjs';\nimport { MenuListContext, menuClass, menuGroupClass } from '../utils/constants.mjs';\n\nconst MenuGroup = /*#__PURE__*/forwardRef(function MenuGroup({\n  className,\n  style,\n  takeOverflow,\n  ...restProps\n}, externalRef) {\n  const ref = useRef(null);\n  const [overflowStyle, setOverflowStyle] = useState();\n  const {\n    overflow,\n    overflowAmt\n  } = useContext(MenuListContext);\n  useIsomorphicLayoutEffect(() => {\n    let maxHeight;\n    if (takeOverflow && overflowAmt >= 0) {\n      maxHeight = getNormalizedClientRect(ref.current).height - overflowAmt;\n      if (maxHeight < 0) maxHeight = 0;\n    }\n    setOverflowStyle(maxHeight >= 0 ? {\n      maxHeight,\n      overflow\n    } : undefined);\n  }, [takeOverflow, overflow, overflowAmt]);\n  useIsomorphicLayoutEffect(() => {\n    if (overflowStyle) ref.current.scrollTop = 0;\n  }, [overflowStyle]);\n  return /*#__PURE__*/jsx(\"div\", {\n    ...restProps,\n    ref: useCombinedRef(externalRef, ref),\n    className: useBEM({\n      block: menuClass,\n      element: menuGroupClass,\n      className\n    }),\n    style: {\n      ...style,\n      ...overflowStyle\n    }\n  });\n});\n\nexport { MenuGroup };\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, Spinner, Table } from 'react-bootstrap';\nimport { PlusLg, ChevronDown } from \"react-bootstrap-icons\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from 'react-router-dom';\nimport { Menu, MenuItem, MenuButton, MenuGroup } from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport { useMutation } from \"@tanstack/react-query\";\nimport { toast } from 'sonner';\nimport { createProjectStatus, deleteProjectStatusById, ProjectStatusesList, updateProjectStatusById } from \"../../../../APIs/SettingsGeneral\";\n\nconst colorOptions = [\n    { value: \"#1AB2FF\", bg: \"#BAE8FF\", border: \"#1AB2FF\", color: \"#0A4766\", text: \"Blue\" },\n    { value: \"#4E5BA6\", bg: \"#EAECF5\", border: \"#4E5BA6\", color: \"#293056\", text: \"Deep Blue\" },\n    { value: \"#2970FF\", bg: \"#D1E0FF\", border: \"#2970FF\", color: \"#0040C1\", text: \"Dark Blue\" },\n    { value: \"#FFB258\", bg: \"#FFE8CD\", border: \"#FFB258\", color: \"#6D471A\", text: \"Orange\" },\n    { value: \"#15B79E\", bg: \"#CCFBEF\", border: \"#15B79E\", color: \"#125D56\", text: \"Green\" },\n    { value: \"#66C61C\", bg: \"#E3FBCC\", border: \"#66C61C\", color: \"#326212\", text: \"Light Green\" },\n    { value: \"#7A5AF8\", bg: \"#EBE9FE\", border: \"#7A5AF8\", color: \"#4A1FB8\", text: \"Light Purple\" },\n    { value: \"#D444F1\", bg: \"#FBE8FF\", border: \"#D444F1\", color: \"#821890\", text: \"Magenta\" },\n    { value: \"#F63D68\", bg: \"#FFE4E8\", border: \"#F63D68\", color: \"#A11043\", text: \"Pink\" },\n    { value: \"#FF007F\", bg: \"#FFCCE5\", border: \"#FF007F\", color: \"#6F0A3C\", text: \"Soft Pink\" },\n    { value: \"#FFD700\", bg: \"#FFF8D1\", border: \"#FFD700\", color: \"#997100\", text: \"Yellow\" },\n    { value: \"#6C6C1C\", bg: \"#E1E1B8\", border: \"#6C6C1C\", color: \"#444403\", text: \"Dark Yellow\" }\n];\n\nconst ProjectStatus = () => {\n    const [isCreating, setIsCreating] = useState(false);\n    const [options, setOptions] = useState([]);\n    const [error, setError] = useState('');\n\n    const fetchData = useCallback(async () => {\n        try {\n            setIsCreating(true);\n            const data = await ProjectStatusesList();\n            setOptions(prev => {\n                const unsavedNewOptions = prev.filter(opt => opt.isNew);\n                const fetchedOptions = data.map(item => ({ ...item, isChanged: false, isNew: false }));\n                return [...fetchedOptions, ...unsavedNewOptions];\n            });\n        } catch (error) {\n            console.error(\"Error fetching project status data:\", error);\n            toast.error('Failed to fetch project statuses');\n        } finally {\n            setIsCreating(false);\n        }\n    }, []);\n\n    const updateMutation = useMutation({\n        mutationFn: (data) => updateProjectStatusById(data.id, data),\n        onSuccess: async () => {\n            toast.success('The project status has been successfully updated.');\n        },\n        onError: (error) => {\n            console.error('Error updating status:', error);\n            toast.error('Failed to update the project status');\n        }\n    });\n\n    const deleteMutation = useMutation({\n        mutationFn: (id) => deleteProjectStatusById(id),\n        onSuccess: () => {\n            toast.success('The project status has been successfully deleted.');\n            fetchData();\n        },\n        onError: (error) => {\n            console.error('Error deleting status:', error);\n            toast.error('Failed to delete the project status');\n        }\n    });\n\n    const createMutation = useMutation({\n        mutationFn: (data) => createProjectStatus(data),\n        onSuccess: () => {\n            toast.success('The project status has been successfully created.');\n            fetchData();\n        },\n        onError: (error) => {\n            console.error('Error creating status:', error);\n            toast.error('Failed to create the project status');\n        }\n    });\n\n    const addOption = () => {\n        const availableColors = getAvailableColors(null);\n        if (availableColors.length === 0) return;\n\n        setOptions(prev => [...prev, {\n            isNew: true,\n            id: Date.now(),\n            value: availableColors[0].value,\n            color: availableColors[0].value,\n            title: \"\"\n        }]);\n    };\n\n    const updateOptionColor = (id, color) => {\n        setOptions(options.map(option =>\n            option.id === id ? { ...option, color, value: color, isChanged: true } : option\n        ));\n    };\n\n    const updateOptionTitle = (id, title) => {\n        if (title.length > 20) {\n            setError('The status name can be up to 20 characters long.');\n            return;\n        }\n        setError('');\n        setOptions(options.map(option =>\n            option.id === id ? { ...option, title, isChanged: true } : option\n        ));\n    };\n\n    const saveOption = async (id, isNew = false) => {\n        const optionToSave = options.find(option => option.id === id);\n        if (!optionToSave.title.trim()) {\n            setError('Status name is required');\n            return;\n        }\n        const dataToSave = { ...optionToSave, value: optionToSave.color };\n        delete dataToSave.isNew; // Remove temporary flags before saving\n        delete dataToSave.isChanged;\n\n        if (isNew) {\n            await createMutation.mutateAsync(dataToSave);\n            setOptions(prev => {\n                const unsavedOptions = prev.filter(opt => opt.id !== id);\n                return [...unsavedOptions];\n            });\n        } else {\n            await updateMutation.mutateAsync(dataToSave);\n            setOptions(prev => {\n                return prev.map(opt => {\n                    if (opt.id === id) {\n                        return { ...dataToSave, isChanged: false };\n                    }\n                    return opt;\n                });\n            });\n        }\n    };\n\n    const removeOption = (id) => {\n        const option = options.find(opt => opt.id === id);\n        if (option?.isNew) {\n            setOptions(options.filter(opt => opt.id !== id));\n        } else {\n            deleteMutation.mutate(id);\n        }\n    };\n\n    const getAvailableColors = (currentOptionId) => {\n        const usedColors = options\n            .filter(opt => opt.id !== currentOptionId)\n            .map(opt => opt.color);\n        return colorOptions.filter(color => !usedColors.includes(color.value));\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Project Status</title>\n            </Helmet>\n            <div className='headSticky'>\n                <h1>Organisation Setting</h1>\n                <div className='contentMenuTab'>\n                    <ul>\n                        <li className='menuActive'><Link to=\"/settings/projectstatus/project-status\">Project Status</Link></li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"content_wrap_main\">\n                <div className='content_wrapper'>\n                    <div className=\"listwrapper orgColorStatus\">\n                        <div className=\"top\">\n                            <h4>Custom Order Status</h4>\n                            {error ? (\n                                <p style={{ color: 'red' }}>{error}</p>\n                            ) : (\n                                <p>The status name can be up to 20 characters long.</p>\n                            )}\n                        </div>\n                        {isCreating && (\n                            <div style={{ position: 'absolute', top: '50%', left: '50%', background: 'white', width: '60px', height: '60px', borderRadius: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 10 }} className=\"shadow-lg\">\n                                <Spinner animation=\"border\" role=\"status\">\n                                    <span className=\"visually-hidden\">Loading...</span>\n                                </Spinner>\n                            </div>\n                        )}\n                        <Table>\n                            <tbody>\n                                {options.map((option) => (\n                                    <tr key={`option-${option.id}`}>\n                                        <td>\n                                            <div className='statuswrapper'>\n                                                <div className='statusTitle'>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={option.title}\n                                                        onChange={(e) => updateOptionTitle(option.id, e.target.value)}\n                                                        maxLength={20}\n                                                        placeholder=\"Enter status name\"\n                                                    />\n                                                    {(option.isNew || option.isChanged) && (\n                                                        <p className=\"mb-2 mt-2\">\n                                                            {option.title.length >= 20 ? (\n                                                                <span className=\"text-danger\">{option.title.length}</span>\n                                                            ) : (\n                                                                option.title.length\n                                                            )}\n                                                            /20\n                                                        </p>\n                                                    )}\n                                                </div>\n                                                <Menu\n                                                    className='mainSelectMenu'\n                                                    menuButton={\n                                                        <MenuButton className=\"colorSelectBut\">\n                                                            <div\n                                                                className=\"butcolorIn\"\n                                                                style={{\n                                                                    borderColor: option.color,\n                                                                    background: colorOptions.find(opt => opt.value === option.color)?.bg || 'transparent',\n                                                                    color: option.color,\n                                                                }}\n                                                            >\n                                                                {colorOptions.find(opt => opt.value === option.color)?.text || 'Select Color'}\n                                                            </div>\n                                                            <ChevronDown size={20} color='#98A2B3' />\n                                                        </MenuButton>\n                                                    }\n                                                    overflow={\"auto\"}\n                                                    position={\"anchor\"}\n                                                >\n                                                    <MenuGroup takeOverflow style={{ maxHeight: '230px', overflow: 'auto', boxShadow: '0px 12px 16px -4px rgba(16, 24, 40, 0.08), 0px 4px 6px -2px rgba(16, 24, 40, 0.03)', borderRadius: '4px', border: '1px solid #D0D5DD' }}>\n                                                        {getAvailableColors(option.id).map(({ value, bg, border, color, text }, index) => (\n                                                            <MenuItem\n                                                                onClick={() => updateOptionColor(option.id, value)}\n                                                                key={`${index}-${value}`}\n                                                                value={value}\n                                                                style={{ padding: '8px 10px 8px 8px' }}\n                                                            >\n                                                                <div className=\"d-flex\" style={{ width: '140px', height: '30px', borderRadius: '4px', overflow: 'hidden' }}>\n                                                                    <div className=\"h-100\" style={{ width: '4px', background: border }}></div>\n                                                                    <div className=\"h-100 d-flex align-items-center\" style={{ width: '100%', background: bg }}>\n                                                                        <span style={{ color: color, fontSize: '14px', paddingLeft: '12px', fontWeight: '400' }}>{text}</span>\n                                                                    </div>\n                                                                </div>\n                                                            </MenuItem>\n                                                        ))}\n                                                    </MenuGroup>\n                                                </Menu>\n                                            </div>\n                                        </td>\n                                        <td className=\"butactionOrg\">\n                                            {(option.isNew || option.isChanged) && (\n                                                <Button\n                                                    className=\"save\"\n                                                    onClick={() => saveOption(option.id, option.isNew)}\n                                                    disabled={!option.title.trim() || createMutation.isPending || updateMutation.isPending}\n                                                >\n                                                    {(updateMutation.isPending && updateMutation?.variables?.id === option.id) ||\n                                                        (createMutation.isPending && createMutation?.variables?.id === option.id)\n                                                        ? \"Loading...\"\n                                                        : \"Save\"}\n                                                </Button>\n                                            )}\n                                            <Button\n                                                className=\"remove\"\n                                                onClick={() => removeOption(option.id)}\n                                                disabled={deleteMutation.isPending}\n                                            >\n                                                {deleteMutation.isPending && deleteMutation?.variables === option.id ? \"Loading...\" : \"Remove\"}\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                                <tr>\n                                    <td id='addmoreOption' colSpan={3}>\n                                        <Button\n                                            onClick={addOption}\n                                            disabled={getAvailableColors(null).length === 0}\n                                        >\n                                            Add an Option   <PlusLg size={20} color='#000000' />\n                                        </Button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProjectStatus;","/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronDown = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '1em' : _ref$size,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? null : _ref$title,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-chevron-down', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708\"\n  }));\n});\nChevronDown.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nexport default ChevronDown;"],"names":["API_BASE_URL","process","fetchAPI","async","endpoint","options","arguments","length","undefined","method","headers","body","requestOptions","localStorage","getItem","JSON","stringify","redirect","url","URL","response","fetch","ok","Error","status","contentType","get","includes","json","message","text","error","console","getBillingPersonalInfo","toString","updateBillingPersonalInfo","data","getPaymentMethodInfo","retryPayment","updatePaymentMethodInfo","getReginalAndLanguage","updateReginalAndLanguage","createProjectStatus","log","id","isNew","isChanged","value","updateProjectStatusById","deleteProjectStatusById","SettingsGeneralInformation","myHeaders","Headers","accessToken","append","updateGeneralInformation","photo","formData","FormData","Object","keys","forEach","key","croppedImageBlob","photoHintId","nanoid","result","SettingsBankInformation","updateBankInformation","generalData","ProjectStatusesList","MenuGroup","forwardRef","_ref","externalRef","className","style","takeOverflow","restProps","ref","useRef","overflowStyle","setOverflowStyle","useState","overflow","overflowAmt","useContext","MenuListContext","useIsomorphicLayoutEffect","maxHeight","getNormalizedClientRect","current","height","scrollTop","jsx","useCombinedRef","useBEM","block","menuClass","element","menuGroupClass","colorOptions","bg","border","color","ProjectStatus","isCreating","setIsCreating","setOptions","setError","fetchData","useCallback","prev","unsavedNewOptions","filter","opt","map","item","toast","updateMutation","useMutation","mutationFn","onSuccess","success","onError","deleteMutation","createMutation","getAvailableColors","currentOptionId","usedColors","useEffect","_jsxs","_Fragment","children","_jsx","Helmet","Link","to","position","top","left","background","width","borderRadius","display","justifyContent","alignItems","zIndex","Spinner","animation","role","Table","option","_colorOptions$find","_colorOptions$find2","_updateMutation$varia","_createMutation$varia","type","title","onChange","e","updateOptionTitle","target","maxLength","placeholder","Menu","menuButton","MenuButton","borderColor","find","ChevronDown","size","boxShadow","index","MenuItem","onClick","updateOptionColor","padding","fontSize","paddingLeft","fontWeight","Button","optionToSave","trim","dataToSave","mutateAsync","saveOption","disabled","isPending","variables","mutate","removeOption","colSpan","addOption","availableColors","Date","now","PlusLg","bytes","crypto","getRandomValues","Uint8Array","React","bsPrefix","striped","bordered","borderless","hover","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass","_excluded","_extends","assign","bind","n","t","r","hasOwnProperty","call","apply","_ref$color","_ref$size","_ref$title","_ref$className","rest","o","i","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","xmlns","viewBox","fill","Boolean","join","fillRule","d","propTypes","PropTypes"],"sourceRoot":""}