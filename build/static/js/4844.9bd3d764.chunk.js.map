{"version":3,"file":"static/js/4844.9bd3d764.chunk.js","mappings":"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","sources":["components/layout/settings/customerssettings/Industries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PlusLg, PencilSquare } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as yup from 'yup';\nimport style from './customer.module.scss';\nimport { getIndustriesList, newIndustries, readIndustry, updateIndustry, deleteIndustry } from '../../../../APIs/industrieslist-api';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport Sidebar from '../Sidebar';\n\nconst CustomersIndustries = () => {\n    const { trialHeight } = useTrialHeight();\n    const [activeTab, setActiveTab] = useState('industries');\n    const [selectedIndustryId, setSelectedIndustryId] = useState(null);\n\n\n    const { data: industriesList, refetch } = useQuery({\n        queryKey: ['industriesList'],\n        queryFn: getIndustriesList,\n        enabled: true,\n    });\n\n    const { register, handleSubmit, setValue, reset, formState: { errors } } = useForm({\n        resolver: yupResolver(yup.object({\n            name: yup.string().required(\"Name is required\"),\n        }).required()),\n        defaultValues: { name: '' },\n    });\n\n\n    const fetchIndustry = async (industryId) => {\n        const industryData = await readIndustry(industryId);\n        setValue('name', industryData.name);\n    };\n\n    useEffect(() => {\n\n        if (selectedIndustryId) {\n            fetchIndustry(selectedIndustryId);\n        }\n    }, [selectedIndustryId]);\n\n\n    const readIndustryQuery = useQuery({\n        queryKey: ['industry', selectedIndustryId],\n        queryFn: () => readIndustryQuery(selectedIndustryId),\n        enabled: !!selectedIndustryId,\n        onSuccess: (data) => {\n            setValue('name', data.name);\n        }\n    });\n\n\n\n\n    const handleEditClick = (industryId) => {\n        setSelectedIndustryId(industryId);\n        setVisible2(true);\n    };\n\n\n    const mutation = useMutation({\n        mutationFn: (data) => newIndustries(data),\n        onSuccess: () => {\n            refetch();\n            handleClose();\n        },\n    });\n\n\n    const updateIndustryMutation = useMutation({\n        mutationFn: async ({ id, data }) => {\n            if (!id) {\n                throw new Error('Industry ID is missing');\n            }\n            return await updateIndustry(id, data);\n        },\n        onSuccess: () => {\n            refetch();\n            handleClose();\n        },\n    });\n\n    const deleteIndustryMutation = useMutation({\n        mutationFn: async (id) => {\n            if (!id) {\n                throw new Error('Industry ID is missing');\n            }\n            return await deleteIndustry(id);\n        },\n        onSuccess: () => {\n            refetch();\n            handleClose();\n        },\n    });\n\n\n\n    const onSubmit = (data) => {\n        if (selectedIndustryId) {\n            updateIndustryMutation.mutate({ id: selectedIndustryId, data });\n        } else {\n            mutation.mutate(data);\n        }\n        handleClose();\n    };\n\n\n\n\n    const [visible2, setVisible2] = useState(false);\n    const [visible, setVisible] = useState(false);\n\n    const handleClose = () => {\n        setVisible2(false);\n        reset();\n        setVisible(false);\n        setSelectedIndustryId(null);\n    };\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <div className=\"d-flex align-items-center gap-2\">\n                <div className={style.circledesignstyle}>\n                    <div className={style.out}>\n                        <PencilSquare size={24} color=\"#17B26A\" className='mb-3' />\n                    </div>\n                </div>\n                <span className={`white-space-nowrap ${style.headerTitle}`}>\n                    Edit Industries\n                </span>\n            </div>\n        </div>\n    );\n\n    const headerElement1 = (\n        <div className={`${style.modalHeader}`}>\n            <div className=\"d-flex align-items-center gap-2\">\n                <div className={style.circledesignstyle}>\n                    <div className={style.out}>\n                        <PencilSquare size={24} color=\"#17B26A\" className='mb-3' />\n                    </div>\n                </div>\n                <span className={`white-space-nowrap ${style.headerTitle}`}>\n                    Create Industries\n                </span>\n            </div>\n        </div>\n    );\n\n    const footerContent = (\n        <div className='d-flex justify-content-end gap-2'>\n            <Button className='outline-button' onClick={() => deleteIndustryMutation.mutate(selectedIndustryId)}>\n                Delete\n            </Button>\n            <Button className='solid-button' style={{ width: '132px' }} onClick={handleSubmit(onSubmit)}>Save Details</Button>\n        </div>\n    );\n    const footerContent1 = (\n        <div className='d-flex justify-content-end gap-2'>\n            <Button className='outline-button' onClick={handleClose}>Cancel</Button>\n            <Button className='solid-button' style={{ width: '132px' }} onClick={handleSubmit(onSubmit)}>Save Details</Button>\n        </div>\n    );\n\n    const editBody = (rowData) => (\n        <PencilSquare onClick={() => handleEditClick(rowData.id)} style={{ cursor: 'pointer' }} size={24} color=\"#667085\" className='' />\n    );\n\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Industries</title>\n            </Helmet>\n            <div className='settings-wrap'>\n                <div className=\"settings-wrapper\">\n                    <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                    <div className=\"settings-content setModalelBoots\">\n                        <div className='headSticky'>\n                            <h1>Customers Settings</h1>\n                            <div className='contentMenuTab'>\n                                <ul>\n                                    <li className='menuActive'><Link to=\"/settings/customerssettings/industries\">Industries</Link></li>\n                                    <li><Link to=\"/settings/customerssettings/customers-discount-category\">Customers Discount Category</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className={`content_wrap_main ${style.tablePrimeBar}`} style={{ paddingBottom: `${trialHeight}px` }}>\n                            <div className='content_wrapper'>\n                                <div className=\"listwrapper\">\n                                    <div className=\"topHeadStyle pb-4\">\n                                        <h2>Industries</h2>\n                                        <Button label=\"Add New\" onClick={() => setVisible(true)}> <PlusLg color=\"#000000\" size={20} /></Button>\n                                    </div>\n                                    <DataTable value={industriesList} tableStyle={{ minWidth: '50rem' }}>\n                                        <Column field=\"name\" header=\"Industry Name\" style={{ width: '100%' }}></Column>\n                                        <Column field=\"edit\" header=\"Edit\" body={editBody} style={{ width: '56px' }} className='text-end'></Column>\n                                    </DataTable>\n\n                                    <Dialog visible={visible2} modal={true} header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={handleClose}>\n                                        <div className=\"d-flex flex-column\">\n                                            <p className=\"font-14 mb-1\" style={{ color: '#475467', fontWeight: 500 }}>Industry name</p>\n                                            <InputText {...register('name')} className={style.inputBox} />\n                                            {errors.name && <small className=\"p-error\">{errors.name.message}</small>}\n                                        </div>\n                                    </Dialog>\n\n                                    <Dialog visible={visible} modal={true} header={headerElement1} footer={footerContent1} className={`${style.modal} custom-modal`} onHide={handleClose}>\n                                        <div className=\"d-flex flex-column\">\n                                            <p className=\"font-14 mb-1\" style={{ color: '#475467', fontWeight: 500 }}>Industry name</p>\n                                            <InputText {...register('name')} placeholder='Industry name' className={style.inputBox} />\n                                            {errors.name && <small className=\"p-error\">{errors.name.message}</small>}\n                                        </div>\n                                    </Dialog>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CustomersIndustries;\n"],"names":["CustomersIndustries","trialHeight","useTrialHeight","activeTab","setActiveTab","useState","selectedIndustryId","setSelectedIndustryId","data","industriesList","refetch","useQuery","queryKey","queryFn","getIndustriesList","enabled","register","handleSubmit","setValue","reset","formState","errors","useForm","resolver","yupResolver","yup","name","required","defaultValues","useEffect","async","industryData","readIndustry","industryId","fetchIndustry","readIndustryQuery","onSuccess","mutation","useMutation","mutationFn","newIndustries","handleClose","updateIndustryMutation","id","_ref","Error","updateIndustry","deleteIndustryMutation","deleteIndustry","onSubmit","mutate","visible2","setVisible2","visible","setVisible","headerElement","_jsx","className","style","modalHeader","children","_jsxs","circledesignstyle","out","PencilSquare","size","color","headerTitle","headerElement1","footerContent","Button","onClick","width","footerContent1","_Fragment","Helmet","Sidebar","Link","to","tablePrimeBar","paddingBottom","label","PlusLg","DataTable","value","tableStyle","minWidth","Column","field","header","body","rowData","handleEditClick","cursor","Dialog","modal","footer","onHide","fontWeight","InputText","inputBox","message","placeholder"],"sourceRoot":""}