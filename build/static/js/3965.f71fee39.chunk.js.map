{"version":3,"file":"static/js/3965.f71fee39.chunk.js","mappings":"mQAEA,MAAMA,EAAeC,mCAQfC,EAAWC,eAAOC,GAA4B,IAAlBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,MAAM,OAAEG,EAAS,MAAK,QAAEC,EAAU,CAAC,EAAC,KAAEC,GAASN,EASzCO,EAAiB,CACrBH,SACAC,QARqB,CACrB,cAAiB,UAHCG,aAAaC,QAAQ,kBAIvC,eAAgB,sBACbJ,GAMHC,KAAMI,KAAKC,UAAUL,GACrBM,SAAU,UAGZ,IACE,MAAMC,EAAM,IAAIC,IAAI,GAAGf,KACjBgB,QAAiBC,MAAMH,EAAKN,GAClC,IAAKQ,EAASE,GACZ,MAAM,IAAIC,MAAM,uBAAuBH,EAASI,UAGlD,MAAMC,EAAcL,EAASV,QAAQgB,IAAI,gBACzC,GAAID,GAAeA,EAAYE,SAAS,oBACtC,aAAaP,EAASQ,OAItB,MAAO,CAAEC,QAAS,oBAAqBlB,WADpBS,EAASU,OAIhC,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,mBAAoBA,GAC5BA,CACR,CACF,EAEaE,EAAyB9B,UACpC,MAIMe,EAAM,IAAIC,IAAI,GAAGnB,oCACvB,OAAOE,EAASgB,EAAIgB,WAJJ,CACdzB,OAAQ,OAG8B,EAG7B0B,EAA4BhC,UACvC,MACME,EAAU,CACdI,OAAQ,MACRE,KAAMyB,GAEFlB,EAAM,IAAIC,IAAI,GAAGnB,oCACvB,OAAOE,EAASgB,EAAIgB,WAAY7B,EAAQ,EAG7BgC,EAAuBlC,UAClC,MAIMe,EAAM,IAAIC,IAAI,GAAGnB,4CACvB,OAAOE,EAASgB,EAAIgB,WAJJ,CACdzB,OAAQ,OAG8B,EAG7B6B,EAAenC,UAC1B,MAIMe,EAAM,IAAIC,IAAI,GAAGnB,0BACvB,OAAOE,EAASgB,EAAIgB,WAJJ,CACdzB,OAAQ,QAG8B,EAG7B8B,EAA0BpC,UACrC,MACME,EAAU,CACdI,OAAQ,MACRE,KAAMyB,GAEFlB,EAAM,IAAIC,IAAI,GAAGnB,4CACvB,OAAOE,EAASgB,EAAIgB,WAAY7B,EAAQ,EAG7BmC,EAAwBrC,UACnC,MAIMe,EAAM,IAAIC,IAAI,GAAGnB,4CACvB,OAAOE,EAASgB,EAAIgB,WAJJ,CACdzB,OAAQ,OAG8B,EAG7BgC,EAA2BtC,UACtC,MACME,EAAU,CACdI,OAAQ,MACRE,KAAMyB,GAEFlB,EAAM,IAAIC,IAAI,GAAGnB,4CACvB,OAAOE,EAASgB,EAAIgB,WAAY7B,EAAQ,EAG7BqC,EAAsBvC,UACjC6B,QAAQW,IAAI,SAAUP,GAClBA,EAAKQ,WAAWR,EAAKQ,GACrBR,EAAKS,cAAcT,EAAKS,MACxBT,EAAKU,kBAAkBV,EAAKU,UAC5BV,EAAKW,cAAcX,EAAKW,MAE5B,MACM1C,EAAU,CACdI,OAAQ,OACRE,KAAMyB,GAEFlB,EAAM,IAAIC,IAAI,GAAGnB,oCACvB,OAAOE,EAASgB,EAAIgB,WAAY7B,EAAQ,EAG7B2C,EAA0B7C,MAAOyC,EAAIR,KAChD,MACM/B,EAAU,CACdI,OAAQ,MACRE,KAAMyB,GAEFlB,EAAM,IAAIC,IAAI,GAAGnB,IALN,qCAAqC4C,QAMtD,OAAO1C,EAASgB,EAAIgB,WAAY7B,EAAQ,EAG7B4C,EAA0B9C,UACrC,MAIMe,EAAM,IAAIC,IAAI,GAAGnB,IAJN,qCAAqC4C,QAKtD,OAAO1C,EAASgB,EAAIgB,WAJJ,CACdzB,OAAQ,UAG8B,EAS7ByC,EAA6B/C,UACxC,MAAMgD,EAAY,IAAIC,QAChBC,EAAcxC,aAAaC,QAAQ,gBACzCqC,EAAUG,OAAO,gBAAiB,UAAUD,KAE5C,MAAMzC,EAAiB,CACrBH,OAAQ,MACRC,QAASyC,EACTlC,SAAU,UAGZ,IACE,MAAMG,QAAiBC,MAAM,GAAGrB,mCAA+CY,GAE/E,aADqBQ,EAASQ,MAEhC,CAAE,MAAOG,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,GAGWwB,EAA2BpD,MAAOiC,EAAMoB,KACnD,MAAML,EAAY,IAAIC,QAChBC,EAAcxC,aAAaC,QAAQ,gBACzCqC,EAAUG,OAAO,gBAAiB,UAAUD,KAE5C,MAAMI,EAAW,IAAIC,SAKrB,GAJAC,OAAOC,KAAKxB,GAAMyB,SAASC,IACzBL,EAASH,OAAOQ,EAAK1B,EAAK0B,GAAK,IAGxB,OAALN,QAAK,IAALA,GAAAA,EAAOO,iBAAkB,CAC3B,MAAMC,GAAcC,EAAAA,EAAAA,IAAO,GAC3BR,EAASH,OAAO,eAAqB,OAALE,QAAK,IAALA,OAAK,EAALA,EAAOO,iBAAkB,GAAGC,QAC9D,CAEA,MAAMpD,EAAiB,CACrBH,OAAQ,MACRC,QAASyC,EACTxC,KAAM8C,EACNxC,SAAU,UAGZ,IACE,MAAMG,QAAiBC,MAAM,GAAGrB,mCAA+CY,GACzEsD,QAAe9C,EAASU,OAE9B,OADAE,QAAQW,IAAI,qBAAsBuB,GAC3BA,CACT,CAAE,MAAOnC,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,GAGWoC,EAA0BhE,UAErC,MAAMgD,EAAY,IAAIC,QAChBC,EAAcxC,aAAaC,QAAQ,gBACzCqC,EAAUG,OAAO,gBAAiB,UAAUD,KAE5C,MAAMzC,EAAiB,CACrBH,OAAQ,MACRC,QAASyC,EACTlC,SAAU,UAGZ,IACE,MAAMG,QAAiBC,MAAM,GAAGrB,gCAA4CY,GAE5E,aADqBQ,EAASU,MAEhC,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,GAGWqC,EAAwBjE,UACnC,MAAMgD,EAAY,IAAIC,QAChBC,EAAcxC,aAAaC,QAAQ,gBACzCqC,EAAUG,OAAO,gBAAiB,UAAUD,KAE5C,MAAMI,EAAW,IAAIC,SACrBC,OAAOC,KAAKS,GAAaR,SAASC,IAChCL,EAASH,OAAOQ,EAAKO,EAAYP,GAAK,IAGxC,MAAMlD,EAAiB,CACrBH,OAAQ,MACRC,QAASyC,EACTxC,KAAM8C,EACNxC,SAAU,UAGZ,IACE,MAAMG,QAAiBC,MAAM,GAAGrB,gCAA4CY,GACtEsD,QAAe9C,EAASU,OAE9B,OADAE,QAAQW,IAAI,WAAYuB,GACjBA,CACT,CAAE,MAAOnC,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,GAGWuC,EAAsBnE,UAEjC,MAAMgD,EAAY,IAAIC,QAChBC,EAAcxC,aAAaC,QAAQ,gBACzCqC,EAAUG,OAAO,gBAAiB,UAAUD,KAE5C,MAAMzC,EAAiB,CACrBH,OAAQ,MACRC,QAASyC,EACTlC,SAAU,UAGZ,IACE,MAAMG,QAAiBC,MAAM,GAAGrB,+BAA2CY,GAE3E,aADqBQ,EAASQ,MAEhC,CAAE,MAAOG,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,E,4FCjRF,MAAMwC,EAAuBC,EAAAA,YAAiB,CAAAC,EAS3CC,KAAQ,IAToC,SAC7CC,EAAQ,QACRC,EAAO,UACPC,EAAY,SAAQ,KACpBC,EAEAC,GAAIC,EAAY,MAAK,UACrBC,KACGC,GACJT,EACCE,GAAWQ,EAAAA,EAAAA,IAAmBR,EAAU,WACxC,MAAMS,EAAkB,GAAGT,KAAYE,IACvC,OAAoBQ,EAAAA,EAAAA,KAAKL,EAAW,CAClCN,IAAKA,KACFQ,EACHD,UAAWK,IAAWL,EAAWG,EAAiBN,GAAQ,GAAGM,KAAmBN,IAAQF,GAAW,QAAQA,MAC3G,IAEJL,EAAQgB,YAAc,UACtB,S,mOCjBA,MAAMC,GAAyBC,EAAAA,EAAAA,aAAW,SAAkBhB,EAKzDiB,GAAa,IAL6C,UAC3DT,EAAS,MACTU,EAAK,aACLC,KACGC,GACJpB,EACC,MAAMC,GAAMoB,EAAAA,EAAAA,QAAO,OACZC,EAAeC,IAAoBC,EAAAA,EAAAA,aACpC,SACJC,EAAQ,YACRC,IACEC,EAAAA,EAAAA,YAAWC,EAAAA,IAef,OAdAC,EAAAA,EAAAA,IAA0B,KACxB,IAAIC,EACAX,GAAgBO,GAAe,IACjCI,GAAYC,EAAAA,EAAAA,GAAwB9B,EAAI+B,SAASC,OAASP,EACtDI,EAAY,IAAGA,EAAY,IAEjCP,EAAiBO,GAAa,EAAI,CAChCA,YACAL,iBACE1F,EAAU,GACb,CAACoF,EAAcM,EAAUC,KAC5BG,EAAAA,EAAAA,IAA0B,KACpBP,IAAerB,EAAI+B,QAAQE,UAAY,EAAC,GAC3C,CAACZ,KACgBa,EAAAA,EAAAA,KAAI,MAAO,IAC1Bf,EACHnB,KAAKmC,EAAAA,EAAAA,GAAenB,EAAahB,GACjCO,WAAW6B,EAAAA,EAAAA,GAAO,CAChBC,MAAOC,EAAAA,GACPC,QAASC,EAAAA,GACTjC,cAEFU,MAAO,IACFA,KACAI,IAGT,I,oECnCA,MAAMoB,EAAe,CACjB,CAAEpE,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,QAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,aAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,aAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,UAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,SAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,eAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,gBAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,WAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,QAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,aAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,UAC9E,CAAEiB,MAAO,UAAWqE,GAAI,UAAWC,OAAQ,UAAWC,MAAO,UAAWxF,KAAM,gBA2RlF,EAxRsByF,KAClB,MAAOC,EAAYC,IAAiBxB,EAAAA,EAAAA,WAAS,IACtCyB,EAAWC,IAAgB1B,EAAAA,EAAAA,UAAS,yBACpC5F,EAASuH,IAAc3B,EAAAA,EAAAA,UAAS,KAChClE,EAAO8F,IAAY5B,EAAAA,EAAAA,UAAS,IAE7B6B,GAAYC,EAAAA,EAAAA,cAAY5H,UAC1B,IACIsH,GAAc,GACd,MAAMrF,QAAakC,EAAAA,EAAAA,MACnBsD,GAAWI,IACP,MAAMC,EAAoBD,EAAKE,QAAOC,GAAOA,EAAItF,QAEjD,MAAO,IADgBT,EAAKgG,KAAIC,IAAI,IAAUA,EAAMvF,WAAW,EAAOD,OAAO,SAC/CoF,EAAkB,GAExD,CAAE,MAAOlG,GACLC,QAAQD,MAAM,sCAAuCA,GACrDuG,EAAAA,GAAMvG,MAAM,mCAChB,CAAC,QACG0F,GAAc,EAClB,IACD,IAEGc,GAAiBC,EAAAA,EAAAA,GAAY,CAC/BC,WAAarG,IAASY,EAAAA,EAAAA,IAAwBZ,EAAKQ,GAAIR,GACvDsG,UAAWvI,UACPmI,EAAAA,GAAMK,QAAQ,oDAAoD,EAEtEC,QAAU7G,IACNC,QAAQD,MAAM,yBAA0BA,GACxCuG,EAAAA,GAAMvG,MAAM,sCAAsC,IAIpD8G,GAAiBL,EAAAA,EAAAA,GAAY,CAC/BC,WAAa7F,IAAOK,EAAAA,EAAAA,IAAwBL,GAC5C8F,UAAWA,KACPJ,EAAAA,GAAMK,QAAQ,qDACdb,GAAW,EAEfc,QAAU7G,IACNC,QAAQD,MAAM,yBAA0BA,GACxCuG,EAAAA,GAAMvG,MAAM,sCAAsC,IAIpD+G,GAAiBN,EAAAA,EAAAA,GAAY,CAC/BC,WAAarG,IAASM,EAAAA,EAAAA,IAAoBN,GAC1CsG,UAAWA,KACPJ,EAAAA,GAAMK,QAAQ,qDACdb,GAAW,EAEfc,QAAU7G,IACNC,QAAQD,MAAM,yBAA0BA,GACxCuG,EAAAA,GAAMvG,MAAM,sCAAsC,IAwEpDgH,EAAsBC,IACxB,MAAMC,EAAa5I,EACd6H,QAAOC,GAAOA,EAAIvF,KAAOoG,IACzBZ,KAAID,GAAOA,EAAIb,QACpB,OAAOH,EAAae,QAAOZ,IAAU2B,EAAWtH,SAAS2F,EAAMvE,QAAO,EAO1E,OAJAmG,EAAAA,EAAAA,YAAU,KACNpB,GAAW,GACZ,CAACA,KAGAqB,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,gBAAemE,SAAA,EAC1B/D,EAAAA,EAAAA,KAACgE,EAAAA,GAAM,CAAAD,UACH/D,EAAAA,EAAAA,KAAA,SAAA+D,SAAO,+BAEXD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,mBAAkBmE,SAAA,EAC7B/D,EAAAA,EAAAA,KAACiE,EAAAA,EAAO,CAAC5B,UAAWA,EAAWC,aAAcA,KAC7CwB,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,mCAAkCmE,SAAA,EAC7CD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,aAAYmE,SAAA,EACvB/D,EAAAA,EAAAA,KAAA,MAAA+D,SAAI,0BACJ/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,iBAAgBmE,UAC3B/D,EAAAA,EAAAA,KAAA,MAAA+D,UACI/D,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,aAAYmE,UAAC/D,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAACC,GAAG,yCAAwCJ,SAAC,6BAIzF/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oBAAmBmE,UAC9B/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kBAAiBmE,UAC5BD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,6BAA4BmE,SAAA,EACvCD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,MAAKmE,SAAA,EAChB/D,EAAAA,EAAAA,KAAA,MAAA+D,SAAI,wBACHrH,GACGsD,EAAAA,EAAAA,KAAA,KAAGM,MAAO,CAAE2B,MAAO,OAAQ8B,SAAErH,KAE7BsD,EAAAA,EAAAA,KAAA,KAAA+D,SAAG,wDAGV5B,IACGnC,EAAAA,EAAAA,KAAA,OAAKM,MAAO,CAAE8D,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,WAAY,QAASC,MAAO,OAAQnD,OAAQ,OAAQoD,aAAc,MAAOC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,IAAMjF,UAAU,YAAWmE,UACtO/D,EAAAA,EAAAA,KAACd,EAAAA,EAAO,CAACM,UAAU,SAASsF,KAAK,SAAQf,UACrC/D,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,kBAAiBmE,SAAC,oBAI9C/D,EAAAA,EAAAA,KAAC+E,EAAAA,EAAK,CAAAhB,UACFD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CACK/I,EAAQ+H,KAAKiC,IAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAChBtB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACI/D,EAAAA,EAAAA,KAAA,MAAA+D,UACID,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,gBAAemE,SAAA,EAC1BD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,cAAamE,SAAA,EACxB/D,EAAAA,EAAAA,KAAA,SACIqF,KAAK,OACL3H,MAAOsH,EAAOM,MACdC,SAAWC,IAAMC,OAxGlDlI,EAwGoEyH,EAAOzH,SAxGvE+H,EAwG2EE,EAAEE,OAAOhI,OAvGrGxC,OAAS,GACfsH,EAAS,qDAGbA,EAAS,IACTD,EAAWvH,EAAQ+H,KAAIiC,GACnBA,EAAOzH,KAAOA,EAAK,IAAKyH,EAAQM,QAAO7H,WAAW,GAASuH,OAPzCS,IAAClI,EAAI+H,CAwG2F,EAC9DK,UAAW,GACXC,YAAY,uBAEdZ,EAAOxH,OAASwH,EAAOvH,aACrBqG,EAAAA,EAAAA,MAAA,KAAGlE,UAAU,YAAWmE,SAAA,CACnBiB,EAAOM,MAAMpK,QAAU,IACpB8E,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,cAAamE,SAAEiB,EAAOM,MAAMpK,SAE5C8J,EAAOM,MAAMpK,OACf,aAKd8E,EAAAA,EAAAA,KAAC6F,EAAAA,EAAI,CACDjG,UAAU,iBACVkG,YACIhC,EAAAA,EAAAA,MAACiC,EAAAA,EAAU,CAACnG,UAAU,iBAAgBmE,SAAA,EAClC/D,EAAAA,EAAAA,KAAA,OACIJ,UAAU,aACVU,MAAO,CACH0F,YAAahB,EAAO/C,MACpBsC,YAAgE,QAApDU,EAAAnD,EAAamE,MAAKnD,GAAOA,EAAIpF,QAAUsH,EAAO/C,eAAM,IAAAgD,OAAA,EAApDA,EAAsDlD,KAAM,cACxEE,MAAO+C,EAAO/C,OAChB8B,UAEmD,QAApDmB,EAAApD,EAAamE,MAAKnD,GAAOA,EAAIpF,QAAUsH,EAAO/C,eAAM,IAAAiD,OAAA,EAApDA,EAAsDzI,OAAQ,kBAEnEuD,EAAAA,EAAAA,KAACkG,EAAAA,EAAW,CAACzG,KAAM,GAAIwC,MAAM,eAGrCpB,SAAU,OACVuD,SAAU,SAASL,UAEnB/D,EAAAA,EAAAA,KAACG,EAAS,CAACI,cAAY,EAACD,MAAO,CAAEY,UAAW,QAASL,SAAU,OAAQsF,UAAW,qFAAsF1B,aAAc,MAAOzC,OAAQ,qBAAsB+B,SACtNL,EAAmBsB,EAAOzH,IAAIwF,KAAI,CAAA3D,EAAqCgH,KAAK,IAAzC,MAAE1I,EAAK,GAAEqE,EAAE,OAAEC,EAAM,MAAEC,EAAK,KAAExF,GAAM2C,EAAA,OAClEY,EAAAA,EAAAA,KAACqG,EAAAA,EAAQ,CACLC,QAASA,IApJnDC,EAAChJ,EAAI0E,KAC3BM,EAAWvH,EAAQ+H,KAAIiC,GACnBA,EAAOzH,KAAOA,EAAK,IAAKyH,EAAQ/C,QAAOvE,MAAOuE,EAAOxE,WAAW,GAASuH,IAC3E,EAiJ6EuB,CAAkBvB,EAAOzH,GAAIG,GAE5CA,MAAOA,EACP4C,MAAO,CAAEkG,QAAS,oBAAqBzC,UAEvCD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,SAASU,MAAO,CAAEkE,MAAO,QAASnD,OAAQ,OAAQoD,aAAc,MAAO5D,SAAU,UAAWkD,SAAA,EACvG/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,QAAQU,MAAO,CAAEkE,MAAO,MAAOD,WAAYvC,MAC1DhC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kCAAkCU,MAAO,CAAEkE,MAAO,OAAQD,WAAYxC,GAAKgC,UACtF/D,EAAAA,EAAAA,KAAA,QAAMM,MAAO,CAAE2B,MAAOA,EAAOwE,SAAU,OAAQC,YAAa,OAAQC,WAAY,OAAQ5C,SAAEtH,UAP7F,GAAG2J,KAAS1I,IAUV,cAM/BoG,EAAAA,EAAAA,MAAA,MAAIlE,UAAU,eAAcmE,SAAA,EACtBiB,EAAOxH,OAASwH,EAAOvH,aACrBuC,EAAAA,EAAAA,KAAC4G,EAAAA,EAAM,CACHhH,UAAU,OACV0G,QAASA,IAxJ9CxL,eAAOyC,GAAuB,IAAnBC,EAAKvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC/B,MAAM4L,EAAe7L,EAAQiL,MAAKjB,GAAUA,EAAOzH,KAAOA,IAC1D,IAAKsJ,EAAavB,MAAMwB,OAEpB,YADAtE,EAAS,2BAGb,MAAMuE,EAAa,IAAKF,EAAcnJ,MAAOmJ,EAAa5E,cACnD8E,EAAWvJ,aACXuJ,EAAWtJ,UAEdD,SACMiG,EAAeuD,YAAYD,GACjCxE,GAAWI,GAEA,IADgBA,EAAKE,QAAOC,GAAOA,EAAIvF,KAAOA,eAInD2F,EAAe8D,YAAYD,GACjCxE,GAAWI,GACAA,EAAKI,KAAID,GACRA,EAAIvF,KAAOA,EACJ,IAAKwJ,EAAYtJ,WAAW,GAEhCqF,MAIvB,CA6HuEmE,CAAWjC,EAAOzH,GAAIyH,EAAOxH,OAC5C0J,UAAWlC,EAAOM,MAAMwB,QAAUrD,EAAe0D,WAAajE,EAAeiE,UAAUpD,SAErFb,EAAeiE,YAA2B,OAAdjE,QAAc,IAAdA,GAAyB,QAAXiC,EAAdjC,EAAgBkE,iBAAS,IAAAjC,OAAX,EAAdA,EAA2B5H,MAAOyH,EAAOzH,IAClEkG,EAAe0D,YAA2B,OAAd1D,QAAc,IAAdA,GAAyB,QAAX2B,EAAd3B,EAAgB2D,iBAAS,IAAAhC,OAAX,EAAdA,EAA2B7H,MAAOyH,EAAOzH,GACpE,aACA,UAGdyC,EAAAA,EAAAA,KAAC4G,EAAAA,EAAM,CACHhH,UAAU,SACV0G,QAASA,IAtIvC/I,KAClB,MAAMyH,EAAShK,EAAQiL,MAAKnD,GAAOA,EAAIvF,KAAOA,IACpC,OAANyH,QAAM,IAANA,GAAAA,EAAQxH,MACR+E,EAAWvH,EAAQ6H,QAAOC,GAAOA,EAAIvF,KAAOA,KAE5CiG,EAAe6D,OAAO9J,EAC1B,EAgI+D+J,CAAatC,EAAOzH,IACnC2J,SAAU1D,EAAe2D,UAAUpD,SAElCP,EAAe2D,YAA2B,OAAd3D,QAAc,IAAdA,OAAc,EAAdA,EAAgB4D,aAAcpC,EAAOzH,GAAK,aAAe,gBAhFzF,UAAUyH,EAAOzH,KAmFrB,KAETyC,EAAAA,EAAAA,KAAA,MAAA+D,UACI/D,EAAAA,EAAAA,KAAA,MAAIzC,GAAG,gBAAgBgK,QAAS,EAAExD,UAC9BD,EAAAA,EAAAA,MAAC8C,EAAAA,EAAM,CACHN,QA5M9BkB,KACd,MAAMC,EAAkB/D,EAAmB,MACZ,IAA3B+D,EAAgBvM,QAEpBqH,GAAWI,GAAQ,IAAIA,EAAM,CACzBnF,OAAO,EACPD,GAAImK,KAAKC,MACTjK,MAAO+J,EAAgB,GAAG/J,MAC1BuE,MAAOwF,EAAgB,GAAG/J,MAC1B4H,MAAO,MACR,EAmMyC4B,SAA8C,IAApCxD,EAAmB,MAAMxI,OAAa6I,SAAA,CACnD,oBACmB/D,EAAAA,EAAAA,KAAC4H,EAAAA,EAAM,CAACnI,KAAM,GAAIwC,MAAM,uCAW9E,C,sQC7Sd,MAcA,EAdqB4F,KAQjB/D,EAAAA,EAAAA,MAAA,UAAQlE,UAAU,2BAA2B0G,QAP/BA,KACdwB,OAAOtM,aAAauM,QACpBD,OAAOE,eAAeD,QACtBD,OAAOG,SAASC,QAAQ,SAAS,EAI6BnE,SAAA,CAAC,WACtD/D,EAAAA,EAAAA,KAAA,OAAKmI,I,qkBAAoBC,IAAI,mBC+Q1C,EAnQgBhJ,IAAkC,IAAjC,UAAEiD,EAAS,aAAEC,GAAclD,EAC1C,MAAM,YAAEiJ,IAAgBC,EAAAA,EAAAA,KAClBC,EAAc7M,KAAK8M,MACvBV,OAAOtM,aAAaC,QAAQ,gBAAkB,OAEzCgN,EAASC,GAAcvJ,EAAAA,UAAe,GAGvCwJ,GAAYlI,EAAAA,EAAAA,QAAO,MAsBzB,OAfAoD,EAAAA,EAAAA,YAAU,KACR,GAAI8E,EAAUvH,QAAS,CACrB,MAAMwH,EAAYD,EAAUvH,QAAQyH,QAAQ,YACtCC,EAAgBF,EAAUG,wBAI1BC,EAHiBL,EAAUvH,QAAQ2H,wBAGX1E,IAAMyE,EAAczE,IAAMuE,EAAUK,aAAe,EAAIN,EAAUvH,QAAQ6H,aAAe,EAEtHL,EAAUM,SAAS,CACjB7E,IAAK2E,GAET,IACC,CAAC3G,KAGFyB,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAApF,SAAA,EACE/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,gBAAemE,UAC5BD,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,WAAUmE,SAAA,EACvBD,EAAAA,EAAAA,MAAA,OACElE,UAAU,UACVU,MAAO,CACLe,OAAQ,wBAAwBgH,OAChCe,UAAW,OACXC,cAAe,SACftF,SAAA,EAEF/D,EAAAA,EAAAA,KAAA,MAAA+D,SAAI,aACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACE/D,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,+BACHvE,UAAW,gBAA6B,uBAAdyC,EAAqC,aAAe,IAE9EiE,QAASA,IAAMhE,EAAa,sBAC5BjD,IAAmB,uBAAdgD,EAAqCsG,EAAY,KAAK5E,SAAA,EAE3D/D,EAAAA,EAAAA,KAACsJ,EAAAA,EAAU,CAACrH,MAAM,UAAUxC,KAAM,KAAM,4BAI5CO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,uCACHvE,UAAW,gBAA6B,YAAdyC,EAA0B,aAAe,IAEnEiE,QAASA,IAAMhE,EAAa,WAC5BjD,IAAmB,YAAdgD,EAA0BsG,EAAY,KAAK5E,SAAA,EAEhD/D,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CAACtH,MAAM,UAAUxC,KAAM,KAAM,mBAIxCO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,4CACHvE,UAAW,gBAA6B,iBAAdyC,EAA+B,aAAe,IAExEiE,QAASA,IAAMhE,EAAa,gBAC5BjD,IAAmB,iBAAdgD,EAA+BsG,EAAY,KAAK5E,SAAA,EAErD/D,EAAAA,EAAAA,KAACwJ,EAAAA,EAAe,CAACvH,MAAM,UAAUxC,KAAM,KAAM,qBAIjDO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,0BACHvE,UAAW,gBAA6B,YAAdyC,EAA0B,aAAe,IAEnEiE,QAASA,IAAMhE,EAAa,WAC5BjD,IAAmB,YAAdgD,EAA0BsG,EAAY,KAAK5E,SAAA,EAEhD/D,EAAAA,EAAAA,KAACyJ,EAAAA,EAAM,CAACxH,MAAM,UAAUxC,KAAM,KAAM,cAIxCO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,qBACHvE,UAAW,gBAA6B,cAAdyC,EAA4B,aAAe,IAErEiE,QAASA,IAAMhE,EAAa,aAC5BjD,IAAmB,cAAdgD,EAA4BsG,EAAY,KAAK5E,SAAA,EAElD/D,EAAAA,EAAAA,KAAC0J,EAAAA,EAAG,CAACzH,MAAM,UAAUxC,KAAM,KAAM,qBAKvCO,EAAAA,EAAAA,KAAA,MAAA+D,SAAI,cACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACE/D,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,oCACHvE,UAAW,gBAA6B,gBAAdyC,EAA8B,aAAe,IAEvEiE,QAASA,IAAMhE,EAAa,eAC5BjD,IAAmB,gBAAdgD,EAA8BsG,EAAY,KAAK5E,SAAA,EAEpD/D,EAAAA,EAAAA,KAAC2J,EAAAA,EAAc,CAAC1H,MAAM,UAAUxC,KAAM,KAAM,oBAIhDO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,sCACHvE,UAAW,gBAA6B,kBAAdyC,EAAgC,aAAe,IAEzEiE,QAASA,IAAMhE,EAAa,iBAC5BjD,IAAmB,kBAAdgD,EAAgCsG,EAAY,KAAK5E,SAAA,EAEtD/D,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CAAC3H,MAAM,UAAUxC,KAAM,KAAM,kBAI5CO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,uCACHvE,UAAW,gBAA6B,kBAAdyC,EAAgC,aAAe,IAEzEiE,QAASA,IAAMhE,EAAa,iBAC5BjD,IAAmB,kBAAdgD,EAAgCsG,EAAY,KAAK5E,SAAA,EAEtD/D,EAAAA,EAAAA,KAAC6J,EAAAA,EAAS,CAAC5H,MAAM,UAAUxC,KAAM,KAAM,sBAI3CO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,yBACHvE,UAAW,gBAA6B,iBAAdyC,EAA+B,aAAe,IAExEiE,QAASA,IAAMhE,EAAa,gBAC5BjD,IAAmB,iBAAdgD,EAA+BsG,EAAY,KAAK5E,SAAA,EAErD/D,EAAAA,EAAAA,KAAC8J,EAAAA,EAAa,CAAC7H,MAAM,UAAUxC,KAAM,KAAM,qBAI/CO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,wCACHvE,UAAW,gBAA6B,qBAAdyC,EAAmC,aAAe,IAE5EiE,QAASA,IAAMhE,EAAa,oBAC5BjD,IAAmB,qBAAdgD,EAAmCsG,EAAY,KAAK5E,SAAA,EAEzD/D,EAAAA,EAAAA,KAAC+J,EAAAA,EAAe,CAAC9H,MAAM,UAAUxC,KAAM,KAAM,sBAIjDO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,yCACHvE,UAAW,gBAA6B,yBAAdyC,EAAuC,aAAe,IAEhFiE,QAASA,IAAMhE,EAAa,wBAC5BjD,IAAmB,yBAAdgD,EAAuCsG,EAAY,KAAK5E,SAAA,EAE7D/D,EAAAA,EAAAA,KAACgK,EAAAA,EAAW,CAAC/H,MAAM,UAAUxC,KAAM,KAAM,6BAI7CO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,4DACHvE,UAAW,gBAA6B,yBAAdyC,EAAuC,aAAe,IAEhFiE,QAASA,IAAMhE,EAAa,wBAC5BjD,IAAmB,yBAAdgD,EAAuCsG,EAAY,KAAK5E,SAAA,EAE7D/D,EAAAA,EAAAA,KAACiK,EAAAA,EAAW,CAAChI,MAAM,UAAUxC,KAAM,KAAM,6BAI7CO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,yCACHvE,UAAW,gBAA6B,eAAdyC,EAA6B,aAAe,IAEtEiE,QAASA,IAAMhE,EAAa,cAC5BjD,IAAmB,eAAdgD,EAA6BsG,EAAY,KAAK5E,SAAA,EAEnD/D,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CAACtH,MAAM,UAAUxC,KAAM,KAAM,2BAIxCO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,gDACHvE,UAAW,gBAA6B,aAAdyC,EAA2B,aAAe,IAEpEiE,QAASA,IAAMhE,EAAa,YAC5BjD,IAAmB,aAAdgD,EAA2BsG,EAAY,KAAK5E,SAAA,EAEjD/D,EAAAA,EAAAA,KAACkK,EAAAA,EAAM,CAACjI,MAAM,UAAUxC,KAAM,KAAM,mBAIxCO,EAAAA,EAAAA,KAAA,MAAA+D,UACED,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,GAAG,kDACHvE,UAAW,gBAA6B,4BAAdyC,EAA0C,aAAe,IAEnFiE,QAASA,IAAMhE,EAAa,2BAC5BjD,IAAmB,4BAAdgD,EAA0CsG,EAAY,KAAK5E,SAAA,EAEhE/D,EAAAA,EAAAA,KAACmK,EAAAA,EAAI,CAAClI,MAAM,UAAUxC,KAAM,KAAM,4BAM1CqE,EAAAA,EAAAA,MAAA,OACElE,UAAU,qBACVU,MAAO,CAAE8J,UAAW,qBAAsB/I,OAAQ,SAAU0C,SAAA,EAE5D/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oBAAmBmE,UAChCD,EAAAA,EAAAA,MAAA,UAAQlE,UAAU,gDAAgD0G,QAhOrD+D,KACvB3B,GAAW,EAAK,EA+NsF3E,SAAA,EAC1F/D,EAAAA,EAAAA,KAACsK,EAAAA,EAAO,CAAC7K,KAAM,GAAIwC,MAAM,aACzBjC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,OAAMmE,SAAC,kBAGxB/D,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oBAAmBmE,SAC/BwE,IACCzE,EAAAA,EAAAA,MAAA,OAAKlE,UAAU,uCAAsCmE,SAAA,EACnD/D,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CAAC9J,KAAM,GAAIwC,MAAM,aACxB6B,EAAAA,EAAAA,MAAA,KAAGlE,UAAU,OAAMmE,SAAA,EACjB/D,EAAAA,EAAAA,KAAA,UAAA+D,SAASwE,EAAYgC,aACrBvK,EAAAA,EAAAA,KAAA,QAAA+D,SAAOwE,EAAYiC,iBAK3BxK,EAAAA,EAAAA,KAAC6H,EAAY,aAInB7H,EAAAA,EAAAA,KAACyK,EAAAA,EAAO,CAAChC,QAASA,EAASC,WAAYA,MACtC,C,oCCnRA,IAkBI9J,EAAS,WAAe,IAAda,EAAIxE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBsC,EAAK,GACLmN,EAAQC,OAAOC,gBAAgB,IAAIC,WAAYpL,GAAQ,IAC3D,KAAOA,KACLlC,GCxBF,mEDwBwC,GAAdmN,EAAMjL,IAEhC,OAAOlC,CACT,C,4FEtBA,MA+BA,EA/B2B4B,EAAAA,YAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRM,EAAS,QACTkL,EAAO,SACPC,EAAQ,WACRC,EAAU,MACVC,EAAK,KACLxL,EAAI,QACJF,EAAO,WACP2L,KACGrL,GACJT,EACC,MAAM+L,GAAoBrL,EAAAA,EAAAA,IAAmBR,EAAU,SACjD8L,EAAUnL,IAAWL,EAAWuL,EAAmB5L,GAAW,GAAG4L,KAAqB5L,IAAWE,GAAQ,GAAG0L,KAAqB1L,IAAQqL,GAAW,GAAGK,KAAwC,kBAAZL,EAAuB,WAAWA,IAAY,YAAaC,GAAY,GAAGI,aAA8BH,GAAc,GAAGG,eAAgCF,GAAS,GAAGE,WACxVE,GAAqBrL,EAAAA,EAAAA,KAAK,QAAS,IACpCH,EACHD,UAAWwL,EACX/L,IAAKA,IAEP,GAAI6L,EAAY,CACd,IAAII,EAAkB,GAAGH,eAIzB,MAH0B,kBAAfD,IACTI,EAAkB,GAAGA,KAAmBJ,MAEtBlL,EAAAA,EAAAA,KAAK,MAAO,CAC9BJ,UAAW0L,EACXvH,SAAUsH,GAEd,CACA,OAAOA,CAAK,G,sECnCVE,EAAY,CAAC,QAAS,OAAQ,QAAS,aAC3C,SAASC,IAAa,OAAOA,EAAWlN,OAAOmN,OAASnN,OAAOmN,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAInG,EAAI,EAAGA,EAAIvK,UAAUC,OAAQsK,IAAK,CAAE,IAAIoG,EAAI3Q,UAAUuK,GAAI,IAAK,IAAIqG,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOF,EAAEE,GAAKD,EAAEC,GAAK,CAAE,OAAOF,CAAG,EAAGH,EAASQ,MAAM,KAAM/Q,UAAY,CAKnR,IAAIiL,GAA2B9F,EAAAA,EAAAA,aAAW,SAAUhB,EAAMC,GACxD,IAAI4M,EAAa7M,EAAK6C,MACpBA,OAAuB,IAAfgK,EAAwB,eAAiBA,EACjDC,EAAY9M,EAAKK,KACjBA,OAAqB,IAAdyM,EAAuB,MAAQA,EACtCC,EAAa/M,EAAKkG,MAClBA,OAAuB,IAAf6G,EAAwB,KAAOA,EACvCC,EAAiBhN,EAAKQ,UACtBA,OAA+B,IAAnBwM,EAA4B,GAAKA,EAC7CC,EAbJ,SAAkC7G,EAAGoG,GAAK,GAAI,MAAQpG,EAAG,MAAO,CAAC,EAAG,IAAI8G,EAAGT,EAAGU,EAC9E,SAAuCV,EAAGrG,GAAK,GAAI,MAAQqG,EAAG,MAAO,CAAC,EAAG,IAAID,EAAI,CAAC,EAAG,IAAK,IAAID,KAAKE,EAAG,GAAI,CAAC,EAAEC,eAAeC,KAAKF,EAAGF,GAAI,CAAE,GAAInG,EAAElJ,SAASqP,GAAI,SAAUC,EAAED,GAAKE,EAAEF,EAAI,CAAE,OAAOC,CAAG,CAD9GY,CAA8BhH,EAAGoG,GAAI,GAAItN,OAAOmO,sBAAuB,CAAE,IAAIC,EAAIpO,OAAOmO,sBAAsBjH,GAAI,IAAKqG,EAAI,EAAGA,EAAIa,EAAExR,OAAQ2Q,IAAKS,EAAII,EAAEb,GAAID,EAAEtP,SAASgQ,IAAM,CAAC,EAAEK,qBAAqBZ,KAAKvG,EAAG8G,KAAOC,EAAED,GAAK9G,EAAE8G,GAAK,CAAE,OAAOC,CAAG,CAapTK,CAAyBxN,EAAMmM,GACxC,OAAoBpM,EAAAA,cAAoB,MAAOqM,EAAS,CACtDnM,IAAKA,EACLwN,MAAO,6BACPC,QAAS,YACTtI,MAAO/E,EACP4B,OAAQ5B,EACRsN,KAAM9K,EACNrC,UAAW,CAAC,KAAM,kBAAmBA,GAAWiD,OAAOmK,SAASC,KAAK,MACpEZ,GAAO/G,EAAqBnG,EAAAA,cAAoB,QAAS,KAAMmG,GAAS,KAAmBnG,EAAAA,cAAoB,OAAQ,CACxH+N,SAAU,UACVC,EAAG,0HAEP,IACAjH,EAAYkH,UAAY,CACtBnL,MAAOoL,IAAAA,OACP5N,KAAM4N,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC7C/H,MAAO+H,IAAAA,OACPzN,UAAWyN,IAAAA,QAEb,S","sources":["APIs/SettingsGeneral.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/@szhsin/react-menu/dist/esm/components/MenuGroup.mjs","components/layout/settings/projectstatus/ProjectStatus.js","components/layout/Login/logout-button.js","components/layout/settings/Sidebar.js","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap-icons/dist/icons/chevron-down.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n  const { method = 'GET', headers = {}, body } = options;\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  const defaultHeaders = {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n    ...headers\n  };\n\n  const requestOptions = {\n    method,\n    headers: defaultHeaders,\n    body: JSON.stringify(body),\n    redirect: 'follow'\n  };\n\n  try {\n    const url = new URL(`${endpoint}`);\n    const response = await fetch(url, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    } else {\n      // Handle non-JSON responses\n      const text = await response.text();\n      return { message: 'Non-JSON response', body: text };\n    }\n\n  } catch (error) {\n    console.error('Fetch API error:', error);\n    throw error;\n  }\n};\n\nexport const getBillingPersonalInfo = async () => {\n  const endpoint = `/settings/subscriptions/tax-id/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateBillingPersonalInfo = async (data) => {\n  const endpoint = `/settings/subscriptions/tax-id/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getPaymentMethodInfo = async () => {\n  const endpoint = `/settings/subscriptions/payment-method/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const retryPayment = async () => {\n  const endpoint = `/subscriptions/retry/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updatePaymentMethodInfo = async (data) => {\n  const endpoint = `/settings/subscriptions/payment-method/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getReginalAndLanguage = async () => {\n  const endpoint = `/settings/organization/region-language/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateReginalAndLanguage = async (data) => {\n  const endpoint = `/settings/organization/region-language/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectStatus = async (data) => {\n  console.log('data: ', data);\n  if (data.id) delete data.id;\n  if (data.isNew) delete data.isNew;\n  if (data.isChanged) delete data.isChanged;\n  if (data.value) delete data.value;\n\n  const endpoint = `/settings/project-statuses/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n  const endpoint = `/settings/project-statuses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProjectStatusById = async (id) => {\n  const endpoint = `/settings/project-statuses/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n\n\n\n\n\n\nexport const SettingsGeneralInformation = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateGeneralInformation = async (data, photo) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => {\n    formData.append(key, data[key]);\n  });\n\n  if (photo?.croppedImageBlob) {\n    const photoHintId = nanoid(6);\n    formData.append('company_logo', photo?.croppedImageBlob, `${photoHintId}.jpg`);\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.text();\n    console.log('result>>>>>>>>>>: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const SettingsBankInformation = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateBankInformation = async (generalData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(generalData).forEach((key) => {\n    formData.append(key, generalData[key]);\n  });\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const ProjectStatusesList = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/project-statuses/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('project fetch error:', error);\n    throw error;\n  }\n};\n\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import { forwardRef, useRef, useState, useContext } from 'react';\nimport { jsx } from 'react/jsx-runtime';\nimport { useLayoutEffect as useIsomorphicLayoutEffect } from '../hooks/useIsomorphicLayoutEffect.mjs';\nimport { getNormalizedClientRect } from '../positionUtils/getNormalizedClientRect.mjs';\nimport { useBEM } from '../hooks/useBEM.mjs';\nimport { useCombinedRef } from '../hooks/useCombinedRef.mjs';\nimport { MenuListContext, menuClass, menuGroupClass } from '../utils/constants.mjs';\n\nconst MenuGroup = /*#__PURE__*/forwardRef(function MenuGroup({\n  className,\n  style,\n  takeOverflow,\n  ...restProps\n}, externalRef) {\n  const ref = useRef(null);\n  const [overflowStyle, setOverflowStyle] = useState();\n  const {\n    overflow,\n    overflowAmt\n  } = useContext(MenuListContext);\n  useIsomorphicLayoutEffect(() => {\n    let maxHeight;\n    if (takeOverflow && overflowAmt >= 0) {\n      maxHeight = getNormalizedClientRect(ref.current).height - overflowAmt;\n      if (maxHeight < 0) maxHeight = 0;\n    }\n    setOverflowStyle(maxHeight >= 0 ? {\n      maxHeight,\n      overflow\n    } : undefined);\n  }, [takeOverflow, overflow, overflowAmt]);\n  useIsomorphicLayoutEffect(() => {\n    if (overflowStyle) ref.current.scrollTop = 0;\n  }, [overflowStyle]);\n  return /*#__PURE__*/jsx(\"div\", {\n    ...restProps,\n    ref: useCombinedRef(externalRef, ref),\n    className: useBEM({\n      block: menuClass,\n      element: menuGroupClass,\n      className\n    }),\n    style: {\n      ...style,\n      ...overflowStyle\n    }\n  });\n});\n\nexport { MenuGroup };\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, Spinner, Table } from 'react-bootstrap';\nimport { PlusLg, ChevronDown } from \"react-bootstrap-icons\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from 'react-router-dom';\nimport { Menu, MenuItem, MenuButton, MenuGroup } from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport { useMutation } from \"@tanstack/react-query\";\nimport { toast } from 'sonner';\nimport { createProjectStatus, deleteProjectStatusById, ProjectStatusesList, updateProjectStatusById } from \"../../../../APIs/SettingsGeneral\";\nimport Sidebar from '../Sidebar';\n\nconst colorOptions = [\n    { value: \"#1AB2FF\", bg: \"#BAE8FF\", border: \"#1AB2FF\", color: \"#0A4766\", text: \"Blue\" },\n    { value: \"#4E5BA6\", bg: \"#EAECF5\", border: \"#4E5BA6\", color: \"#293056\", text: \"Deep Blue\" },\n    { value: \"#2970FF\", bg: \"#D1E0FF\", border: \"#2970FF\", color: \"#0040C1\", text: \"Dark Blue\" },\n    { value: \"#FFB258\", bg: \"#FFE8CD\", border: \"#FFB258\", color: \"#6D471A\", text: \"Orange\" },\n    { value: \"#15B79E\", bg: \"#CCFBEF\", border: \"#15B79E\", color: \"#125D56\", text: \"Green\" },\n    { value: \"#66C61C\", bg: \"#E3FBCC\", border: \"#66C61C\", color: \"#326212\", text: \"Light Green\" },\n    { value: \"#7A5AF8\", bg: \"#EBE9FE\", border: \"#7A5AF8\", color: \"#4A1FB8\", text: \"Light Purple\" },\n    { value: \"#D444F1\", bg: \"#FBE8FF\", border: \"#D444F1\", color: \"#821890\", text: \"Magenta\" },\n    { value: \"#F63D68\", bg: \"#FFE4E8\", border: \"#F63D68\", color: \"#A11043\", text: \"Pink\" },\n    { value: \"#FF007F\", bg: \"#FFCCE5\", border: \"#FF007F\", color: \"#6F0A3C\", text: \"Soft Pink\" },\n    { value: \"#FFD700\", bg: \"#FFF8D1\", border: \"#FFD700\", color: \"#997100\", text: \"Yellow\" },\n    { value: \"#6C6C1C\", bg: \"#E1E1B8\", border: \"#6C6C1C\", color: \"#444403\", text: \"Dark Yellow\" }\n];\n\nconst ProjectStatus = () => {\n    const [isCreating, setIsCreating] = useState(false);\n    const [activeTab, setActiveTab] = useState('organisation-setting');\n    const [options, setOptions] = useState([]);\n    const [error, setError] = useState('');\n\n    const fetchData = useCallback(async () => {\n        try {\n            setIsCreating(true);\n            const data = await ProjectStatusesList();\n            setOptions(prev => {\n                const unsavedNewOptions = prev.filter(opt => opt.isNew);\n                const fetchedOptions = data.map(item => ({ ...item, isChanged: false, isNew: false }));\n                return [...fetchedOptions, ...unsavedNewOptions];\n            });\n        } catch (error) {\n            console.error(\"Error fetching project status data:\", error);\n            toast.error('Failed to fetch project statuses');\n        } finally {\n            setIsCreating(false);\n        }\n    }, []);\n\n    const updateMutation = useMutation({\n        mutationFn: (data) => updateProjectStatusById(data.id, data),\n        onSuccess: async () => {\n            toast.success('The project status has been successfully updated.');\n        },\n        onError: (error) => {\n            console.error('Error updating status:', error);\n            toast.error('Failed to update the project status');\n        }\n    });\n\n    const deleteMutation = useMutation({\n        mutationFn: (id) => deleteProjectStatusById(id),\n        onSuccess: () => {\n            toast.success('The project status has been successfully deleted.');\n            fetchData();\n        },\n        onError: (error) => {\n            console.error('Error deleting status:', error);\n            toast.error('Failed to delete the project status');\n        }\n    });\n\n    const createMutation = useMutation({\n        mutationFn: (data) => createProjectStatus(data),\n        onSuccess: () => {\n            toast.success('The project status has been successfully created.');\n            fetchData();\n        },\n        onError: (error) => {\n            console.error('Error creating status:', error);\n            toast.error('Failed to create the project status');\n        }\n    });\n\n    const addOption = () => {\n        const availableColors = getAvailableColors(null);\n        if (availableColors.length === 0) return;\n\n        setOptions(prev => [...prev, {\n            isNew: true,\n            id: Date.now(),\n            value: availableColors[0].value,\n            color: availableColors[0].value,\n            title: \"\"\n        }]);\n    };\n\n    const updateOptionColor = (id, color) => {\n        setOptions(options.map(option =>\n            option.id === id ? { ...option, color, value: color, isChanged: true } : option\n        ));\n    };\n\n    const updateOptionTitle = (id, title) => {\n        if (title.length > 20) {\n            setError('The status name can be up to 20 characters long.');\n            return;\n        }\n        setError('');\n        setOptions(options.map(option =>\n            option.id === id ? { ...option, title, isChanged: true } : option\n        ));\n    };\n\n    const saveOption = async (id, isNew = false) => {\n        const optionToSave = options.find(option => option.id === id);\n        if (!optionToSave.title.trim()) {\n            setError('Status name is required');\n            return;\n        }\n        const dataToSave = { ...optionToSave, value: optionToSave.color };\n        delete dataToSave.isNew; // Remove temporary flags before saving\n        delete dataToSave.isChanged;\n\n        if (isNew) {\n            await createMutation.mutateAsync(dataToSave);\n            setOptions(prev => {\n                const unsavedOptions = prev.filter(opt => opt.id !== id);\n                return [...unsavedOptions];\n            });\n        } else {\n            await updateMutation.mutateAsync(dataToSave);\n            setOptions(prev => {\n                return prev.map(opt => {\n                    if (opt.id === id) {\n                        return { ...dataToSave, isChanged: false };\n                    }\n                    return opt;\n                });\n            });\n        }\n    };\n\n    const removeOption = (id) => {\n        const option = options.find(opt => opt.id === id);\n        if (option?.isNew) {\n            setOptions(options.filter(opt => opt.id !== id));\n        } else {\n            deleteMutation.mutate(id);\n        }\n    };\n\n    const getAvailableColors = (currentOptionId) => {\n        const usedColors = options\n            .filter(opt => opt.id !== currentOptionId)\n            .map(opt => opt.color);\n        return colorOptions.filter(color => !usedColors.includes(color.value));\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n\n    return (\n        <div className='settings-wrap'>\n            <Helmet>\n                <title>MeMate - Project Status</title>\n            </Helmet>\n            <div className=\"settings-wrapper\">\n                <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                <div className=\"settings-content setModalelBoots\">\n                    <div className='headSticky'>\n                        <h1>Organisation Setting</h1>\n                        <div className='contentMenuTab'>\n                            <ul>\n                                <li className='menuActive'><Link to=\"/settings/projectstatus/project-status\">Project Status</Link></li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"content_wrap_main\">\n                        <div className='content_wrapper'>\n                            <div className=\"listwrapper orgColorStatus\">\n                                <div className=\"top\">\n                                    <h4>Custom Order Status</h4>\n                                    {error ? (\n                                        <p style={{ color: 'red' }}>{error}</p>\n                                    ) : (\n                                        <p>The status name can be up to 20 characters long.</p>\n                                    )}\n                                </div>\n                                {isCreating && (\n                                    <div style={{ position: 'absolute', top: '50%', left: '50%', background: 'white', width: '60px', height: '60px', borderRadius: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 10 }} className=\"shadow-lg\">\n                                        <Spinner animation=\"border\" role=\"status\">\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Spinner>\n                                    </div>\n                                )}\n                                <Table>\n                                    <tbody>\n                                        {options.map((option) => (\n                                            <tr key={`option-${option.id}`}>\n                                                <td>\n                                                    <div className='statuswrapper'>\n                                                        <div className='statusTitle'>\n                                                            <input\n                                                                type=\"text\"\n                                                                value={option.title}\n                                                                onChange={(e) => updateOptionTitle(option.id, e.target.value)}\n                                                                maxLength={20}\n                                                                placeholder=\"Enter status name\"\n                                                            />\n                                                            {(option.isNew || option.isChanged) && (\n                                                                <p className=\"mb-2 mt-2\">\n                                                                    {option.title.length >= 20 ? (\n                                                                        <span className=\"text-danger\">{option.title.length}</span>\n                                                                    ) : (\n                                                                        option.title.length\n                                                                    )}\n                                                                    /20\n                                                                </p>\n                                                            )}\n                                                        </div>\n                                                        <Menu\n                                                            className='mainSelectMenu'\n                                                            menuButton={\n                                                                <MenuButton className=\"colorSelectBut\">\n                                                                    <div\n                                                                        className=\"butcolorIn\"\n                                                                        style={{\n                                                                            borderColor: option.color,\n                                                                            background: colorOptions.find(opt => opt.value === option.color)?.bg || 'transparent',\n                                                                            color: option.color,\n                                                                        }}\n                                                                    >\n                                                                        {colorOptions.find(opt => opt.value === option.color)?.text || 'Select Color'}\n                                                                    </div>\n                                                                    <ChevronDown size={20} color='#98A2B3' />\n                                                                </MenuButton>\n                                                            }\n                                                            overflow={\"auto\"}\n                                                            position={\"anchor\"}\n                                                        >\n                                                            <MenuGroup takeOverflow style={{ maxHeight: '230px', overflow: 'auto', boxShadow: '0px 12px 16px -4px rgba(16, 24, 40, 0.08), 0px 4px 6px -2px rgba(16, 24, 40, 0.03)', borderRadius: '4px', border: '1px solid #D0D5DD' }}>\n                                                                {getAvailableColors(option.id).map(({ value, bg, border, color, text }, index) => (\n                                                                    <MenuItem\n                                                                        onClick={() => updateOptionColor(option.id, value)}\n                                                                        key={`${index}-${value}`}\n                                                                        value={value}\n                                                                        style={{ padding: '8px 10px 8px 8px' }}\n                                                                    >\n                                                                        <div className=\"d-flex\" style={{ width: '140px', height: '30px', borderRadius: '4px', overflow: 'hidden' }}>\n                                                                            <div className=\"h-100\" style={{ width: '4px', background: border }}></div>\n                                                                            <div className=\"h-100 d-flex align-items-center\" style={{ width: '100%', background: bg }}>\n                                                                                <span style={{ color: color, fontSize: '14px', paddingLeft: '12px', fontWeight: '400' }}>{text}</span>\n                                                                            </div>\n                                                                        </div>\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </MenuGroup>\n                                                        </Menu>\n                                                    </div>\n                                                </td>\n                                                <td className=\"butactionOrg\">\n                                                    {(option.isNew || option.isChanged) && (\n                                                        <Button\n                                                            className=\"save\"\n                                                            onClick={() => saveOption(option.id, option.isNew)}\n                                                            disabled={!option.title.trim() || createMutation.isPending || updateMutation.isPending}\n                                                        >\n                                                            {(updateMutation.isPending && updateMutation?.variables?.id === option.id) ||\n                                                                (createMutation.isPending && createMutation?.variables?.id === option.id)\n                                                                ? \"Loading...\"\n                                                                : \"Save\"}\n                                                        </Button>\n                                                    )}\n                                                    <Button\n                                                        className=\"remove\"\n                                                        onClick={() => removeOption(option.id)}\n                                                        disabled={deleteMutation.isPending}\n                                                    >\n                                                        {deleteMutation.isPending && deleteMutation?.variables === option.id ? \"Loading...\" : \"Remove\"}\n                                                    </Button>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                        <tr>\n                                            <td id='addmoreOption' colSpan={3}>\n                                                <Button\n                                                    onClick={addOption}\n                                                    disabled={getAvailableColors(null).length === 0}\n                                                >\n                                                    Add an Option   <PlusLg size={20} color='#000000' />\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectStatus;","import React from \"react\";\nimport BoxArrowRight from \"../../../assets/images/icon/box-arrow-right.png\";\nconst LogoutButton = () => {\n  const onClick = () => {\n    window.localStorage.clear();\n    window.sessionStorage.clear();\n    window.location.replace(\"/login\");\n  };\n\n  return (\n    <button className=\"logoutStyle logoutBottom\" onClick={onClick}>\n      Logout <img src={BoxArrowRight} alt=\"Arrow Right\" />\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import React, { useEffect, useRef } from \"react\";\nimport {\n  InfoSquare,\n  Person,\n  CreditCard2Back,\n  People,\n  Map,\n  Bell,\n  PlusSlashMinus,\n  WindowDock,\n  Bookmarks,\n  CardChecklist,\n  BlockquoteRight,\n  WindowStack,\n  FiletypeDoc,\n  ListUl,\n  Headset,\n} from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useTrialHeight } from \"../../../app/providers/trial-height-provider\";\nimport Support from \"../../../shared/ui/support/support\";\nimport LogoutButton from \"../Login/logout-button\";\n\nconst Sidebar = ({ activeTab, setActiveTab }) => {\n  const { trialHeight } = useTrialHeight();\n  const profileData = JSON.parse(\n    window.localStorage.getItem(\"profileData\") || \"{}\"\n  );\n  const [visible, setVisible] = React.useState(false);\n\n  // Ref for the active list item\n  const activeRef = useRef(null);\n\n  const openSupportModal = () => {\n    setVisible(true);\n  };\n\n  // Scroll into view when the active tab changes\n  useEffect(() => {\n    if (activeRef.current) {\n      const container = activeRef.current.closest(\".topList\"); // Get the sidebar container\n      const containerRect = container.getBoundingClientRect();\n      const activeItemRect = activeRef.current.getBoundingClientRect();\n\n      // Calculate the scroll position to bring the active item into view\n      const offset = activeItemRect.top - containerRect.top - container.clientHeight / 2 + activeRef.current.clientHeight / 2;\n\n      container.scrollBy({\n        top: offset\n      });\n    }\n  }, [activeTab]);\n\n  return (\n    <>\n      <div className=\"settings-menu\">\n        <div className=\"menuList\">\n          <div\n            className=\"topList\"\n            style={{\n              height: `calc(100vh - 320px - ${trialHeight}px)`,\n              overflowY: \"auto\",\n              paddingBottom: '.5rem'\n            }}\n          >\n            <h2>General</h2>\n            <ul>\n              <li>\n                <Link\n                  to=\"/settings/generalinformation\"\n                  className={`sidebar-tab ${activeTab === \"generalinformation\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"generalinformation\")}\n                  ref={activeTab === \"generalinformation\" ? activeRef : null}\n                >\n                  <InfoSquare color=\"#667085\" size={18} />\n                  Company Information\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/generalinformation/profile\"\n                  className={`sidebar-tab ${activeTab === \"profile\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"profile\")}\n                  ref={activeTab === \"profile\" ? activeRef : null}\n                >\n                  <Person color=\"#667085\" size={18} />\n                  My Profile\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/generalinformation/subscription\"\n                  className={`sidebar-tab ${activeTab === \"subscription\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"subscription\")}\n                  ref={activeTab === \"subscription\" ? activeRef : null}\n                >\n                  <CreditCard2Back color=\"#667085\" size={18} />\n                  Subscription\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/users/desktop\"\n                  className={`sidebar-tab ${activeTab === \"desktop\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"desktop\")}\n                  ref={activeTab === \"desktop\" ? activeRef : null}\n                >\n                  <People color=\"#667085\" size={18} />\n                  Users\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/location\"\n                  className={`sidebar-tab ${activeTab === \"locations\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"locations\")}\n                  ref={activeTab === \"locations\" ? activeRef : null}\n                >\n                  <Map color=\"#667085\" size={18} />\n                  Locations\n                </Link>\n              </li>\n            </ul>\n            <h2>Settings</h2>\n            <ul>\n              <li>\n                <Link\n                  to=\"/settings/calculators/departments\"\n                  className={`sidebar-tab ${activeTab === \"departments\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"departments\")}\n                  ref={activeTab === \"departments\" ? activeRef : null}\n                >\n                  <PlusSlashMinus color=\"#667085\" size={18} />\n                  Calculators\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/templates/email-templates\"\n                  className={`sidebar-tab ${activeTab === \"job-templates\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"job-templates\")}\n                  ref={activeTab === \"job-templates\" ? activeRef : null}\n                >\n                  <WindowDock color=\"#667085\" size={18} />\n                  Templates\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/companyethos/company-ethos\"\n                  className={`sidebar-tab ${activeTab === \"company-ethos\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"company-ethos\")}\n                  ref={activeTab === \"company-ethos\" ? activeRef : null}\n                >\n                  <Bookmarks color=\"#667085\" size={18} />\n                  Company Ethos\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/integrations\"\n                  className={`sidebar-tab ${activeTab === \"integrations\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"integrations\")}\n                  ref={activeTab === \"integrations\" ? activeRef : null}\n                >\n                  <CardChecklist color=\"#667085\" size={18} />\n                  Integrations\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/quotesjobs/recurring-quotes\"\n                  className={`sidebar-tab ${activeTab === \"recurring-quotes\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"recurring-quotes\")}\n                  ref={activeTab === \"recurring-quotes\" ? activeRef : null}\n                >\n                  <BlockquoteRight color=\"#667085\" size={18} />\n                  Quotes & Jobs\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/projectstatus/project-status\"\n                  className={`sidebar-tab ${activeTab === \"organisation-setting\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"organisation-setting\")}\n                  ref={activeTab === \"organisation-setting\" ? activeRef : null}\n                >\n                  <WindowStack color=\"#667085\" size={18} />\n                  Organisation Setting\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/termsandconditions/terms-and-conditions-invoice\"\n                  className={`sidebar-tab ${activeTab === \"terms-and-conditions\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"terms-and-conditions\")}\n                  ref={activeTab === \"terms-and-conditions\" ? activeRef : null}\n                >\n                  <FiletypeDoc color=\"#667085\" size={18} />\n                  Terms and Conditions\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/customerssettings/industries\"\n                  className={`sidebar-tab ${activeTab === \"industries\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"industries\")}\n                  ref={activeTab === \"industries\" ? activeRef : null}\n                >\n                  <Person color=\"#667085\" size={18} />\n                  Customers Settings\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/accounting/department-turnover-plan\"\n                  className={`sidebar-tab ${activeTab === \"expenses\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"expenses\")}\n                  ref={activeTab === \"expenses\" ? activeRef : null}\n                >\n                  <ListUl color=\"#667085\" size={18} />\n                  Accounting\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/notifications/dashboard-notifications\"\n                  className={`sidebar-tab ${activeTab === \"dashboard-notifications\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"dashboard-notifications\")}\n                  ref={activeTab === \"dashboard-notifications\" ? activeRef : null}\n                >\n                  <Bell color=\"#667085\" size={18} />\n                  Notifications\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div\n            className=\"logoutBottomS pt-2\"\n            style={{ borderTop: \".5px solid #dedede\", height: \"200px\" }}\n          >\n            <div className=\"userNameList ps-2\">\n              <button className=\"btn d-flex align-items-center gap-3 mb-2 px-0\" onClick={openSupportModal}>\n                <Headset size={16} color=\"#667085\" />\n                <p className=\"mb-0\">Support</p>\n              </button>\n            </div>\n            <div className=\"userNameList ps-2\">\n              {profileData && (\n                <div className=\"d-flex align-items-center gap-3 mb-3\">\n                  <Person size={16} color=\"#667085\" />\n                  <p className=\"mb-0\">\n                    <strong>{profileData.full_name}</strong>\n                    <span>{profileData.email}</span>\n                  </p>\n                </div>\n              )}\n            </div>\n            <LogoutButton />\n          </div>\n        </div>\n      </div>\n      <Support visible={visible} setVisible={setVisible} />\n    </>\n  );\n};\n\nexport default Sidebar;","/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronDown = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '1em' : _ref$size,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? null : _ref$title,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-chevron-down', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708\"\n  }));\n});\nChevronDown.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nexport default ChevronDown;"],"names":["API_BASE_URL","process","fetchAPI","async","endpoint","options","arguments","length","undefined","method","headers","body","requestOptions","localStorage","getItem","JSON","stringify","redirect","url","URL","response","fetch","ok","Error","status","contentType","get","includes","json","message","text","error","console","getBillingPersonalInfo","toString","updateBillingPersonalInfo","data","getPaymentMethodInfo","retryPayment","updatePaymentMethodInfo","getReginalAndLanguage","updateReginalAndLanguage","createProjectStatus","log","id","isNew","isChanged","value","updateProjectStatusById","deleteProjectStatusById","SettingsGeneralInformation","myHeaders","Headers","accessToken","append","updateGeneralInformation","photo","formData","FormData","Object","keys","forEach","key","croppedImageBlob","photoHintId","nanoid","result","SettingsBankInformation","updateBankInformation","generalData","ProjectStatusesList","Spinner","React","_ref","ref","bsPrefix","variant","animation","size","as","Component","className","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","MenuGroup","forwardRef","externalRef","style","takeOverflow","restProps","useRef","overflowStyle","setOverflowStyle","useState","overflow","overflowAmt","useContext","MenuListContext","useIsomorphicLayoutEffect","maxHeight","getNormalizedClientRect","current","height","scrollTop","jsx","useCombinedRef","useBEM","block","menuClass","element","menuGroupClass","colorOptions","bg","border","color","ProjectStatus","isCreating","setIsCreating","activeTab","setActiveTab","setOptions","setError","fetchData","useCallback","prev","unsavedNewOptions","filter","opt","map","item","toast","updateMutation","useMutation","mutationFn","onSuccess","success","onError","deleteMutation","createMutation","getAvailableColors","currentOptionId","usedColors","useEffect","_jsxs","children","Helmet","Sidebar","Link","to","position","top","left","background","width","borderRadius","display","justifyContent","alignItems","zIndex","role","Table","option","_colorOptions$find","_colorOptions$find2","_updateMutation$varia","_createMutation$varia","type","title","onChange","e","updateOptionTitle","target","maxLength","placeholder","Menu","menuButton","MenuButton","borderColor","find","ChevronDown","boxShadow","index","MenuItem","onClick","updateOptionColor","padding","fontSize","paddingLeft","fontWeight","Button","optionToSave","trim","dataToSave","mutateAsync","saveOption","disabled","isPending","variables","mutate","removeOption","colSpan","addOption","availableColors","Date","now","PlusLg","LogoutButton","window","clear","sessionStorage","location","replace","src","alt","trialHeight","useTrialHeight","profileData","parse","visible","setVisible","activeRef","container","closest","containerRect","getBoundingClientRect","offset","clientHeight","scrollBy","_Fragment","overflowY","paddingBottom","InfoSquare","Person","CreditCard2Back","People","Map","PlusSlashMinus","WindowDock","Bookmarks","CardChecklist","BlockquoteRight","WindowStack","FiletypeDoc","ListUl","Bell","borderTop","openSupportModal","Headset","full_name","email","Support","bytes","crypto","getRandomValues","Uint8Array","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass","_excluded","_extends","assign","bind","n","t","r","hasOwnProperty","call","apply","_ref$color","_ref$size","_ref$title","_ref$className","rest","o","i","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","xmlns","viewBox","fill","Boolean","join","fillRule","d","propTypes","PropTypes"],"sourceRoot":""}