{"version":3,"file":"static/js/9488.b9ffa53d.chunk.js","mappings":"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","sources":["components/layout/requestdemo/CompanyName.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport envelopeIcon from \"../../../assets/images/icon/envelope.svg\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport request03 from \"../../../assets/images/img/request03.jpg\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst options = [\n  { value: \"1-10\", label: \"1-10\" },\n  { value: \"11-50\", label: \"11-50\" },\n  { value: \"51-250\", label: \"51-250\" },\n  { value: \"251-1000\", label: \"251-1000\" },\n  { value: \"1000+\", label: \"1000+\" },\n];\n\nconst CompanyName = () => {\n  const location = useLocation();\n  const { first_name, last_name, country, phone } = location.state;\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [company_name, setCompanyname] = useState(\"\");\n  const [company_description, setCompanydescription] = useState(\"\");\n  const [company_size, setCompanySize] = useState(\"\");\n  const [is_agree_marketing, setAgree] = useState(false);\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [checkError, setCheckError] = useState(\"\");\n\n  const handleStepOne = () => {\n    // Email validation\n    if (!email.trim().match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      setEmailError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    // Checkbox validation\n    if (!is_agree_marketing) {\n      setCheckError(\n        \"Please agree to receive marketing communications from MeMate.\"\n      );\n      return;\n    }\n\n    navigate(\"/selectdate\", {\n      state: {\n        first_name,\n        last_name,\n        country,\n        phone,\n        email,\n        company_name,\n        company_description,\n        company_size,\n        is_agree_marketing,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"requestDemoWrap\">\n        <div className=\"OnboardingStep1\">\n          <form>\n            <div className=\"loginPage\">\n              <div className=\"boxinfo\" style={{ overflow: 'auto', flexDirection: 'column' }}>\n                <div className=\"w-100 p-4\">\n                  <img src={LoinLogo} alt=\"Loin Logo\" />\n                </div>\n\n                <div className=\"boxLogin\">\n                  <h2>\n                    Yes, I want to <span>sign up</span>\n                    <br></br> for a demo\n                  </h2>\n                  <div className=\"step-progress\">\n                    <div className=\"step \"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step active\"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step\"></div>\n                  </div>\n\n                  <div className=\"formgroup\">\n                    <label>Email<span style={{ color: \"#f04438\" }}>*</span></label>\n                    <div\n                      className={`inputInfo ${emailError ? \"error-border\" : \"\"\n                        }`}\n                    >\n                      <img src={envelopeIcon} alt=\"Envelope Icon\" />\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => {\n                          setEmail(e.target.value);\n                          setEmailError(\"\");\n                        }}\n                      />\n                      {emailError && (\n                        <img\n                          className=\"ExclamationCircle\"\n                          src={exclamationCircle}\n                          alt=\"Exclamation Circle\"\n                        />\n                      )}\n                    </div>\n                    {emailError && (\n                      <p className=\"error-message\">{emailError}</p>\n                    )}\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Company Legal Name</label>\n                    <div className={`inputInfo `}>\n                      <input\n                        type=\"text\"\n                        name=\"company_name\"\n                        value={company_name}\n                        onChange={(e) => {\n                          setCompanyname(e.target.value);\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Nature of Business</label>\n                    <div className={`inputInfo`}>\n                      <textarea\n                        rows={4}\n                        name=\"company_description\"\n                        value={company_description}\n                        onChange={(e) => {\n                          setCompanydescription(e.target.value);\n                        }}\n                        placeholder=\"Describe nature of your business\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Company Size</label>\n                    <div className=\"sizeRadioWrap\">\n                      {options.map((option) => (\n                        <div\n                          key={option.value}\n                          className={`option inputInfoSizeCheck ${company_size === option.value ? \"active\" : \"\"\n                            }`}\n                        >\n                          <input\n                            type=\"radio\"\n                            className=\"radioBtn\"\n                            id={option.value}\n                            name=\"companySize\"\n                            value={option.value}\n                            checked={company_size === option.value}\n                            onChange={(e) => {\n                              setCompanySize(e.target.value);\n                            }}\n                          />\n                          <label htmlFor={option.value}>{option.label}</label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"formgroup\">\n                    <div className={``}>\n                      <label\n                        id=\"inputInfocheckbox\"\n                        className=\"inputInfocheckbox\"\n                      >\n                        Yes, I would like to receive marketing communications\n                        from MeMate\n                        <input\n                          type=\"checkbox\"\n                          name=\"is_agree_marketing\"\n                          checked={is_agree_marketing}\n                          onChange={(e) => {\n                            setAgree(e.target.value);\n                          }}\n                        />\n                        <span\n                          className={`checkmarkdata ${checkError ? \"agree_marketing-border\" : \"\"\n                            }`}\n                        ></span>\n                      </label>\n                    </div>\n                    {checkError && (\n                      <p className=\"error-message\">{checkError}</p>\n                    )}\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"fillbtn flexcenterbox\"\n                    onClick={handleStepOne}\n                  >\n                    Next Step\n                    <img src={arrowRight} alt=\"Arrow Right\" />\n                  </button>\n                  <div className=\"linkBottom\">\n                    <p>\n                      Already have an account?{\" \"}\n                      <Link to=\"/login\">Sign in</Link>\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"w-100 p-4 footer-copyright\">\n                  <span className=\"font-14\" style={{ color: '#212529' }}>© Memate {new Date().getFullYear()}</span>\n                </div>\n              </div>\n\n              <div\n                className=\"sliderRight SinglBgRight\"\n                style={{\n                  backgroundImage: `url(${request03})`,\n                  backgroundSize: \"cover\",\n                  backgroundRepeat: \"no-repeat\",\n                }}\n              >\n                <p>Predict unprofitable business activities.</p>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CompanyName;\n"],"names":["options","value","label","CompanyName","location","useLocation","first_name","last_name","country","phone","state","navigate","useNavigate","email","setEmail","useState","company_name","setCompanyname","company_description","setCompanydescription","company_size","setCompanySize","is_agree_marketing","setAgree","emailError","setEmailError","checkError","setCheckError","_jsx","_Fragment","children","className","_jsxs","style","overflow","flexDirection","src","LoinLogo","alt","color","envelopeIcon","type","name","onChange","e","target","exclamationCircle","rows","placeholder","map","option","id","checked","htmlFor","onClick","handleStepOne","trim","match","arrowRight","Link","to","Date","getFullYear","backgroundImage","request03","backgroundSize","backgroundRepeat"],"sourceRoot":""}