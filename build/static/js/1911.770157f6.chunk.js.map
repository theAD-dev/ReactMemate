{"version":3,"file":"static/js/1911.770157f6.chunk.js","mappings":"gNACA,MAAMA,EAAeC,mCAGRC,EAAaC,UACxB,MAAMC,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAE5C,MAAMI,EAAiB,CACrBC,OAAQ,MACRC,QAASR,EACTS,SAAU,UAGZ,IACE,MAAMC,QAAiBC,MAAM,GAAGf,WAAuBU,GAEvD,aADqBI,EAASE,MAEhC,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,GAKWE,EAAkBhB,MAAOiB,EAAcC,KAClD,MAAMjB,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAC5CF,EAAUK,OAAO,eAAgB,oBAEjC,MAAMC,EAAiB,CACrBC,OAAQ,MACRC,QAASR,EACTkB,KAAMC,KAAKC,UAAU,CAAEC,WAAYJ,IACnCR,SAAU,UAGZ,IACE,MAAMC,QAAiBC,MAAM,GAAGf,WAAsBoB,WAAuBV,GAE7E,IAAKI,EAASY,GAAI,CAChB,MAAMC,QAAkBb,EAASE,OACjC,MAAM,IAAIY,MAAM,yCAAyCd,EAASe,WAAWF,IAC/E,CAEA,MAAMG,QAAehB,EAASE,OAI9B,OAFqBc,EAAOC,OAASR,KAAKS,MAAMF,GAAU,IAG5D,CAAE,MAAOb,GAEP,MADAC,QAAQD,MAAM,4BAA6BA,GACrCA,CACR,GAGWgB,EAAU9B,UACrB,MACM+B,EAAU,CACdvB,OAAQ,MACRW,KAAM,CAACa,IAAKA,IAERC,EAAM,IAAIC,IAAI,GAAGrC,uBACvB,OAAOsC,EAAAA,EAAAA,GAASF,EAAIG,WAAYL,EAAQ,EAG7BM,EAAWrC,UACtB,MACM+B,EAAU,CACdvB,OAAQ,MACRW,KAAM,CAACa,IAAKA,IAERC,EAAM,IAAIC,IAAI,GAAGrC,wBACvB,OAAOsC,EAAAA,EAAAA,GAASF,EAAIG,WAAYL,EAAQ,EA0B7BO,EAAgBtC,MAAOiB,EAAcsB,KAChD,MAAMtC,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAC5CF,EAAUK,OAAO,eAAgB,oBACjC,MAAMC,EAAiB,CACrBC,OAAQ,OACRC,QAASR,EACTkB,KAAMC,KAAKC,UAAUkB,GACrB7B,SAAU,UAGZ,IACE,MAAMC,QAAiBC,MAAM,GAAGf,WAAsBoB,cAA0BV,GAChF,OAAII,EAASY,GACJZ,GAEPI,QAAQyB,IAAI,SAAU7B,EAASe,QACxB,KAEX,CAAE,MAAOZ,GAEP,OADAC,QAAQyB,IAAI,SAAU1B,GACf,IACT,GAKW2B,EAAiBzC,MAAOiB,EAAcyB,KACjD,MAAMzC,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAC5CF,EAAUK,OAAO,eAAgB,oBAEjC,MAAMC,EAAiB,CACrBC,OAAQ,MACRC,QAASR,EACTkB,KAAMC,KAAKC,UAAU,CAAEsB,KAAMD,EAAaE,UAAW3B,IACrDP,SAAU,UAGZ,IACE,MAAMC,QAAiBC,MAAM,GAAGf,WAAsBoB,UAAsBV,GAE5E,IAAKI,EAASY,GAAI,CAChB,MAAMC,QAAkBb,EAASE,OACjC,MAAM,IAAIY,MAAM,wCAAwCd,EAASe,WAAWF,IAC9E,CAEA,MAAMG,QAAehB,EAASE,OAI9B,OAFqBc,EAAOC,OAASR,KAAKS,MAAMF,GAAU,IAG5D,CAAE,MAAOb,GAEP,MADAC,QAAQD,MAAM,2BAA4BA,GACpCA,CACR,GAOW+B,EAAoB7C,UAC/B,MAAMC,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAC5CF,EAAUK,OAAO,eAAgB,oBAEjC,MAIMC,EAAiB,CACrBC,OAAQ,MACRC,QAASR,EACTkB,KAPUC,KAAKC,UAAU,CACzB,IAAOyB,IAOPpC,SAAU,UAGZ,IACE,MAAMqC,QAAkBC,QAAQC,IAAI,CAClCrC,MAAM,GAAGf,sBAAkCU,KAI7C,aADmByC,QAAQC,IAAIF,EAAUG,KAAIvC,GAAYA,EAASwC,SAEpE,CAAE,MAAOrC,GACP,MAAMA,CACR,GAKWsC,EAAqBpD,UAChC,MAAMC,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAC5CF,EAAUK,OAAO,eAAgB,oBAEjC,MAAMC,EAAiB,CACrBC,OAAQ,MACRC,QAASR,EACTS,SAAU,UAGNC,QAAiBC,MAAM,GAAGf,WAAsBoB,eAA2BV,GAEjF,aADqBI,EAASwC,QAChB,EAAE,EA+BLE,EAAoBrD,UAC/B,MAAMC,EAAY,IAAIC,QAChBC,EAAcC,aAAaC,QAAQ,gBACzCJ,EAAUK,OAAO,gBAAiB,UAAUH,KAC5CF,EAAUK,OAAO,eAAgB,oBAEjC,MAIMC,EAAiB,CACrBC,OAAQ,MACRC,QAASR,EACTkB,KAPUC,KAAKC,UAAU,CACzB,IAAOyB,IAOPpC,SAAU,UAGZ,IACE,MAAMqC,QAAkBC,QAAQC,IAAI,CAClCrC,MAAM,GAAGf,uBAAmCU,KAI9C,aADmByC,QAAQC,IAAIF,EAAUG,KAAIvC,GAAYA,EAASwC,SAEpE,CAAE,MAAOrC,GACP,MAAMA,CACR,E,6KC1QF,MAyBE,EAzBwBwC,IAA+B,IAA9B,WAACC,EAAU,YAACC,GAAYF,EAC/C,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAW,kBAAkBL,EAAWI,SAAA,EACrDE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,gBAAeD,UAC7BE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,oBAElBC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBD,UAC9BE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,oBAElBC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,KAAA,OAAAF,SAEkB,OAAfJ,EACD,KACKA,EAAa,YAIxBM,EAAAA,EAAAA,KAAA,QAAAF,SAAOH,MAER,E,eClBT,MAAMM,EAASR,IAA0D,IAAzD,WAAEC,EAAU,MAAEQ,EAAK,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,GAAUZ,EACjE,OACEG,EAAAA,EAAAA,MAAA,MACEG,UAAW,WAAUM,EAAW,SAAW,IAC3C,kBAAiBX,EACjBY,QAASF,EAASN,SAAA,EAElBE,EAAAA,EAAAA,KAAA,SACED,UAAU,eACVQ,KAAK,cACLC,KAAK,QACLC,QAASJ,KAEXL,EAAAA,EAAAA,KAAA,MAAID,UAAU,wBACdH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBD,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,KAAA,UAAAF,SAASI,KACTF,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UAClCE,EAAAA,EAAAA,KAAA,OACED,UAAU,oDACV,gBAAeL,EACf,gBAAc,IACd,gBAAc,MACdgB,MAAO,CAAE,UAAWhB,EAAYiB,WAAYR,GAAWL,UAEvDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOJ,EAAW,eAIxBE,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAQJ,EAAW,YAElB,EA0GT,EAtGiBkB,IAAmE,IAAlE,cAACC,EAAa,oBAACC,EAAmB,aAACC,EAAY,YAACC,GAAYJ,EAG5E,MAAMK,EAAaA,KACjBD,GAAa,GAGRE,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,CACnDpE,KAAM6D,EACNnB,WAAYoB,EACZH,WAAY,0DAGPU,EAAcC,IAAmBF,EAAAA,EAAAA,WAAS,IAC1CvC,EAAa0C,IAAkBH,EAAAA,EAAAA,UAASF,EAAexB,YA+D9D,OACEE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAaO,QA/DVkB,KAEEC,SAASC,iBAAiB,mBAClCC,SAASC,GAAaA,EAASC,UAAUC,OAAO,YAC9Db,IAEAK,GAAiBS,IAAeA,GAAU,EAyDWjC,SAAA,EACnDE,EAAAA,EAAAA,KAACgC,EAAiB,CACdtC,WAAYwB,EAAexB,WAC3BC,YAAauB,EAAelE,QAE9BgD,EAAAA,EAAAA,KAACiC,EAAAA,EAAW,CAACC,MAAM,UAAUC,KAAM,SAErCnC,EAAAA,EAAAA,KAAA,MAAID,UAAW,YAAWsB,EAAe,SAAW,IAAKvB,SArC7C,CACd,CACEJ,WAAY,GACZQ,MAAO,OACPC,SAAU,wDAEZ,CACET,WAAY,GACZQ,MAAO,WACPC,SAAU,wDAEZ,CACET,WAAY,GACZQ,MAAO,gBACPC,SAAU,wDAEZ,CACET,WAAY,GACZQ,MAAO,cACPC,SAAU,wDAEZ,CACET,WAAY,GACZQ,MAAO,oBACPC,SAAU,yDAcCd,KAAK+C,IACZpC,SAAAA,EAAAA,KAACC,EAAM,CAELP,WAAY0C,EAAO1C,WACnBQ,MAAOkC,EAAOlC,MACdC,SAAUiC,EAAOjC,SACjBC,SAAUA,IApECjE,WACnB,IACE,MAAMiB,EAAe2D,EACfsB,EAAiBD,EAAO1C,iBAExBd,EAAAA,EAAAA,IAAexB,EAAciF,GACnClB,EAAkB,CAChBnE,KAAMoF,EAAOlC,MACbR,WAAY0C,EAAO1C,WACnBiB,WAAYyB,EAAOjC,WAErBoB,EAAec,GAChBpB,IACCK,GAAgB,EAClB,CAAE,MAAOrE,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,GAoDwBqF,CAAaF,GAC7B/B,UAjDQX,EAiDW0C,EAAO1C,WAhD3BA,IAAeb,IA2CXuD,EAAO1C,YA5CFA,KAmDX,QAEC,E,gNC5GV,MACA,EAAe,IAA0B,4DCoIzC,EApJmBD,IAAwC,IAAvC,gBAAC8C,EAAe,eAAEC,GAAe/C,EAEnD,MAAOgD,EAAYC,IAAiBtB,EAAAA,EAAAA,UAAS,UACtCuB,EAAOC,IAAYxB,EAAAA,EAAAA,UAASyB,QAC5BC,EAAMC,IAAW3B,EAAAA,EAAAA,UAAS,KAC1B4B,EAAMC,IAAW7B,EAAAA,EAAAA,WAAS,IAC1B8B,EAAiBC,IAAsB/B,EAAAA,EAAAA,UAAS,IAEjDgC,EAAcA,KAClBH,GAAQ,GACRE,EAAmB,GAAG,EA2BlBE,EAAcA,KAClBb,GAAgB,EAGZc,EAAS,CACb,CAAE/C,KAAM,QAASoC,MAAO,IAAKY,MAAMvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAACrB,KAAM,MACnD,CAAE5B,KAAM,QAASoC,MAAO,IAAKY,MAAMvD,EAAAA,EAAAA,KAACyD,EAAAA,EAAS,CAACtB,KAAM,MACpD,CAAE5B,KAAM,UAAWoC,MAAO,IAAKY,MAAMvD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAQ,CAACvB,KAAM,OAGjDwB,EAAeA,IACdhB,KAIAG,IAHHK,EAAmB,8BACZ,GAUX,OACCvD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,aAAavD,QAjDbwD,IAAMb,GAAQ,GAiDmBnD,UAC/CE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CAAC7B,MAAM,UAAUC,KAAM,QAGhCvC,EAAAA,EAAAA,MAACoE,EAAAA,EAAK,CAAChB,KAAMA,EAAM,kBAAgB,gCAClCiB,UAAQ,EAAClE,UAAU,8BAA8BmE,OAAQd,EAAae,WAAW,EAAMrE,SAAA,EACrFE,EAAAA,EAAAA,KAACgE,EAAAA,EAAMI,OAAM,CAACrE,UAAU,kCAAkCsE,aAAW,EAAAvE,UACnEE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+DAA8DD,UAC3EF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,KAAA,OAAKsE,IAAKC,EAAaC,IAAI,sBAG3B,wBAKZxE,EAAAA,EAAAA,KAACgE,EAAAA,EAAMS,KAAI,CAAA3E,UACTF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,kBACNE,EAAAA,EAAAA,KAAC0E,EAAAA,EAAW,CAAC3E,UAAU,oBAAmBD,SACvCwD,EAAOjE,KAAI,CAACsF,EAAOC,KAClB5E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,UACjCF,EAAAA,EAAAA,MAACiF,EAAAA,EAAY,CACXC,GAAI,SAASF,IACbpE,KAAK,QACLqD,QAASe,EAAM,EAAI,aAAe,YAClCrE,KAAK,QACLoC,MAAOgC,EAAMhC,MACblC,QAASgC,IAAekC,EAAMhC,MAC9BoC,SAAWC,GAAMtC,EAAcsC,EAAEC,cAActC,OAAO7C,SAAA,CAErD6E,EAAMpE,KAAK,IAAEoE,EAAMpB,SAViBqB,OAe5C1B,IACClD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,SAAEoD,KAEhCtD,EAAAA,EAAAA,MAACsF,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAatF,SAAA,EAC9CE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,aAAYD,SAAC,UAC7BE,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CACTtF,UAAU,kBACV4C,MAAOA,EACPoC,SAAWO,GAAa1C,EAAS0C,GACjCC,MAAO,CAAEC,eAAgBvD,EAAAA,GACzBE,KAAM,QAGTe,IACClD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,SAAEoD,KAEhClD,EAAAA,EAAAA,KAAA,QAAAF,SAAM,UACNE,EAAAA,EAAAA,KAACyF,EAAAA,EAAU,CAACC,GAAI,CAAEC,EAAG,GAAI7F,UACvBE,EAAAA,EAAAA,KAAC4F,EAAAA,EAAKC,QAAO,CACXC,GAAG,WACHC,YAAY,yBACZrF,MAAO,CAAEsF,OAAQ,SACjBrD,MAAOG,EACPiC,SAAWC,GAAMjC,EAAQiC,EAAEiB,OAAOtD,WAGrCO,IACClD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,SAAEoD,QAGlCtD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,0BAAyBD,SAAA,EACtCE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAU,WAAWO,QAAS8C,EAAYtD,SAAC,YAGnDE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAU,UAAUO,QA1HrBnE,UACjB,IAAKwH,IAAgB,OAErB,MAAMvG,EAAemF,EACf2D,EAAU,IAAIC,KAAKxD,GACzBuD,EAAQE,QAAQF,EAAQG,UAAY,GAEpC,MAAM3H,EAAW,CACf8B,KAAMiC,EACN6D,KAAMzD,IAAMqD,GAASK,OAAO,cAC5BzD,KAAMA,GAGR,UACqBrE,EAAAA,EAAAA,IAAcrB,EAAcsB,GAC/C0E,IACAC,GACF,CAAE,MAAOpG,GACPC,QAAQD,MAAM,sBAAuBA,EACvC,GAuG0D6C,SAAC,sBAOzD,ECrFN,MACA,EAAe,IAA0B,iECDzC,MACA,EAAe,IAA0B,8DCDzC,MACA,EAAe,IAA0B,kEC1EzC,EAA6B,0BAA7B,EAAmE,yBAAnE,EAAsG,uBAAtG,EAA0I,0BAA1I,EAAmL,4BCS7K0G,EAAcC,IAClB,MAAMH,EAAO,IAAIH,KAAiB,IAAZM,GAMtB,MAAO,GALKH,EAAKD,aACS,IAAIK,KAAKC,eAAe,QAAS,CACzDC,MAAO,UACNL,OAAOD,MACGA,EAAKO,eAC0B,EAgH9C,EA7GqBpH,IAA0C,IAAzC,aAAErC,EAAY,KAAEoD,EAAI,YAAE6C,GAAa5D,EACvD,MAAOqH,EAAgBC,GAAqBC,EAAAA,SAAe,MAcrDC,EAAqBA,KACzBF,EAAkB,KAAK,EAGzB,OACE/G,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACEE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,UAC9BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGU,EAAKnB,KAAI,CAAC6H,EAAMC,KACfnH,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACoH,EAAAA,EAAa,CAAAtH,UACZE,EAAAA,EAAAA,KAACqH,EAAAA,EAAc,CACbC,QAAQ,QACRC,WAAS,EACTC,UAAU,SACVxE,KAAM8D,IAAmBK,EACzBjD,OAAQ+C,EACRQ,SACEzH,EAAAA,EAAAA,KAAC0H,EAAAA,EAAO,CACN5C,GAAI,oCAAoCqC,IACxCpH,UAAU,iBACV4H,MAAM,GAAE7H,UAERF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKG,UAAW,mBAAmB6H,IAAoB9H,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,CACT,UAAdoH,EAAK1G,OACJR,EAAAA,EAAAA,KAAA,OAAKsE,IAAKuD,EAAcrD,IAAI,iBAEf,UAAd0C,EAAK1G,OACJR,EAAAA,EAAAA,KAAA,OAAKsE,IAAKwD,EAAWtD,IAAI,cAEZ,YAAd0C,EAAK1G,OACJR,EAAAA,EAAAA,KAAA,OAAKsE,IAAKyD,EAAevD,IAAI,sBAGjCxE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,OACR9D,UAAU,eACVO,QAAS2G,EAAmBnH,UAE5BE,EAAAA,EAAAA,KAACgI,EAAAA,EAAC,CAAC9F,MAAM,UAAUC,KAAM,WAG7BvC,EAAAA,EAAAA,MAAA,OAAKG,UAAW6H,EAAoB9H,SAAA,EAClCE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,cAAaD,SAAE0G,EAAWU,EAAKZ,SAC5CtG,EAAAA,EAAAA,KAAA,KAAAF,SAAIoH,EAAKpE,WAEXlD,EAAAA,EAAAA,MAAA,OAAKG,UAAW6H,EAAkB9H,SAAA,EAChCE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACtD,QAAS2G,EAAoBlH,UAAW6H,EAAiB9H,SAAC,YAClEE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAW6H,EAAe9H,SAAC,iBAI1CA,UAEDE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,eACRvD,QAASA,IAtEC6G,KAC1B,MAAMc,EAAgBxG,SAASC,iBAAiB,iBAC5CuG,EAAcC,OAAS,GACzBD,EAActG,SAAQwG,GAAOA,EAAIC,UAEnCrB,EAAkBD,IAAmBK,EAAQ,KAAOA,EAAM,EAiE3BkB,CAAmBlB,GAAOrH,UAEzCF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACiB,UAAdoH,EAAK1G,OACJR,EAAAA,EAAAA,KAACyD,EAAAA,EAAS,CAACvB,MAAM,UAAUC,KAAM,KAEpB,UAAd+E,EAAK1G,OACJR,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAACtB,MAAM,UAAUC,KAAM,KAEnB,YAAd+E,EAAK1G,OACJR,EAAAA,EAAAA,KAAC0D,EAAAA,EAAQ,CAACxB,MAAM,UAAUC,KAAM,MAElCnC,EAAAA,EAAAA,KAAA,OAAAF,SAAM0G,EAAWU,EAAKZ,gBA5DVa,IADbA,KAoEV3G,EAAK0H,OAAS,IACblI,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,iBAAgBD,UAC9BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBD,UAChCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBD,UAChCE,EAAAA,EAAAA,KAACsI,EAAU,CAAC/F,gBAAiBnF,EAAcoF,eAtFtCA,KACrBa,GAAa,kBA6FV,E,uECjHP,MA6HA,GA7HoBkF,IAChB,MAAOC,EAAUC,IAAerH,EAAAA,EAAAA,UAAS,OAClCsH,EAAUC,IAAevH,EAAAA,EAAAA,UAASmH,EAAMK,UAAY,KACpDC,EAAYC,IAAiB1H,EAAAA,EAAAA,WAAUmH,EAAMK,WAC7CG,EAAYC,IAAiB5H,EAAAA,EAAAA,WAAS,GAOvCgC,EAAcA,KAClBqF,EAAY,KAAK,EAGbQ,EAAOC,QAAQV,GACf1D,EAAKmE,EAAO,sBAAmBE,EAuBvC,OACEvJ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCE,EAAAA,EAAAA,KAAA,OAAMD,UAAW,4BAA2B2I,EAAW,MAAQ,MAAQ,mBAAkB5D,EAAIjB,QAAQ,YAAYvD,QAnC7F8I,IACnBX,EAAYW,EAAMnE,eAClB+D,GAAeH,IAAeE,EAAW,EAiC4FjJ,SACtIiJ,GAEKnJ,EAAAA,EAAAA,MAAA,QAAMc,MAAO,CAAE2I,OAAQ,WAAa/I,QAASA,IAAM0I,GAAc,GAAOlJ,SAAA,CAAC,SACrEE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAO,CAACpH,MAAM,UAAUC,KAAM,SAGvCnC,EAAAA,EAAAA,KAAA,UAAAF,SACC4I,GACK9I,EAAAA,EAAAA,MAAA,QAAMc,MAAO,CAAE2I,OAAQ,WAAa/I,QAASA,IAAMwI,GAAc,GAAMhJ,SAAA,CAAC,SAClEE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAO,CAACpH,MAAM,UAAUC,KAAM,SAGrCvC,EAAAA,EAAAA,MAAA,QAAMc,MAAO,CAAE2I,OAAQ,WAAYvJ,SAAA,CAAC,SAC7BE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CAAC7B,MAAM,UAAUC,KAAM,aAM3CnC,EAAAA,EAAAA,KAAC0H,EAAAA,GAAO,CACN5C,GAAIA,EACJmE,KAAMA,EACNT,SAAUA,EACVe,QAASnG,EACToG,aAAc,CACVC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAEhBE,WAAY,CACRlJ,MAAO,CACLmJ,MAAO,SAET/E,GAAI,sBACJhF,UAENF,EAAAA,EAAAA,MAACgG,EAAAA,EAAI,CAAA9F,SAAA,EACDF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,6CAA4CD,SAAA,EACzDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,KAAC8J,EAAAA,EAAe,CAAC5H,MAAM,UAAUC,KAAM,WAGvC,eAGRnC,EAAAA,EAAAA,KAAC+J,GAAAA,EAAU,CAAChK,UAAU,iBAAiBoC,KAAK,QAAQ7B,QAAS8C,EAAYtD,UAACE,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,UAGtFhK,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,UAEnCF,EAAAA,EAAAA,MAAC6F,EAAAA,EAAU,CAACC,GAAI,CAAEC,EAAG,uBAAwB7F,SAAA,EAC3CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAC4F,EAAAA,EAAKC,QAAO,CAACf,GAAG,mBACfgB,GAAG,WACHC,YAAY,yBACZrF,MAAO,CAAEsF,OAAQ,SACjBrD,MAAO+F,EACP3D,SAAWC,GAAM2D,EAAY3D,EAAEiB,OAAOtD,OACtCsH,UAAWpB,UAKfjJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,+BAA8BD,SAAA,EAC3CE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAU,WAAWO,QAAS8C,EAAYtD,SAAC,YAGnDE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAU,UAAUO,QAjGjBnE,UACjB,IACE,IAAKoM,EAAMnL,aAET,YADAF,QAAQD,MAAM,sCAIhB0L,EAAYD,GACZ,MAAMtL,EAAemL,EAAMnL,aACrBC,EAAcqL,GAEpBvL,EAAAA,EAAAA,IAAgBC,EAAcC,IAC9BnB,EAAAA,EAAAA,MAEA4M,GAAc,GACd1F,GACF,CAAE,MAAOnG,GACPC,QAAQD,MAAM,qBAAsBA,EACtC,GA+EsD6C,SAAC,mBAMtD,E,0JC/CP,MACA,GAAe,IAA0B,4D,guHCpFzC,MAIA,GAJ0BL,IAAyB,IAAxB,OAAEyK,EAAM,OAAEC,GAAQ1K,EAC3C,OAAOO,EAAAA,EAAAA,KAACoK,GAAAA,EAAQ,CAACF,OAAQA,EAAQC,OAAQA,GAAU,ECmIrD,GAxHiB1K,IAAgE,IAA9D,UAAC4K,EAAS,aAACjN,EAAY,UAACkN,EAAS,UAACC,EAAS,YAACvJ,GAAYvB,EACzE,MAAOwJ,EAAMuB,GAAWxD,EAAAA,UAAe,IAChCyD,EAAUC,IAAetJ,EAAAA,EAAAA,WAAS,IAElCuJ,EAASC,IAAcxJ,EAAAA,EAAAA,UAAS,CAAEyJ,QAAS,GAAIrK,KAAM,aACrDsK,EAAeC,IAAoB3J,EAAAA,EAAAA,UAAS4J,eAAexO,QAAQ,kBAAoB,GA0B1F4G,EAAcA,KAClB6H,YAAW,KACTP,GAAY,GACZF,GAAQ,EAAM,GACb,IAAK,EAwBR,OArBFU,EAAAA,EAAAA,YAAU,KAGR,GACC,CAAC9N,KAEJ8N,EAAAA,EAAAA,YAAU,KAERH,EAAiBT,GACjBU,eAAeG,QAAQ,gBAAiBb,EAAU,GAGjD,CAACA,KAUA1K,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACDE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACtD,QA1DU8K,IAAMZ,GAAQ,GA0DHzK,UAAW,qBAAqB4K,EAAQnK,QAAsB,UAAd8J,IAAwBxK,UACpGE,EAAAA,EAAAA,KAACqL,GAAAA,EAAO,CAACnJ,MAAM,UAAUC,KAAM,QAE/BnC,EAAAA,EAAAA,KAACgE,GAAAA,EAAK,CACJiF,KAAMA,EACNM,QAASnG,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBtD,UAE1CE,EAAAA,EAAAA,KAACsL,GAAAA,EAAG,CAACvL,UAAU,2DAA2D2F,GAAI,CAAEmE,MAAO,KAAM/J,UAC3FF,EAAAA,EAAAA,MAAC6F,EAAAA,EAAU,CAACX,GAAG,oBAAoBjB,QAAQ,KAAK0H,UAAU,KAAIzL,SAAA,EAC9DE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+DAA8DD,UAC7EF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACAF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC7BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC5BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC/BE,EAAAA,EAAAA,KAACwL,GAAAA,EAAO,CAACtJ,MAAM,UAAUC,KAAM,YAI/BnC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBD,SACnB,SAAdyK,IACUvK,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SACG,cAAcwK,YAK5BtK,EAAAA,EAAAA,KAAC+J,GAAAA,EAAU,CACT0B,KAAK,MACLvJ,MAAM,UACN5B,QAAS8C,EACT,aAAW,QAAOtD,UAElBE,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CAAC9H,MAAM,UAAUC,KAAM,WAGnCvC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAAA,UAAAF,UAAQE,EAAAA,EAAAA,KAAA,OAAKsE,IAAKoH,GAAAA,EAAWlH,IAAI,iBAAuBxE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBD,SAAC,cAC9FF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,aAAeC,EAAAA,EAAAA,KAAA,OAAKsE,IAAKqH,GAAcnH,IAAI,kBAAiBxE,EAAAA,EAAAA,KAAA,MAAID,UAAU,gBAC5FH,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAAA,UAAAF,UAAQE,EAAAA,EAAAA,KAAA,OAAKsE,IAAKsH,GAAapH,IAAI,eAAqBxE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,mBAEnEE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,+IAKNE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,2BAA0BD,UACzCE,EAAAA,EAAAA,KAAA,UAAQM,QAzGqBnE,UACjC,IACE,GAAGiB,EAAa,CAEV,GAAuB,cADDoB,EAAAA,EAAAA,IAAS,CAACpB,KACpBS,OAAiB,CAC3BX,QAAQyB,IAAI,qBAAqB0L,GAChCrJ,IACD4J,EAAW,CAAEC,QAAS,oCAAqCrK,KAAM,YACjE,MAAMqL,EAAmBC,SAAShB,EAAe,IAAM,EACvDC,EAAiBc,GACjBb,eAAeG,QAAQ,gBAAiBU,EAC1C,MACEjB,EAAW,CAAEC,QAAS,kDAAmDrK,KAAM,SAErF,CACJ,CAAE,MAAOvD,GACLC,QAAQD,MAAM,SAAUA,GACxB2N,EAAW,CAAEC,QAAS,uCAAwCrK,KAAM,SACxE,CACA4C,IACAsH,GAAY,EAAK,EAqF+B5K,SAAC,uBAKhD,E,uCCrHL,MAwHA,GAxHiBL,IAAoE,IAAnE,UAAE4K,EAAS,aAAEjN,EAAY,SAAE2O,EAAQ,UAAExB,EAAS,YAAEvJ,GAAavB,EAC7E,MAAOwJ,EAAMuB,GAAWxD,EAAAA,UAAe,IAChCyD,EAAUC,IAAetJ,EAAAA,EAAAA,WAAS,IAElCuJ,EAASC,IAAcxJ,EAAAA,EAAAA,UAAS,CAAEyJ,QAAS,GAAIrK,KAAM,aACrDsK,EAAeC,IAAoB3J,EAAAA,EAAAA,UAAS4J,eAAexO,QAAQ,kBAAoB,GAwBxF4G,EAAcA,KAClB6H,YAAW,KACTP,GAAY,GACZF,GAAQ,EAAM,GACb,IAAK,EAkBV,OAfAU,EAAAA,EAAAA,YAAU,KAGR,GACC,CAAC9N,KAEJ8N,EAAAA,EAAAA,YAAU,KAERH,EAAiBgB,GACjBf,eAAeG,QAAQ,gBAAiBY,EAAS,GAGhD,CAACA,KAIFnM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLtD,QApDa8K,IAAMZ,GAAQ,GAqD3BzK,UAAW,oBAAoB4K,EAAQnK,QAAqB,UAAbuL,IAAuBjM,UAEtEE,EAAAA,EAAAA,KAACgM,GAAAA,EAAW,CAAC9J,MAAM,UAAUC,KAAM,QAGrCnC,EAAAA,EAAAA,KAACgE,GAAAA,EAAK,CACJiF,KAAMA,EACNM,QAASnG,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBtD,UAE1CE,EAAAA,EAAAA,KAACsL,GAAAA,EAAG,CAACvL,UAAU,yDAAyD2F,GAAI,CAAEmE,MAAO,KAAM/J,UACzFF,EAAAA,EAAAA,MAAC6F,EAAAA,EAAU,CAACX,GAAG,oBAAoBjB,QAAQ,KAAK0H,UAAU,KAAIzL,SAAA,EAC5DE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,wDAAuDD,UACpEF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,KAACiM,GAAAA,EAAY,CAAC/J,MAAM,UAAUC,KAAM,YAI1CnC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBD,SACjB,QAAdyK,IACCvK,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SACG,aAAaiM,YAKtB/L,EAAAA,EAAAA,KAAC+J,GAAAA,EAAU,CACT0B,KAAK,MACLvJ,MAAM,UACN5B,QAAS8C,EACT,aAAW,QAAOtD,UAElBE,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CAAC9H,MAAM,UAAUC,KAAM,WAGrCvC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAG3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAAA,UAAAF,UAAQE,EAAAA,EAAAA,KAAA,OAAKsE,IAAKoH,GAAAA,EAAWlH,IAAI,iBAAuBxE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kBAAiBD,SAAC,cAC9FF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,aAAeC,EAAAA,EAAAA,KAAA,OAAKsE,IAAKqH,GAAcnH,IAAI,kBAAiBxE,EAAAA,EAAAA,KAAA,MAAID,UAAU,gBAC5FH,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAAA,UAAAF,UAAQE,EAAAA,EAAAA,KAAA,OAAKsE,IAAK4H,GAAAA,EAAgB1H,IAAI,sBAA4BxE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,sBAE9EE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,4DAKTF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCE,EAAAA,EAAAA,KAAA,UAAQM,QAvGcnE,UAChC,IACE,GAAIiB,EAAc,CAEhB,GAAuB,cADDa,EAAAA,EAAAA,IAAQ,CAACb,KACnBS,OAAiB,CAC3BmD,IACA4J,EAAW,CAAEC,QAAS,oCAAqCrK,KAAM,YACjE,MAAMqL,EAAmBC,SAAShB,EAAe,IAAM,EACvDC,EAAiBc,GACjBb,eAAeG,QAAQ,gBAAiBU,EAC1C,MACEjB,EAAW,CAAEC,QAAS,kDAAmDrK,KAAM,SAEnF,CACF,CAAE,MAAOvD,GACP2N,EAAW,CAAEC,QAAS,uCAAwCrK,KAAM,SACtE,CACA4C,IACAsH,GAAY,EAAK,EAqFoC5K,SAAC,4BAC5CE,EAAAA,EAAAA,KAACmM,GAAiB,CAACjC,OAAQO,EAAUN,OAAQ,CAAiC,gBAKrF,E,uFCzHP,MAAMiC,GAAgB3M,IAAkB,IAAjB,QAAE8J,GAAS9J,EAChC,OACEG,EAAAA,EAAAA,MAAA,OAAKc,MAAO,CAAE2L,QAAS,QAASvM,SAAA,CAAC,0BAE/BE,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CAACtJ,MAAO,CAAE2I,OAAQ,UAAWiD,SAAU,WAAYC,IAAK,MAAOC,MAAO,OAASlM,QAASiJ,MAC9F,EAIJkD,GAAiB7L,IAA+B,IAA9B,QAAE2I,EAAO,YAAEmD,GAAa9L,EAC9C,OACEhB,EAAAA,EAAAA,MAAA,OAAKc,MAAO,CAAE2L,QAAS,QAASvM,SAAA,CAC9B4M,GACA1M,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CAACtJ,MAAO,CAAE2I,OAAQ,UAAWiD,SAAU,WAAYC,IAAK,MAAOC,MAAO,OAASlM,QAASiJ,MAC9F,EAIJoD,GAAeC,IAAkB,IAAjB,QAAErD,GAASqD,EAC/B,OACEhN,EAAAA,EAAAA,MAAA,OAAKc,MAAO,CAAE2L,QAAS,QAASvM,SAAA,CAAC,yBAE/BE,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CAACtJ,MAAO,CAAE2I,OAAQ,UAAWiD,SAAU,WAAYC,IAAK,MAAOC,MAAO,OAASlM,QAASiJ,MAC9F,EA+GV,GA3GoBsD,IAAmC,IAAlC,aAAEzP,EAAY,YAACiG,GAAawJ,EAC/C,MAAOrE,EAAUC,IAAerH,EAAAA,EAAAA,UAAS,OAClCF,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,OAC9C0L,EAAeC,IAAoB3L,EAAAA,EAAAA,UAAS,KAC1CsL,EAAaM,IAAkB5L,EAAAA,EAAAA,UAAS,IAsC3CgC,EAAcA,KAClBqF,EAAY,MACZtH,EAAkB,KAAK,EAGnBjD,EAAU,CACd,CAAEgC,MAAO,SAAWqD,MAAMvD,EAAAA,EAAAA,KAACiN,GAAAA,EAAI,CAAC/K,MAAM,UAAUC,KAAM,KAAQoJ,WAAWvL,EAAAA,EAAAA,KAACoM,GAAa,CAAC7C,QAASnG,KACjG,CAAElD,MAAO,UAAWqD,MAAMvD,EAAAA,EAAAA,KAACkN,GAAAA,EAAY,CAAChL,MAAM,UAAUC,KAAM,KAAOoJ,WAAWvL,EAAAA,EAAAA,KAACyM,GAAc,CAAClD,QAASnG,EAAasJ,YAAaA,KACnI,CAAExM,MAAO,QAASqD,MAAMvD,EAAAA,EAAAA,KAACmN,GAAAA,EAAG,CAACjL,MAAM,UAAUC,KAAM,KAAOoJ,WAAWvL,EAAAA,EAAAA,KAAC2M,GAAY,CAACpD,QAASnG,KAC5F,CAAElD,MAAO,YAAaqD,MAAMvD,EAAAA,EAAAA,KAACoN,GAAAA,EAAM,CAAClL,MAAM,UAAUC,KAAM,OAG5D,OACEvC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAC+J,GAAAA,EAAU,CACT,aAAW,OACXjF,GAAG,cACH,gBAAe0D,EAAW,iBAAcW,EACxC,gBAAeX,EAAW,YAASW,EACnC,gBAAc,OACd7I,QAAU8I,GAAUX,EAAYW,EAAMnE,eAAenF,UAErDE,EAAAA,EAAAA,KAACqN,GAAAA,EAAiB,CAAClL,KAAM,GAAID,MAAM,eAErClC,EAAAA,EAAAA,KAACsN,GAAAA,EAAI,CACHxI,GAAG,YACH0D,SAAUA,EACVS,KAAMC,QAAQV,GACde,QAASnG,EACTwG,WAAY,CACVlJ,MAAO,CACL6M,aAAc,oBACd1D,MAAO,QACPwC,QAAS,MAEXvM,SAED5B,EAAQmB,KAAK+C,IACZxC,EAAAA,EAAAA,MAAC4N,GAAAA,EAAQ,CAACzN,UAAU,2CAA8DO,QAAU8I,GA1DhFjN,OAAOiN,EAAOhH,KAChC,GAAqB,cAAjBA,EAAOlC,MACT,IACEhD,QAAQyB,IAAI,uBACOY,EAAAA,EAAAA,IAAmBnC,GAEtCiG,IACAD,GACF,CAAE,MAAOnG,GACPC,QAAQD,MAAM,iCAAkCA,GAEhD8P,EAAiB,GACnB,MAEAtE,EAAYW,EAAMnE,eAClB9D,EAAkBiB,EAEpB,EAyC4GqL,CAAYrE,EAAOhH,GAAQtC,SAAA,CAC9HsC,EAAOlC,MACPkC,EAAOmB,OAF0DnB,EAAOlC,WAM9EgB,GAAkBA,EAAehB,QAChCF,EAAAA,EAAAA,KAAC0H,EAAAA,GAAO,CACNuB,KAAMC,QAAQV,GACdA,SAAUA,EACVe,QAASnG,EACToG,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,UACZ5J,SAEDoB,EAAeqK,cAGnB,E,oJC1IP,MAyCA,GAzCqB9L,IAAyC,IAAxC,WAAEiO,EAAU,oBAACC,GAAqBlO,EACtD,MAAOmO,EAAOC,IAAYzM,EAAAA,EAAAA,UAAS,KAC5B0M,EAAKC,IAAU3M,EAAAA,EAAAA,UAAS,MAG3B4M,EAAcC,IAClBJ,EAASI,GACT,MAAMC,EAAeR,EAAW,GAAGS,QAAQjH,GAClCA,EAAKkH,OAAO7N,KAAK8N,cAAcC,SAASL,EAAYI,iBAG7DV,EAAoBO,GACA,KAAhBD,GACFF,EAAO,KACT,EAUA,OACEnO,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAOO,QAASA,IAAM0N,EAAWJ,GAAO9N,UACtDE,EAAAA,EAAAA,KAACuO,GAAAA,EAAM,CAACrM,MAAM,UAAUC,KAAM,QAEhCnC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLuF,YAAY,SACZpD,MAAOiL,EACP7I,SAhBmBqE,IACzByE,EAASzE,EAAMnD,OAAOtD,OACK,KAAvByG,EAAMnD,OAAOtD,OACfoL,EAAO,KACT,EAaMS,QAASA,IAAMR,EAAWJ,IACrBE,KAVCA,EAYJ,E,iDCpCV,MA4HA,GA5HwBrO,IAAgC,IAA/B,YAAEgP,EAAW,UAAEpE,GAAU5K,EAChD,MAAOiP,EAAeC,IAAoBvN,EAAAA,EAAAA,UAAS,IAC7CwN,GAAcC,EAAAA,EAAAA,QAAO,OACpBC,EAAWC,IAAgB3N,EAAAA,EAAAA,UAAS,OACpC4N,EAASC,IAAc7N,EAAAA,EAAAA,UAAS,OAChC8N,EAAYC,IAAiB/N,EAAAA,EAAAA,WAAS,IACtCgO,EAAsBC,IAA2BjO,EAAAA,EAAAA,UAAS,KAEjE8J,EAAAA,EAAAA,YAAU,KACR,MAAMoE,EAAc,IAAInJ,KAClBoJ,EAAgB,GAAGD,EAAYzI,kBAAkByI,EAAYE,WAAa,GAAGjR,WAAWkR,SAAS,EAAG,QAAQH,EAAYjJ,UAAU9H,WAAWkR,SAAS,EAAG,OAC/JJ,EAAwBE,EAAc,GACrC,KAMHrE,EAAAA,EAAAA,YAAU,KACR,GAA6B,IAAzBwD,EAAcxG,OAAc,CAC9B,MAAM4G,EAAYJ,EAAc,GAC1BM,EAAUN,EAAc,GAC9BK,EAAaD,GACbG,EAAWD,EACb,IACC,CAACN,IAEJ,MAsCMgB,EAAmB,CACvBC,WAAY,QACZC,KAAM,QACNC,QAAQ,EACRC,YAAa,SAASC,EAAMC,EAAMC,EAAIC,GAChCC,KAAKC,SAAW,IAChBF,EAAQG,WAAa,8BAChBF,KAAKC,SAAW,MACrBF,EAAQG,WAAa,mCAC7B,GAiCA,OA9BAnF,EAAAA,EAAAA,YAAU,KAER,GACC,CAACgE,KAEJhE,EAAAA,EAAAA,YAAU,KACR,GAAK4D,GAAcE,GAIZ,GAAIF,GAAaE,EAAS,CAC/B,MAAMM,EAAc,IAAInJ,KAClBiJ,EAAuB,GAAGE,EAAYzI,kBAAkByI,EAAYE,WAAa,GAAGjR,WAAWkR,SAAS,EAAG,QAAQH,EAAYjJ,UAAU9H,WAAWkR,SAAS,EAAG,OAEhKa,EAAa,MADC,GAAGxB,EAAUyB,cAAcC,MAAM,KAAK,QAAQxB,EAAQuB,cAAcC,MAAM,KAAK,iBAClDpB,WAC3CqB,EAAgBhP,SAASiP,cAAc,qBAC7C,GAAID,EAAe,CACjB,MAAME,EAAoBlP,SAASiP,cAAc,eACjD,GAAIC,EACFA,EAAkBN,UAAYC,MACzB,CACL,MAAMM,EAAYnP,SAASoP,cAAc,OACzCD,EAAU7Q,UAAY,aACtB6Q,EAAUP,UAAYC,EACtBG,EAAcK,WAAWC,aAAaH,EAAWH,EAAcO,YACjE,CACF,CACF,MArB4B,CAC1B,MAAM1B,EAAc,IAAInJ,KACxB4I,EAAaO,GACbL,EAAWK,EACb,CAiBA,GACC,CAACR,EAAWE,KAGbpP,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAEEE,EAAAA,EAAAA,KAACiR,GAAAA,EAAS,CACR/S,QAASwR,EACT/M,MAAO+L,EACP3J,SAnGgB2J,IACpBC,EAAiBD,EAAc,EAmG3BwC,IAAKtC,KAEPhP,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,YAAYO,QAhEf6Q,KACnBxC,EAAiB,IACjBI,EAAa,MACbE,EAAW,MACXE,GAAc,GAEd,MAAMwB,EAAoBlP,SAASiP,cAAc,iBAC7CC,IACFA,EAAkBS,YAAc,GAAGhC,IACrC,EAuDwDtP,SAAC,YACrDE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,WAAWO,QA5Ef+Q,KAfIC,MACD7P,SAASiP,cAAc,qBAA5C,MACMC,EAAoBlP,SAASiP,cAAc,iBAC7C5B,GAAaE,GACX2B,IACFA,EAAkBS,YAAc,GAAGtC,EAAUyB,cAAcC,MAAM,KAAK,QAAQxB,EAAQuB,cAAcC,MAAM,KAAK,KAMnH,EAKAc,GACAnC,GAAc,GACdV,EAAY,CAAEK,YAAWE,YACzB,MAAMuC,EAAiB9P,SAASiP,cAAc,2DAC1Ca,IACFA,EAAeH,YAAc,GAAGtC,EAAUyB,cAAcC,MAAM,KAAK,QAAQxB,EAAQuB,cAAcC,MAAM,KAAK,KAC9G,EAqEsD1Q,SAAC,eAEjD,E,6FChHV,MA6DA,GA7DyB0R,KACvB,MAAOvI,EAAMuB,IAAWpJ,EAAAA,EAAAA,WAAS,GAE3BgC,EAAcA,IAAMoH,GAAQ,GAC5BiH,GAAWC,EAAAA,GAAAA,MAQjB,OACE9R,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACtD,QAZO8K,IAAMZ,GAAQ,GAYAzK,UAAU,gBAAeD,UACpDF,EAAAA,EAAAA,MAAA,OAAKG,UAAW,wBAAwBD,SAAA,CAAC,SAClCE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CAAC7B,MAAM,OAAOC,KAAM,WAGpCnC,EAAAA,EAAAA,KAACgE,GAAAA,EAAK,CACJiF,KAAMA,EACNM,QAASnG,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBtD,UAC1CE,EAAAA,EAAAA,KAACsL,GAAAA,EAAG,CAACvL,UAAU,oCAAoC2F,GAAI,CAAEmE,MAAO,KAAM/J,UACpEE,EAAAA,EAAAA,KAACyF,EAAAA,EAAU,CAACX,GAAG,oBAAoB/E,UAAW,GAAI8D,QAAQ,KAAK0H,UAAU,KAAIzL,UAC3EF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iFAAgFD,SAAA,EAC7FF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,gBAAeD,SAAA,EACzBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,KAAC2R,GAAAA,EAAkB,CAACzP,MAAM,UAAUC,KAAM,QAEhDnC,EAAAA,EAAAA,KAAA,MAAAF,SAAI,yCAENE,EAAAA,EAAAA,KAAC+J,GAAAA,EAAU,CACT0B,KAAK,MACLvJ,MAAM,UACN5B,QAAS8C,EACT,aAAW,QAAOtD,UAClBE,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CAAC9H,MAAM,UAAUC,KAAM,WAGrCvC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,OAAKsE,IAAKsN,GAAapN,IAAI,iBAC3B5E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,2BACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,kOAGLF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,SAASO,QAAS8C,EAAYtD,SAAC,uBACjDE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAU,OAAOO,QA7CrBuR,KAEhBJ,EAAS,6CACTrO,GAAa,EA0C2CtD,SAAC,mCAMtD,ECmvBP,GAzxBoBL,IAYb,IAZc,KACnBqS,EAAI,WACJC,EAAU,mBACVC,EAAkB,kBAClB/S,EAAiB,UACjBoL,EAAS,eACT4H,EAAc,iBACdC,EAAgB,YAChBC,EAAW,YACXC,EAAW,gBACXC,EAAe,YACfC,GACD7S,EACC,MAAO8S,EAAaC,IAAkBpR,EAAAA,EAAAA,UAAS,IACxCqR,EAAcC,IAAmBtR,EAAAA,EAAAA,UAAS,IAC1CuR,EAAeC,IAAoBxR,EAAAA,EAAAA,UAAS,KAC5CyR,EAAeC,IAAoB1R,EAAAA,EAAAA,WAAS,IAC5C2R,EAAeC,IAAoB5R,EAAAA,EAAAA,UAAS,KAC5C6R,EAAeC,IAAoB9R,EAAAA,EAAAA,UAAS,KAC5CuJ,EAASC,IAAcxJ,EAAAA,EAAAA,UAAS,CAAEyJ,QAAS,GAAIrK,KAAM,aACrDsK,EAAeC,IAAoB3J,EAAAA,EAAAA,UACxC4J,eAAexO,QAAQ,kBAAoB,IAEtCiO,EAAUC,IAAetJ,EAAAA,EAAAA,WAAS,GACnC+R,GAAoBtE,EAAAA,EAAAA,QAAO,MA6D3BuE,EAAkBb,EAAYc,eAAe,QAAS,CAC1DC,sBAAuB,EACvBC,sBAAuB,IAEnBC,EAAmBf,EAAaY,eAAe,QAAS,CAC5DC,sBAAuB,EACvBC,sBAAuB,KAIzBrI,EAAAA,EAAAA,YAAU,KACR,GAAI6G,EAAY,CACd,MAAM0B,EAAyB1B,EAAW2B,QACxC,CAACC,EAAOC,IAASD,EAAQC,EAAKC,YAC9B,GAEFnB,EAAgBe,EAClB,IACC,CAAC1B,KAGJ7G,EAAAA,EAAAA,YAAU,KACR,GAAIb,EAAW,CACb,MAAMyJ,EAAwBzJ,EAAUqJ,QACtC,CAACC,EAAOC,IAASD,EAAQC,EAAKG,QAC9B,GAEFvB,EAAesB,EACjB,IACC,CAACzJ,KA6BJa,EAAAA,EAAAA,YAAU,KACR8I,IAAoB,GACnB,CAACf,IAEJ,MAAMgB,EAAY,IACb,IAAIC,IAAI7J,GAAaA,EAAUhL,KAAK6H,GAASA,EAAKiN,QAAQC,cAEzDC,EAAWC,MAAMC,KACrB,IAAIL,IAAI7J,GAAaA,EAAUhL,KAAK6H,GAASA,EAAKrJ,WAE9C2W,EAAcF,MAAMC,KACxB,IAAIL,IAAI7J,GAAaA,EAAUhL,KAAK6H,GAASA,EAAKkH,OAAO7N,SAErDkU,EAAYH,MAAMC,KACtB,IAAIL,IAAI7J,GAAaA,EAAUhL,KAAK6H,GAASA,EAAKiN,QAAQO,eAEtD5V,EAAOwV,MAAMC,KACjB,IAAIL,IAAI7J,GAAaA,EAAUhL,KAAK6H,GAASA,EAAKpI,KAAKyB,SAEnDb,EAAa4U,MAAMC,KACvB,IAAIL,IAAI7J,GAAaA,EAAUhL,KAAK6H,GAASA,EAAKpI,KAAKY,eAOnDiV,EAAgBpX,KAAKC,UAAUyW,EAAW,KAAM,GAChDW,EAAerX,KAAKC,UAAU6W,EAAU,KAAM,GAC9CQ,EAAWtX,KAAKC,UAAUsB,EAAM,KAAM,GACtCgW,EAAiBvX,KAAKC,UAAUkC,EAAY,KAAM,GAClDqV,EAAiBxX,KAAKS,MAAM2W,GAC5BK,EAAgBzX,KAAKS,MAAM4W,GAC3BK,EAAkB1X,KAAKC,UAAUgX,EAAa,KAAM,GACpDU,GAAmB3X,KAAKS,MAAMiX,GAC9BE,GAAgB5X,KAAKC,UAAUiX,EAAW,KAAM,GAChDW,GAAiB7X,KAAKS,MAAMmX,IAC5BE,GAAY9X,KAAKS,MAAM6W,GACvBS,GAAsB/X,KAAKS,MAAM8W,GAEjCS,GAAwBC,IAC5B5C,GAAkB6C,GACZA,EAAkBnH,SAASkH,GACtBC,EAAkBtH,QAAQjH,GAASA,IAASsO,IAE5C,IAAIC,EAAmBD,IAEhC,EAGEE,GAAeA,KACnB1C,EAAiBL,GACjBG,GAAiB,GACjB,MAAM5E,EAAe4D,EAAK,GAAG3D,QAAQjH,GAEjCyL,EAAcrE,SAASpH,EAAKkH,OAAO7N,OACnCoS,EAAcrE,SAASpH,EAAKrJ,UAGhCmU,EAAmB9D,GACnB4E,GAAkBD,EAAc,EAG5B8C,GAAoBA,KACxB/C,EAAiB,IAEjBE,GAAiB,EAAM,GAGlBhF,GAAKC,KAAU3M,EAAAA,EAAAA,UAASuT,GAEzBiB,GAAqBA,KACzB,MACMC,EAAe,CACnBC,UAAW,GACXC,OAAQ,GACRC,YAAa,GACbC,UAAW,GACXC,UANc5B,MAAM6B,QAAQlD,IAA2C,IAAzBA,EAAc/K,OAMvC,GAAK,CAAC+K,IAkB7B,OAfAN,EAAchR,SAASuF,IACjB6N,EAAezG,SAASpH,GAC1B2O,EAAwB,UAAEO,KAAKlP,GACtB8N,EAAc1G,SAASpH,GAChC2O,EAAaE,OAAOK,KAAKlP,GAChBgO,GAAiB5G,SAASpH,GACnC2O,EAA0B,YAAEO,KAAKlP,GACxBkO,GAAe9G,SAASpH,IAExBmO,GAAU/G,SAASpH,GAD5B2O,EAAwB,UAAEO,KAAKlP,GAGtB+L,EAAc3E,SAASpH,IAChC2O,EAAwB,UAAEO,KAAKlP,EACjC,IAEK2O,CAAY,GAiCdQ,GAAaC,KAAkBlV,EAAAA,EAAAA,UAAS,IAEzCmV,GAAqBnN,IACzBkN,GAAelN,EAAMnD,OAAOtD,MAAM,EAG9B6T,GAAsBtB,GAAiB/G,QAAQqH,GACnDA,EAASnH,cAAcC,SAAS+H,GAAYhI,iBAExCoI,GAAoB1B,EAAe5G,QAAQqH,GAC/CA,EAASnH,cAAcC,SAAS+H,GAAYhI,iBAIxC2F,GAAqBA,KACzB,MAAM6B,EAAeD,KACrB,OACE5V,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,SAC7B4W,OAAOC,QAAQd,GAAcxW,KAAIuB,IAAA,IAAEgW,EAAOC,GAAMjW,EAAA,OAC/CZ,EAAAA,EAAAA,KAAA,OAAAF,SACG+W,EAAM3O,OAAS,IACdlI,EAAAA,EAAAA,KAAA,OAAKD,UAAU,uBAAsBD,UACnCF,EAAAA,EAAAA,MAAA,MAAIG,UAAW6W,EAAM9W,SAAA,CAClB+W,EAAMxX,KAAI,CAAC6H,EAAMC,KAChBvH,EAAAA,EAAAA,MAAA,MAAIG,UAAU,gCAA+BD,SAAA,CAC1CoH,GACDlH,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,OACR1B,KAAK,KACLzB,MAAO,CAAEoW,WAAY,OACrBxW,QAASA,KAAMyW,OAxDZvB,EAwD4BtO,EAvDnD0L,GAAkB6C,GAChBA,EAAkBtH,QAAQjH,GAASA,IAASsO,MAE9CtC,GAAkBuC,GAChBA,EAAkBtH,QAAQjH,GAASA,IAASA,WAE9C8K,EAAmB3H,GAPImL,KAwDkC,EAAA1V,UAErCE,EAAAA,EAAAA,KAACgI,EAAAA,EAAC,CAAC9F,MAAM,UAAUC,KAAM,SARsBgF,MAYrDnH,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,OACR1B,KAAK,KACLzB,MAAO,CAAEoW,WAAY,OACrBxW,QAASA,KAAM0W,OAxDNC,EAwDwBL,EAvDjD5E,EAAmB3H,GACnBuI,GAAkB6C,GAChBA,EAAkBtH,QAAQjH,IACL0O,KAAqBqB,GACrB3I,SAASpH,YAIhCgM,GAAkBgE,GAChBA,EAAkB/I,QACfjH,IAAU0O,KAAqBqB,GAAW3I,SAASpH,OAX/B+P,KAwD+B,EAAAnX,UAExCE,EAAAA,EAAAA,KAACgI,EAAAA,EAAC,CAAC9F,MAAM,UAAUC,KAAM,aAvBzByU,EA4BJ,KAEJ,EAuBV,OAlBA1L,EAAAA,EAAAA,YAAU,KACR,MAAMiM,EAAsB/N,IAExB+J,EAAkBiE,UACjBjE,EAAkBiE,QAAQC,SAASjO,EAAMnD,UAErCmD,EAAMnD,OAAOqR,QAAQ,2BACxBxE,GAAiB,GAErB,EAIF,OADArR,SAAS8V,iBAAiB,YAAaJ,GAChC,KACL1V,SAAS+V,oBAAoB,YAAaL,EAAmB,CAC9D,GACA,KAGDvX,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKD,UAAW,GAAGoS,uDAAiErS,SAC1D,IAAvBsS,EAAYlK,QACXlI,EAAAA,EAAAA,KAACyX,GAAAA,EAAS,CAACC,OAAK,EAAA5X,UACdF,EAAAA,EAAAA,MAAC+X,GAAAA,EAAG,CAACjX,MAAO,CAAEkX,QAAS,OAAQC,WAAY,UAAW/X,SAAA,EACpDF,EAAAA,EAAAA,MAACkY,GAAAA,EAAG,CACFpX,MAAO,CACLqX,UAAW,OACXH,QAAS,OACTC,WAAY,UACZ/X,SAAA,EAEFE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLsN,IAAKiC,EACLtP,QAAQ,OACRvD,QAvHQ0X,KACxBlF,GAAkBD,EAAc,EAsHW/S,UAGzBE,EAAAA,EAAAA,KAACiY,GAAAA,EAAM,CAAC/V,MAAM,UAAUC,KAAM,UAMpCnC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,KAACkY,GAAY,CACXvK,oBAAqBqE,EACrBtE,WAAYoE,UAIlB9R,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAAhY,UACFE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACmY,EAAAA,GAAO,CAACC,GAAG,IAAGtY,SAAC,aAElBE,EAAAA,EAAAA,KAAA,MAAAF,SACGwS,GAAeA,EAAY+F,aAAe/F,EAAY+F,YAAYC,gBACjE1Y,EAAAA,EAAAA,MAACuY,EAAAA,GAAO,CAACpY,UAAU,YAAYqY,GAAG,mCAAkCtY,SAAA,CAAC,QAC/DE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CAAC7B,MAAM,OAAOC,KAAM,SAGjCnC,EAAAA,EAAAA,KAACwR,GAAgB,cAM3BxR,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAACpX,MAAO,CAAEqX,UAAW,SAAUjY,SAChCuK,GAAaA,EAAUnC,OAAS,GAC/BtI,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAAC,QAC5B,KACNF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,UAASD,SAAA,CAEtBiS,EAAW7J,QACVtI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAE,IAAEiS,EAAW7J,WAEftI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAGuK,EAAUnC,OAAO,OACpB,WAEW,KACftI,EAAAA,EAAAA,MAAA,UAAQG,UAAU,UAASD,SAAA,CAAC,IACH,OAArB0T,QAAkDrK,IAArBqK,GAAkCA,EAAmB,GAClFxT,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SAAG0T,KAEHxT,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SAAGsT,WAKTxT,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAAC,UAC5BE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,UAASD,SAAC,YAAe,KAC/CE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,UAASD,SAAC,qBAOtCE,EAAAA,EAAAA,KAACyX,GAAAA,EAAS,CAACC,OAAK,EAAA5X,UACdF,EAAAA,EAAAA,MAAC+X,GAAAA,EAAG,CAACjX,MAAO,CAAEkX,QAAS,OAAQC,WAAY,UAAW/X,SAAA,EACpDF,EAAAA,EAAAA,MAACkY,GAAAA,EAAG,CACFpX,MAAO,CACLqX,UAAW,OACXH,QAAS,OACTC,WAAY,UACZ/X,SAAA,EAEFF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,UAASD,SAAA,CAAC,YAAUoS,MACpCtS,EAAAA,EAAAA,MAAA,MAAIG,UAAU,YAAWD,SAAA,EACvBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAACgE,EAAAA,EAAM,CAACC,QAAQ,aAAavD,QA/XtBnE,UACvB,IACE,GAAI8C,EAAmB,CAErB,SADsBO,EAAAA,EAAAA,IAAkBP,GAC3B,CACXoT,EAAgB,IAChBJ,IACAvH,GAAY,GACZE,EAAW,CACTC,QAAS,oCACTrK,KAAM,YAER,MAAMqL,EAAmBC,SAAShB,EAAe,IAAM,EACvDC,EAAiBc,GACjBb,eAAeG,QAAQ,gBAAiBU,EAC1C,MACEjB,EAAW,CACTC,QAAS,kDACTrK,KAAM,SAGZ,CACF,CAAE,MAAOvD,GACP2N,EAAW,CACTC,QAAS,uCACTrK,KAAM,SAEV,GAoWuEV,SAAA,CAAC,QAEtDE,EAAAA,EAAAA,KAACqL,GAAAA,EAAO,CAACnJ,MAAM,UAAUC,KAAM,SAEjCnC,EAAAA,EAAAA,KAACmM,GAAiB,CAChBjC,OAAQO,EACRN,OACE,CACiC,QAKvCvK,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACG,KACDF,EAAAA,EAAAA,MAACgE,EAAAA,EAAM,CAACC,QAAQ,YAAYvD,QA3atBnE,UACtB,IACE,GAAI8C,EAAmB,CAErB,SADsBD,EAAAA,EAAAA,IAAkBC,GAC3B,CACXoT,EAAgB,IAChBJ,IACAvH,GAAY,GACZE,EAAW,CACTC,QAAS,oCACTrK,KAAM,YAER,MAAMqL,EAAmBC,SAAShB,EAAe,IAAM,EACvDC,EAAiBc,GACjBb,eAAeG,QAAQ,gBAAiBU,EAC1C,MACEjB,EAAW,CACTC,QAAS,kDACTrK,KAAM,SAGZ,CACF,CAAE,MAAOvD,GACP2N,EAAW,CACTC,QAAS,uCACTrK,KAAM,SAEV,GAgZqEV,SAAA,CAAC,OAEpDE,EAAAA,EAAAA,KAACgM,GAAAA,EAAW,CAAC9J,MAAM,UAAUC,KAAM,SAErCnC,EAAAA,EAAAA,KAACmM,GAAiB,CAChBjC,OAAQO,EACRN,OACE,CACiC,QAKvCnK,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,cAAa/D,UAC3BE,EAAAA,EAAAA,KAACuY,GAAAA,EAAQ,CAACrW,MAAM,UAAUC,KAAM,gBAKxCnC,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAAhY,UACFE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,UAC7BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACmY,EAAAA,GAAO,CAACC,GAAG,SAAQtY,SAAC,aAEvBE,EAAAA,EAAAA,KAAA,MAAAF,SACGwS,GAAeA,EAAY+F,aAAe/F,EAAY+F,YAAYC,gBACjE1Y,EAAAA,EAAAA,MAACuY,EAAAA,GAAO,CAACpY,UAAU,YAAYqY,GAAG,mCAAkCtY,SAAA,CAAC,QAC/DE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CAAC7B,MAAM,OAAOC,KAAM,SAGjCnC,EAAAA,EAAAA,KAACwR,GAAgB,cAM3BxR,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAACpX,MAAO,CAAEqX,UAAW,SAAUjY,SAChCuK,GAAaA,EAAUnC,OAAS,GAC/BtI,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAAC,QAC5B,KACNF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,UAASD,SAAA,CAEtBiS,EAAW7J,QACVtI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAE,IAAEiS,EAAW7J,WAEftI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAGuK,EAAUnC,OAAO,OACpB,WAEW,KACftI,EAAAA,EAAAA,MAAA,UAAQG,UAAU,UAASD,SAAA,CAAC,IACH,OAArB0T,QAAkDrK,IAArBqK,GAAkCA,EAAmB,GAClFxT,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SAAG0T,KAEHxT,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SAAGsT,WAKTxT,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAAC,UAC5BE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,UAASD,SAAC,YAAe,KAC/CE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,UAASD,SAAC,sBAQzC+S,IACCjT,EAAAA,EAAAA,MAAC4Y,GAAAA,EAAI,CACH1T,GAAG,yBACH2T,UAAW3K,GACX1N,SAAWsY,GAAM3K,GAAO2K,GACxB3Y,UAAU,oBAAmBD,SAAA,EAE7BE,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAG,CACFC,SAAS,YACTjR,OACE/H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAC6Y,GAAAA,EAAY,CAAC3W,MAAM,UAAUC,KAAM,KAAM,iBAE7CrC,UAEDE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAAC8Y,GAAe,CAACzO,UAAWA,EAAWoE,YApa1BsK,IAOvB,IAAI7R,EAAO,CAAC,GANM6R,EAAKjK,UACnBiK,EAAKjK,UAAUyB,cAAcC,MAAM,KAAK,GACxC,QACYuI,EAAK/J,QACjB+J,EAAK/J,QAAQuB,cAAcC,MAAM,KAAK,GACtC,MAEJwC,GAAkBgG,GACT,IAAIA,EAAM9R,KAEnBgM,EAAiBhM,GAEjB4L,GAAiB,GACjB,MAAM5E,EAAe4D,EAAK,GAAG3D,QAAQjH,GAEjCyL,EAAcrE,SAASpH,EAAKkH,OAAO7N,OACnCoS,EAAcrE,SAASpH,EAAKrJ,SAC5BoV,EAAc3E,SAAS,GAAGpH,EAAK4H,eAAe5H,EAAK8H,aAGvDgD,EAAmB9D,EAAa,SAkZ1BlO,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAG,CACFC,SAAS,WACTjR,OACE/H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAACiZ,GAAAA,EAAa,CAAC/W,MAAM,UAAUC,KAAM,KAAM,eAE9CrC,UAEDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGuV,GAAUhW,KAAI,CAACmW,EAAUrO,KACxBnH,EAAAA,EAAAA,KAAA,MAEED,UACE4S,EAAcrE,SAASkH,EAASjV,MAAQ,cAAgB,GACzDT,UAEDE,EAAAA,EAAAA,KAAA,SAAOD,UAAU,iBAAgBD,UAC/BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUD,UACvBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,SAAS,kBAAgB,KAAID,SAAA,EAC1CE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLmC,MAAO6S,EACP/U,QAASkS,EAAcrE,SAASkH,GAChCzQ,SAAUA,IAAMwQ,GAAqBC,MAEvCxV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWD,UACzBE,EAAAA,EAAAA,KAACkZ,EAAAA,EAAK,CAAChX,MAAM,UAAUC,KAAM,QAE/BvC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBD,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,KAAA,UAAAF,SAAS0V,KACTxV,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UAClCE,EAAAA,EAAAA,KAAA,OACED,UAAU,oDACVW,MAAO,CACLC,WAAY,kCAAkC2U,GAAoBnO,oBAAwBmO,GAAoBnO,QAEhH,gBAAemO,GAAoBnO,GACnC,gBAAc,IACd,gBAAc,MAAKrH,UAEnBF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOwV,GAAoBnO,GAAO,eAIxCvH,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAQwV,GAAoBnO,GAAO,oBAnCxCA,MA2CTvH,EAAAA,EAAAA,MAAC+X,GAAAA,EAAG,CAAC5X,UAAU,iEAAgED,SAAA,EAC7EE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAC/X,UAAU,OAAMD,UACnBE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,uBACRvD,QAASqV,GAAkB7V,SAC5B,cAIHE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAAhY,UACFE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,sBAAsBvD,QAASoV,GAAa5V,SAAC,qBAOrEE,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAG,CACFC,SAAS,WACTjR,OACE/H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAACmZ,GAAAA,EAAM,CAACjX,MAAM,UAAUC,KAAM,KAAM,WAEvCrC,UAEDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,+BAA8BD,SAAA,EAC3CE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAMD,UACpBE,EAAAA,EAAAA,KAACuO,GAAAA,EAAM,CAACrM,MAAM,UAAUC,KAAM,QAEhCnC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLuF,YAAY,SACZpD,MAAO0T,GACPtR,SAAUwR,SAGdvW,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,SAC5B2W,GAAkBpX,KAAI,CAACmW,EAAUrO,KAChCnH,EAAAA,EAAAA,KAAA,MAEED,UACE4S,EAAcrE,SAASkH,GAAY,cAAgB,GACpD1V,UAEDF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,iBAAgBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUD,SAAE0V,KAE3BxV,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLmC,MAAO6S,EACP/U,QAASkS,EAAcrE,SAASkH,GAChCzQ,SAAUA,IAAMwQ,GAAqBC,MAEvCxV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWD,UACzBE,EAAAA,EAAAA,KAACkZ,EAAAA,EAAK,CAAChX,MAAM,UAAUC,KAAM,WAf5BgF,QAqBXvH,EAAAA,EAAAA,MAAC+X,GAAAA,EAAG,CAAC5X,UAAU,iEAAgED,SAAA,EAC7EE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAC/X,UAAU,OAAMD,UACnBE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,uBACRvD,QAASqV,GAAkB7V,SAC5B,cAIHE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAAhY,UACFE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,sBAAsBvD,QAASoV,GAAa5V,SAAC,qBAOrEE,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAG,CACFC,SAAS,cACTjR,OACE/H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAACoZ,GAAAA,EAAiB,CAAClX,MAAM,UAAUC,KAAM,KAAM,YAGlDrC,UAEDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,+BAA8BD,SAAA,EAC3CE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAMD,UACpBE,EAAAA,EAAAA,KAACuO,GAAAA,EAAM,CAACrM,MAAM,UAAUC,KAAM,QAEhCnC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLuF,YAAY,SACZpD,MAAO0T,GACPtR,SAAUwR,QAGbC,GAAoBnX,KAAI,CAACmW,EAAUrO,KAClCnH,EAAAA,EAAAA,KAAA,MAEED,UACE4S,EAAcrE,SAASkH,GAAY,cAAgB,GACpD1V,UAEDF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,iBAAgBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUD,SAAE0V,KAC3BxV,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLmC,MAAO6S,EACP/U,QAASkS,EAAcrE,SAASkH,GAChCzQ,SAAUA,IAAMwQ,GAAqBC,MAEvCxV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWD,UACzBE,EAAAA,EAAAA,KAACkZ,EAAAA,EAAK,CAAChX,MAAM,UAAUC,KAAM,WAd5BgF,MAmBTvH,EAAAA,EAAAA,MAAC+X,GAAAA,EAAG,CAAC5X,UAAU,iEAAgED,SAAA,EAC7EE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAC/X,UAAU,OAAMD,UACnBE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,uBACRvD,QAASqV,GAAkB7V,SAC5B,cAIHE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAAhY,UACFE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,sBAAsBvD,QAASoV,GAAa5V,SAAC,qBAOrEE,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAG,CACFC,SAAS,SACTjR,OACE/H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,KAACqZ,GAAAA,EAAW,CAACnX,MAAM,UAAUC,KAAM,KAAM,YAG5CrC,UAEDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGkV,EAAc3V,KAAI,CAACmW,EAAUrO,KAC5BnH,SAAAA,EAAAA,KAAA,MAEED,UACE4S,EAAcrE,SAASkH,GAAY,cAAgB,GACpD1V,UAEDF,EAAAA,EAAAA,MAAA,SAAOG,UAAW,kBAAkByV,IAAW1V,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLmC,MAAO6S,EACPzQ,SAAUA,IAAMwQ,GAAqBC,GACrC/U,QAASkS,EAAcrE,SAASkH,MAElCxV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWD,UACzBE,EAAAA,EAAAA,KAACkZ,EAAAA,EAAK,CAAChX,MAAM,UAAUC,KAAM,QAE/BvC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,EACvBE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,aAAYD,SAAE0V,IAAiB,KAC/CxV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,cAAaD,UAplBzBjC,EAqlBc2X,EAplB7BnL,EAAU8D,QAAQjH,GAASA,EAAKrJ,SAAWA,IAAQqK,iBAkkBvCf,GAnkBGtJ,KA0lBX,KACD+B,EAAAA,EAAAA,MAAC+X,GAAAA,EAAG,CAAC5X,UAAU,iEAAgED,SAAA,EAC7EE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAC/X,UAAU,OAAMD,UACnBE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CACLC,QAAQ,uBACRvD,QAASqV,GAAkB7V,SAC5B,cAIHE,EAAAA,EAAAA,KAAC8X,GAAAA,EAAG,CAAAhY,UACFE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,sBAAsBvD,QAASoV,GAAa5V,SAAC,uBASxEiT,EAAc7K,OAAS,GAAK8L,OAC5B,E,oDCrxBP,MAAMsF,GAAoB7Z,IAAiB,IAAD8Z,EAAAC,EAAAC,EAAA,IAAf,OAAEC,GAAQja,EACnC,MAAMka,GAAK9K,EAAAA,EAAAA,QAAO,MAMlB,OACEjP,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAACga,GAAAA,EAAW,CAACtZ,QANe8I,IAC9BuQ,EAAGvC,QAAQyC,OAAOzQ,EAAM,EAKwB1I,MAAO,CAAE2I,OAAQ,WAAYvJ,SAAA,CAClE,OAAN4Z,QAAM,IAANA,GAAa,QAAPH,EAANG,EAAQ/W,aAAK,IAAA4W,OAAP,EAANA,EAAeO,MAAM,EAAG,GAAGza,KAAI,CAAC0Z,EAAM5R,IACjC,OAAJ4R,QAAI,IAAJA,GAAAA,EAAMgB,WACJ/Z,EAAAA,EAAAA,KAACga,GAAAA,EAAM,CAAaC,MAAW,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,MAAO/X,KAAK,QAAQgY,MAAM,UAA9ChT,IACbnH,EAAAA,EAAAA,KAACga,GAAAA,EAAM,CAAa9Z,MAAW,OAAJ6Y,QAAI,IAAJA,OAAI,EAAJA,EAAMrE,WAAYhU,MAAO,CAAE0Z,SAAU,QAAUjY,KAAK,QAAQgY,MAAM,UAAhFhT,MAEV,OAANuS,QAAM,IAANA,GAAa,QAAPF,EAANE,EAAQ/W,aAAK,IAAA6W,OAAP,EAANA,EAAetR,QAAS,IACvBlI,EAAAA,EAAAA,KAACga,GAAAA,EAAM,CACL9Z,MAAO,KAAIwZ,EAAO/W,MAAMuF,OAAS,GACjCiS,MAAM,SACNhY,KAAK,QACLzB,MAAO,CAAE0Z,SAAU,cAKzBpa,EAAAA,EAAAA,KAACqa,GAAAA,EAAY,CAACta,UAAU,eAAemR,IAAKyI,EAAG7Z,SACtC,OAAN4Z,QAAM,IAANA,GAAa,QAAPD,EAANC,EAAQ/W,aAAK,IAAA8W,OAAP,EAANA,EAAepa,KAAI,CAAC0Z,EAAM5R,KACzBvH,EAAAA,EAAAA,MAAA,OAAiBc,MAAO,CAAE2L,QAAS,SAAUuL,QAAS,OAAQC,WAAY,UAAW/X,SAAA,EACnFE,EAAAA,EAAAA,KAACga,GAAAA,EAAM,CAACC,MAAW,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,MAAOC,MAAM,YAClCna,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEoW,WAAY,UAAWhX,UACnCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,SAAM,OAAJiZ,QAAI,IAAJA,OAAI,EAAJA,EAAM3E,gBAH/BjN,SAQV,EAwfV,GAnfoBvG,IAA4C,IAA3C,YAAE0R,EAAW,UAAEjI,EAAS,UAAEiQ,GAAW1Z,EACxD,MAAO2Z,EAAWC,IAAgBpZ,EAAAA,EAAAA,UAAS,UACpCqZ,EAAeC,IAAoBtZ,EAAAA,EAAAA,UAAS,QAC5CuZ,EAAgBC,IAAqBxZ,EAAAA,EAAAA,UAAS,KAC9C0Q,EAAM+I,IAAWzZ,EAAAA,EAAAA,UAAS,IAE3BoF,EAAcC,IAClB,MAAMH,EAAO,IAAIH,KAAiB,IAAZM,GAMtB,MAAO,GALKH,EAAKD,aACS,IAAIK,KAAKC,eAAe,QAAS,CACzDC,MAAO,UACNL,OAAOD,MACGA,EAAKO,eAC0B,EAGxCiU,EAAcC,IAClBP,EAAaO,GACbL,GAAkBM,GACE,QAAlBA,EAA0B,OAAS,OACpC,EAGGC,EAAkB,CAAC5Q,GAAaA,GAAW6Q,MAAK,CAACC,EAAGC,KACxD,MAAMC,EAASF,EAAEZ,GACXe,EAASF,EAAEb,GAEjB,YAAepR,IAAXkS,QAAmClS,IAAXmS,EACnB,EAGa,QAAlBb,EACKY,EAAOE,cAAcD,OAAQnS,EAAW,CAAEqS,SAAS,IAEnDF,EAAOC,cAAcF,OAAQlS,EAAW,CAAEqS,SAAS,GAC5D,IAGIC,EAAYA,KAChBnB,GAAW,EAGPjX,EAAcA,KAClBiX,GAAW,EAGPoB,EAAkBA,CAAC9S,EAAUxL,KACjC4C,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACEE,EAAAA,EAAAA,KAAC2b,GAAS,CAAC/S,SAAUA,EAAUxL,aAAcA,OAI1Cwe,EAAcvJ,IAAmBjR,EAAAA,EAAAA,UAAS,IAa3Cya,EAAoBD,EAAa1T,QAChC4T,EAASC,IAAc3a,EAAAA,EAAAA,UAAS,CACrC,CACE2Z,MAAO,QACPlR,MAAO,GACPmS,YACEpc,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAcO,QAASA,IAAMwa,EAAW,SAAShb,SAAA,EAC9DE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,UACS,UAAdya,IACCva,EAAAA,EAAAA,KAAA,QAAAF,SACqB,QAAlB2a,GACCza,EAAAA,EAAAA,KAACic,EAAAA,EAAO,CAAC9Z,KAAM,GAAID,MAAM,aAEzBlC,EAAAA,EAAAA,KAACkc,EAAAA,EAAS,CAAC/Z,KAAM,GAAID,MAAM,iBAOrCia,WAAazC,IACX9Z,EAAAA,EAAAA,MAAA,OAAKG,UAAU,uDAAsDD,SAAA,EACnEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,UAAAF,SAAS4Z,EAAO/W,SAChB3C,EAAAA,EAAAA,KAAA,KAAAF,SAAI0G,EAAWkT,EAAO0C,IAAIC,eAE5Brc,EAAAA,EAAAA,KAACsc,EAAAA,GAAI,CAAClE,GAAI,4BAA4BsB,EAAO0C,IAAIrd,YAAYe,UAACE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAAC7D,UAAU,kBAAkB8D,QAAQ,OAAM/D,SAAC,eAKvH,CACEib,MAAO,SACPlR,MAAO,IACPmS,YACEpc,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAcO,QAASA,IAAMwa,EAAW,UAAUhb,SAAA,EAC/DE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,WACS,WAAdya,IACCva,EAAAA,EAAAA,KAAA,QAAAF,SACqB,QAAlB2a,GACCza,EAAAA,EAAAA,KAACic,EAAAA,EAAO,CAAC9Z,KAAM,GAAID,MAAM,aAEzBlC,EAAAA,EAAAA,KAACkc,EAAAA,EAAS,CAAC/Z,KAAM,GAAID,MAAM,iBAOrCia,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,uDAAsDD,UACnEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sCAAqCD,SAAA,EAClDE,EAAAA,EAAAA,KAAA,OAAKD,UAAW2Z,EAAO0C,IAAIG,SAAW,iBAAmB,kBACvDjY,IAAKoV,EAAO0C,IAAIlC,MAChB1V,IAAKkV,EAAO0C,IAAIlC,MAChBxZ,MAAO,CAAE8b,YAAa,UAExBxc,EAAAA,EAAAA,KAAA,QAAAF,SAAO4Z,EAAO/W,gBAQxB,CACEoY,MAAO,YACP0B,UAAU,EACVT,WAAY,YACZG,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OACED,UAAU,yBACVW,MAAO,CAAEgc,WAAY,SAAU3E,UAAW,QAASjY,SAElD4Z,EAAO/W,SAId,CACEoY,MAAO,SACP0B,UAAU,EACVT,YACEpc,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAcO,QAASA,IAAMwa,EAAW,UAAUhb,SAAA,EAC/DE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,WACS,WAAdya,IACCva,EAAAA,EAAAA,KAAA,QAAAF,SACqB,QAAlB2a,GACCza,EAAAA,EAAAA,KAACic,EAAAA,EAAO,CAAC9Z,KAAM,GAAID,MAAM,aAEzBlC,EAAAA,EAAAA,KAACkc,EAAAA,EAAS,CAAC/Z,KAAM,GAAID,MAAM,iBAMrC2H,MAAO,IACPsS,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OAAKD,UAAW,cAAc2Z,EAAO/W,QAAQ7C,UAC3CE,EAAAA,EAAAA,KAACsc,EAAAA,GAAI,CAAClE,GAAG,IAAI1X,MAAO,CAAEic,cAAe,QAAS7c,SAAE4Z,EAAO/W,WAI7D,CACEoY,MAAO,cACP0B,UAAU,EACVT,WAAY,cACZnS,MAAO,IACPsS,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OAAAF,UACEF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,oCAAmCD,SAAA,EAC/CE,EAAAA,EAAAA,KAACsc,EAAAA,GAAI,CAAClE,GAAI,4BAA4BsB,EAAO0C,IAAIrd,YAAYe,UAC3DE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,UACvBE,EAAAA,EAAAA,KAAC4c,EAAAA,EAAc,CAAC1a,MAAM,UAAUC,KAAM,UAG1CnC,EAAAA,EAAAA,KAAA,MAAID,UAAW,GAAG2Z,EAAO0C,IAAIrG,SAASjW,UACpCE,EAAAA,EAAAA,KAACsc,EAAAA,GAAI,CAAClE,GAAIsB,EAAO0C,IAAIS,eAAgB5W,OAAO,SAAS6W,IAAI,sBAAqBhd,UAC5EE,EAAAA,EAAAA,KAAC+c,EAAAA,EAAO,CAAC7a,MAAM,UAAUC,KAAM,UAGnCnC,EAAAA,EAAAA,KAAA,MAAID,UAAW,GAAG2Z,EAAO0C,IAAIrG,SAASjW,UACpCE,EAAAA,EAAAA,KAACsc,EAAAA,GAAI,CAAClE,GAAI,UAAUsB,EAAO0C,IAAIrd,YAAakH,OAAO,SAAS6W,IAAI,sBAAqBhd,UACnFE,EAAAA,EAAAA,KAACgd,EAAAA,EAAS,CAAC9a,MAAM,UAAUC,KAAM,eAO7C,CACE4Y,MAAO,OACP0B,UAAU,EACVT,WAAY,OACZnS,MAAO,GACPsS,WAAazC,IAAW1Z,EAAAA,EAAAA,KAAA,OAAAF,SAAM4Z,EAAO/W,SAEvC,CACEoY,MAAO,OACP0B,UAAU,EACVT,WAAY,OACZnS,MAAO,GACPsS,WAAazC,IACJ1Z,EAAAA,EAAAA,KAACsZ,GAAiB,CAACI,OAAQA,KAGtC,CACEqB,MAAO,UACP0B,UAAU,EACVT,WAAY,UACZnS,MAAO,IACPsS,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAACid,EAAY,CAACzc,KAAMkZ,EAAO/W,MAAOvF,aAAcsc,EAAO0C,IAAIhf,aAAciG,YAAaA,OAI5F,CACE0X,MAAO,WACPiB,YACEpc,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAcO,QAASA,IAAMwa,EAAW,YAAYhb,SAAA,EACjEE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,aACS,aAAdya,IACCva,EAAAA,EAAAA,KAAA,QAAAF,SACqB,QAAlB2a,GACCza,EAAAA,EAAAA,KAACic,EAAAA,EAAO,CAAC9Z,KAAM,GAAID,MAAM,aAEzBlC,EAAAA,EAAAA,KAACkc,EAAAA,EAAS,CAAC/Z,KAAM,GAAID,MAAM,iBAOrC2H,MAAO,IACPsS,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEmJ,MAAO,QAAS/J,UAC5BE,EAAAA,EAAAA,KAACkd,EAAQ,CACPrc,cAAe6Y,EAAO0C,IAAIe,aAC1Brc,oBAAqB4Y,EAAO0C,IAAIgB,mBAAoBrc,aAAc2Y,EAAO0C,IAAIhf,aAAc4D,YAAaya,OAMhH,CACEV,MAAO,IACP0B,UAAU,EACVT,WAAY,aACZnS,MAAO,IACPsS,WAAazC,IACX1Z,EAAAA,EAAAA,KAAA,OAAAF,UACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAACqd,GAAS,CACRlb,KAAM,GACND,MAAM,UACNoI,UAAWoP,EAAO0C,IAAI9R,UACtBlN,aAAcsc,EAAO0C,IAAIhf,aACzBkgB,OAAQ5D,EAAO0C,IAAItX,GACnBjH,OAAQ6b,EAAO0C,IAAIve,OACnBmD,YAAaya,EACb8B,WAAY1C,EACZxQ,UAAWsQ,EACXpQ,UAAU,UAEZvK,EAAAA,EAAAA,KAACwd,GAAQ,CACPrb,KAAM,GACND,MAAM,UACN6J,SAAU2N,EAAO0C,IAAIrQ,SACrB3O,aAAcsc,EAAO0C,IAAIhf,aACzBkgB,OAAQ5D,EAAO0C,IAAItX,GACnBjH,OAAQ6b,EAAO0C,IAAIve,OACnBmD,YAAaya,EACb8B,WAAY1C,EACZxQ,UAAWsQ,EACXpQ,UAAU,cAMpB,CACEwQ,MAAO,UACP0B,UAAU,EACVT,WAAY,UACZnS,MAAO,GACP9J,UAAW,YACXoc,WAAazC,IACX1Z,EAAAA,EAAAA,KAACyd,GAAW,CAACrgB,aAAcsc,EAAO0C,IAAIhf,aAAciG,YAAaA,QAKvE6H,EAAAA,EAAAA,YAAU,KACR0P,EAAkB,IAAIvQ,GAAW,GAChC,CAACA,KAEJa,EAAAA,EAAAA,YAAU,KAER,MAAM4G,EAAOzH,EAAUhL,KAAKuU,IAAI,CAC9B8J,WAAY9B,EAAatN,SAASsF,EAAK9O,IACvC/F,UAAW6U,EAAK7U,UAChB+F,GAAI8O,EAAK9O,GACT6Y,MAAO/J,EAAKgK,OACZvB,QAASzI,EAAKyI,QACdwB,OAAQjK,EAAKxF,OAAO7N,KACpB2Z,MAAOtG,EAAKxF,OAAO8L,MACnBqC,SAAU3I,EAAKxF,OAAO2L,UACtB+D,UAAWlK,EAAKmK,UAChBhI,OAAQnC,EAAK/V,OACbmgB,YAAapK,EAAKqK,YAClBpB,eAAgBjJ,EAAKsK,UACrBC,eAAgBvK,EAAKwK,WACrBC,KAAM3C,EAAgB9H,EAAKnW,WAAYmW,EAAK7U,WAC5Cuf,KAAM1K,EAAK2K,SACXC,SAAU5K,EAAKO,QAAQC,UACvBqK,QAAS7K,EAAK8K,eACdvB,aAAcvJ,EAAK9U,KAAKyB,KACxB6c,mBAAoBxJ,EAAK9U,KAAKY,WAC9BtC,aAAcwW,EAAK7U,UACnBgN,UAAW6H,EAAKgK,OAAQhK,EAAK/V,QAC7ByM,WAAYsJ,EAAKgK,OAAQhK,EAAK/V,QAC9BgW,WAAYD,EAAKG,OACjB4K,QAAS,cAEX9D,EAAQ/I,EAAK,GACZ,CAACzH,EAAWuR,IAIf,MAAMgD,EAAYzX,GAAU,CAACiC,EAAKwD,KAAgB,IAAd,KAAEzK,GAAMyK,EAC1CmP,GAAY8C,IACV,MAAMC,EAAc,IAAID,GAKxB,OAJAC,EAAY3X,GAAS,IAChB2X,EAAY3X,GACf0C,MAAO1H,EAAK0H,OAEPiV,CAAW,GAClB,EA0BEpB,EAAa9B,EAAa1T,OAAS,GAClC6J,EAAYgN,IAAiB3d,EAAAA,EAAAA,UAAS,IA+B7C,OACExB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAACgf,GAAW,CAAC1M,YAAaA,EAAajI,UAAWA,EAAW0H,WAAYA,EAAYE,eAAgBwJ,EAAWxc,kBAxCxFoL,EACvB8D,QAAOiO,GAAOR,EAAatN,SAAS8N,EAAItX,MACxCzF,KAAI+c,GAAOA,EAAIrd,YAsCyIiT,mBAhC7H9D,IAC9B,MAAM4D,EAAO5D,EAAa7O,KAAKuU,IAAI,CACjC8J,WAAY9B,EAAatN,SAASsF,EAAK9O,IACvCA,GAAI8O,EAAK9O,GACT6Y,MAAO/J,EAAKgK,OACZvB,QAASzI,EAAKyI,QACdwB,OAAQjK,EAAKxF,OAAO7N,KACpB2Z,MAAOtG,EAAKxF,OAAO8L,MACnB4D,UAAWlK,EAAKmK,UAChBhI,OAAQnC,EAAK/V,OACbmgB,YAAapK,EAAKqK,YAClBpB,eAAgBjJ,EAAKsK,UACrBC,eAAgBvK,EAAKwK,WACrBC,KAAM3C,EAAgB9H,EAAKnW,WAAYmW,EAAK7U,WAC5Cuf,KAAM1K,EAAK2K,SACXC,SAAU5K,EAAKO,QAAQC,UACvBqK,QAAS7K,EAAK8K,eACdvB,aAAcvJ,EAAK9U,KAAKyB,KACxB6c,mBAAoBxJ,EAAK9U,KAAKY,WAC9BtC,aAAcwW,EAAK7U,UACnBgN,UAAW6H,EAAKgK,OAAQhK,EAAK/V,QAC7ByM,WAAYsJ,EAAKgK,OAAQhK,EAAK/V,QAC9BgW,WAAYD,EAAKG,OACjB4K,QAAS,cAEX9D,EAAQ/I,GACRiN,EAAcjN,EAAK,EAMoLA,KAAMmJ,EAAiB5I,gBAAiBA,EAAiBD,YAAawJ,EAAczJ,YAAauL,EAAa,eAAiB,GAAIxL,iBAAkB2J,KAC1Vjc,EAAAA,EAAAA,MAACqf,GAAAA,EAAK,CAACC,YAAU,EAAApf,SAAA,EACfE,EAAAA,EAAAA,KAAA,SAAOU,MAAO,CAAE4L,SAAU,SAAUC,IAAK,MAAO4S,OAAQ,GAAIrf,UAC1DF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,UACEF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,iBAAgBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLC,QAASmb,EAAa1T,SAAWmC,EAAUnC,OAC3CnD,SAtWsBqa,KACpC,MAAMC,EAAYhV,GAAaA,EAAUnC,QAAUmC,EAAUhL,KAAKuU,GAASA,EAAK9O,KAC5E8W,EAAa1T,SAAWmX,EAAUnX,OAEpCmK,EAAgB,IAGhBA,EAAgBgN,EAClB,KAgWYrf,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWD,UACzBE,EAAAA,EAAAA,KAACkZ,EAAAA,EAAK,CAAChX,MAAM,UAAUC,KAAM,YAIlC2Z,EAAQzc,KAAI,CAACigB,EAAQnY,KACpBnH,EAAAA,EAAAA,KAAA,MAAuBU,MAAO,CAAEmJ,MAAOyV,EAAOzV,OAAQ/J,UACpDE,EAAAA,EAAAA,KAACuf,GAAAA,UAAS,CACR1V,MAAOyV,EAAOzV,OAAS,IACvB7D,OAAQ,EACR4Y,SAAUA,EAASzX,GAAOrH,UAE1BE,EAAAA,EAAAA,KAAA,OAAAF,SACGwf,EAAOtD,gBAPLsD,EAAOvE,eActB/a,EAAAA,EAAAA,KAAA,SAAAF,SACmB,IAAhBgS,EAAK5J,QACJlI,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,UAC5BE,EAAAA,EAAAA,KAAA,MAAIwf,QAAS1D,EAAQ5T,OAAQxH,MAAO,CAAEqX,UAAW,UAAWjY,UAC1DE,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEqX,UAAW,SAAU0H,UAAW,QAAS3f,UACrDF,EAAAA,EAAAA,MAAA,OACEG,UAAU,SACVW,MAAO,CAAEC,WAAY,OAAO+e,OAAc5f,SAAA,EAE1CF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,QAAOD,SAAA,EACpBE,EAAAA,EAAAA,KAAA,OAAKsE,IAAKqb,GAAWnb,IAAI,eACzBxE,EAAAA,EAAAA,KAAA,OACED,UAAU,aACVuE,IAAKsb,GACLpb,IAAI,mBAGRxE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,yBACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,8EAIHF,EAAAA,EAAAA,MAACgE,EAAAA,EAAM,CAAC7D,UAAU,yBAAyB8D,QAAQ,OAAM/D,SAAA,CACtD,KACDE,EAAAA,EAAAA,KAAC6f,EAAAA,EAAW,CAAC3d,MAAM,OAAOC,KAAM,KAAM,cAGxCvC,EAAAA,EAAAA,MAACgE,EAAAA,EAAM,CAAC7D,UAAU,qBAAqB8D,QAAQ,OAAM/D,SAAA,CAClD,IAAI,sBAQfgS,EAAKzS,KAAK+c,IACRxc,EAAAA,EAAAA,MAAA,MAAI,oBAAmBwc,EAAIhf,aACZ2C,UAAWqc,EAAIsB,WAAa,eAAiB,GAAG5d,SAAA,EAC7DE,EAAAA,EAAAA,KAAA,MAAAF,UACEF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,iBAAgBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLC,QAASmb,EAAatN,SAAS8N,EAAItX,IACnCC,SAAUA,IAnIA+a,KAC5B,MAAMC,EAAsB,IAAInE,GAC5BmE,EAAoBzR,SAASwR,GAE/BC,EAAoBC,OAAOD,EAAoBE,QAAQH,GAAQ,GAI/DC,EAAoB3J,KAAK0J,GAE3BzN,EAAgB0N,EAAoB,EAyHFxK,CAAqB6G,EAAItX,OAE3C9E,EAAAA,EAAAA,KAAA,QAAMD,UAAU,YAAWD,UACzBE,EAAAA,EAAAA,KAACkZ,EAAAA,EAAK,CAAChX,MAAM,UAAUC,KAAM,YAIlC2Z,EAAQzc,KAAKigB,IACZtf,EAAAA,EAAAA,KAAA,MAAAF,SACGwf,EAAOnD,WAAW,CAAExZ,MAAOyZ,EAAIkD,EAAOvE,OAAQqB,SADxCkD,EAAOvE,WAdbqB,EAAItX,aAuBf,EC1hBV,GAvBcob,KACZ,MAAM5N,EAAc/U,KAAKS,MAAMmiB,OAAO5jB,aAAaC,QAAQ,gBAAkB,OACtE6N,EAAW+V,IAAgBhf,EAAAA,EAAAA,UAAS,KAC3C8J,EAAAA,EAAAA,YAAU,KACRoP,GAAW,GACV,IACH,MAAMA,EAAYne,UAChB,IACE,MAAM4c,QAAa7c,EAAAA,EAAAA,MACbmkB,EAAa9iB,KAAKS,MAAM+a,GAC9BqH,EAAaC,EACf,CAAE,MAAOpjB,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,GAGF,OACE+C,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACEE,EAAAA,EAAAA,KAACsgB,GAAW,CAAChO,YAAaA,EAAajI,UAAWA,EAAWiQ,UAAWA,KACvE,C","sources":["APIs/SalesApi.js","components/Business/Pages/sales/circle-progress-bar.js","components/Business/Pages/sales/progress.js","assets/images/icon/sale-01.svg","components/Business/Pages/sales/contact-add.js","assets/images/icon/phonecallgra.svg","assets/images/icon/mailgradi.svg","assets/images/icon/calendargradi.svg","webpack://memateapp/./src/components/Business/Pages/sales/sales.module.scss?0b8f","components/Business/Pages/sales/contact-sales.js","components/Business/Pages/sales/sales-note.js","assets/images/icon/archive.svg","components/layout/ConfettiComponent.js","components/Business/Pages/sales/quote-lost.js","components/Business/Pages/sales/quote-won.js","components/Business/Pages/sales/actions-dots.js","components/Business/Pages/sales/search-filter.js","components/Business/Pages/sales/date-range-picker.js","components/Business/Pages/sales/bank-details-model.js","components/Business/Pages/sales/table-top-bar.js","components/Business/Pages/sales/sales-tables.js","components/Business/Pages/sales/sales-page.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// Sale Table Api\nexport const fetchSales = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n// Sales Note Api\nexport const fetchSalesNotes = async (saleUniqueId, updatedNote) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ sales_note: updatedNote }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/notes/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales notes update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales notes update error:', error);\n    throw error;\n  }\n};\n\nexport const markWon = async (ids) => {\n  const endpoint = `/sales/status/won/`;\n  const options = {\n    method: 'PUT',\n    body: {ids: ids}\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const markLost = async (ids) => {\n  const endpoint = `/sales/status/lost/`;\n  const options = {\n    method: 'PUT',\n    body: {ids: ids}\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\n// Sale Won Api\nexport const fetchWon = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify({\n    \"ids\": [saleUniqueId]\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  const response = await fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n}\n\n\n// Sale Contact Api\nexport const fetchContacts = async (saleUniqueId, formData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(formData),\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/contacts/`, requestOptions);\n    if (response.ok) {\n      return response;\n    } else {\n      console.log('Error:', response.status);\n      return null;\n    }\n  } catch (error) {\n    console.log('Error:', error);\n    return null;\n  }\n};\n\n\n// Sale Lead Api\nexport const fetchSaleslead = async (saleUniqueId, updatedLead) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ lead: updatedLead, unique_id: saleUniqueId }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/lead/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales lead update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales lead update error:', error);\n    throw error;\n  }\n};\n\n\n\n\n// Sale Multi Won Api\nexport const fetchMultipleData = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  try {\n    const responses = await Promise.all([\n      fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions), // Pass requestOptions directly\n    ]);\n\n    const data = await Promise.all(responses.map(response => response.json()));\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Sale DUPLICATE Api\nexport const fetchduplicateData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/duplicate/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n}\n\n\n\n\n// Sale history Api\nexport const fetchhistoryData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/history/`, requestOptions);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n\n\n\n// Sale Multi Lost Api\nexport const fetchMultipleLost = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  try {\n    const responses = await Promise.all([\n      fetch(`${API_BASE_URL}/sales/status/lost/`, requestOptions), // Pass requestOptions directly\n    ]);\n\n    const data = await Promise.all(responses.map(response => response.json()));\n    return data; // Return data to handleMoveToManagementWon function\n  } catch (error) {\n    throw error; // Rethrow error to handleMoveToManagementWon function\n  }\n};\n\n\n\n\n\n","import React from 'react';\n\nconst CircleProgressBar = ({percentage,selectlabel}) => {\n    return (\n      <>\n          <div className=\"progress\" data-percentage= {percentage}>\n            <span className=\"progress-left\">\n              <span className=\"progress-bar\"></span>\n            </span>\n            <span className=\"progress-right\">\n              <span className=\"progress-bar\"></span>\n            </span>\n            <div className=\"progress-value\">\n              <div>\n             \n                {percentage === null\n              ? \"0%\"\n              : \"\" + percentage + \"%\"} \n              </div>\n            </div>\n          </div>\n          <span>{selectlabel}</span>\n        \n      </>\n    );\n  };\n  \n  export default CircleProgressBar\n  ","import React, { useState } from \"react\";\nimport { ChevronDown } from \"react-bootstrap-icons\";\nimport CircleProgressBar from \"./circle-progress-bar\";\nimport { fetchSaleslead } from \"../../../../APIs/SalesApi\";\n\nconst Option = ({ percentage, label, gradient, onSelect, isActive }) => {\n  return (\n    <li\n      className={`option ${isActive ? \"active\" : \"\"}`}\n      data-percentage={percentage}\n      onClick={onSelect}\n    >\n      <input\n        className=\"radio-custom\"\n        name=\"radio-group\"\n        type=\"radio\"\n        checked={isActive} // Set checked based on isActive prop\n      />\n      <em className=\"radio-custom-label\"></em>\n      <div className=\"progressWrapper\">\n        <div className=\"labelInfo\">\n          <strong>{label}</strong>\n          <div className=\"progress-light-grey\">\n            <div\n              className=\"progress-container progress-color progress-center\"\n              aria-valuenow={percentage}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ \"--value\": percentage, background: gradient }}\n            >\n              <span>{percentage}%</span>\n            </div>\n          </div>\n        </div>\n        <label>{percentage}%</label>\n      </div>\n    </li>\n  );\n};\n\nconst Progress = ({progressName1,progressPercentage1,salesUniqId1,onRemoveRow}) => {\n\n  // Refress Data Function\n  const dataUpdate = () => {\n    onRemoveRow()\n  };\n\n  const [selectedOption, setSelectedOption] = useState({\n    text: progressName1,\n    percentage: progressPercentage1,\n    background: \"linear-gradient(90deg, #9E77ED 10%, transparent 10%)\",\n  });\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [updatedLead, setUpdatedLead] = useState(selectedOption.percentage);\n\n  const toggleOptions = () => {\n    // Close any open dropdowns\n    const openDropdowns = document.querySelectorAll(\".options.active\");\n    openDropdowns.forEach((dropdown) => dropdown.classList.remove(\"active\"));\n    dataUpdate()\n    // Open or close the current dropdown\n    setDropdownOpen((prevState) => !prevState);\n  };\n\n  const selectOption = async (option) => {\n    try {\n      const saleUniqueId = salesUniqId1;\n      const newUpdatedLead = option.percentage;\n  \n      await fetchSaleslead(saleUniqueId, newUpdatedLead);\n      setSelectedOption({\n        text: option.label,\n        percentage: option.percentage,\n        background: option.gradient,\n      });\n      setUpdatedLead(newUpdatedLead);\n     dataUpdate() // Refress Data\n      setDropdownOpen(false);\n    } catch (error) {\n      console.error('Error updating sales lead:', error);\n    }\n  };\n  \n  \n  const isActive = (percentage) => {\n    return percentage === updatedLead; \n  };\n\n  const options = [\n    {\n      percentage: 10,\n      label: \"Lead\",\n      gradient: \"linear-gradient(90deg, #1AB2FF 10%, transparent 10%)\",\n    },\n    {\n      percentage: 20,\n      label: \"Prospect\",\n      gradient: \"linear-gradient(90deg, #1AB2FF 20%, transparent 20%)\",\n    },\n    {\n      percentage: 40,\n      label: \"Proposal sent\",\n      gradient: \"linear-gradient(90deg, #1AB2FF 40%, transparent 40%)\",\n    },\n    {\n      percentage: 60,\n      label: \"Negotiation\",\n      gradient: \"linear-gradient(90deg, #1AB2FF 60%, transparent 60%)\",\n    },\n    {\n      percentage: 80,\n      label: \"Awaiting approval\",\n      gradient: \"linear-gradient(90deg, #1AB2FF 80%, transparent 80%)\",\n    },\n  ];\n\n  return (\n    <div className=\"select-menu\">\n      <div className=\"select-btn\" onClick={toggleOptions}>\n      <CircleProgressBar\n          percentage={selectedOption.percentage}\n          selectlabel={selectedOption.text}\n        />\n        <ChevronDown color=\"#98A2B3\" size={16} />\n      </div>\n      <ul className={`options ${dropdownOpen ? \"active\" : \"\"}`}>\n        {options.map((option) => (\n          <Option\n          key={option.percentage}\n            percentage={option.percentage}\n            label={option.label}\n            gradient={option.gradient}\n            onSelect={() => selectOption(option)}\n            isActive={isActive(option.percentage)}// Pass percentage to isActive\n        />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Progress\n","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSale01(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"sale-01\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Icon\",\n    d: \"M9.5 9H9.51M15.5 15H15.51M16.5 8L8.5 16M22.5 12C22.5 17.5228 18.0228 22 12.5 22C6.97715 22 2.5 17.5228 2.5 12C2.5 6.47715 6.97715 2 12.5 2C18.0228 2 22.5 6.47715 22.5 12ZM10 9C10 9.27614 9.77614 9.5 9.5 9.5C9.22386 9.5 9 9.27614 9 9C9 8.72386 9.22386 8.5 9.5 8.5C9.77614 8.5 10 8.72386 10 9ZM16 15C16 15.2761 15.7761 15.5 15.5 15.5C15.2239 15.5 15 15.2761 15 15C15 14.7239 15.2239 14.5 15.5 14.5C15.7761 14.5 16 14.7239 16 15Z\",\n    stroke: \"#079455\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSale01);\nexport default __webpack_public_path__ + \"static/media/sale-01.74c52636eaacc72e4c5a7a89e51203b5.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport { PlusLg , Envelope, Telephone, Calendar, ChevronDown } from \"react-bootstrap-icons\";\nimport Typography from '@mui/material/Typography';\nimport Form from 'react-bootstrap/Form';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport saleContact from \"../../../../assets/images/icon/sale-01.svg\";\nimport { fetchContacts } from '../../../../APIs/SalesApi';\n\nconst ContactAdd = ({saleUniqueIdold, contactRefresh}) => {\n  \n  const [radioValue, setRadioValue] = useState('email');\n  const [value, setValue] = useState(dayjs());\n  const [note, setNote] = useState('');\n  const [show, setShow] = useState(false);\n  const [validationError, setValidationError] = useState('');\n  \n  const handleClose = () => {\n    setShow(false);\n    setValidationError('');\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleSave = async () => {\n    if (!validateForm()) return; // Check if form is valid\n\n    const saleUniqueId = saleUniqueIdold;\n    const nextDay = new Date(value);\n    nextDay.setDate(nextDay.getDate() + 1);\n\n    const formData = {\n      type: radioValue,\n      date: dayjs(nextDay).format('YYYY-MM-DD'),\n      note: note,\n    };\n\n    try {\n      const data = await fetchContacts(saleUniqueId, formData);\n      handleClose();\n      refreshData();\n    } catch (error) {\n      console.error(\"Error while saving:\", error);\n    }\n  };\n\n  const refreshData = () => {\n    contactRefresh();\n  };\n\n  const radios = [\n    { name: 'Email', value: 'E', icon: <Envelope size={20} /> },\n    { name: 'Phone', value: 'P', icon: <Telephone size={20} /> },\n    { name: 'Meeting', value: 'M', icon: <Calendar size={20} /> },\n  ];\n\n  const validateForm = () => {\n    if (!value) {\n      setValidationError('This is an error message.');\n      return false;\n    }\n    if (!note) {\n      setValidationError('This is an error message.');\n      return false;\n    }\n    // Additional validation checks can be added here\n    return true;\n  };\n\n  return (\n   <>\n     <Button variant=\"ContactAdd\" onClick={handleShow}>\n       <PlusLg color=\"#1AB2FF\" size={16} />\n     </Button>\n\n     <Modal show={show} aria-labelledby=\"contained-modal-title-vcenter\"\n      centered className='SalesContact salesTableWrap' onHide={handleClose} animation={false}>\n        <Modal.Header className='SalesContact mb-0 pb-0 border-0' closeButton>\n          <div className='modelHeader d-flex justify-content-between align-items-start'>\n            <span>\n              <div className='iconOutStyle'>\n                <div className='iconinStyle'>\n                  <div className='iconinnerStyle'>\n                    <img src={saleContact} alt=\"saleContact\" />\n                  </div>\n                </div>\n              </div>\n              Sales Contact\n            </span>\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          <div className='ContactModel'>\n            <div className='ContactModelIn'>\n              <span>Contact Type</span>\n              <ButtonGroup className='radioSelectButton'>\n                {radios.map((radio, idx) => (\n                  <div className='radioSelectButtons' key={idx}>\n                    <ToggleButton\n                      id={`radio-${idx}`}\n                      type=\"radio\"\n                      variant={idx % 2 ? 'outlineBox' : 'selectBox'}\n                      name=\"radio\"\n                      value={radio.value}\n                      checked={radioValue === radio.value}\n                      onChange={(e) => setRadioValue(e.currentTarget.value)}\n                    >\n                      {radio.name} {radio.icon}\n                    </ToggleButton>\n                  </div>\n                ))}\n              </ButtonGroup>\n              {validationError && (\n                <div className=\"text-danger\">{validationError}</div>\n              )}\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <span className=\"flexRemove\">Date</span>\n                <DatePicker\n                  className='datepickerField'\n                  value={value}\n                  onChange={(newValue) => setValue(newValue)}\n                  slots={{ openPickerIcon: ChevronDown }}\n                  size={20}\n                />\n              </LocalizationProvider>\n              {validationError && (\n                <div className=\"text-danger\">{validationError}</div>\n              )}\n              <span>Note</span>\n              <Typography sx={{ p: 0 }}>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Enter a description...\"\n                  style={{ height: '152px' }}\n                  value={note}\n                  onChange={(e) => setNote(e.target.value)}\n                />\n              </Typography>\n              {validationError && (\n                <div className=\"text-danger\">{validationError}</div>\n              )}\n            </div>\n            <div className='popoverbottom mt-0 pt-4'>\n              <Button className='closebox' onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button className='savebox' onClick={handleSave}>\n                Save\n              </Button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n   </>\n  )\n}\n\nexport default ContactAdd;\n","var _rect, _rect2, _rect3, _path, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPhonecallgra(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 52,\n    height: 52,\n    viewBox: \"0 0 52 52\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 48,\n    height: 48,\n    rx: 4,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 48,\n    height: 48,\n    rx: 4,\n    fill: \"url(#paint0_radial_7761_26273)\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 50,\n    height: 50,\n    rx: 5,\n    stroke: \"url(#paint1_radial_7761_26273)\",\n    strokeOpacity: 0.25,\n    strokeWidth: 2\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.0497 20C29.0264 20.1906 29.924 20.6683 30.6277 21.3719C31.3314 22.0756 31.8091 22.9733 31.9997 23.95M28.0497 16C30.0789 16.2254 31.9713 17.1342 33.4159 18.577C34.8606 20.0198 35.7717 21.911 35.9997 23.94M24.2266 27.8631C23.0251 26.6615 22.0763 25.3028 21.3803 23.8532C21.3204 23.7285 21.2905 23.6662 21.2675 23.5873C21.1858 23.3069 21.2445 22.9627 21.4145 22.7253C21.4623 22.6584 21.5195 22.6013 21.6338 22.487C21.9834 22.1374 22.1582 21.9626 22.2725 21.7868C22.7035 21.1239 22.7035 20.2693 22.2725 19.6064C22.1582 19.4307 21.9834 19.2559 21.6338 18.9062L21.4389 18.7114C20.9075 18.1799 20.6417 17.9142 20.3564 17.7699C19.7888 17.4828 19.1185 17.4828 18.551 17.7699C18.2656 17.9142 17.9999 18.1799 17.4684 18.7114L17.3108 18.869C16.7812 19.3986 16.5164 19.6634 16.3141 20.0235C16.0897 20.423 15.9283 21.0435 15.9297 21.5017C15.9309 21.9146 16.011 22.1969 16.1712 22.7613C17.0322 25.7947 18.6567 28.6571 21.0447 31.045C23.4326 33.433 26.295 35.0575 29.3284 35.9185C29.8928 36.0787 30.1751 36.1588 30.588 36.16C31.0462 36.1614 31.6667 36 32.0662 35.7756C32.4263 35.5733 32.6911 35.3085 33.2207 34.7789L33.3783 34.6213C33.9098 34.0898 34.1755 33.8241 34.3198 33.5387C34.6069 32.9712 34.6069 32.3009 34.3198 31.7333C34.1755 31.448 33.9098 31.1822 33.3783 30.6508L33.1835 30.4559C32.8339 30.1063 32.6591 29.9315 32.4833 29.8172C31.8204 29.3862 30.9658 29.3862 30.3029 29.8172C30.1271 29.9315 29.9523 30.1063 29.6027 30.4559C29.4884 30.5702 29.4313 30.6274 29.3644 30.6752C29.127 30.8453 28.7828 30.904 28.5024 30.8222C28.4235 30.7992 28.3612 30.7693 28.2365 30.7094C26.7869 30.0134 25.4282 29.0646 24.2266 27.8631Z\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_7761_26273\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1.40676 3.32231) rotate(42.9555) scale(60.9904 863.324)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1AB3FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FFB258\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_7761_26273\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1.40676 3.32231) rotate(42.9555) scale(60.9904 863.324)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1AB3FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FFB258\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhonecallgra);\nexport default __webpack_public_path__ + \"static/media/phonecallgra.20daa5d6965e95d0209bd3a0ffd66365.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2, _rect3, _path, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMailgradi(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 52,\n    height: 52,\n    viewBox: \"0 0 52 52\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 48,\n    height: 48,\n    rx: 4,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 48,\n    height: 48,\n    rx: 4,\n    fill: \"url(#paint0_radial_7761_28322)\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 50,\n    height: 50,\n    rx: 5,\n    stroke: \"url(#paint1_radial_7761_28322)\",\n    strokeOpacity: 0.25,\n    strokeWidth: 2\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 21L24.6649 26.7154C25.3261 27.1783 25.6567 27.4097 26.0163 27.4993C26.3339 27.5785 26.6661 27.5785 26.9837 27.4993C27.3433 27.4097 27.6739 27.1783 28.3351 26.7154L36.5 21M21.3 34H31.7C33.3802 34 34.2202 34 34.862 33.673C35.4265 33.3854 35.8854 32.9265 36.173 32.362C36.5 31.7202 36.5 30.8802 36.5 29.2V22.8C36.5 21.1198 36.5 20.2798 36.173 19.638C35.8854 19.0735 35.4265 18.6146 34.862 18.327C34.2202 18 33.3802 18 31.7 18H21.3C19.6198 18 18.7798 18 18.138 18.327C17.5735 18.6146 17.1146 19.0735 16.827 19.638C16.5 20.2798 16.5 21.1198 16.5 22.8V29.2C16.5 30.8802 16.5 31.7202 16.827 32.362C17.1146 32.9265 17.5735 33.3854 18.138 33.673C18.7798 34 19.6198 34 21.3 34Z\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_7761_28322\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1.40676 3.32231) rotate(42.9555) scale(60.9904 863.324)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1AB3FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FFB258\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_7761_28322\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1.40676 3.32231) rotate(42.9555) scale(60.9904 863.324)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1AB3FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FFB258\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMailgradi);\nexport default __webpack_public_path__ + \"static/media/mailgradi.2164d17057c769448ddf96d8f89a722a.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2, _rect3, _path, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCalendargradi(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 52,\n    height: 52,\n    viewBox: \"0 0 52 52\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 48,\n    height: 48,\n    rx: 4,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 48,\n    height: 48,\n    rx: 4,\n    fill: \"url(#paint0_radial_7761_26737)\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 50,\n    height: 50,\n    rx: 5,\n    stroke: \"url(#paint1_radial_7761_26737)\",\n    strokeOpacity: 0.25,\n    strokeWidth: 2\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.5 24H17.5M30.5 16V20M22.5 16V20M22.3 36H30.7C32.3802 36 33.2202 36 33.862 35.673C34.4265 35.3854 34.8854 34.9265 35.173 34.362C35.5 33.7202 35.5 32.8802 35.5 31.2V22.8C35.5 21.1198 35.5 20.2798 35.173 19.638C34.8854 19.0735 34.4265 18.6146 33.862 18.327C33.2202 18 32.3802 18 30.7 18H22.3C20.6198 18 19.7798 18 19.138 18.327C18.5735 18.6146 18.1146 19.0735 17.827 19.638C17.5 20.2798 17.5 21.1198 17.5 22.8V31.2C17.5 32.8802 17.5 33.7202 17.827 34.362C18.1146 34.9265 18.5735 35.3854 19.138 35.673C19.7798 36 20.6198 36 22.3 36Z\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_7761_26737\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1.40676 3.32231) rotate(42.9555) scale(60.9904 863.324)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1AB3FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FFB258\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_7761_26737\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1.40676 3.32231) rotate(42.9555) scale(60.9904 863.324)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1AB3FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FFB258\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendargradi);\nexport default __webpack_public_path__ + \"static/media/calendargradi.b3116ec64a97e5fef4c8d79e73c4993a.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"footerwrap\":\"sales_footerwrap__Ymbwg\",\"cancelbut\":\"sales_cancelbut__BhO13\",\"editbut\":\"sales_editbut__GIA7A\",\"padding_24\":\"sales_padding_24__nSSrM\",\"paddingLR_24\":\"sales_paddingLR_24__oXCU4\"};","import React from 'react';\nimport { Envelope, Telephone, Calendar, X } from \"react-bootstrap-icons\";\nimport { Button, ButtonToolbar, OverlayTrigger, Popover } from 'react-bootstrap';\nimport ContactAdd from \"./contact-add\";\nimport phonecallgra from \"../../../../assets/images/icon/phonecallgra.svg\";\nimport mailgradi from \"../../../../assets/images/icon/mailgradi.svg\";\nimport calendargradi from \"../../../../assets/images/icon/calendargradi.svg\";\nimport styles from './sales.module.scss';\n\n// Format Date\nconst formatDate = (timestamp) => {\n  const date = new Date(timestamp * 1000);\n  const day = date.getDate();\n  const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n    month: \"short\",\n  }).format(date);\n  const year = date.getFullYear();\n  return `${day} ${monthAbbreviation} ${year}`;\n};\n\nconst ContactSales = ({ saleUniqueId, type, refreshData }) => {\n  const [popoverVisible, setPopoverVisible] = React.useState(null);\n\n  const handlePopoverClick = (index) => {\n    const btnsSecondary = document.querySelectorAll('.ClosePopover');\n    if (btnsSecondary.length > 0) {\n      btnsSecondary.forEach(btn => btn.click());\n    }\n    setPopoverVisible(popoverVisible === index ? null : index);\n  };\n\n  const contactRefresh = () => {\n    refreshData();\n  };\n\n  const handlePopoverClose = () => {\n    setPopoverVisible(null);\n  };\n\n  return (\n    <>\n      <div className=\"innerTableStyle\">\n        <ul>\n          {type.map((item, index) => (\n            <li key={index}>\n              <ButtonToolbar key={index}>\n                <OverlayTrigger\n                  trigger=\"click\"\n                  rootClose\n                  placement=\"bottom\"\n                  show={popoverVisible === index}\n                  onHide={handlePopoverClose}\n                  overlay={\n                    <Popover\n                      id={`popover-trigger-click-root-close-${index}`}\n                      className='salesTableWrap'\n                      title=\"\"\n                    >\n                      <div className=\"contactInfo\">\n                        <div className={`contactInfoflex ${styles.padding_24}`}>\n                          <div className=\"iconStyle\">\n                            {item.type === 'Phone' && (\n                              <img src={phonecallgra} alt=\"phonecallgra\" />\n                            )}\n                            {item.type === 'Email' && (\n                              <img src={mailgradi} alt=\"mailgradi\" />\n                            )}\n                            {item.type === 'Meeting' && (\n                              <img src={calendargradi} alt=\"calendargradi\" />\n                            )}\n                          </div>\n                          <Button\n                            variant=\"link\"\n                            className='ClosePopover'\n                            onClick={handlePopoverClose}\n                          >\n                            <X color=\"#667085\" size={24} />\n                          </Button>\n                        </div>\n                        <div className={styles.paddingLR_24}>\n                          <p className=\"contactdate\">{formatDate(item.date)}</p>\n                          <p>{item.note}</p>\n                        </div>\n                        <div className={styles.footerwrap}>\n                          <Button onClick={handlePopoverClose} className={styles.cancelbut}>Cancel</Button>\n                          <Button className={styles.editbut}>Edit</Button>\n                        </div>\n                      </div>\n                    </Popover>\n                  }\n                >\n                  <Button\n                    variant=\"saleContacte\"\n                    onClick={() => handlePopoverClick(index)}\n                  >\n                    <>\n                      {item.type === 'Phone' && (\n                        <Telephone color=\"#344054\" size={16} />\n                      )}\n                      {item.type === 'Email' && (\n                        <Envelope color=\"#344054\" size={16} />\n                      )}\n                      {item.type === 'Meeting' && (\n                        <Calendar color=\"#344054\" size={16} />\n                      )}\n                      <div>{formatDate(item.date)}</div>\n                    </>\n                  </Button>\n                </OverlayTrigger>\n              </ButtonToolbar>\n            </li>\n          ))}\n          {type.length < 3 && (\n            <li>\n              <span className=\"contactButList\">\n                <div className=\"contactButListIn1\">\n                  <div className=\"contactButListIn2\">\n                    <ContactAdd saleUniqueIdold={saleUniqueId} contactRefresh={contactRefresh} />\n                  </div>\n                </div>\n              </span>\n            </li>\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ContactSales;\n","\nimport React, { useState } from 'react';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport { FileEarmarkPlus, PlusLg, CheckLg } from 'react-bootstrap-icons';\nimport Form from 'react-bootstrap/Form';\nimport Button from \"@mui/material/Button\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { fetchSales } from \"../../../../APIs/SalesApi\";\nimport { fetchSalesNotes } from \"../../../../APIs/SalesApi\";\n\nconst SalesNote = ( props ) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [noteText, setNoteText] = useState(props.noteData || '');\n    const [isEditMode, setIsEditMode] = useState(!props.noteData);\n    const [isViewMode, setIsViewMode] = useState(false);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n      setIsViewMode(!isEditMode && !isViewMode);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    \n    const handleSave = async () => {\n      try {\n        if (!props.saleUniqueId) {\n          console.error('Error: saleUniqueId is not defined');\n          return;\n        }\n    \n        setNoteText(noteText);\n        const saleUniqueId = props.saleUniqueId;\n        const updatedNote = noteText;\n\n        fetchSalesNotes(saleUniqueId, updatedNote);\n        fetchSales();\n    \n        setIsEditMode(false);\n        handleClose();\n      } catch (error) {\n        console.error('Error saving note:', error);\n      }\n    };\n    \n  return (\n    <>\n     <div  className={`saleNoteBorder noteInfo ${noteText ? \"Yes\" : \"No\"}`} aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n    {isViewMode ? (\n     \n          <span style={{ cursor: 'pointer' }} onClick={() => setIsViewMode(false)}>\n         Note <CheckLg color=\"#17B26A\" size={16} />\n        </span>\n      ) : (\n      <strong>\n      {noteText ? (\n            <span style={{ cursor: 'pointer' }} onClick={() => setIsEditMode(true)}>\n             Note <CheckLg color=\"#17B26A\" size={16} />\n            </span>\n          ) : (\n            <span style={{ cursor: 'pointer' }}>\n              Note <PlusLg color=\"#667085\" size={16} />\n            </span>\n          )}\n      </strong>\n      )}\n       </div>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        PaperProps={{\n            style: {\n              width: '460px', \n            },\n            id: 'popoverStyleChange'\n          }}\n      >\n      <Form>\n          <div className='popoverHead popoverHeadflex salesTableWrap'>\n            <span>\n              <div className='iconOutStyle'>\n                <div className='iconinStyle'>\n                  <div className='iconinnerStyle'>\n                    <FileEarmarkPlus color=\"#17B26A\" size={24} />\n                  </div>\n                </div>\n              </div>\n              Add Note\n            </span>\n            <IconButton className=\"popupcrossInfo\" size=\"small\" onClick={handleClose}><CloseIcon /></IconButton>\n          </div>\n\n          <div className='popupcrossInfomain'>\n            \n          <Typography sx={{ p: '16px 24px 24px 24px' }}>\n            <h3>Note</h3>\n            <Form.Control id='placeholderColor'\n              as=\"textarea\"\n              placeholder=\"Enter a description...\" \n              style={{ height: '157px' }}\n              value={noteText}\n              onChange={(e) => setNoteText(e.target.value)}\n              readOnly={!isEditMode}\n            />\n          </Typography>\n          </div>\n\n          <div className='popoverbottom popoverendflex'>\n            <Button className='closebox' onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button className='savebox' onClick={handleSave}>\n              Save\n            </Button>\n          </div>\n        </Form>\n        </Popover>\n    </>\n  );\n};\n\nexport default SalesNote\n","var _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArchive(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/bulk/archive\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"archive\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector\",\n    opacity: 0.4\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.5 9.97V19C19.5 21 19 22 16.5 22H7.5C5 22 4.5 21 4.5 19V9.97C4.66 9.99 4.83 10 5 10H19C19.17 10 19.34 9.99 19.5 9.97Z\",\n    fill: \"#292D32\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.5 9.97V19C19.5 21 19 22 16.5 22H7.5C5 22 4.5 21 4.5 19V9.97C4.66 9.99 4.83 10 5 10H19C19.17 10 19.34 9.99 19.5 9.97Z\",\n    fill: \"url(#paint0_linear_1055_20869)\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 5V7C22 8.83 21.17 9.82 19.5 9.97C19.34 9.99 19.17 10 19 10H5C4.83 10 4.66 9.99 4.5 9.97C2.83 9.82 2 8.83 2 7V5C2 3 3 2 5 2H19C21 2 22 3 22 5Z\",\n    fill: \"#292D32\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 5V7C22 8.83 21.17 9.82 19.5 9.97C19.34 9.99 19.17 10 19 10H5C4.83 10 4.66 9.99 4.5 9.97C2.83 9.82 2 8.83 2 7V5C2 3 3 2 5 2H19C21 2 22 3 22 5Z\",\n    fill: \"url(#paint1_linear_1055_20869)\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector_3\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.8202 14.75H10.1802C9.77018 14.75 9.43018 14.41 9.43018 14C9.43018 13.59 9.77018 13.25 10.1802 13.25H13.8202C14.2302 13.25 14.5702 13.59 14.5702 14C14.5702 14.41 14.2302 14.75 13.8202 14.75Z\",\n    fill: \"#292D32\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.8202 14.75H10.1802C9.77018 14.75 9.43018 14.41 9.43018 14C9.43018 13.59 9.77018 13.25 10.1802 13.25H13.8202C14.2302 13.25 14.5702 13.59 14.5702 14C14.5702 14.41 14.2302 14.75 13.8202 14.75Z\",\n    fill: \"url(#paint2_linear_1055_20869)\"\n  }))))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_1055_20869\",\n    x1: 4.49977,\n    y1: 21.9999,\n    x2: 16.2428,\n    y2: 7.35772,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8B8B8B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#EAEAEA\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_1055_20869\",\n    x1: 1.99969,\n    y1: 9.99995,\n    x2: 7.51694,\n    y2: -3.79321,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8B8B8B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#EAEAEA\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_1055_20869\",\n    x1: 9.4301,\n    y1: 14.75,\n    x2: 10.2369,\n    y2: 11.9854,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8B8B8B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#EAEAEA\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArchive);\nexport default __webpack_public_path__ + \"static/media/archive.a93d5d4bb5e805d41614288a785b8375.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport Confetti from 'react-dom-confetti';\n\nconst ConfettiComponent = ({ active, config }) => {\n  return <Confetti active={active} config={config} />;\n};\n\nexport default ConfettiComponent;\n\n\n\n\n","import React, { useState, useEffect} from 'react';\nimport { XCircle, Archive } from \"react-bootstrap-icons\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport SalesIcon from \"../../../../assets/images/icon/SalesIcon.svg\";\nimport ArchiveIcon from \"../../../../assets/images/icon/archive.svg\"\nimport ProgressLogo from \"../../../../assets/images/progressLogo.png\";\nimport { markLost  } from \"../../../../APIs/SalesApi\";\nimport ConfettiComponent from '../../../layout/ConfettiComponent';\n\n\nconst QuoteWon = ( {salesData,saleUniqueId,LostQuote,quoteType,onRemoveRow}) => {\n  const [open, setOpen] = React.useState(false);\n  const [confetti, setConfetti] = useState(false); \n  const handleOpen = () => setOpen(true);\n  const [message, setMessage] = useState({ content: '', type: 'success' });\n  const [totalWonQuote, setTotalWonQuote] = useState(sessionStorage.getItem('totalWonQuote') || 0);\n\n  const handleMoveToManagementLost = async () => {\n    try {\n      if(saleUniqueId){\n            const success = await markLost([saleUniqueId]);\n            if (success.status === 'wn') {\n              console.log(\"salesData123 ===> \",salesData)\n               onRemoveRow()\n              setMessage({ content: 'Successfully moved to Management!', type: 'success' });\n              const newTotalWonQuote = parseInt(totalWonQuote, 10) + 1;\n              setTotalWonQuote(newTotalWonQuote);\n              sessionStorage.setItem('totalWonQuote', newTotalWonQuote);\n            }else{\n              setMessage({ content: 'Failed to move to Management. Please try again.', type: 'error' });\n            }\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        setMessage({ content: 'An error occurred. Please try again.', type: 'error' });\n    }\n    handleClose();\n    setConfetti(true);\n};\n\n\nconst handleClose = () => {\n  setTimeout(() => {\n    setConfetti(false); \n    setOpen(false); \n  }, 1000); \n};\n\nuseEffect(() => {\n  if (saleUniqueId) {\n\n  }\n}, [saleUniqueId]);\n\nuseEffect(() => {\n \n  setTotalWonQuote(LostQuote);\n  sessionStorage.setItem('totalWonQuote', LostQuote);\n\n\n}, [LostQuote]);\n\n\n\n\n\n\n\n  \n  return (\n    <>\n   <Button onClick={handleOpen} className={`quoteLost message ${message.type} ${LostQuote === 'Draft'}`}>\n    <XCircle color=\"#D92D20\" size={16} />\n   </Button>\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className=\"modelStyleBox QuoteLost salesTableWrap  QuoteActionStyle\" sx={{ width: 460 }}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n        <div className='modelHeader d-flex justify-content-between align-items-start'>\n        <span>\n        <div className='iconOutStyleflex'>\n        <div className='flexIconWrap'>\n        <div className='iconOutStyle'>\n        <div className='iconinStyle'>\n        <div className='iconinnerStyle'>\n        <Archive color=\"#F04438\" size={24} />\n        </div>\n        </div>\n        </div>\n        <div className='quoteStyleHeading'>\n        {quoteType === 'lost' && (\n                   <>\n                     {`Quote Lost ${LostQuote}`}\n                   </>\n                  )}\n        </div>\n        </div>\n        <IconButton\n          edge=\"end\"\n          color=\"inherit\"\n          onClick={handleClose} \n          aria-label=\"close\" \n        >\n          <CloseIcon color=\"#667085\" size={24} />\n        </IconButton>\n        </div>\n        <div className='stepBoxStyle'>\n           <ul>\n            <li><strong><img src={SalesIcon} alt=\"SalesIcon\" /></strong><span className='lightColorStyle'>Sales</span></li>\n            <li><em className='lineHor'></em><img src={ProgressLogo} alt=\"ProgressLogo\" /><em className='lineHor'></em></li>\n            <li><strong><img src={ArchiveIcon} alt=\"Archive\" /></strong><span>Archive</span></li>\n           </ul>\n           <p>Sorry to see a lost opportunity. This quote will be stored in the client's history, should you need to refer to it in the future.</p>\n         </div>\n        \n        </span>\n        </div>\n        <div className='footerBorder text-center'>\n        <button onClick={handleMoveToManagementLost}>Archive</button>\n        </div>\n        </Typography>\n      </Box>\n    </Modal>\n  </>\n  )\n}\nexport default QuoteWon","import React, { useState, useEffect } from 'react';\nimport { CheckCircle, Check2Circle } from \"react-bootstrap-icons\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport SalesIcon from \"../../../../assets/images/icon/SalesIcon.svg\";\nimport ManagementIcon from \"../../../../assets/images/icon/ManagementIcon.svg\";\nimport ProgressLogo from \"../../../../assets/images/progressLogo.png\";\nimport { fetchWon, markWon } from \"../../../../APIs/SalesApi\";\nimport ConfettiComponent from '../../../layout/ConfettiComponent';\n\n\nconst QuoteWon = ({ salesData, saleUniqueId, wonQuote, quoteType, onRemoveRow }) => {\n  const [open, setOpen] = React.useState(false);\n  const [confetti, setConfetti] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const [message, setMessage] = useState({ content: '', type: 'success' });\n  const [totalWonQuote, setTotalWonQuote] = useState(sessionStorage.getItem('totalWonQuote') || 0);\n\n\n  const handleMoveToManagementWon = async () => {\n    try {\n      if (saleUniqueId) {\n        const success = await markWon([saleUniqueId]);\n        if (success.status === 'wn') {\n          onRemoveRow()\n          setMessage({ content: 'Successfully moved to Management!', type: 'success' });\n          const newTotalWonQuote = parseInt(totalWonQuote, 10) + 1;\n          setTotalWonQuote(newTotalWonQuote);\n          sessionStorage.setItem('totalWonQuote', newTotalWonQuote);\n        } else {\n          setMessage({ content: 'Failed to move to Management. Please try again.', type: 'error' });\n        }\n      }\n    } catch (error) {\n      setMessage({ content: 'An error occurred. Please try again.', type: 'error' });\n    }\n    handleClose();\n    setConfetti(true);\n  };\n\n  const handleClose = () => {\n    setTimeout(() => {\n      setConfetti(false);\n      setOpen(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (saleUniqueId) {\n\n    }\n  }, [saleUniqueId]);\n\n  useEffect(() => {\n\n    setTotalWonQuote(wonQuote);\n    sessionStorage.setItem('totalWonQuote', wonQuote);\n\n\n  }, [wonQuote]);\n\n\n  return (\n    <>\n\n      <Button\n        onClick={handleOpen}\n        className={`message quoteWon ${message.type} ${wonQuote === 'Draft'}`}\n      >\n        <CheckCircle color=\"#079455\" size={16} />\n      </Button>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBox QuoteWon salesTableWrap QuoteActionStyle\" sx={{ width: 460 }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            <div className='modelHeader justify-content-between align-items-start'>\n              <span>\n                <div className='iconOutStyleflex'>\n                  <div className='flexIconWrap'>\n                    <div className='iconOutStyle'>\n                      <div className='iconinStyle'>\n                        <div className='iconinnerStyle'>\n                          <Check2Circle color=\"#17B26A\" size={24} />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='quoteStyleHeading'>\n                      {quoteType === 'won' && (\n                        <>\n                          {`Quote Won ${wonQuote}`}\n                        </>\n                      )}\n                    </div>\n                  </div>\n                  <IconButton\n                    edge=\"end\"\n                    color=\"inherit\"\n                    onClick={handleClose}\n                    aria-label=\"close\"\n                  >\n                    <CloseIcon color=\"#667085\" size={24} />\n                  </IconButton>\n                </div>\n                <div className='stepBoxStyle'>\n\n\n                  <ul>\n                    <li><strong><img src={SalesIcon} alt=\"SalesIcon\" /></strong><span className='lightColorStyle'>Sales</span></li>\n                    <li><em className='lineHor'></em><img src={ProgressLogo} alt=\"ProgressLogo\" /><em className='lineHor'></em></li>\n                    <li><strong><img src={ManagementIcon} alt=\"ManagementIcon\" /></strong><span>Management</span></li>\n                  </ul>\n                  <p>Great, another quote converted into a project.</p>\n                </div>\n              </span>\n\n            </div>\n            <div className='footerBorder text-center'>\n              <button onClick={handleMoveToManagementWon}>Move to the Management</button>\n              <ConfettiComponent active={confetti} config={{ /* customize confetti config */ }} />\n            </div>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  )\n}\nexport default QuoteWon","import React, { useState,useEffect } from 'react';\nimport { ThreeDotsVertical, Layers ,Tag,ClockHistory,Send} from \"react-bootstrap-icons\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Popover from \"@mui/material/Popover\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { fetchduplicateData } from \"../../../../APIs/SalesApi\";\nimport { fetchhistoryData } from \"../../../../APIs/SalesApi\";\n\n// Define separate components for each option\nconst ResendPopover = ({ onClose }) => {\n  return (\n    <div style={{ padding: '10px' }}>\n      Resend Popover Content\n      <CloseIcon style={{ cursor: 'pointer', position: 'absolute', top: '5px', right: '5px' }} onClick={onClose} />\n    </div>\n  );\n};\n\nconst HistoryPopover = ({ onClose, historyData }) => {\n  return (\n    <div style={{ padding: '10px' }}>\n     {historyData}\n      <CloseIcon style={{ cursor: 'pointer', position: 'absolute', top: '5px', right: '5px' }} onClick={onClose} />\n    </div>\n  );\n};\n\nconst LabelPopover = ({ onClose }) => {\n  return (\n    <div style={{ padding: '10px' }}>\n      Label Popover Content\n      <CloseIcon style={{ cursor: 'pointer', position: 'absolute', top: '5px', right: '5px' }} onClick={onClose} />\n    </div>\n  );\n};\n\nconst ActionsDots = ({ saleUniqueId,refreshData }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [duplicateData, setDuplicateData] = useState([]);\n    const [historyData, setHistoryData] = useState([]);\n  \n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const data = await fetchhistoryData(saleUniqueId);\n  //       setHistoryData(data);\n  //     } catch (error) {\n  //       console.error('Error fetching history data:', error);\n  //       // Handle error, set default or empty value for historyData\n  //       setHistoryData([]);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  const handleClick = async (event, option) => {\n    if (option.label === \"Replicate\") {\n      try {\n        console.log('replicate....')\n        const data = await fetchduplicateData(saleUniqueId);\n        // setDuplicateData(data);\n        refreshData()\n        handleClose()\n      } catch (error) {\n        console.error('Error fetching duplicate data:', error);\n        // Handle error, set default or empty value for duplicateData\n        setDuplicateData([]);\n      }\n    } else {\n      setAnchorEl(event.currentTarget);\n      setSelectedOption(option);\n     \n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setSelectedOption(null);\n  };\n\n  const options = [\n    { label: \"Resend\",  icon: <Send color=\"#344054\" size={20} />, component: <ResendPopover onClose={handleClose} /> },\n    { label: \"History\", icon: <ClockHistory color=\"#344054\" size={20}/>, component: <HistoryPopover onClose={handleClose} historyData={historyData}/> },\n    { label: \"Label\", icon: <Tag color=\"#344054\" size={20}/>, component: <LabelPopover onClose={handleClose} /> },\n    { label: \"Replicate\", icon: <Layers color=\"#344054\" size={20} /> },\n  ];\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        id=\"long-button\"\n        aria-controls={anchorEl ? \"long-menu\" : undefined}\n        aria-expanded={anchorEl ? \"true\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={(event) => setAnchorEl(event.currentTarget)}\n      >\n        <ThreeDotsVertical size={24} color=\"#667085\" />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            borderBottom: \"1px solid #EAECF0\",\n            width: \"215px\",\n            padding: \"0\"\n          },\n        }}\n      >\n        {options.map((option) => (\n          <MenuItem className='LmenuList d-flex justify-content-between' key={option.label} onClick={(event) => handleClick(event, option)}>\n            {option.label}\n            {option.icon}\n          </MenuItem>\n        ))}\n      </Menu>\n      {selectedOption && selectedOption.label && (\n        <Popover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'center',\n          }}\n        >\n          {selectedOption.component}\n        </Popover>\n      )}\n    </>\n  );\n};\n\nexport default ActionsDots;","import React, { useState } from 'react';\nimport { Search } from 'react-bootstrap-icons';\n\nconst SearchFilter = ({ rowsFilter,onRowsFilterChange1 }) => {\n  const [query, setQuery] = useState('');\n  const [key, setKey] = useState(null);\n\n// Search Filter\nconst filterRows = (searchQuery) => {\n  setQuery(searchQuery);\n  const filteredRows = rowsFilter[0].filter((item) => {\n    return item.client.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  \n  onRowsFilterChange1(filteredRows);\n  if (searchQuery === '') {\n    setKey(null);\n  }\n};\n\nconst handleInputChange = (event) => {\n  setQuery(event.target.value);\n  if (event.target.value === '') {\n    setKey(null);\n  }\n};\n\n  return (\n    <div key={key}>\n      <span className='mr-3' onClick={() => filterRows(query)}>\n        <Search color='#98A2B3' size={20} />\n      </span>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={query}\n        onChange={handleInputChange}\n        onKeyUp={() => filterRows(query)}\n        key={key}\n      />\n    </div>\n  );\n};\n\nexport default SearchFilter\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport Flatpickr from \"react-flatpickr\";\n\nconst DateRangePicker = ({ onDataApply ,salesData}) => {\n  const [selectedDates, setSelectedDates] = useState([]);\n  const calendarRef = useRef(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [isApplying, setIsApplying] = useState(false);\n  const [formattedCurrentDate, setFormattedCurrentDate] = useState(\"\");\n\n  useEffect(() => {\n    const currentDate = new Date();\n    const formattedDate = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`;\n    setFormattedCurrentDate(formattedDate);\n  }, []);\n\n  const handleChange = (selectedDates) => {\n    setSelectedDates(selectedDates);\n  };\n\n  useEffect(()=> {\n    if (selectedDates.length === 2) {\n      const startDate = selectedDates[0];\n      const endDate = selectedDates[1];\n      setStartDate(startDate);\n      setEndDate(endDate);\n    }\n  }, [selectedDates])\n\n  const updateCustomDiv = () => {\n    const monthElement = document.querySelector(\".flatpickr-months\");\n    const existingCustomDiv = document.querySelector(\".custom-div p\");\n    if (startDate && endDate) {\n      if (existingCustomDiv) {\n        existingCustomDiv.textContent = `${startDate.toISOString().split('T')[0]} - ${endDate.toISOString().split('T')[0]}`;\n      } else {\n        if (monthElement) {\n            \n        }\n      }\n    }\n  };\n\n\n  const handleApply = () => {\n    updateCustomDiv();\n    setIsApplying(true);\n    onDataApply({ startDate, endDate });\n    const taggingElement = document.querySelector(\".tags-input-container .rangedatepicker .mainWrapperTags\");\n    if (taggingElement) {\n      taggingElement.textContent = `${startDate.toISOString().split('T')[0]} - ${endDate.toISOString().split('T')[0]}`;\n    }\n\n  };\n\n  const handleCancel = () => {\n    setSelectedDates([]);\n    setStartDate(null);\n    setEndDate(null);\n    setIsApplying(false);\n\n    const existingCustomDiv = document.querySelector(\".custom-div p\");\n    if (existingCustomDiv) {\n      existingCustomDiv.textContent = `${formattedCurrentDate}`;\n    }\n  };\n\n  const flatpickrOptions = {\n    dateFormat: \"Y-m-d\",\n    mode: \"range\",\n    inline: true,\n    onDayCreate: function(dObj, dStr, fp, dayElem){\n      if (Math.random() < 0.15)\n          dayElem.innerHTML += \"<span class='event'></span>\";\n      else if (Math.random() > 0.85)\n          dayElem.innerHTML += \"<span class='event busy'></span>\";\n  }\n  };\n\n  useEffect(() => {\n    if (isApplying) {\n    }\n  }, [isApplying]);\n\n  useEffect(() => {\n    if (!startDate && !endDate) {\n      const currentDate = new Date();\n      setStartDate(currentDate);\n      setEndDate(currentDate);\n    } else if (startDate && endDate) {\n      const currentDate = new Date();\n      const formattedCurrentDate = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`;\n      const textContent = `${startDate.toISOString().split('T')[0]} - ${endDate.toISOString().split('T')[0]}`;\n      const newContent = `<p>${textContent}</p><span>${formattedCurrentDate}</span>`;\n      const monthsElement = document.querySelector(\".flatpickr-months\");\n      if (monthsElement) {\n        const existingCustomDiv = document.querySelector(\".custom-div\");\n        if (existingCustomDiv) {\n          existingCustomDiv.innerHTML = newContent;\n        } else {\n          const customDiv = document.createElement('div');\n          customDiv.className = \"custom-div\";\n          customDiv.innerHTML = newContent;\n          monthsElement.parentNode.insertBefore(customDiv, monthsElement.nextSibling);\n        }\n      }\n    }\n  }, [startDate, endDate]);\n  \n  return (\n    <div>\n     \n      <Flatpickr\n        options={flatpickrOptions}\n        value={selectedDates}\n        onChange={handleChange}\n        ref={calendarRef}\n      />\n      <div className=\"calenderBut\">\n        <button className=\"tabCancel\" onClick={handleCancel}>Cancel</button>\n        <button className=\"tabApply\" onClick={handleApply}>Apply</button>\n      </div>\n    </div>\n  );\n};\n\nexport default DateRangePicker;\n","import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { PlusLg, ExclamationOctagon } from \"react-bootstrap-icons\";\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport NewQuoteImg from \"../../../../assets/images/img/newQuote.png\";\nimport \"./new-request/new-request.css\";\nimport { useNavigate } from 'react-router-dom';\n\nconst BankDetailsModel = () => {\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const navigate = useNavigate();\n\n  const handleAdd = () => {\n    \n    navigate(\"/settings/generalinformation/bank-details\" );\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button onClick={handleOpen} className=\"addNewBilling\">\n        <div className={`styleGrey01 tabActive`}>\n          New  <PlusLg color=\"#fff\" size={16} />\n        </div>\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box className=\"modelStyleBoxstatus NewQuoteModal\" sx={{ width: 732 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig d-flex justify-content-between align-items-start'>\n                <span className='modelHeadFlex'>\n                      <div className='iconinnerStyle1'>\n                        <ExclamationOctagon color=\"#F04438\" size={24} />\n                      </div>\n                  <h2>Complete Your Profile to Proceed</h2>\n                </span>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\">\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <div className='stepBoxStyle '>\n              <img src={NewQuoteImg} alt=\"NewQuoteImg\" />\n              <div className='newQuotewrap'>\n                <h3>Bank Details Required</h3>\n                <p>Before creating a new request, please ensure you have filled in your bank details. This is necessary to process your transactions smoothly. You can add your bank information by navigating to your profile settings. </p>\n              </div>\n              </div>\n              <div className='footerButton'>\n                <button className='Cancel' onClick={handleClose}>Cancel and Return</button>\n                <Button className='save' onClick={handleAdd}>Add Bank Details</Button>\n              </div>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  )\n}\n\nexport default BankDetailsModel;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  X,\n  Filter,\n  Person,\n  Check,\n  ViewStacked,\n  CalendarWeek,\n  PersonBoundingBox,\n  BarChartSteps,\n  Search,\n  XCircle,\n  Download,\n  PlusLg,\n  CheckCircle,\n} from \"react-bootstrap-icons\";\nimport SearchFilter from \"./search-filter\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport DateRangePicker from \"./date-range-picker\";\nimport { fetchMultipleData } from \"../../../../APIs/SalesApi\";\nimport { fetchMultipleLost } from \"../../../../APIs/SalesApi\";\nimport ConfettiComponent from \"../../../layout/ConfettiComponent\";\nimport BankDetailsModel from \"./bank-details-model\";\n\n\nconst TableTopBar = ({\n  rows,\n  rowsfilter,\n  onRowsFilterChange,\n  selectedUniqueIds,\n  salesData,\n  removeRowMulti,\n  selectedRowCount,\n  selectClass,\n  selectedRow,\n  setSelectedRows,\n  profileData\n}) => {\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [totalFAmount, setTotalFAmount] = useState(0);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [selectedRange, setSelectedRange] = useState([]);\n  const [message, setMessage] = useState({ content: \"\", type: \"success\" });\n  const [totalWonQuote, setTotalWonQuote] = useState(\n    sessionStorage.getItem(\"totalWonQuote\") || 0\n  );\n  const [confetti, setConfetti] = useState(false);\n  const filterDropdownRef = useRef(null);\n\n  const handleMoveToWon = async () => {\n    try {\n      if (selectedUniqueIds) {\n        const success = await fetchMultipleData(selectedUniqueIds);\n        if (success) {\n          setSelectedRows([]);\n          removeRowMulti();\n          setConfetti(true);\n          setMessage({\n            content: \"Successfully moved to Management!\",\n            type: \"success\",\n          });\n          const newTotalWonQuote = parseInt(totalWonQuote, 10) + 1;\n          setTotalWonQuote(newTotalWonQuote);\n          sessionStorage.setItem(\"totalWonQuote\", newTotalWonQuote);\n        } else {\n          setMessage({\n            content: \"Failed to move to Management. Please try again.\",\n            type: \"error\",\n          });\n        }\n      }\n    } catch (error) {\n      setMessage({\n        content: \"An error occurred. Please try again.\",\n        type: \"error\",\n      });\n    }\n  };\n  const handleMoveToLost = async () => {\n    try {\n      if (selectedUniqueIds) {\n        const success = await fetchMultipleLost(selectedUniqueIds);\n        if (success) {\n          setSelectedRows([]);\n          removeRowMulti();\n          setConfetti(true);\n          setMessage({\n            content: \"Successfully moved to Management!\",\n            type: \"success\",\n          });\n          const newTotalWonQuote = parseInt(totalWonQuote, 10) + 1;\n          setTotalWonQuote(newTotalWonQuote);\n          sessionStorage.setItem(\"totalWonQuote\", newTotalWonQuote);\n        } else {\n          setMessage({\n            content: \"Failed to move to Management. Please try again.\",\n            type: \"error\",\n          });\n        }\n      }\n    } catch (error) {\n      setMessage({\n        content: \"An error occurred. Please try again.\",\n        type: \"error\",\n      });\n    }\n  };\n\n  const formattedAmount = totalAmount.toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n  const formattedFAmount = totalFAmount.toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n\n\n  useEffect(() => {\n    if (rowsfilter) {\n      const calculatedFilterAmount = rowsfilter.reduce(\n        (total, sale) => total + sale.amountData,\n        0\n      );\n      setTotalFAmount(calculatedFilterAmount);\n    }\n  }, [rowsfilter]);\n\n\n  useEffect(() => {\n    if (salesData) {\n      const calculatedTotalAmount = salesData.reduce(\n        (total, sale) => total + sale.amount,\n        0\n      );\n      setTotalAmount(calculatedTotalAmount);\n    }\n  }, [salesData]);\n\n\n\n\n  const handleDataApply = (data) => {\n    const startDate = data.startDate\n      ? data.startDate.toISOString().split(\"T\")[0]\n      : \"\";\n    const endDate = data.endDate\n      ? data.endDate.toISOString().split(\"T\")[0]\n      : \"\";\n    let item = [`${startDate} - ${endDate}`];\n    setFilteredItems((prev) => {\n      return [...prev, item];\n    });\n    setSelectedRange(item);\n\n    setButtonClicked(false);\n    const filteredRows = rows[0].filter((item) => {\n      return (\n        selectedItems.includes(item.client.name) ||\n        selectedItems.includes(item.status) ||\n        selectedRange.includes(`${item.startDate} - ${item.endDate}`)\n      );\n    });\n    onRowsFilterChange(filteredRows);\n  };\n\n  useEffect(() => {\n    renderGroupedItems();\n  }, [selectedRange]);\n\n  const fullNames = [\n    ...new Set(salesData && salesData.map((item) => item.manager.full_name)),\n  ];\n  const statuses = Array.from(\n    new Set(salesData && salesData.map((item) => item.status))\n  );\n  const clientNames = Array.from(\n    new Set(salesData && salesData.map((item) => item.client.name))\n  );\n  const userNames = Array.from(\n    new Set(salesData && salesData.map((item) => item.manager.alias_name))\n  );\n  const lead = Array.from(\n    new Set(salesData && salesData.map((item) => item.lead.name))\n  );\n  const percentage = Array.from(\n    new Set(salesData && salesData.map((item) => item.lead.percentage))\n  );\n\n  const getStatusCount = (status) => {\n    return salesData.filter((item) => item.status === status).length;\n  };\n\n  const fullNamesJson = JSON.stringify(fullNames, null, 2);\n  const statusesJson = JSON.stringify(statuses, null, 2);\n  const leadJson = JSON.stringify(lead, null, 2);\n  const percentageJson = JSON.stringify(percentage, null, 2);\n  const fullNamesArray = JSON.parse(fullNamesJson);\n  const StatusesArray = JSON.parse(statusesJson);\n  const clientNamesJson = JSON.stringify(clientNames, null, 2);\n  const ClientNamesArray = JSON.parse(clientNamesJson);\n  const userNamesJson = JSON.stringify(userNames, null, 2);\n  const UserNamesArray = JSON.parse(userNamesJson);\n  const leadArray = JSON.parse(leadJson);\n  const percentageJsonArray = JSON.parse(percentageJson);\n\n  const handleCheckboxChange = (itemName) => {\n    setSelectedItems((prevSelectedItems) => {\n      if (prevSelectedItems.includes(itemName)) {\n        return prevSelectedItems.filter((item) => item !== itemName);\n      } else {\n        return [...prevSelectedItems, itemName];\n      }\n    });\n  };\n\n  const applyFilters = () => {\n    setFilteredItems(selectedItems);\n    setButtonClicked(false);\n    const filteredRows = rows[0].filter((item) => {\n      return (\n        selectedItems.includes(item.client.name) ||\n        selectedItems.includes(item.status)\n      );\n    });\n    onRowsFilterChange(filteredRows);\n    setButtonClicked(!buttonClicked);\n  };\n\n  const clearSelectedTags = () => {\n    setSelectedItems([]);\n\n    setButtonClicked(false);\n  };\n\n  const [key, setKey] = useState(fullNamesJson);\n\n  const groupSelectedItems = () => {\n    const isEmpty = Array.isArray(selectedRange) && selectedRange.length === 0;\n    const groupedItems = {\n      FullNames: [],\n      Status: [],\n      ClientNames: [],\n      UserNames: [],\n      DateRange: isEmpty ? [] : [selectedRange],\n    };\n\n    selectedItems.forEach((item) => {\n      if (fullNamesArray.includes(item)) {\n        groupedItems[\"FullNames\"].push(item);\n      } else if (StatusesArray.includes(item)) {\n        groupedItems.Status.push(item);\n      } else if (ClientNamesArray.includes(item)) {\n        groupedItems[\"ClientNames\"].push(item);\n      } else if (UserNamesArray.includes(item)) {\n        groupedItems[\"UserNames\"].push(item);\n      } else if (leadArray.includes(item)) {\n        groupedItems[\"UserNames\"].push(item);\n      } else if (selectedRange.includes(item)) {\n        groupedItems[\"DateRange\"].push(item);\n      }\n    });\n    return groupedItems;\n  };\n\n  const handleButtonClick = () => {\n    setButtonClicked(!buttonClicked);\n  };\n\n  const handleRemoveTag = (itemName) => {\n    setSelectedItems((prevSelectedItems) =>\n      prevSelectedItems.filter((item) => item !== itemName)\n    );\n    setSelectedRange((prevSelectedItems) =>\n      prevSelectedItems.filter((item) => item !== item)\n    );\n    onRowsFilterChange(salesData);\n  };\n\n  const handleRemovegroup = (groupName) => {\n    onRowsFilterChange(salesData);\n    setSelectedItems((prevSelectedItems) =>\n      prevSelectedItems.filter((item) => {\n        const groupItems = groupSelectedItems()[groupName];\n        return !groupItems.includes(item);\n      })\n    );\n\n    setSelectedRange((prevSelectedRange) =>\n      prevSelectedRange.filter(\n        (item) => !groupSelectedItems()[groupName].includes(item)\n      )\n    );\n  };\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  // Event handler for input change\n  const handleInputChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n  // Filter client names based on the search value\n  const filteredClientNames = ClientNamesArray.filter((itemName) =>\n    itemName.toLowerCase().includes(searchValue.toLowerCase())\n  );\n  const filteredUserNames = fullNamesArray.filter((itemName) =>\n    itemName.toLowerCase().includes(searchValue.toLowerCase())\n  );\n\n\n  const renderGroupedItems = () => {\n    const groupedItems = groupSelectedItems();\n    return (\n      <div className=\"mainTagsWrapper\">\n        {Object.entries(groupedItems).map(([group, items]) => (\n          <div key={group}>\n            {items.length > 0 && (\n              <div className=\"tags-input-container\">\n                <ul className={group}>\n                  {items.map((item, index) => (\n                    <li className=\"mainWrapperTags tag-item-wrap\" key={index}>\n                      {item}\n                      <Button\n                        variant=\"link\"\n                        size=\"sm\"\n                        style={{ marginLeft: \"5px\" }}\n                        onClick={() => handleRemoveTag(item)}\n                      >\n                        <X color=\"#F96969\" size={15} />\n                      </Button>\n                    </li>\n                  ))}\n                  <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    style={{ marginLeft: \"0px\" }}\n                    onClick={() => handleRemovegroup(group)}\n                  >\n                    <X color=\"#F96969\" size={20} />\n                  </Button>\n                </ul>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // When Click outside then close dropdown\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (\n        filterDropdownRef.current &&\n        !filterDropdownRef.current.contains(event.target)\n      ) {\n        if (!event.target.closest(\".tab-content,.nav-tabs\")) {\n          setButtonClicked(false);\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className={`${selectClass} flexbetween paddingLR tableTopBar tableTopBarSales`}>\n        {selectedRow.length === 0 ? (\n          <Container fluid>\n            <Row style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Col\n                style={{\n                  textAlign: \"left\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <div className=\"filterDropDown\">\n                  <Button\n                    ref={filterDropdownRef}\n                    variant=\"link\"\n                    onClick={handleButtonClick}\n                  >\n                    {buttonClicked ? (\n                      <Filter color=\"#344054\" size={20} />\n                    ) : (\n                      <Filter color=\"#344054\" size={20} />\n                    )}\n                  </Button>\n                </div>\n                <div className=\"filterSearch\">\n                  <SearchFilter\n                    onRowsFilterChange1={onRowsFilterChange}\n                    rowsFilter={rows}\n                  />\n                </div>\n              </Col>\n              <Col>\n                <div className=\"centerTabSales\">\n                  <ul>\n                    <li>\n                      <NavLink to=\"#\">Sales</NavLink>\n                    </li>\n                    <li>\n                      {profileData && profileData.bank_detail && profileData.bank_detail.account_number ? (\n                        <NavLink className=\"tabActive\" to=\"/sales/newquote/selectyourclient\">\n                          New <PlusLg color=\"#fff\" size={16} />\n                        </NavLink>\n                      ) : (\n                        <BankDetailsModel />\n                      )}\n                    </li>\n                  </ul>\n                </div>\n              </Col>\n              <Col style={{ textAlign: \"right\" }}>\n                {salesData && salesData.length > 0 ? (\n                  <p className=\"flexEndStyle styleT3\">\n                    Total{\" \"}\n                    <span className=\"styleT2\">\n\n                      {rowsfilter.length ? (\n                        <> {rowsfilter.length}</>\n                      ) : (\n                        <>{salesData.length} </>\n                      )}\n\n                      Sales</span>{\" \"}\n                    <strong className=\"styleT1\">\n                      ${formattedFAmount !== null && formattedFAmount !== undefined && formattedFAmount > 0 ? (\n                        <>{formattedFAmount}</>\n                      ) : (\n                        <>{formattedAmount}</>\n                      )}\n                    </strong>\n                  </p>\n                ) : (\n                  <p className=\"flexEndStyle styleT3\">\n                    Total <span className=\"styleT2\">0 Sales</span>{\" \"}\n                    <strong className=\"styleT1\">$0.00</strong>\n                  </p>\n                )}\n              </Col>\n            </Row>\n          </Container>\n        ) : (\n          <Container fluid>\n            <Row style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Col\n                style={{\n                  textAlign: \"left\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <span className=\"styleT4\">Selected:{selectedRowCount}</span>\n                <ul className=\"filterBtn\">\n                  <li>\n                    <Button variant=\"lostFilter\" onClick={handleMoveToLost}>\n                      Lost\n                      <XCircle color=\"#D92D20\" size={20} />\n                    </Button>\n                    <ConfettiComponent\n                      active={confetti}\n                      config={\n                        {\n                          /* customize confetti config */\n                        }\n                      }\n                    />\n                  </li>\n                  <li>\n                    {\" \"}\n                    <Button variant=\"wonFilter\" onClick={handleMoveToWon}>\n                      Won\n                      <CheckCircle color=\"#079455\" size={20} />\n                    </Button>\n                    <ConfettiComponent\n                      active={confetti}\n                      config={\n                        {\n                          /* customize confetti config */\n                        }\n                      }\n                    />\n                  </li>\n                  <li>\n                    <Button variant=\"downloadBtn\">\n                      <Download color=\"#344054\" size={20} />\n                    </Button>\n                  </li>\n                </ul>\n              </Col>\n              <Col>\n                <div className=\"centerTabSales\">\n                  <ul>\n                    <li>\n                      <NavLink to=\"/sales\">Sales</NavLink>\n                    </li>\n                    <li>\n                      {profileData && profileData.bank_detail && profileData.bank_detail.account_number ? (\n                        <NavLink className=\"tabActive\" to=\"/sales/newquote/selectyourclient\">\n                          New <PlusLg color=\"#fff\" size={16} />\n                        </NavLink>\n                      ) : (\n                        <BankDetailsModel />\n                      )}\n                    </li>\n                  </ul>\n                </div>\n              </Col>\n              <Col style={{ textAlign: \"right\" }}>\n                {salesData && salesData.length > 0 ? (\n                  <p className=\"flexEndStyle styleT3\">\n                    Total{\" \"}\n                    <span className=\"styleT2\">\n\n                      {rowsfilter.length ? (\n                        <> {rowsfilter.length}</>\n                      ) : (\n                        <>{salesData.length} </>\n                      )}\n\n                      Sales</span>{\" \"}\n                    <strong className=\"styleT1\">\n                      ${formattedFAmount !== null && formattedFAmount !== undefined && formattedFAmount > 0 ? (\n                        <>{formattedFAmount}</>\n                      ) : (\n                        <>{formattedAmount}</>\n                      )}\n                    </strong>\n                  </p>\n                ) : (\n                  <p className=\"flexEndStyle styleT3\">\n                    Total <span className=\"styleT2\">0 Sales</span>{\" \"}\n                    <strong className=\"styleT1\">$0.00</strong>\n                  </p>\n                )}\n              </Col>\n            </Row>\n          </Container>\n        )}\n      </div>\n      {buttonClicked && (\n        <Tabs\n          id=\"controlled-tab-example\"\n          activeKey={key}\n          onSelect={(k) => setKey(k)}\n          className=\"filtterBoxWrapper\"\n        >\n          <Tab\n            eventKey=\"DateRange\"\n            title={\n              <>\n                <CalendarWeek color=\"#667085\" size={16} /> Date Range\n              </>\n            }\n          >\n            <ul>\n              <DateRangePicker salesData={salesData} onDataApply={handleDataApply} />\n            </ul>\n          </Tab>\n          <Tab\n            eventKey=\"Progress\"\n            title={\n              <>\n                <BarChartSteps color=\"#667085\" size={16} /> Progress\n              </>\n            }\n          >\n            <ul>\n              {leadArray.map((itemName, index) => (\n                <li\n                  key={index}\n                  className={\n                    selectedItems.includes(itemName.name) ? \"checkedList\" : \"\"\n                  }\n                >\n                  <label className=\"customCheckBox\">\n                    <div className=\"userName\">\n                      <div className=\"ProgressTag\">\n                        <div className=\"option\" data-percentage=\"10\">\n                          <input\n                            type=\"checkbox\"\n                            value={itemName}\n                            checked={selectedItems.includes(itemName)}\n                            onChange={() => handleCheckboxChange(itemName)}\n                          />\n                          <span className=\"checkmark\">\n                            <Check color=\"#9E77ED\" size={20} />\n                          </span>\n                          <div className=\"progressWrapper\">\n                            <div className=\"labelInfo\">\n                              <strong>{itemName}</strong>\n                              <div className=\"progress-light-grey\">\n                                <div\n                                  className=\"progress-container progress-color progress-center\"\n                                  style={{\n                                    background: `linear-gradient(90deg, #1ab2ff ${percentageJsonArray[index]}%, transparent ${percentageJsonArray[index]}%)`,\n                                  }}\n                                  aria-valuenow={percentageJsonArray[index]}\n                                  aria-valuemin=\"0\"\n                                  aria-valuemax=\"100\"\n                                >\n                                  <span>{percentageJsonArray[index]}%</span>\n                                </div>\n                              </div>\n                            </div>\n                            <label>{percentageJsonArray[index]}%</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </label>\n                </li>\n              ))}\n              <Row className=\"buttomBottom d-flex justify-content-between align-items-center\">\n                <Col className=\"pr-2\">\n                  <Button\n                    variant=\"tabContent tabCancel\"\n                    onClick={clearSelectedTags}\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"tabContent tabApply\" onClick={applyFilters}>\n                    Apply\n                  </Button>\n                </Col>\n              </Row>\n            </ul>\n          </Tab>\n          <Tab\n            eventKey=\"FullName\"\n            title={\n              <>\n                <Person color=\"#667085\" size={16} /> User\n              </>\n            }\n          >\n            <ul>\n              <div className=\"filterSearch filterSearchTab\">\n                <span className=\"mr-3\">\n                  <Search color=\"#98A2B3\" size={20} />\n                </span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  value={searchValue}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"scrollItemsBox\">\n                {filteredUserNames.map((itemName, index) => (\n                  <li\n                    key={index}\n                    className={\n                      selectedItems.includes(itemName) ? \"checkedList\" : \"\"\n                    }\n                  >\n                    <label className=\"customCheckBox\">\n                      <div className=\"userName\">{itemName}</div>\n\n                      <input\n                        type=\"checkbox\"\n                        value={itemName}\n                        checked={selectedItems.includes(itemName)}\n                        onChange={() => handleCheckboxChange(itemName)}\n                      />\n                      <span className=\"checkmark\">\n                        <Check color=\"#9E77ED\" size={20} />\n                      </span>\n                    </label>\n                  </li>\n                ))}\n              </div>\n              <Row className=\"buttomBottom d-flex justify-content-between align-items-center\">\n                <Col className=\"pr-2\">\n                  <Button\n                    variant=\"tabContent tabCancel\"\n                    onClick={clearSelectedTags}\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"tabContent tabApply\" onClick={applyFilters}>\n                    Apply\n                  </Button>\n                </Col>\n              </Row>\n            </ul>\n          </Tab>\n          <Tab\n            eventKey=\"ClientNames\"\n            title={\n              <>\n                <PersonBoundingBox color=\"#667085\" size={16} />\n                Client\n              </>\n            }\n          >\n            <ul>\n              <div className=\"filterSearch filterSearchTab\">\n                <span className=\"mr-3\">\n                  <Search color=\"#98A2B3\" size={20} />\n                </span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  value={searchValue}\n                  onChange={handleInputChange}\n                />\n              </div>\n              {filteredClientNames.map((itemName, index) => (\n                <li\n                  key={index}\n                  className={\n                    selectedItems.includes(itemName) ? \"checkedList\" : \"\"\n                  }\n                >\n                  <label className=\"customCheckBox\">\n                    <div className=\"userName\">{itemName}</div>\n                    <input\n                      type=\"checkbox\"\n                      value={itemName}\n                      checked={selectedItems.includes(itemName)}\n                      onChange={() => handleCheckboxChange(itemName)}\n                    />\n                    <span className=\"checkmark\">\n                      <Check color=\"#9E77ED\" size={20} />\n                    </span>\n                  </label>\n                </li>\n              ))}\n              <Row className=\"buttomBottom d-flex justify-content-between align-items-center\">\n                <Col className=\"pr-2\">\n                  <Button\n                    variant=\"tabContent tabCancel\"\n                    onClick={clearSelectedTags}\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"tabContent tabApply\" onClick={applyFilters}>\n                    Apply\n                  </Button>\n                </Col>\n              </Row>\n            </ul>\n          </Tab>\n          <Tab\n            eventKey=\"Status\"\n            title={\n              <>\n                <ViewStacked color=\"#667085\" size={16} />\n                Status\n              </>\n            }\n          >\n            <ul>\n              {StatusesArray.map((itemName, index) => (\n                <li\n                  key={index}\n                  className={\n                    selectedItems.includes(itemName) ? \"checkedList\" : \"\"\n                  }\n                >\n                  <label className={`customCheckBox ${itemName}`}>\n                    <input\n                      type=\"checkbox\"\n                      value={itemName}\n                      onChange={() => handleCheckboxChange(itemName)}\n                      checked={selectedItems.includes(itemName)}\n                    />\n                    <span className=\"checkmark\">\n                      <Check color=\"#9E77ED\" size={20} />\n                    </span>\n                    <div className=\"userName\">\n                      <span className=\"NameStatus\">{itemName}</span>{\" \"}\n                      <span className=\"countStatus\">\n                        {getStatusCount(itemName)}\n                      </span>\n                    </div>\n                  </label>\n                </li>\n              ))}\n              <Row className=\"buttomBottom d-flex justify-content-between align-items-center\">\n                <Col className=\"pr-2\">\n                  <Button\n                    variant=\"tabContent tabCancel\"\n                    onClick={clearSelectedTags}\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"tabContent tabApply\" onClick={applyFilters}>\n                    Apply\n                  </Button>\n                </Col>\n              </Row>\n            </ul>\n          </Tab>\n        </Tabs>\n      )}\n      {filteredItems.length > 0 && renderGroupedItems()}\n    </>\n  );\n};\n\nexport default TableTopBar;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  PlusSlashMinus,\n  FilePdf,\n  Link45deg,\n  Check,\n  ChevronLeft, ArrowDown, ArrowUp, Person,\n} from \"react-bootstrap-icons\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Progress from \"./progress\";\nimport ContactSales from \"./contact-sales\";\nimport SalesNote from \"./sales-note\";\nimport NodataImg from \"../../../../assets/images/img/NodataImg.png\";\nimport nodataBg from \"../../../../assets/images/nodataBg.png\";\nimport SearchIcon from \"../../../../assets/images/icon/searchIcon.png\";\nimport Button from \"react-bootstrap/Button\";\nimport QuoteLost from \"./quote-lost\";\nimport QuoteWon from \"./quote-won\";\nimport ActionsDots from \"./actions-dots\";\n\nimport { Table } from \"react-bootstrap\";\nimport TableTopBar from \"./table-top-bar\";\nimport { Resizable } from 'react-resizable';\nimport { Avatar } from 'primereact/avatar';\nimport { AvatarGroup } from 'primereact/avatargroup';\n\nimport { OverlayPanel } from 'primereact/overlaypanel';\n        \n\nconst CustomAvatarGroup = ({ params }) => {\n  const op = useRef(null);\n\n  const handleAvatarGroupClick = (event) => {\n    op.current.toggle(event);\n  };\n\n  return (\n    <div>\n      <AvatarGroup onClick={handleAvatarGroupClick} style={{ cursor: \"pointer\" }}>\n        {params?.value?.slice(0, 3).map((data, index) => (\n          data?.has_photo\n          ? <Avatar key={index} image={data?.photo} size=\"small\" shape=\"circle\" />\n          : <Avatar key={index} label={data?.alias_name} style={{ fontSize: '12px' }} size=\"small\" shape=\"circle\" />\n        ))}\n        {params?.value?.length > 3 && (\n          <Avatar\n            label={`+${params.value.length - 3}`}\n            shape=\"circle\"\n            size=\"small\"\n            style={{ fontSize: '14px' }}\n          />\n        )}\n      </AvatarGroup>\n\n      <OverlayPanel className=\"salesOverlay\" ref={op}>\n        {params?.value?.map((data, index) => (\n          <div key={index} style={{ padding: \"0.5rem\", display: \"flex\", alignItems: \"center\" }}>\n            <Avatar image={data?.photo} shape=\"circle\" />\n            <div style={{ marginLeft: \"0.5rem\" }}>\n              <div className=\"fullnameText\">{data?.full_name}</div>\n            </div>\n          </div>\n        ))}\n      </OverlayPanel>\n    </div>\n  );\n};\n\n\nconst SalesTables = ({ profileData, salesData, fetchData }) => {\n  const [sortField, setSortField] = useState(\"Quote\");\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [salesDataState, setSalesDataState] = useState([]);\n  const [rows, setRows] = useState([]);\n  // Formate Date\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"short\",\n    }).format(date);\n    const year = date.getFullYear();\n    return `${day} ${monthAbbreviation} ${year}`;\n  };\n\n  const toggleSort = (field) => {\n    setSortField(field);\n    setSortDirection((prevDirection) =>\n      prevDirection === \"asc\" ? \"desc\" : \"asc\"\n    );\n  };\n\n  const sortedSalesData = [salesData && salesData].sort((a, b) => {\n    const aValue = a[sortField];\n    const bValue = b[sortField];\n\n    if (aValue === undefined || bValue === undefined) {\n      return 0;\n    }\n\n    if (sortDirection === \"asc\") {\n      return aValue.localeCompare(bValue, undefined, { numeric: true });\n    } else {\n      return bValue.localeCompare(aValue, undefined, { numeric: true });\n    }\n  });\n\n  const removeRow = () => {\n    fetchData()\n  };\n\n  const refreshData = () => {\n    fetchData()\n  }\n\n  const createSalesNote = (noteData, saleUniqueId) => (\n    <>\n      <SalesNote noteData={noteData} saleUniqueId={saleUniqueId} />\n    </>\n  );\n\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const handleSelectAllCheckboxChange = () => {\n    const allRowIds = salesData && salesData.length && salesData.map((sale) => sale.id);\n    if (selectedRows.length === allRowIds.length) {\n\n      setSelectedRows([]);\n    } else {\n\n      setSelectedRows(allRowIds);\n    }\n  };\n\n  const selectedRowsCount = selectedRows.length;\n  const [columns, setColumns] = useState([\n    {\n      field: \"Quote\",\n      width: 70,\n      headerName: (\n        <div className=\"styleColor1\" onClick={() => toggleSort(\"Quote\")}>\n          <span>Quote</span>\n          {sortField === \"Quote\" && (\n            <span>\n              {sortDirection === \"asc\" ? (\n                <ArrowUp size={16} color=\"#475467\" />\n              ) : (\n                <ArrowDown size={16} color=\"#475467\" />\n              )}\n            </span>\n          )}\n        </div>\n      ),\n\n      renderCell: (params) => (\n        <div className=\"innerFlex styleColor2 d-flex justify-content-between\">\n          <div className=\"styleColor1\">\n            <strong>{params.value}</strong>\n            <p>{formatDate(params.row.created)}</p>\n          </div>\n          <Link to={`/sales/quote-calculation/${params.row.unique_id}`}><Button className=\"linkByttonStyle\" variant=\"link\">Open</Button></Link>\n        </div>\n      ),\n    },\n\n    {\n      field: \"Client\",\n      width: 200,\n      headerName: (\n        <div className=\"styleColor1\" onClick={() => toggleSort(\"Client\")}>\n          <span>Client</span>\n          {sortField === \"Client\" && (\n            <span>\n              {sortDirection === \"asc\" ? (\n                <ArrowUp size={16} color=\"#475467\" />\n              ) : (\n                <ArrowDown size={16} color=\"#475467\" />\n              )}\n            </span>\n          )}\n        </div>\n      ),\n\n      renderCell: (params) => (\n        <div className=\"userImgStyle\">\n          <div className=\"innerFlex styleColor2 d-flex justify-content-between\">\n            <div className=\"leftStyle d-flex align-items-center\">\n              <img className={params.row.hasPhoto ? \"truePhotoStyle\" : \"falsePhotoStyle\"}\n                src={params.row.photo}\n                alt={params.row.photo}\n                style={{ marginRight: \"5px\" }}\n              />\n              <span>{params.value}</span>\n            </div>\n\n          </div>\n        </div>\n      ),\n\n    },\n    {\n      field: \"Reference\",\n      sortable: false,\n      headerName: \"Reference\",\n      renderCell: (params) => (\n        <div\n          className=\"mainStyle mainStyleMin\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          {params.value}\n        </div>\n      ),\n    },\n    {\n      field: \"Status\",\n      sortable: false,\n      headerName: (\n        <div className=\"styleColor1\" onClick={() => toggleSort(\"Status\")}>\n          <span>Status</span>\n          {sortField === \"Status\" && (\n            <span>\n              {sortDirection === \"asc\" ? (\n                <ArrowUp size={16} color=\"#475467\" />\n              ) : (\n                <ArrowDown size={16} color=\"#475467\" />\n              )}\n            </span>\n          )}\n        </div>\n      ),\n      width: 118,\n      renderCell: (params) => (\n        <div className={`statusInfo ${params.value}`}>\n          <Link to=\"/\" style={{ pointerEvents: 'none' }}>{params.value}</Link>\n        </div>\n      ),\n    },\n    {\n      field: \"Calculation\",\n      sortable: false,\n      headerName: \"Calculation\",\n      width: 147,\n      renderCell: (params) => (\n        <div>\n          <ul className=\"disPlayInline disPlayInlineCenter\">\n            <Link to={`/sales/quote-calculation/${params.row.unique_id}`}>\n              <li className=\"plusminus\">\n                <PlusSlashMinus color=\"#FDB022\" size={16} />\n              </li>\n            </Link>\n            <li className={`${params.row.Status}`}>\n              <Link to={params.row.CalculationPDF} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FilePdf color=\"#FF0000\" size={16} />\n              </Link>\n            </li>\n            <li className={`${params.row.Status}`}>\n              <Link to={`/quote/${params.row.unique_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Link45deg color=\"#3366CC\" size={16} />\n              </Link>\n            </li>\n          </ul>\n        </div>\n      ),\n    },\n    {\n      field: \"Note\",\n      sortable: false,\n      headerName: \"Note\",\n      width: 94,\n      renderCell: (params) => <div>{params.value}</div>,\n    },\n    {\n      field: \"User\",\n      sortable: false,\n      headerName: \"User\",\n      width: 56,\n      renderCell: (params) => {\n        return <CustomAvatarGroup params={params} />\n      }\n    },\n    {\n      field: \"Contact\",\n      sortable: false,\n      headerName: \"Contact\",\n      width: 183,\n      renderCell: (params) => (\n        <div>\n          <ContactSales type={params.value} saleUniqueId={params.row.saleUniqueId} refreshData={refreshData} />\n        </div>\n      ),\n    },\n    {\n      field: \"Progress\",\n      headerName: (\n        <div className=\"styleColor1\" onClick={() => toggleSort(\"Progress\")}>\n          <span>Progress</span>\n          {sortField === \"Progress\" && (\n            <span>\n              {sortDirection === \"asc\" ? (\n                <ArrowUp size={16} color=\"#475467\" />\n              ) : (\n                <ArrowDown size={16} color=\"#475467\" />\n              )}\n            </span>\n          )}\n        </div>\n      ),\n\n      width: 232,\n      renderCell: (params) => (\n        <div style={{ width: \"100%\" }}>\n          <Progress\n            progressName1={params.row.progressName}\n            progressPercentage1={params.row.progressPercentage} salesUniqId1={params.row.saleUniqueId} onRemoveRow={removeRow}\n          />\n        </div>\n      ),\n    },\n\n    {\n      field: \"W\",\n      sortable: false,\n      headerName: \"Lost / Won\",\n      width: 106,\n      renderCell: (params) => (\n        <div>\n          <div className=\"styleActionBtn\">\n            <QuoteLost\n              size={16}\n              color=\"#D92D20\"\n              LostQuote={params.row.LostQuote}\n              saleUniqueId={params.row.saleUniqueId}\n              saleId={params.row.id}\n              status={params.row.status}\n              onRemoveRow={removeRow}\n              fetchData1={setRows}\n              salesData={salesDataState}\n              quoteType=\"lost\"\n            />\n            <QuoteWon\n              size={16}\n              color=\"#079455\"\n              wonQuote={params.row.wonQuote}\n              saleUniqueId={params.row.saleUniqueId}\n              saleId={params.row.id}\n              status={params.row.status}\n              onRemoveRow={removeRow}\n              fetchData1={setRows}\n              salesData={salesDataState}\n              quoteType=\"won\"\n            />\n          </div>\n        </div>\n      ),\n    },\n    {\n      field: \"Actions\",\n      sortable: false,\n      headerName: \"Actions\",\n      width: 72,\n      className: \"ActionBtn\",\n      renderCell: (params) => (\n        <ActionsDots saleUniqueId={params.row.saleUniqueId} refreshData={refreshData} />\n      ),\n    },\n  ]);\n\n  useEffect(() => {\n    setSalesDataState([...salesData]);\n  }, [salesData]);\n\n  useEffect(() => {\n\n    const rows = salesData.map((sale) => ({\n      isSelected: selectedRows.includes(sale.id),\n      unique_id: sale.unique_id,\n      id: sale.id,\n      Quote: sale.number,\n      created: sale.created,\n      Client: sale.client.name,\n      photo: sale.client.photo,\n      hasPhoto: sale.client.has_photo,\n      Reference: sale.reference,\n      Status: sale.status,\n      Calculation: sale.calculation,\n      CalculationPDF: sale.quote_url,\n      CalculationURL: sale.unique_url,\n      Note: createSalesNote(sale.sales_note, sale.unique_id),\n      User: sale.managers,\n      fullName: sale.manager.full_name,\n      Contact: sale.sales_contacts,\n      progressName: sale.lead.name,\n      progressPercentage: sale.lead.percentage,\n      saleUniqueId: sale.unique_id,\n      wonQuote: (sale.number, sale.status),\n      LostQuote: (sale.number, sale.status),\n      amountData: sale.amount,\n      Actions: \"Actions\",\n    }));\n    setRows(rows)\n  }, [salesData, selectedRows])\n\n\n\n  const onResize = (index) => (event, { size }) => {\n    setColumns((prevColumns) => {\n      const nextColumns = [...prevColumns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width,\n      };\n      return nextColumns;\n    });\n  };\n\n\n  const handleCheckboxChange = (rowId) => {\n    const updatedSelectedRows = [...selectedRows];\n    if (updatedSelectedRows.includes(rowId)) {\n      // Row is already selected, remove it\n      updatedSelectedRows.splice(updatedSelectedRows.indexOf(rowId), 1);\n\n    } else {\n      // Row is not selected, add it\n      updatedSelectedRows.push(rowId);\n    }\n    setSelectedRows(updatedSelectedRows);\n  };\n\n  // Define selected1UniqueIds as a function that returns the selected unique IDs\n  const selected1UniqueIds = () => {\n    // Get the unique_id of the selected rows\n    const selectedUniqueIds = salesData\n      .filter(row => selectedRows.includes(row.id))\n      .map(row => row.unique_id);\n    return selectedUniqueIds;\n  };\n\n  const isSelected = selectedRows.length > 0;\n  const [rowsfilter, setRowsFilter] = useState([]);\n  const handleRowsFilterChange = (filteredRows) => {\n    const rows = filteredRows.map((sale) => ({\n      isSelected: selectedRows.includes(sale.id),\n      id: sale.id,\n      Quote: sale.number,\n      created: sale.created,\n      Client: sale.client.name,\n      photo: sale.client.photo,\n      Reference: sale.reference,\n      Status: sale.status,\n      Calculation: sale.calculation,\n      CalculationPDF: sale.quote_url,\n      CalculationURL: sale.unique_url,\n      Note: createSalesNote(sale.sales_note, sale.unique_id),\n      User: sale.managers,\n      fullName: sale.manager.full_name,\n      Contact: sale.sales_contacts,\n      progressName: sale.lead.name,\n      progressPercentage: sale.lead.percentage,\n      saleUniqueId: sale.unique_id,\n      wonQuote: (sale.number, sale.status),\n      LostQuote: (sale.number, sale.status),\n      amountData: sale.amount,\n      Actions: \"Actions\",\n    }));\n    setRows(rows);\n    setRowsFilter(rows);\n  };\n\n\n  return (\n    <div className=\"salesTableWrap\">\n      <TableTopBar profileData={profileData} salesData={salesData} rowsfilter={rowsfilter} removeRowMulti={removeRow} selectedUniqueIds={selected1UniqueIds()} onRowsFilterChange={handleRowsFilterChange} rows={sortedSalesData} setSelectedRows={setSelectedRows} selectedRow={selectedRows} selectClass={isSelected ? \"selected-row\" : \"\"} selectedRowCount={selectedRowsCount} />\n      <Table responsive>\n        <thead style={{ position: \"sticky\", top: \"0px\", zIndex: 9 }}>\n          <tr>\n            <th>\n              <label className=\"customCheckBox\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRows.length === salesData.length}\n                  onChange={handleSelectAllCheckboxChange}\n                />\n                <span className=\"checkmark\">\n                  <Check color=\"#1AB2FF\" size={20} />\n                </span>\n              </label>\n            </th>\n            {columns.map((column, index) => (\n              <th key={column.field} style={{ width: column.width }}>\n                <Resizable\n                  width={column.width || 100} // Provide a default width if undefined\n                  height={0}\n                  onResize={onResize(index)}\n                >\n                  <div>\n                    {column.headerName}\n                  </div>\n                </Resizable>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.length === 0 ? (\n            <tr className=\"nodataTableRow\">\n              <td colSpan={columns.length} style={{ textAlign: \"center\" }}>\n                <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                  <div\n                    className=\"Nodata\"\n                    style={{ background: `url(${nodataBg})` }}\n                  >\n                    <div className=\"image\">\n                      <img src={NodataImg} alt=\"NodataImg\" />\n                      <img\n                        className=\"SearchIcon\"\n                        src={SearchIcon}\n                        alt=\"SearchIcon\"\n                      />\n                    </div>\n                    <h2>There is no results</h2>\n                    <p>\n                      The user you are looking for doesn't exist. Here are some\n                      helpful links:\n                    </p>\n                    <Button className=\"gobackButton mb-4 mt-4\" variant=\"link\">\n                      {\" \"}\n                      <ChevronLeft color=\"#000\" size={20} />\n                      Go back\n                    </Button>\n                    <Button className=\"gobackSupport mt-4\" variant=\"link\">\n                      {\" \"}\n                      Support\n                    </Button>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          ) : (\n            rows.map((row) => (\n              <tr data-saleuniqueid={row.saleUniqueId}\n                key={row.id} className={row.isSelected ? \"selected-row\" : \"\"}>\n                <td>\n                  <label className=\"customCheckBox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedRows.includes(row.id)}\n                      onChange={() => handleCheckboxChange(row.id)}\n                    />\n                    <span className=\"checkmark\">\n                      <Check color=\"#1AB2FF\" size={20} />\n                    </span>\n                  </label>\n                </td>\n                {columns.map((column) => (\n                  <td key={column.field}>\n                    {column.renderCell({ value: row[column.field], row })}\n                  </td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default SalesTables\n","import React, { useState, useEffect } from \"react\";\nimport \"./sales-style.css\";\nimport SalesTables from \"./sales-tables\";\nimport { fetchSales } from \"../../../../APIs/SalesApi\";\n\nconst Sales = () => {\n  const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n  const [salesData, setSalesData] = useState([]);\n  useEffect(() => {\n    fetchData(); \n  }, []);\n  const fetchData = async () => {\n    try {\n      const data = await fetchSales();\n      const parsedData = JSON.parse(data);\n      setSalesData(parsedData);\n    } catch (error) {\n      console.error('Error fetching sales data:', error);\n    }\n  };\n\n  return (\n    <>\n      <SalesTables profileData={profileData} salesData={salesData} fetchData={fetchData}  />\n    </>\n  );\n};\n\nexport default Sales;\n"],"names":["API_BASE_URL","process","fetchSales","async","myHeaders","Headers","accessToken","localStorage","getItem","append","requestOptions","method","headers","redirect","response","fetch","text","error","console","fetchSalesNotes","saleUniqueId","updatedNote","body","JSON","stringify","sales_note","ok","errorText","Error","status","result","trim","parse","markWon","options","ids","url","URL","fetchAPI","toString","markLost","fetchContacts","formData","log","fetchSaleslead","updatedLead","lead","unique_id","fetchMultipleData","selectedUniqueIds","responses","Promise","all","map","json","fetchduplicateData","fetchMultipleLost","_ref","percentage","selectlabel","_jsxs","_Fragment","children","className","_jsx","Option","label","gradient","onSelect","isActive","onClick","name","type","checked","style","background","_ref2","progressName1","progressPercentage1","salesUniqId1","onRemoveRow","dataUpdate","selectedOption","setSelectedOption","useState","dropdownOpen","setDropdownOpen","setUpdatedLead","toggleOptions","document","querySelectorAll","forEach","dropdown","classList","remove","prevState","CircleProgressBar","ChevronDown","color","size","option","newUpdatedLead","selectOption","saleUniqueIdold","contactRefresh","radioValue","setRadioValue","value","setValue","dayjs","note","setNote","show","setShow","validationError","setValidationError","handleClose","refreshData","radios","icon","Envelope","Telephone","Calendar","validateForm","Button","variant","handleShow","PlusLg","Modal","centered","onHide","animation","Header","closeButton","src","saleContact","alt","Body","ButtonGroup","radio","idx","ToggleButton","id","onChange","e","currentTarget","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","newValue","slots","openPickerIcon","Typography","sx","p","Form","Control","as","placeholder","height","target","nextDay","Date","setDate","getDate","date","format","formatDate","timestamp","Intl","DateTimeFormat","month","getFullYear","popoverVisible","setPopoverVisible","React","handlePopoverClose","item","index","ButtonToolbar","OverlayTrigger","trigger","rootClose","placement","overlay","Popover","title","styles","phonecallgra","mailgradi","calendargradi","X","btnsSecondary","length","btn","click","handlePopoverClick","ContactAdd","props","anchorEl","setAnchorEl","noteText","setNoteText","noteData","isEditMode","setIsEditMode","isViewMode","setIsViewMode","open","Boolean","undefined","event","cursor","CheckLg","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","width","FileEarmarkPlus","IconButton","CloseIcon","readOnly","active","config","Confetti","salesData","LostQuote","quoteType","setOpen","confetti","setConfetti","message","setMessage","content","totalWonQuote","setTotalWonQuote","sessionStorage","setTimeout","useEffect","setItem","handleOpen","XCircle","Box","component","Archive","edge","SalesIcon","ProgressLogo","ArchiveIcon","newTotalWonQuote","parseInt","wonQuote","CheckCircle","Check2Circle","ManagementIcon","ConfettiComponent","ResendPopover","padding","position","top","right","HistoryPopover","historyData","LabelPopover","_ref3","_ref4","duplicateData","setDuplicateData","setHistoryData","Send","ClockHistory","Tag","Layers","ThreeDotsVertical","Menu","borderBottom","MenuItem","handleClick","rowsFilter","onRowsFilterChange1","query","setQuery","key","setKey","filterRows","searchQuery","filteredRows","filter","client","toLowerCase","includes","Search","onKeyUp","onDataApply","selectedDates","setSelectedDates","calendarRef","useRef","startDate","setStartDate","endDate","setEndDate","isApplying","setIsApplying","formattedCurrentDate","setFormattedCurrentDate","currentDate","formattedDate","getMonth","padStart","flatpickrOptions","dateFormat","mode","inline","onDayCreate","dObj","dStr","fp","dayElem","Math","random","innerHTML","newContent","toISOString","split","monthsElement","querySelector","existingCustomDiv","customDiv","createElement","parentNode","insertBefore","nextSibling","Flatpickr","ref","handleCancel","textContent","handleApply","updateCustomDiv","taggingElement","BankDetailsModel","navigate","useNavigate","ExclamationOctagon","NewQuoteImg","handleAdd","rows","rowsfilter","onRowsFilterChange","removeRowMulti","selectedRowCount","selectClass","selectedRow","setSelectedRows","profileData","totalAmount","setTotalAmount","totalFAmount","setTotalFAmount","selectedItems","setSelectedItems","buttonClicked","setButtonClicked","filteredItems","setFilteredItems","selectedRange","setSelectedRange","filterDropdownRef","formattedAmount","toLocaleString","minimumFractionDigits","maximumFractionDigits","formattedFAmount","calculatedFilterAmount","reduce","total","sale","amountData","calculatedTotalAmount","amount","renderGroupedItems","fullNames","Set","manager","full_name","statuses","Array","from","clientNames","userNames","alias_name","fullNamesJson","statusesJson","leadJson","percentageJson","fullNamesArray","StatusesArray","clientNamesJson","ClientNamesArray","userNamesJson","UserNamesArray","leadArray","percentageJsonArray","handleCheckboxChange","itemName","prevSelectedItems","applyFilters","clearSelectedTags","groupSelectedItems","groupedItems","FullNames","Status","ClientNames","UserNames","DateRange","isArray","push","searchValue","setSearchValue","handleInputChange","filteredClientNames","filteredUserNames","Object","entries","group","items","marginLeft","handleRemoveTag","handleRemovegroup","groupName","prevSelectedRange","handleOutsideClick","current","contains","closest","addEventListener","removeEventListener","Container","fluid","Row","display","alignItems","Col","textAlign","handleButtonClick","Filter","SearchFilter","NavLink","to","bank_detail","account_number","Download","Tabs","activeKey","k","Tab","eventKey","CalendarWeek","DateRangePicker","data","prev","BarChartSteps","Check","Person","PersonBoundingBox","ViewStacked","CustomAvatarGroup","_params$value","_params$value2","_params$value3","params","op","AvatarGroup","toggle","slice","has_photo","Avatar","image","photo","shape","fontSize","OverlayPanel","fetchData","sortField","setSortField","sortDirection","setSortDirection","salesDataState","setSalesDataState","setRows","toggleSort","field","prevDirection","sortedSalesData","sort","a","b","aValue","bValue","localeCompare","numeric","removeRow","createSalesNote","SalesNote","selectedRows","selectedRowsCount","columns","setColumns","headerName","ArrowUp","ArrowDown","renderCell","row","created","Link","hasPhoto","marginRight","sortable","whiteSpace","pointerEvents","PlusSlashMinus","CalculationPDF","rel","FilePdf","Link45deg","ContactSales","Progress","progressName","progressPercentage","QuoteLost","saleId","fetchData1","QuoteWon","ActionsDots","isSelected","Quote","number","Client","Reference","reference","Calculation","calculation","quote_url","CalculationURL","unique_url","Note","User","managers","fullName","Contact","sales_contacts","Actions","onResize","prevColumns","nextColumns","setRowsFilter","TableTopBar","Table","responsive","zIndex","handleSelectAllCheckboxChange","allRowIds","column","Resizable","colSpan","marginTop","nodataBg","NodataImg","SearchIcon","ChevronLeft","rowId","updatedSelectedRows","splice","indexOf","Sales","window","setSalesData","parsedData","SalesTables"],"sourceRoot":""}