{"version":3,"file":"static/js/1281.230c8002.chunk.js","mappings":"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","sources":["APIs/expenses-api.js","webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","APIs/base-api.js","shared/ui/circular-progressbar/index.js","APIs/jobs-api.js","APIs/email-template.js","APIs/team-api.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfExpense = async (page, limit, search = \"\", order = \"\", isShowUnpaid) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/expenses/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowUnpaid) url.searchParams.append('status', 'not_paid');\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getXeroCodesList = async () => {\n  const endpoint = `/references/xero-codes/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProjectsList = async () => {\n  const endpoint = `/references/projects/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getExpense = async (id) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewExpense = async (data) => {\n  const endpoint = '/expenses/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateExpense = async (id, data) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const paidExpense = async (data) => {\n  const endpoint = '/expenses/paid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const unpaidExpense = async (data) => {\n  const endpoint = '/expenses/unpaid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendExpenseToXeroApi = async (data) => {\n  const endpoint = `/expenses/to-xero/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteExpense = async (uniqueId) => {\n  const endpoint = `/expenses/delete/${uniqueId}/`;\n  const options = {\n    method: 'DELETE'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const downloadStatement = async (data) => {\n  const endpoint = '/clients/statement/pdf/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendStatementEmail = async (data) => {\n  const endpoint = '/clients/statement/send/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileTypeSmall\":\"create-job_fileTypeSmall__tBXk4\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { getProjectsList } from '../../../../APIs/expenses-api';\nimport { createNewJob, updateJob } from '../../../../APIs/jobs-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\nexport function getFileIcon(fileType, size = 32) {\n    if (fileType) fileType = fileType?.toLowerCase();\n\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n        'zip': { name: 'ZIP', color: '#FFD700' },\n        'rar': { name: 'RAR', color: '#F44336' },\n        'ppt': { name: 'PPT', color: '#FF9800' },\n        'pub': { name: 'Publisher', color: '#4CAF50' },\n        'swf': { name: 'SWF', color: '#FFEB3B' },\n        'tar': { name: 'TAR', color: '#FFC107' },\n        'pdf': { name: 'PDF', color: '#D92D20' },\n        'doc': { name: 'Word', color: '#2368E1' },\n        'docx': { name: 'Word', color: '#2368E1' },\n        'xls': { name: 'Excel', color: '#22A746' },\n        'xlsx': { name: 'Excel', color: '#22A746' },\n        'jpg': { name: 'JPEG', color: '#FFAA00' },\n        'jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'png': { name: 'PNG', color: '#00ADEF' },\n        'gif': { name: 'GIF', color: '#F64A8A' },\n        'mp4': { name: 'MP4', color: '#9C27B0' },\n        'mp3': { name: 'MP3', color: '#4CAF50' },\n        'wav': { name: 'WAV', color: '#795548' },\n        'txt': { name: 'Text', color: '#8E8E8E' },\n        'json': { name: 'JSON', color: '#22A746' },\n        'svg': { name: 'SVG', color: '#FF5722' },\n        'pptx': { name: 'PPT', color: '#FF9800' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={`${style.fileType} ${size != 32 ? style.fileTypeSmall : ''}`}>{fileData.name}</div>\n        </div>\n    );\n}\n\nconst CreateJob = ({ visible, setVisible, setRefetch = () => { }, workerId, isEditMode = false, jobData = null, jobId = null, jobProjectId, refetch = () => { } }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n    const publishRef = useRef(null);\n    const url = React.useMemo(() => window.location.href, []);\n    const urlObj = React.useMemo(() => new URL(url), [url]);\n    const params = React.useMemo(() => new URLSearchParams(urlObj.search), [urlObj]);\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            const newFiles = acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file),\n                progress: 0,\n            }));\n\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...newFiles,\n            ]);\n        }\n    });\n\n\n    // @type and @time_type\n    // type: 2 - fix, 3 - hours, 4 - time tracker\n    // time_type: 1 - shift, T - time frame \n    const [type, setType] = useState('2');\n    const [time_type, set_time_type] = useState('1');\n\n    const [cost, setCost] = useState(0.00);\n    const today = new Date();\n    const [start, setStart] = useState(today);\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"1.00\");\n    const [dayShiftHours, setDayShiftHours] = useState(\"1.00\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileUserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({ queryKey: ['getProjectsList'], queryFn: getProjectsList, staleTime: 0 });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    {option?.image === \"openJob\"\n                        ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                            <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                        </svg>\n                        : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    }\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        {option?.image === \"openJob\"\n                            ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                                <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                            </svg>\n                            : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                        }\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('1');\n        setStart(today);\n        setEnd(\"\");\n        setDuration(\"1.00\");\n        setDayShiftHours(\"1.00\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            // Limit job reference to 50 characters when loading from template\n            const templateTitle = getTemplateByIDQuery?.data?.title || \"\";\n            setJobReference(templateTitle.substring(0, 50));\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    useEffect(() => {\n        const projectParamId = params.get('projectId');\n        const reference = params.get('reference');\n        if (reference) {\n            setJobReference(reference);\n            urlObj.searchParams.delete('reference');\n            window.history.replaceState({}, '', urlObj);\n        }\n\n        if (projectParamId) {\n            setVisible(true);\n            setProjectId(+projectParamId);\n            urlObj.searchParams.delete('projectId');\n            window.history.replaceState({}, '', urlObj);\n        }\n    }, [setVisible, params, urlObj]);\n\n    const uploadToS3 = async (file, url) => {\n        try {\n            const response = await axios.put(url, file, {\n                headers: {\n                    \"Content-Type\": \"\",\n                },\n                onUploadProgress: (progressEvent) => {\n                    const progress = Math.round(\n                        (progressEvent.loaded / progressEvent.total) * 100\n                    );\n                    setFiles((prevFiles) => {\n                        return prevFiles.map((f) =>\n                            f.name === file.name\n                                ? Object.assign(f, { progress, url })\n                                : f\n                        );\n                    });\n                },\n            });\n\n            // Mark as successfully uploaded\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 100, uploaded: true })\n                        : f\n                );\n            });\n\n            return response;\n        } catch (err) {\n            // Handle specific error types\n            let errorMessage = \"Upload failed\";\n\n            if (err.response) {\n                if (err.response.status === 403) {\n                    errorMessage = \"Permission denied (403 Forbidden)\";\n                } else {\n                    errorMessage = `Server error: ${err.response.status}`;\n                }\n            } else if (err.request) {\n                errorMessage = \"No response from server\";\n            } else {\n                errorMessage = err.message;\n            }\n\n            console.error(`Error uploading ${file.name}:`, errorMessage);\n\n            // Update file with error status but don't stop other uploads\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, {\n                            progress: 0,\n                            error: true,\n                            errorMessage,\n                            uploadFailed: true\n                        })\n                        : f\n                );\n            });\n\n            // Return error object instead of throwing\n            return { error: true, message: errorMessage };\n        }\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            if (file.error || !file.url) continue;\n\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        let successCount = 0;\n        let errorCount = 0;\n\n        // Process each file independently\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n                if (!url) {\n                    console.error(`No URL returned for file: ${file.name}`);\n                    errorCount++;\n                    continue;\n                }\n\n                // Step 2: Upload the file to S3 using the signed URL\n                const result = await uploadToS3(file, url);\n\n                // Check if upload was successful\n                if (result && !result.error) {\n                    successCount++;\n                } else {\n                    errorCount++;\n                }\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n\n                // Update file with error status\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, {\n                                progress: 0,\n                                error: true,\n                                errorMessage: error.message || \"Failed to get upload URL\",\n                                uploadFailed: true\n                            })\n                            : f\n                    );\n                });\n\n                errorCount++;\n                // Continue with next file instead of stopping\n            }\n        }\n\n        // Show summary toasts\n        if (successCount > 0) {\n            toast.success(`Successfully uploaded ${successCount} file(s)`);\n        }\n        if (errorCount > 0) {\n            toast.error(`Failed to upload ${errorCount} file(s)`);\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => {\n            if (isEditMode && jobId) {\n                return updateJob(jobId, data);\n            } else {\n                return createNewJob(data);\n            }\n        },\n        onSuccess: async (response) => {\n            const id = isEditMode ? jobId : response.id;\n\n            if (files.length > 0) {\n                await fileUploadBySignedURL(id);\n                await attachmentsUpdateInJob(id);\n            }\n\n            // Call setRefetch to trigger a refresh in the parent component\n            if (jobData) refetch();\n            setRefetch((prev) => !prev);\n\n            toast.success(`Job ${isEditMode ? 'updated' : 'created'} successfully`);\n            setVisible(false);\n            reset();\n            publishRef.current = null;\n        },\n        onError: (error) => {\n            publishRef.current = null;\n            console.error(`Error ${isEditMode ? 'updating' : 'creating'} job:`, error);\n            toast.error(`Failed to ${isEditMode ? 'update' : 'create'} job. Please try again.`);\n        }\n    });\n\n    const onSubmit = (isPublish) => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else if (userId && userId != \"0\") payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (!duration || Number(duration) <= 0) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        if ((time_type === '1' && type === '3') && !dayShiftHours) tempErrors.dayShiftHours = true;\n        else if ((time_type === '1' && type === '3') && dayShiftHours) {\n            const safeDuration = duration || 0;\n            const safeDayShiftHours = dayShiftHours || 0;\n            const workDays =\n                safeDayShiftHours > 0\n                    ? safeDuration / safeDayShiftHours\n                    : 0;\n            const hoursToAdd = workDays * 24; // convert working days to calendar time in hours\n            payload.end_date = new Date(new Date(start).getTime() + (hoursToAdd * 60 * 60 * 1000)).toISOString();\n        }\n\n        if (projectId) {\n            const project = projectQuery?.data?.find(project => project.id === projectId);\n            if (project) payload.project = project.unique_id;\n        }\n\n        if (type === '2' && (!cost || cost == '0.00')) tempErrors.cost = true;\n        else if (type === '2') payload.cost = cost;\n        else if (payload.duration && hourlyRate) {\n            payload.cost = parseFloat(+payload.duration * +hourlyRate).toFixed(2);\n        }\n\n        if (projectPhotoDeliver)\n            payload.project_photos = projectPhotoDeliver;\n\n        payload.published = isPublish;\n        publishRef.current = isPublish;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        console.log('payload: ', payload);\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = useCallback((id) => {\n        let user = mobileUserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setHourlyRate(parseFloat(user?.hourly_rate || 0).toFixed(2));\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        } else {\n            setHourlyRate(0);\n        }\n    }, [mobileUserQuery?.data?.users]);\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId || \"0\");\n            workerDetailsSet(+workerId || \"\");\n        }\n    }, [workerId, workerDetailsSet]);\n\n    useEffect(() => {\n        if (jobProjectId) {\n            setProjectId(+jobProjectId);\n        }\n    }, [jobProjectId]);\n\n    // Populate form with job data when in edit mode\n    useEffect(() => {\n        if (isEditMode && jobData && projectQuery?.data) {\n            // Set job reference and description\n            setJobReference(jobData.short_description || \"\");\n            setDescription(jobData.long_description || \"\");\n\n            // Set worker details\n            if (jobData.worker) {\n                setUserId(jobData.worker.id);\n                workerDetailsSet(jobData.worker.id);\n            }\n\n            // Set project\n            if (jobData.project) {\n                const project = projectQuery?.data?.find(project => project.unique_id === jobData.project.unique_id);\n                setProjectId(project?.id || \"\");\n            }\n\n            // Set payment type and cost\n            setType(jobData.type || \"2\");\n            setCost(jobData.cost || 0.00);\n\n            // Set time type and duration\n            set_time_type(jobData.time_type || \"\");\n            setDuration(jobData.duration || \"\");\n\n            // Set dates\n            if (jobData.start_date) {\n                const startDate = new Date(+jobData.start_date * 1000);\n                setStart(startDate);\n            }\n            if (jobData.end_date) {\n                const endDate = new Date(+jobData.end_date * 1000);\n                setEnd(endDate);\n            }\n\n            // set day shift hours\n            // if (jobData.time_type === '1' && jobData.type === '3') {\n            const startDate = new Date(+jobData.start_date * 1000);\n            const endDate = new Date(+jobData.end_date * 1000);\n            const diffInMs = endDate - startDate;\n            const dayCount = diffInMs / (24 * 60 * 60 * 1000);\n            const durationInHours = Number(jobData.duration) || 0;\n            const dayShiftHours =\n                dayCount > 0\n                    ? Math.round((durationInHours / dayCount) * 100) / 100\n                    : 0;\n            setDayShiftHours(dayShiftHours.toFixed(2));\n            // }\n\n            // Set project photos\n            setProjectPhotoDeliver(jobData.project_photos || \"3\");\n\n            // Set attachments if available\n            if (jobData.attachments && jobData.attachments.length > 0) {\n                setFiles(jobData.attachments.map(attachment => ({\n                    name: attachment.name,\n                    size: attachment.size,\n                    url: attachment.link,\n                    progress: 100,\n                    isExisting: true\n                })));\n            }\n        }\n    }, [isEditMode, jobData, workerDetailsSet, projectQuery?.data]);\n\n    useEffect(() => {\n        if (mobileUserQuery?.data && userId && ((time_type === '1' && type === '2') || (time_type === 'T' && type === '4'))) {\n            const findUser = mobileUserQuery?.data?.users.find((user) => user.id === userId);\n            if (findUser) {\n                let duration = cost / findUser?.hourly_rate;\n                setDuration(parseFloat(duration).toFixed(2));\n            }\n        }\n\n        if (userId === '0' && +hourlyRate && ((time_type === '1' && type === '2') || (time_type === 'T' && type === '4'))) {\n            let duration = cost / hourlyRate;\n            setDuration(parseFloat(duration).toFixed(2));\n        }\n    }, [cost, mobileUserQuery?.data, userId, time_type, type, hourlyRate]);\n\n    useEffect(() => {\n        if (type === '4') set_time_type('T');\n    }, [type]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => { setVisible(false); reset(); }} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            {!isEditMode && (\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <Dropdown\n                                        options={\n                                            (templateQuery &&\n                                                templateQuery.data?.map((template) => ({\n                                                    value: template.id,\n                                                    label: `${template.name}`,\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\"\n                                        )}\n                                        style={{ height: \"44px\", width: '606px' }}\n                                        placeholder=\"Select template\"\n                                        onChange={(e) => {\n                                            setTemplatedId(e.value);\n                                        }}\n                                        value={templateId}\n                                        loading={templateQuery?.isFetching}\n                                        filter\n                                        filterInputAutoFocus={true}\n                                    />\n                                </div>\n                            )}\n                            {isEditMode && (\n                                <h2 className=\"mb-0\" style={{ fontSize: '18px', fontWeight: '500' }}>Edit Job #{jobId}</h2>\n                            )}\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>{isEditMode ? 'Edit Job' : 'New Job'}</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference<span className=\"required\">*</span></label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    const value = e.target.value;\n                                                    if (value.length <= 50) {\n                                                        setJobReference(value);\n                                                        if (value)\n                                                            setErrors((others) => ({ ...others, jobReference: false }));\n                                                    }\n                                                }}\n                                                maxLength={50}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        {errors?.jobReference && (\n                                            <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                        )}\n                                        <small className=\"text-muted ms-auto\">{jobReference.length}/50</small>\n                                    </div>\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to<span className=\"required\">*</span></h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={[\n                                                    { value: \"0\", label: \"Open job\", image: \"openJob\", has_photo: false },\n                                                    ...(mobileUserQuery?.data?.users\n                                                        ?.filter((user) => user.status !== 'disconnected')\n                                                        ?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        })) || [])\n                                                ]}\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileUserQuery?.isFetching}\n                                                scrollHeight=\"350px\"\n                                                filter\n                                                filterInputAutoFocus={true}\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        {userId && userId != \"0\" &&\n                                            <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                                <Col sm={2} className='p-0'>\n                                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                        <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                    </div>\n                                                </Col>\n                                                <Col sm={5} className='pe-0 ps-0'>\n                                                    <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                    <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                                </Col>\n                                                <Col sm={5} className=''>\n                                                    <div className='d-flex align-items-center gap-2 mb-3'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                        <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                    </div>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                        <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment<span className=\"required\">*</span></label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required and must be greater than zero.\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}<span className=\"required\">*</span></label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration}\n                                                        onChange={(e) => {\n                                                            setDuration(e.target.value);\n                                                            setDayShiftHours(e.target.value);\n                                                            if (e.target.value)\n                                                                setErrors((others) => ({ ...others, duration: false }));\n                                                        }}\n                                                        keyfilter={\"num\"}\n                                                        onBlur={(e) => {\n                                                            setDuration(parseFloat(e?.target?.value || 0).toFixed(2));\n                                                            setDayShiftHours(parseFloat(e.target.value || 0).toFixed(2));\n                                                        }}\n                                                        style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0'\n                                                    />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time<span className=\"required\">*</span></label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts<span className=\"required\">*</span></label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            locale=\"en\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End<span className=\"required\">*</span></label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                locale=\"en\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (type === '2' && time_type !== 'T') ? (\n                                            <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours<span className=\"required\">*</span></label>\n                                                <IconField iconPosition=\"right\">\n                                                    <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{\"Hours is required\"}</p>\n                                                )}\n                                            </div>\n                                        ) : (time_type === '1' || (time_type !== '1' && type === '4')) ?\n                                            <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours<span className=\"required\">*</span></label>\n                                                <IconField iconPosition=\"right\">\n                                                    <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                    <InputText value={dayShiftHours} onChange={(e) => setDayShiftHours(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDayShiftHours(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.dayShiftHours && (\n                                                    <p className=\"error-message mb-0\">{\"Hours is required\"}</p>\n                                                )}\n                                            </div> : \"\"\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.id,\n                                                    label: `${project.number}: ${project.reference}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        scrollHeight=\"400px\"\n                                        filter\n                                        filterInputAutoFocus={true}\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            locale=\"en\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    locale=\"en\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                                filterInputAutoFocus={true}\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                            filterInputAutoFocus={true}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"None\" name=\"projectPhotoDeliver\" value=\"\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == ''} />\n                                            <label htmlFor=\"None\" className=\"ms-2 cursor-pointer\">None</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>\n                                                                {parseFloat(file?.size / 1024).toFixed(2)} KB\n                                                                {file.error ?\n                                                                    <span style={{ color: \"#F04438\" }}> - Upload failed</span> :\n                                                                    ` - ${parseInt(file?.progress) || 0}% uploaded`\n                                                                }\n                                                            </p>\n                                                            {file.errorMessage &&\n                                                                <p className='mb-0' style={{ color: \"#F04438\", fontSize: \"12px\" }}>{file.errorMessage}</p>\n                                                            }\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            {file.error ?\n                                                                <div style={{ color: \"#F04438\", width: \"30px\", height: \"30px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>!</div> :\n                                                                <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        <Button type='button' onClick={() => onSubmit(false)} className='outline-button active-outline-button' disabled={mutation?.isPending}>\n                            {isEditMode ? \"Update Draft\" : \"Save Draft\"}\n                            {mutation?.isPending && !publishRef.current && <ProgressSpinner style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }} />}\n                        </Button>\n                        <Button type='button' onClick={() => onSubmit(true)} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending}>\n                            {isEditMode ? 'Update and Publish' : 'Save and Publish'}\n                            {mutation?.isPending && publishRef.current && <ProgressSpinner style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }} />}\n                        </Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, search = \"\", order = \"\", filters = {}) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (search) url.searchParams.append(\"search\", search);\n    if (order) url.searchParams.append(\"ordering\", order);\n\n    if (filters?.status?.length) {\n        let statusArray = [];\n\n        filters.status.forEach(status => {\n            if (status.value === 'draft') url.searchParams.append('published', false);\n            else url.searchParams.append('published', true);\n\n            if (status.value === 'in_progress') url.searchParams.append('action_status', '1,2');\n            else url.searchParams.append('action_status', '0');\n\n            if (status.value !== 'draft' && status.value !== 'in_progress') {\n                statusArray.push(status.value);\n            }\n        });\n\n        if (statusArray.length) url.searchParams.append('status', statusArray.join(','));\n    } else {\n        url.searchParams.append('status', '3,2,1,6,a');\n    }\n\n    if (filters?.worker?.length) {\n        url.searchParams.append('workers', filters.worker.map(worker => worker.id).join(','));\n    }\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateJob = async (id, data) => {\n    const endpoint = `/jobs/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getApprovedJob = async (id) => {\n    const endpoint = `/jobs/to-approve/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createApproval = async (id, data) => {\n    const endpoint = `/jobs/approve/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const declineJob = async (id) => {\n    const endpoint = `/jobs/${id}/rework/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJob = async (id) => {\n    const endpoint = `/jobs/delete/${id}/`;\n    const options = {\n        method: 'DELETE'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamInvoiceHistory = async (id, page, limit, search = \"\", order = \"\") => {\n    if (!id || !page || !limit) return;\n    \n    const offset = (page - 1) * limit;\n    const endpoint = `/team/mobile-users/${id}/invoices/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (search) url.searchParams.append(\"number\", search);\n    // if (order) url.searchParams.append(\"ordering\", order);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateMobileUser = async (id, data) => {\n    const endpoint = `/team/mobile-users/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n"],"names":["API_BASE_URL","process","getListOfExpense","async","page","limit","search","arguments","length","undefined","order","isShowUnpaid","offset","url","URL","searchParams","append","fetchAPI","toString","method","getXeroCodesList","getProjectsList","getExpense","id","createNewExpense","options","body","data","updateExpense","paidExpense","unpaidExpense","sendExpenseToXeroApi","deleteExpense","uniqueId","downloadStatement","sendStatementEmail","getFileIcon","fileType","_fileType","size","toLowerCase","fileData","name","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","fileTypeSmall","_ref","_mobileUserQuery$data3","visible","setVisible","setRefetch","workerId","isEditMode","jobData","jobId","jobProjectId","refetch","accessToken","localStorage","getItem","publishRef","useRef","React","window","location","href","urlObj","params","URLSearchParams","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","newFiles","map","file","Object","assign","preview","createObjectURL","progress","prevFiles","type","setType","time_type","set_time_type","cost","setCost","today","Date","start","setStart","end","setEnd","duration","setDuration","dayShiftHours","setDayShiftHours","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getJobTemplates","getTemplateByIDQuery","getJobTemplate","enabled","retry","mobileUserQuery","getTeamMobileUser","projectQuery","staleTime","itemTemplate","option","borderRadius","overflow","border","image","fillRule","clipRule","FallbackImage","photo","has_photo","is_business","label","selectedItemTemplate","props","placeholder","reset","useEffect","_getTemplateByIDQuery","_getTemplateByIDQuery2","templateTitle","title","substring","others","projectParamId","get","reference","delete","history","replaceState","uploadToS3","response","axios","put","headers","onUploadProgress","progressEvent","Math","round","loaded","total","f","uploaded","err","errorMessage","status","request","message","console","error","uploadFailed","mutation","useMutation","mutationFn","updateJob","createNewJob","onSuccess","toast","successCount","errorCount","post","filename","Authorization","result","success","fileUploadBySignedURL","attachments","_file$url","obj","split","push","log","attachmentsUpdateInJob","prev","current","onError","onSubmit","isPublish","tempErrors","payload","short_description","long_description","worker","Number","start_date","toISOString","end_date","safeDayShiftHours","hoursToAdd","getTime","_projectQuery$data","project","find","unique_id","parseFloat","toFixed","project_photos","published","values","includes","mutate","workerDetailsSet","useCallback","_mobileUserQuery$data","_mobileUserQuery$data2","user","users","paymentCycleObj","hourly_rate","payment_cycle","first_name","last_name","_projectQuery$data2","startDate","endDate","dayCount","durationInHours","attachment","link","isExisting","_mobileUserQuery$data4","findUser","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileUserQuery$data5","_mobileUserQuery$data6","_mobileUserQuery$data7","_projectQuery$data3","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","filter","filterInputAutoFocus","fontSize","fontWeight","Button","ref","onClick","X","Card","Body","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","maxLength","InputTextarea","Row","Col","sm","valueTemplate","scrollHeight","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","locale","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","_e$target4","number","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","disabled","isPending","minWidth","endpoint","isRequiredLoggedin","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","fetch","contentType","ok","_errorData","errorData","json","text","clear","sessionStorage","replace","Error","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition","getListOfJobs","_filters$status","_filters$worker","filters","statusArray","forEach","join","getJob","getJobDashboardData","getApprovedJob","createApproval","declineJob","deleteJob","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getTeamDesktopUser","getTeamInvoiceHistory","updateMobileUser"],"sourceRoot":""}