{"version":3,"file":"static/js/1281.4a06f979.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","APIs/management-api.js","APIs/base-api.js","shared/ui/circular-progressbar/index.js","APIs/jobs-api.js","APIs/email-template.js","APIs/team-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { createNewJob } from '../../../../APIs/jobs-api';\nimport { getManagement } from '../../../../APIs/management-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\n\nexport function getFileIcon(fileType) {\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\n\nconst CreateJob = ({ visible, setVisible, setRefetch, workerId }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    // const [projectReference, setProjectReference] = useState(null);\n    // const [projectDescription, setProjectDescription] = useState(null);\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            console.log('acceptedFiles: ', acceptedFiles);\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...acceptedFiles.map((file) =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file),\n                        progress: 0,\n                    })\n                ),\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const [start, setStart] = useState(\"\");\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileuserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({\n        queryKey: [\"getManagement\"],\n        queryFn: getManagement,\n        staleTime: Infinity,\n    });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            setJobReference(getTemplateByIDQuery?.data?.title || \"\");\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    const uploadToS3 = async (file, url) => {\n        return axios.put(url, file, {\n            headers: {\n                \"Content-Type\": \"\",\n            },\n            onUploadProgress: (progressEvent) => {\n                const progress = Math.round(\n                    (progressEvent.loaded / progressEvent.total) * 100\n                );\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, { progress, url })\n                            : f\n                    );\n                });\n            },\n        }).catch((err) => {\n            console.log('err: ', err);\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 0, url, error: true })\n                        : f\n                );\n            });\n        });\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n\n                // Step 2: Upload the file to S3 using the signed URL\n                await uploadToS3(file, url);\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n                toast.error(`Failed to upload ${file.name}. Please try again.`);\n            }\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => createNewJob(data),\n        onSuccess: async (response) => {\n            await fileUploadBySignedURL(response.id);\n            await attachmentsUpdateInJob(response.id);\n            toast.success(`Job created successfully`);\n            setVisible(false);\n            setRefetch((refetch) => !refetch);\n            reset();\n        },\n        onError: (error) => {\n            console.error('Error creating expense:', error);\n            toast.error('Failed to create job. Please try again.');\n        }\n    });\n\n    const onSubmit = () => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        // if (!projectId) tempErrors.projectId = true;\n        if (projectId) payload.project = projectId;\n\n        payload.project_photos = projectPhotoDeliver;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = (id) => {\n        let user = mobileuserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        }\n\n    };\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId);\n            workerDetailsSet(+workerId);\n        }\n    }, [workerId]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            <div style={{ position: 'relative', textAlign: 'start' }}>\n                                <Dropdown\n                                    options={\n                                        (templateQuery &&\n                                            templateQuery.data?.map((template) => ({\n                                                value: template.id,\n                                                label: `${template.name}`,\n                                            }))) ||\n                                        []\n                                    }\n                                    className={clsx(\n                                        style.dropdownSelect,\n                                        \"dropdown-height-fixed\",\n                                        \"outline-none\"\n                                    )}\n                                    style={{ height: \"44px\", width: '606px' }}\n                                    placeholder=\"Select template\"\n                                    onChange={(e) => {\n                                        setTemplatedId(e.value);\n                                    }}\n                                    value={templateId}\n                                    loading={templateQuery?.isFetching}\n                                    filter\n                                />\n                            </div>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>New Job</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setJobReference(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, jobReference: false }));\n                                                }}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.jobReference && (\n                                        <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to*</h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={\n                                                    (mobileuserQuery &&\n                                                        mobileuserQuery.data?.users?.filter((user) => user.status !== 'disconnected')?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        }))) ||\n                                                    []\n                                                }\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileuserQuery?.isFetching}\n                                                filter\n                                                disabled={!!workerId}\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                            <Col sm={2} className='p-0'>\n                                                <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                    <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                </div>\n                                            </Col>\n                                            <Col sm={5} className='pe-0 ps-0'>\n                                                <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                            </Col>\n                                            <Col sm={5} className=''>\n                                                <div className='d-flex align-items-center gap-2 mb-3'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                    <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                </div>\n                                                <div className='d-flex align-items-center gap-2'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                    <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment</label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time</label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts</label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End</label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.unique_id,\n                                                    label: `${project.reference} - ${project.number}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        filter\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>{parseFloat(file?.size / 1024).toFixed(2)} KB - {parseInt(file?.progress) || 0}% uploaded</p>\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            {/* <div className={style.deleteBox}>\n                                                                <Trash color='#F04438' size={16} />\n                                                            </div> */}\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        {/*  onSubmit ()=>fileUploadBySignedURL(128) */}\n                        <Button type='button' onClick={onSubmit} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending}>Create {mutation?.isPending && <ProgressSpinner\n                            style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                        />}</Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const resendQuoteEmail = async (id, data) => {\n    let endpoint = `/resend/quote/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\n\n\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n"],"names":["getFileIcon","fileType","fileData","name","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","_ref","visible","setVisible","setRefetch","workerId","accessToken","localStorage","getItem","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","console","log","prevFiles","map","file","Object","assign","preview","URL","createObjectURL","progress","type","setType","cost","setCost","time_type","set_time_type","start","setStart","end","setEnd","duration","setDuration","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getJobTemplates","getTemplateByIDQuery","getJobTemplate","enabled","retry","mobileuserQuery","getTeamMobileUser","projectQuery","getManagement","staleTime","Infinity","itemTemplate","option","borderRadius","overflow","border","FallbackImage","photo","image","has_photo","is_business","size","label","selectedItemTemplate","props","placeholder","useEffect","_getTemplateByIDQuery","_getTemplateByIDQuery2","data","title","others","uploadToS3","async","url","axios","put","headers","onUploadProgress","progressEvent","Math","round","loaded","total","f","catch","err","error","mutation","useMutation","mutationFn","createNewJob","onSuccess","length","id","toast","response","post","filename","Authorization","fileUploadBySignedURL","attachments","_file$url","obj","split","push","attachmentsUpdateInJob","success","refetch","onError","onSubmit","tempErrors","payload","short_description","long_description","worker","start_date","Date","toISOString","end_date","project","project_photos","values","includes","mutate","workerDetailsSet","_mobileuserQuery$data","_mobileuserQuery$data2","user","users","find","paymentCycleObj","parseFloat","hourly_rate","toFixed","payment_cycle","first_name","last_name","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileuserQuery$data3","_mobileuserQuery$data4","_mobileuserQuery$data5","_projectQuery$data","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","options","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","filter","Button","ref","onClick","X","Card","Body","fontWeight","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","InputTextarea","Row","Col","sm","status","valueTemplate","disabled","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","unique_id","reference","number","fillRule","clipRule","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fontSize","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","minWidth","isPending","API_BASE_URL","process","fetchAPI","endpoint","arguments","undefined","method","body","requestOptions","JSON","stringify","redirect","fetch","ok","Error","contentType","get","json","message","text","updateProjectScheduleById","toString","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","resendQuoteEmail","myHeaders","Headers","append","ProjectCardApi","uniqueId","isRequiredLoggedin","isFormData","FormData","defaultHeaders","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition","getListOfJobs","page","limit","order","isShowDeleted","offset","searchParams","getJob","getJobDashboardData","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getTeamDesktopUser"],"sourceRoot":""}