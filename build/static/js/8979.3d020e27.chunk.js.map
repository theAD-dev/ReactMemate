{"version":3,"file":"static/js/8979.3d020e27.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/features/dashboard/request-help/request-help.module.scss?1ffc","features/dashboard/request-help/request-help.js","components/Business/shared/utils/helper.js","APIs/ProfileApi.js","APIs/email-template.js","APIs/HomeApi.js","APIs/service-api.js","components/layout/modals/accounting-contact.js","components/layout/modals/book-keeping-contact.js","components/layout/modals/insurance-contact.js","components/layout/modals/modal-sales-contact-finance.js","assets/svg/no-task.js","webpack://memateapp/./src/features/dashboard/skip-setup/skip-setup.module.scss?9d08","features/dashboard/skip-setup/skip-setup.js","components/Home.js","pages/business/dashboard/dashboard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"request-help_modal__1jon4\",\"iconStyle\":\"request-help_iconStyle__joCIj\",\"headerTitle\":\"request-help_headerTitle__6X966\"};","import React from 'react';\nimport { QuestionCircle } from 'react-bootstrap-icons';\nimport { InlineWidget } from \"react-calendly\";\nimport { Dialog } from 'primereact/dialog';\nimport style from './request-help.module.scss';\nimport { useAuth } from '../../../app/providers/auth-provider';\n\nconst headerElement = (\n    <div className={`${style.modalHeader}`}>\n        <div className=\"w-100 d-flex align-items-center gap-2\">\n            <b className={style.iconStyle}><QuestionCircle size={24} color=\"#079455\" /></b>\n            <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                Need help with this?\n            </span>\n        </div>\n    </div>\n);\n\nconst RequestHelp = ({ visible, setVisible }) => {\n    const { session } = useAuth();\n    return (\n        <Dialog header={headerElement} visible={visible} onHide={() => setVisible(false)} className={`${style.modal} custom-modal`}>\n            <InlineWidget\n                url=\"https://calendly.com/memate-support/30min\"\n                styles={{\n                    width: '80%',\n                    border: '1px solid #f2f2f2',\n                    height: '850px',\n                    margin: '0 auto',\n                    minHeight: 'unset',\n                }}\n                prefill={{\n                    name: `${session?.full_name}`,\n                    email: session?.email,\n                }}\n                pageSettings={{\n                    hideEventTypeDetails: false,\n                    hideLandingPageDetails: false,\n                    primaryColor: '#1D2939',\n                    textColor: '#667085'\n                }}\n            />\n        </Dialog>\n    );\n};\n\nexport default RequestHelp;","export function adjustColor(color, amount) {\n  if (!color) return;\n  let usePound = false;\n\n  if (color[0] === \"#\") {\n    color = color.slice(1);\n    usePound = true;\n  }\n\n  let num = parseInt(color, 16);\n\n  let r = (num >> 16) + amount;\n  let g = ((num >> 8) & 0x00ff) + amount;\n  let b = (num & 0x0000ff) + amount;\n\n  return (\n    (usePound ? \"#\" : \"\") +\n    (r > 255 ? 255 : r < 0 ? 0 : r).toString(16).padStart(2, \"0\") +\n    (g > 255 ? 255 : g < 0 ? 0 : g).toString(16).padStart(2, \"0\") +\n    (b > 255 ? 255 : b < 0 ? 0 : b).toString(16).padStart(2, \"0\")\n  );\n}\n\nexport function romanize(num) {\n  var lookup = { M: 1000, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 }, roman = '', i;\n  for (i in lookup) {\n    while (num >= lookup[i]) {\n      roman += i;\n      num -= lookup[i];\n    }\n  }\n  return roman;\n}\n\nexport function formatMoney(number) {\n  return number.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n}\n\n\nexport const dateFormat = (dateInMiliSec, isDotformate) => {\n  if (!dateInMiliSec) return \"-\";\n\n  const options = { year: 'numeric', month: 'short', day: 'numeric' };\n  const date = new Date(1000 * +dateInMiliSec);\n\n  if(isDotformate) {\n    const dotFormattedDate = date.toLocaleDateString('en-GB', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    }).replace(/\\//g, '.');\n    return dotFormattedDate;\n  }\n\n  const formattedDate = date.toLocaleDateString('en-US', options)?.replace(/,/g, '');\n  return formattedDate;\n};","import { nanoid } from \"nanoid\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const fetchProfile = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/profile/`, requestOptions);\n    if (response.status === 401) {\n      window.localStorage.clear();\n      window.sessionStorage.clear();\n      window.location.replace(\"/login\");\n    }\n\n    if (!response.ok) {\n      if (response.status === 404) throw new Error('Not found');\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.includes('application/json')) {\n      const data = await response.json();\n      localStorage.setItem('profileData', JSON.stringify(data));\n      return data;\n    } else {\n      const text = await response.text();\n      localStorage.setItem('profileData', text);\n      return text;\n    }\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n\n\nexport const updateProfile = async (data, photo) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => {\n    formData.append(key, data[key]);\n  });\n\n  if (photo?.croppedImageBlob) {\n    const photoHintId = nanoid(6);\n    formData.append('photo', photo?.croppedImageBlob, `${photoHintId}.png`);\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/profile/update/`, requestOptions);\n    const result = await response.text();\n    console.log('result>>>>>>>>>>: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getActivity = async (year, week) => {\n  const endpoint = `/home/activity/${year}/${week}/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchHomePage = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/home/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createAdditionalService = async (data) => {\n    const endpoint = `/additional-service/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport ClockHistoryCircle from \"../../../assets/images/icon/clock-history-icon.png\";\nimport LockZapCircle from \"../../../assets/images/icon/lock-icon.png\";\nimport ZapCircle from \"../../../assets/images/icon/zap.png\";\nimport homeBoxImg04 from \"../../../assets/images/img/homeboxImg04.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel03.png\";\n\nconst AccountingContact = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'accounting_contact', // Updated to reflect accounting context\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeBoxImg04})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Accounting</h3>\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our Accountants team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Get the Best Australian Accountant.</h2>\n                  <p>We provide only the finest accountants who will look after your company's tax submissions and ATO communications on a personalized and consistent basis.</p>\n                  <ul>\n                    <li>\n                      <img src={ClockHistoryCircle} alt=\"ClockHistoryCircle\" />\n                      <span>\n                        <h5>Security and Compliance</h5>\n                        Ensure adherence to all regulatory requirements.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={LockZapCircle} alt=\"LockZapCircle\" />\n                      <span>\n                        <h5>Individualized Approach</h5>\n                        Tailored services to meet your unique needs.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={ZapCircle} alt=\"ZapCircle\" />\n                      <span>\n                        <h5>Transparent and Timely Communication</h5>\n                        Keep informed with clear and prompt updates.\n                      </span>\n                    </li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>“Thank you for providing the best accountant. This definitely removes any uncertainty and doubt when communicating with the taxation office”</p>\n                    <strong>Richard Karsay</strong>\n                    <span>Director - Precision Flooring</span>\n                  </div>\n                  <div className='centerimgTag'>\n                    <img src={LenderPanel} alt=\"LenderPanel\" />\n                  </div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default AccountingContact;","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport ClockHistoryCircle from \"../../../assets/images/icon/clock-history-icon.png\";\nimport LockZapCircle from \"../../../assets/images/icon/lock-icon.png\";\nimport ZapCircle from \"../../../assets/images/icon/zap.png\";\nimport homeboxImg02 from \"../../../assets/images/img/homeboxImg02.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel01.png\";\n\nconst BookkeepingContact = ({ onAdd }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'book_keeping_contact', // Updated to reflect bookkeeping context\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      if (onAdd) onAdd({ /* You can pass data here if needed */ });\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeboxImg02})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Book keeping</h3>\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our book keeping team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Need a Booking Service?</h2>\n                  <p>We partner with the top booking professionals in the country to ensure all your transactions are accurately recorded and properly allocated.</p>\n                  <ul>\n                    <li>\n                      <img src={ClockHistoryCircle} alt=\"ClockHistoryCircle\" />\n                      <span>\n                        <h5>Save Time</h5>\n                        Reduce the effort and attention needed for processing paperwork.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={LockZapCircle} alt=\"LockZapCircle\" />\n                      <span>\n                        <h5>Enhance Security and Accountability</h5>\n                        Ensure every transaction is properly allocated and accounted for.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={ZapCircle} alt=\"ZapCircle\" />\n                      <span>\n                        <h5>Ease Your Burdens</h5>\n                        Offload your book keeping and accounting tasks with cost-effective solutions.\n                      </span>\n                    </li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>“I believe the strength of their company lies in its book keeping, as it provides a clear and accountable way to manage daily operations, ensure compliance, and control every transaction.”</p>\n                    <strong>Robert Sanasi</strong>\n                    <span>Vice President ICMS</span>\n                  </div>\n                  <div className='centerimgTag'>\n                    <img src={LenderPanel} alt=\"LenderPanel\" />\n                  </div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default BookkeepingContact;","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport CalendarweekCircle from \"../../../assets/images/icon/calendar-week.png\";\nimport ClipboardCircle from \"../../../assets/images/icon/clipboard-ch.png\";\nimport PersonIconCircle from \"../../../assets/images/icon/personIcon.png\";\nimport homeboxImg03 from \"../../../assets/images/img/homeboxImg03.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel02.png\";\n\nconst InsuranceContact = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'insurance_contact', // Updated to reflect insurance context\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeboxImg03})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Insurance</h3>\n\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our Insurance team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Secure your business insurance today.</h2>\n                  <p>We offer comprehensive quotes tailored to your industry and specific business needs.</p>\n                  <ul>\n                    <li>\n                      <img src={ClipboardCircle} alt=\"ClipboardCircle\" />\n                      <span>\n                        <h5>Instant Quotes</h5>\n                        Receive the best quotes with just one click.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={CalendarweekCircle} alt=\"CalendarweekCircle\" />\n                      <span>\n                        <h5>Renewal Reminders</h5>\n                        Get timely reminders for insurance renewals.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={PersonIconCircle} alt=\"PersonIconCircle\" />\n                      <span>\n                        <h5>Single Point of Contact</h5>\n                        Simplify your management with one dedicated contact.\n                      </span>\n                    </li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>“Thank you, guys! Having one point of contact really helps us manage everything in one place.”</p>\n                    <strong>Francis Malabanan</strong>\n                    <span>Art One</span>\n                  </div>\n                  <div className='centerimgTag'>\n                    <img src={LenderPanel} alt=\"LenderPanel\" />\n                  </div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default InsuranceContact;","import React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport ChartBreakoutSquare from \"../../../assets/images/icon/chart-breakout-square.png\";\nimport MessageChatCircle from \"../../../assets/images/icon/message-chat-circle.png\";\nimport ZapCircle from \"../../../assets/images/icon/zap.png\";\nimport homeboxImg01 from \"../../../assets/images/img/homeboxImg01.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel 1.png\";\n\nconst ModalSalesContactFinance = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'finance_contact',\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeboxImg01})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Finance</h3>\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n      \n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our Finance team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Empowering Your Business Growth with Tailored Finance Solutions.</h2>\n                  <p>From asset financing to commercial loans, auto debt refinancing, and equipment finance.</p>\n                  <ul>\n                    <li><img src={MessageChatCircle} alt=\"MessageChatCircle\" /><span>We provide you with a personal manager who will offer a comprehensive individual solution and act as your personal finance broker.</span></li>\n                    <li><img src={ZapCircle} alt=\"ZapCircle\" /><span>We are also able to restructure loans, refinance, and provide you with a wide range of financial lending options, from major banks to private lenders and hedge funds across Australia.</span></li>\n                    <li><img src={ChartBreakoutSquare} alt=\"ChartBreakoutSquare\" /><span>We are proud to work with Australian businesses and have already helped thousands of Australian businesses save, expand, and restructure.</span></li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>Working with MeMate Fiancn was a game-changer for our business. Their personalised approach and expert guidance helped us navigate complex financial challenges with ease. Thanks to their support\"</p>\n                    <strong>Daniel Vinkl </strong>\n                    <span>CEO Visual Advertising Solutions</span>\n                  </div>\n                  <div className='centerimgTag'><img src={LenderPanel} alt=\"LenderPanel\" /></div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalSalesContactFinance;","import React from 'react';\n\nconst NOTaskSVG = () => {\n    return (\n        <svg width=\"494\" height=\"116\" viewBox=\"0 0 494 116\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect x=\"0.5\" y=\"34.5\" width=\"493\" height=\"35\" rx=\"7.5\" fill=\"white\" />\n            <rect x=\"0.5\" y=\"34.5\" width=\"493\" height=\"35\" rx=\"7.5\" stroke=\"#F2F4F7\" />\n            <rect width=\"486\" height=\"28\" transform=\"translate(4 38)\" fill=\"white\" />\n            <rect x=\"4\" y=\"39.4072\" width=\"105.242\" height=\"10.5928\" rx=\"5.29642\" fill=\"#F2F4F7\" />\n            <rect x=\"4\" y=\"54\" width=\"255.512\" height=\"10.5928\" rx=\"5.29642\" fill=\"#F2F4F7\" />\n            <rect x=\"275.512\" y=\"46\" width=\"12\" height=\"12\" rx=\"6\" fill=\"#F2F4F7\" />\n            <rect x=\"303.512\" y=\"46\" width=\"62.2441\" height=\"12\" rx=\"6\" fill=\"#F2F4F7\" />\n            <rect x=\"382.256\" y=\"38.5\" width=\"107.244\" height=\"27\" rx=\"3.5\" fill=\"white\" />\n            <rect x=\"382.256\" y=\"38.5\" width=\"107.244\" height=\"27\" rx=\"3.5\" stroke=\"#F2F4F7\" />\n            <rect x=\"393.756\" y=\"46\" width=\"62.2441\" height=\"12\" rx=\"6\" fill=\"#F2F4F7\" />\n            <path d=\"M470 59C466.134 59 463 55.866 463 52C463 48.134 466.134 45 470 45C473.866 45 477 48.134 477 52C477 55.866 473.866 59 470 59ZM470 60C474.418 60 478 56.4183 478 52C478 47.5817 474.418 44 470 44C465.582 44 462 47.5817 462 52C462 56.4183 465.582 60 470 60Z\" fill=\"#EAECF0\" />\n            <path d=\"M472.97 48.9697C472.963 48.9767 472.956 48.9842 472.95 48.9921L469.477 53.4167L467.384 51.3232C467.091 51.0303 466.616 51.0303 466.323 51.3232C466.03 51.6161 466.03 52.091 466.323 52.3839L468.97 55.0303C469.263 55.3232 469.737 55.3232 470.03 55.0303C470.037 55.0238 470.043 55.0169 470.049 55.0097L474.041 50.0195C474.323 49.7258 474.32 49.259 474.03 48.9697C473.737 48.6768 473.263 48.6768 472.97 48.9697Z\" fill=\"#EAECF0\" />\n            <rect x=\"0.5\" y=\"74.5\" width=\"493\" height=\"35\" rx=\"7.5\" fill=\"white\" />\n            <rect x=\"0.5\" y=\"74.5\" width=\"493\" height=\"35\" rx=\"7.5\" stroke=\"#F2F4F7\" />\n            <rect width=\"486\" height=\"28\" transform=\"translate(4 78)\" fill=\"white\" />\n            <rect x=\"4\" y=\"79.4072\" width=\"105.242\" height=\"10.5928\" rx=\"5.29642\" fill=\"#F2F4F7\" />\n            <rect x=\"4\" y=\"94\" width=\"255.512\" height=\"10.5928\" rx=\"5.29642\" fill=\"#F2F4F7\" />\n            <rect x=\"275.512\" y=\"86\" width=\"12\" height=\"12\" rx=\"6\" fill=\"#F2F4F7\" />\n            <rect x=\"303.512\" y=\"86\" width=\"62.2441\" height=\"12\" rx=\"6\" fill=\"#F2F4F7\" />\n            <rect x=\"382.256\" y=\"78.5\" width=\"107.244\" height=\"27\" rx=\"3.5\" fill=\"white\" />\n            <rect x=\"382.256\" y=\"78.5\" width=\"107.244\" height=\"27\" rx=\"3.5\" stroke=\"#F2F4F7\" />\n            <rect x=\"393.756\" y=\"86\" width=\"62.2441\" height=\"12\" rx=\"6\" fill=\"#F2F4F7\" />\n            <path d=\"M470 99C466.134 99 463 95.866 463 92C463 88.134 466.134 85 470 85C473.866 85 477 88.134 477 92C477 95.866 473.866 99 470 99ZM470 100C474.418 100 478 96.4183 478 92C478 87.5817 474.418 84 470 84C465.582 84 462 87.5817 462 92C462 96.4183 465.582 100 470 100Z\" fill=\"#EAECF0\" />\n            <path d=\"M472.97 88.9697C472.963 88.9767 472.956 88.9842 472.95 88.9921L469.477 93.4167L467.384 91.3232C467.091 91.0303 466.616 91.0303 466.323 91.3232C466.03 91.6161 466.03 92.091 466.323 92.3839L468.97 95.0303C469.263 95.3232 469.737 95.3232 470.03 95.0303C470.037 95.0238 470.043 95.0169 470.049 95.0097L474.041 90.0195C474.323 89.7258 474.32 89.259 474.03 88.9697C473.737 88.6768 473.263 88.6768 472.97 88.9697Z\" fill=\"#EAECF0\" />\n            <rect width=\"494\" height=\"116\" fill=\"white\" fillOpacity=\"0.25\" />\n            <path d=\"M190.109 43.8636V55.5H188.745L182.404 46.3636H182.29V55.5H180.881V43.8636H182.245L188.609 53.0227H188.722V43.8636H190.109ZM196.212 55.6818C195.424 55.6818 194.733 55.4943 194.138 55.1193C193.547 54.7443 193.085 54.2197 192.752 53.5455C192.422 52.8712 192.257 52.0833 192.257 51.1818C192.257 50.2727 192.422 49.4792 192.752 48.8011C193.085 48.1231 193.547 47.5966 194.138 47.2216C194.733 46.8466 195.424 46.6591 196.212 46.6591C197 46.6591 197.689 46.8466 198.28 47.2216C198.875 47.5966 199.337 48.1231 199.666 48.8011C200 49.4792 200.166 50.2727 200.166 51.1818C200.166 52.0833 200 52.8712 199.666 53.5455C199.337 54.2197 198.875 54.7443 198.28 55.1193C197.689 55.4943 197 55.6818 196.212 55.6818ZM196.212 54.4773C196.81 54.4773 197.303 54.3239 197.689 54.017C198.075 53.7102 198.361 53.3068 198.547 52.8068C198.733 52.3068 198.825 51.7652 198.825 51.1818C198.825 50.5985 198.733 50.0549 198.547 49.5511C198.361 49.0473 198.075 48.6402 197.689 48.3295C197.303 48.0189 196.81 47.8636 196.212 47.8636C195.613 47.8636 195.121 48.0189 194.735 48.3295C194.348 48.6402 194.062 49.0473 193.877 49.5511C193.691 50.0549 193.598 50.5985 193.598 51.1818C193.598 51.7652 193.691 52.3068 193.877 52.8068C194.062 53.3068 194.348 53.7102 194.735 54.017C195.121 54.3239 195.613 54.4773 196.212 54.4773ZM210.349 46.7727V47.9091H205.826V46.7727H210.349ZM207.144 44.6818H208.485V53C208.485 53.3788 208.54 53.6629 208.65 53.8523C208.763 54.0379 208.907 54.1629 209.082 54.2273C209.26 54.2879 209.447 54.3182 209.644 54.3182C209.792 54.3182 209.913 54.3106 210.008 54.2955C210.102 54.2765 210.178 54.2614 210.235 54.25L210.508 55.4545C210.417 55.4886 210.29 55.5227 210.127 55.5568C209.964 55.5947 209.758 55.6136 209.508 55.6136C209.129 55.6136 208.758 55.5322 208.394 55.3693C208.034 55.2064 207.735 54.9583 207.496 54.625C207.262 54.2917 207.144 53.8712 207.144 53.3636V44.6818ZM214.854 55.7045C214.301 55.7045 213.799 55.6004 213.348 55.392C212.897 55.1799 212.54 54.875 212.274 54.4773C212.009 54.0758 211.877 53.5909 211.877 53.0227C211.877 52.5227 211.975 52.1174 212.172 51.8068C212.369 51.4924 212.632 51.2462 212.962 51.0682C213.291 50.8902 213.655 50.7576 214.053 50.6705C214.454 50.5795 214.858 50.5076 215.263 50.4545C215.793 50.3864 216.223 50.3352 216.553 50.3011C216.886 50.2633 217.129 50.2008 217.28 50.1136C217.435 50.0265 217.513 49.875 217.513 49.6591V49.6136C217.513 49.053 217.36 48.6174 217.053 48.3068C216.75 47.9962 216.29 47.8409 215.672 47.8409C215.032 47.8409 214.53 47.9811 214.166 48.2614C213.803 48.5417 213.547 48.8409 213.399 49.1591L212.127 48.7045C212.354 48.1742 212.657 47.7614 213.036 47.4659C213.418 47.1667 213.835 46.9583 214.286 46.8409C214.74 46.7197 215.187 46.6591 215.627 46.6591C215.907 46.6591 216.229 46.6932 216.593 46.7614C216.96 46.8258 217.314 46.9602 217.655 47.1648C218 47.3693 218.286 47.678 218.513 48.0909C218.74 48.5038 218.854 49.0568 218.854 49.75V55.5H217.513V54.3182H217.445C217.354 54.5076 217.202 54.7102 216.99 54.9261C216.778 55.142 216.496 55.3258 216.144 55.4773C215.791 55.6288 215.361 55.7045 214.854 55.7045ZM215.058 54.5C215.589 54.5 216.036 54.3958 216.399 54.1875C216.767 53.9792 217.043 53.7102 217.229 53.3807C217.418 53.0511 217.513 52.7045 217.513 52.3409V51.1136C217.456 51.1818 217.331 51.2443 217.138 51.3011C216.949 51.3542 216.729 51.4015 216.479 51.4432C216.233 51.4811 215.992 51.5152 215.757 51.5455C215.526 51.572 215.339 51.5947 215.195 51.6136C214.846 51.6591 214.521 51.733 214.218 51.8352C213.918 51.9337 213.676 52.0833 213.49 52.2841C213.308 52.4811 213.218 52.75 213.218 53.0909C213.218 53.5568 213.39 53.9091 213.735 54.1477C214.083 54.3826 214.524 54.5 215.058 54.5ZM227.403 48.7273L226.199 49.0682C226.123 48.8674 226.011 48.6723 225.863 48.483C225.719 48.2898 225.522 48.1307 225.272 48.0057C225.022 47.8807 224.702 47.8182 224.312 47.8182C223.778 47.8182 223.333 47.9413 222.977 48.1875C222.625 48.4299 222.449 48.7386 222.449 49.1136C222.449 49.447 222.57 49.7102 222.812 49.9034C223.055 50.0966 223.433 50.2576 223.949 50.3864L225.244 50.7045C226.024 50.8939 226.606 51.1837 226.988 51.5739C227.371 51.9602 227.562 52.4583 227.562 53.0682C227.562 53.5682 227.418 54.0152 227.13 54.4091C226.846 54.803 226.449 55.1136 225.937 55.3409C225.426 55.5682 224.831 55.6818 224.153 55.6818C223.263 55.6818 222.526 55.4886 221.943 55.1023C221.36 54.7159 220.99 54.1515 220.835 53.4091L222.108 53.0909C222.229 53.5606 222.458 53.9129 222.795 54.1477C223.136 54.3826 223.581 54.5 224.13 54.5C224.755 54.5 225.252 54.3674 225.619 54.1023C225.99 53.8333 226.176 53.5114 226.176 53.1364C226.176 52.8333 226.07 52.5795 225.858 52.375C225.646 52.1667 225.32 52.0114 224.88 51.9091L223.426 51.5682C222.627 51.3788 222.04 51.0852 221.665 50.6875C221.293 50.286 221.108 49.7841 221.108 49.1818C221.108 48.6894 221.246 48.2538 221.522 47.875C221.803 47.4962 222.183 47.1989 222.665 46.983C223.149 46.767 223.699 46.6591 224.312 46.6591C225.176 46.6591 225.854 46.8485 226.346 47.2273C226.843 47.6061 227.195 48.1061 227.403 48.7273ZM230.751 52.3182L230.728 50.6591H231.001L234.819 46.7727H236.478L232.41 50.8864H232.296L230.751 52.3182ZM229.501 55.5V43.8636H230.842V55.5H229.501ZM235.046 55.5L231.637 51.1818L232.592 50.25L236.751 55.5H235.046ZM244.306 48.7273L243.101 49.0682C243.025 48.8674 242.914 48.6723 242.766 48.483C242.622 48.2898 242.425 48.1307 242.175 48.0057C241.925 47.8807 241.605 47.8182 241.215 47.8182C240.681 47.8182 240.236 47.9413 239.88 48.1875C239.527 48.4299 239.351 48.7386 239.351 49.1136C239.351 49.447 239.472 49.7102 239.715 49.9034C239.957 50.0966 240.336 50.2576 240.851 50.3864L242.147 50.7045C242.927 50.8939 243.508 51.1837 243.891 51.5739C244.273 51.9602 244.465 52.4583 244.465 53.0682C244.465 53.5682 244.321 54.0152 244.033 54.4091C243.749 54.803 243.351 55.1136 242.84 55.3409C242.328 55.5682 241.734 55.6818 241.056 55.6818C240.166 55.6818 239.429 55.4886 238.845 55.1023C238.262 54.7159 237.893 54.1515 237.737 53.4091L239.01 53.0909C239.131 53.5606 239.361 53.9129 239.698 54.1477C240.039 54.3826 240.484 54.5 241.033 54.5C241.658 54.5 242.154 54.3674 242.522 54.1023C242.893 53.8333 243.078 53.5114 243.078 53.1364C243.078 52.8333 242.972 52.5795 242.76 52.375C242.548 52.1667 242.222 52.0114 241.783 51.9091L240.328 51.5682C239.529 51.3788 238.942 51.0852 238.567 50.6875C238.196 50.286 238.01 49.7841 238.01 49.1818C238.01 48.6894 238.148 48.2538 238.425 47.875C238.705 47.4962 239.086 47.1989 239.567 46.983C240.052 46.767 240.601 46.6591 241.215 46.6591C242.078 46.6591 242.756 46.8485 243.249 47.2273C243.745 47.6061 244.097 48.1061 244.306 48.7273ZM251.687 58.7727C251.46 58.7727 251.257 58.7538 251.079 58.7159C250.901 58.6818 250.778 58.6477 250.71 58.6136L251.05 57.4318C251.376 57.5152 251.664 57.5455 251.914 57.5227C252.164 57.5 252.386 57.3883 252.579 57.1875C252.776 56.9905 252.956 56.6705 253.119 56.2273L253.369 55.5455L250.141 46.7727H251.596L254.005 53.7273H254.096L256.505 46.7727H257.96L254.255 56.7727C254.088 57.2235 253.882 57.5966 253.636 57.892C253.389 58.1913 253.104 58.4129 252.778 58.5568C252.456 58.7008 252.092 58.7727 251.687 58.7727ZM262.996 55.6818C262.155 55.6818 261.43 55.4962 260.82 55.125C260.214 54.75 259.746 54.2273 259.416 53.5568C259.091 52.8826 258.928 52.0985 258.928 51.2045C258.928 50.3106 259.091 49.5227 259.416 48.8409C259.746 48.1553 260.204 47.6212 260.791 47.2386C261.382 46.8523 262.072 46.6591 262.86 46.6591C263.314 46.6591 263.763 46.7348 264.206 46.8864C264.649 47.0379 265.053 47.2841 265.416 47.625C265.78 47.9621 266.07 48.4091 266.286 48.9659C266.502 49.5227 266.61 50.2083 266.61 51.0227V51.5909H259.882V50.4318H265.246C265.246 49.9394 265.148 49.5 264.951 49.1136C264.757 48.7273 264.481 48.4223 264.121 48.1989C263.765 47.9754 263.345 47.8636 262.86 47.8636C262.326 47.8636 261.863 47.9962 261.473 48.2614C261.087 48.5227 260.79 48.8636 260.581 49.2841C260.373 49.7045 260.269 50.1553 260.269 50.6364V51.4091C260.269 52.0682 260.382 52.6269 260.61 53.0852C260.841 53.5398 261.161 53.8864 261.57 54.125C261.979 54.3598 262.454 54.4773 262.996 54.4773C263.348 54.4773 263.666 54.428 263.951 54.3295C264.238 54.2273 264.487 54.0758 264.695 53.875C264.903 53.6705 265.064 53.4167 265.178 53.1136L266.473 53.4773C266.337 53.9167 266.108 54.303 265.786 54.6364C265.464 54.9659 265.066 55.2235 264.593 55.4091C264.119 55.5909 263.587 55.6818 262.996 55.6818ZM272.365 46.7727V47.9091H267.842V46.7727H272.365ZM269.16 44.6818H270.501V53C270.501 53.3788 270.556 53.6629 270.666 53.8523C270.78 54.0379 270.924 54.1629 271.098 54.2273C271.276 54.2879 271.463 54.3182 271.66 54.3182C271.808 54.3182 271.929 54.3106 272.024 54.2955C272.119 54.2765 272.194 54.2614 272.251 54.25L272.524 55.4545C272.433 55.4886 272.306 55.5227 272.143 55.5568C271.98 55.5947 271.774 55.6136 271.524 55.6136C271.145 55.6136 270.774 55.5322 270.41 55.3693C270.051 55.2064 269.751 54.9583 269.513 54.625C269.278 54.2917 269.16 53.8712 269.16 53.3636V44.6818ZM276.075 43.8636L275.961 52.2273H274.643L274.529 43.8636H276.075ZM275.302 55.5909C275.022 55.5909 274.781 55.4905 274.58 55.2898C274.38 55.089 274.279 54.8485 274.279 54.5682C274.279 54.2879 274.38 54.0473 274.58 53.8466C274.781 53.6458 275.022 53.5455 275.302 53.5455C275.582 53.5455 275.823 53.6458 276.024 53.8466C276.224 54.0473 276.325 54.2879 276.325 54.5682C276.325 54.7538 276.277 54.9242 276.183 55.0795C276.092 55.2348 275.969 55.3598 275.813 55.4545C275.662 55.5455 275.491 55.5909 275.302 55.5909Z\" fill=\"#344054\" />\n            <path d=\"M84.8113 80.5V71.7727H85.8681V79.5625H89.9249V80.5H84.8113ZM94.204 80.6364C93.6131 80.6364 93.0946 80.4957 92.6486 80.2145C92.2054 79.9332 91.8588 79.5398 91.6088 79.0341C91.3617 78.5284 91.2381 77.9375 91.2381 77.2614C91.2381 76.5795 91.3617 75.9844 91.6088 75.4759C91.8588 74.9673 92.2054 74.5724 92.6486 74.2912C93.0946 74.0099 93.6131 73.8693 94.204 73.8693C94.7949 73.8693 95.312 74.0099 95.7551 74.2912C96.2012 74.5724 96.5478 74.9673 96.7949 75.4759C97.0449 75.9844 97.1699 76.5795 97.1699 77.2614C97.1699 77.9375 97.0449 78.5284 96.7949 79.0341C96.5478 79.5398 96.2012 79.9332 95.7551 80.2145C95.312 80.4957 94.7949 80.6364 94.204 80.6364ZM94.204 79.733C94.6529 79.733 95.0222 79.6179 95.312 79.3878C95.6017 79.1577 95.8162 78.8551 95.9554 78.4801C96.0946 78.1051 96.1642 77.6989 96.1642 77.2614C96.1642 76.8239 96.0946 76.4162 95.9554 76.0384C95.8162 75.6605 95.6017 75.3551 95.312 75.1222C95.0222 74.8892 94.6529 74.7727 94.204 74.7727C93.7551 74.7727 93.3858 74.8892 93.096 75.1222C92.8063 75.3551 92.5918 75.6605 92.4526 76.0384C92.3134 76.4162 92.2438 76.8239 92.2438 77.2614C92.2438 77.6989 92.3134 78.1051 92.4526 78.4801C92.5918 78.8551 92.8063 79.1577 93.096 79.3878C93.3858 79.6179 93.7551 79.733 94.204 79.733ZM101.484 80.6364C100.893 80.6364 100.375 80.4957 99.9288 80.2145C99.4856 79.9332 99.139 79.5398 98.889 79.0341C98.6418 78.5284 98.5182 77.9375 98.5182 77.2614C98.5182 76.5795 98.6418 75.9844 98.889 75.4759C99.139 74.9673 99.4856 74.5724 99.9288 74.2912C100.375 74.0099 100.893 73.8693 101.484 73.8693C102.075 73.8693 102.592 74.0099 103.035 74.2912C103.481 74.5724 103.828 74.9673 104.075 75.4759C104.325 75.9844 104.45 76.5795 104.45 77.2614C104.45 77.9375 104.325 78.5284 104.075 79.0341C103.828 79.5398 103.481 79.9332 103.035 80.2145C102.592 80.4957 102.075 80.6364 101.484 80.6364ZM101.484 79.733C101.933 79.733 102.302 79.6179 102.592 79.3878C102.882 79.1577 103.096 78.8551 103.236 78.4801C103.375 78.1051 103.444 77.6989 103.444 77.2614C103.444 76.8239 103.375 76.4162 103.236 76.0384C103.096 75.6605 102.882 75.3551 102.592 75.1222C102.302 74.8892 101.933 74.7727 101.484 74.7727C101.035 74.7727 100.666 74.8892 100.376 75.1222C100.086 75.3551 99.8719 75.6605 99.7327 76.0384C99.5935 76.4162 99.5239 76.8239 99.5239 77.2614C99.5239 77.6989 99.5935 78.1051 99.7327 78.4801C99.8719 78.8551 100.086 79.1577 100.376 79.3878C100.666 79.6179 101.035 79.733 101.484 79.733ZM107.043 78.1136L107.026 76.8693H107.23L110.094 73.9545H111.338L108.287 77.0398H108.202L107.043 78.1136ZM106.105 80.5V71.7727H107.111V80.5H106.105ZM110.264 80.5L107.707 77.2614L108.423 76.5625L111.543 80.5H110.264ZM117.389 75.4205L116.486 75.6761C116.429 75.5256 116.345 75.3793 116.234 75.2372C116.126 75.0923 115.978 74.973 115.791 74.8793C115.603 74.7855 115.363 74.7386 115.071 74.7386C114.67 74.7386 114.336 74.831 114.069 75.0156C113.805 75.1974 113.673 75.429 113.673 75.7102C113.673 75.9602 113.764 76.1577 113.946 76.3026C114.128 76.4474 114.412 76.5682 114.798 76.6648L115.77 76.9034C116.355 77.0455 116.791 77.2628 117.078 77.5554C117.365 77.8452 117.508 78.2187 117.508 78.6761C117.508 79.0511 117.4 79.3864 117.184 79.6818C116.971 79.9773 116.673 80.2102 116.289 80.3807C115.906 80.5511 115.46 80.6364 114.951 80.6364C114.284 80.6364 113.731 80.4915 113.294 80.2017C112.856 79.9119 112.579 79.4886 112.463 78.9318L113.417 78.6932C113.508 79.0455 113.68 79.3097 113.933 79.4858C114.189 79.6619 114.522 79.75 114.934 79.75C115.403 79.75 115.775 79.6506 116.051 79.4517C116.329 79.25 116.468 79.0085 116.468 78.7273C116.468 78.5 116.389 78.3097 116.23 78.1562C116.071 78 115.826 77.8835 115.497 77.8068L114.406 77.5511C113.807 77.4091 113.366 77.1889 113.085 76.8906C112.807 76.5895 112.667 76.2131 112.667 75.7614C112.667 75.392 112.771 75.0653 112.978 74.7812C113.189 74.4972 113.474 74.2741 113.835 74.1122C114.199 73.9503 114.611 73.8693 115.071 73.8693C115.718 73.8693 116.227 74.0114 116.596 74.2955C116.968 74.5795 117.233 74.9545 117.389 75.4205ZM123.643 71.7727V80.5H122.637V71.7727H123.643ZM125.605 80.5V73.9545H126.61V80.5H125.605ZM126.116 72.8636C125.92 72.8636 125.751 72.7969 125.609 72.6634C125.47 72.5298 125.4 72.3693 125.4 72.1818C125.4 71.9943 125.47 71.8338 125.609 71.7003C125.751 71.5668 125.92 71.5 126.116 71.5C126.312 71.5 126.48 71.5668 126.619 71.7003C126.761 71.8338 126.832 71.9943 126.832 72.1818C126.832 72.3693 126.761 72.5298 126.619 72.6634C126.48 72.7969 126.312 72.8636 126.116 72.8636ZM129.51 78.1136L129.493 76.8693H129.697L132.561 73.9545H133.805L130.754 77.0398H130.669L129.51 78.1136ZM128.572 80.5V71.7727H129.578V80.5H128.572ZM132.732 80.5L130.175 77.2614L130.891 76.5625L134.01 80.5H132.732ZM137.695 80.6364C137.064 80.6364 136.52 80.4972 136.062 80.2188C135.608 79.9375 135.257 79.5455 135.01 79.0426C134.766 78.5369 134.643 77.9489 134.643 77.2784C134.643 76.608 134.766 76.017 135.01 75.5057C135.257 74.9915 135.601 74.5909 136.041 74.304C136.484 74.0142 137.001 73.8693 137.592 73.8693C137.933 73.8693 138.27 73.9261 138.602 74.0398C138.935 74.1534 139.237 74.3381 139.51 74.5938C139.783 74.8466 140 75.1818 140.162 75.5994C140.324 76.017 140.405 76.5312 140.405 77.142V77.5682H135.359V76.6989H139.382C139.382 76.3295 139.308 76 139.16 75.7102C139.016 75.4205 138.808 75.1918 138.538 75.0241C138.271 74.8565 137.956 74.7727 137.592 74.7727C137.192 74.7727 136.845 74.8722 136.552 75.071C136.263 75.267 136.04 75.5227 135.883 75.8381C135.727 76.1534 135.649 76.4915 135.649 76.8523V77.4318C135.649 77.9261 135.734 78.3452 135.905 78.6889C136.078 79.0298 136.318 79.2898 136.625 79.4688C136.932 79.6449 137.288 79.733 137.695 79.733C137.959 79.733 138.197 79.696 138.41 79.6222C138.626 79.5455 138.812 79.4318 138.969 79.2812C139.125 79.1278 139.246 78.9375 139.331 78.7102L140.302 78.983C140.2 79.3125 140.028 79.6023 139.787 79.8523C139.545 80.0994 139.247 80.2926 138.892 80.4318C138.537 80.5682 138.138 80.6364 137.695 80.6364ZM148.396 73.9545V74.8068H145.004V73.9545H148.396ZM145.993 72.3864H146.998V78.625C146.998 78.9091 147.04 79.1222 147.122 79.2642C147.207 79.4034 147.315 79.4972 147.446 79.5455C147.579 79.5909 147.72 79.6136 147.868 79.6136C147.979 79.6136 148.069 79.608 148.141 79.5966C148.212 79.5824 148.268 79.571 148.311 79.5625L148.516 80.4659C148.447 80.4915 148.352 80.517 148.23 80.5426C148.108 80.571 147.953 80.5852 147.766 80.5852C147.481 80.5852 147.203 80.5241 146.93 80.402C146.66 80.2798 146.436 80.0938 146.257 79.8438C146.081 79.5938 145.993 79.2784 145.993 78.8977V72.3864ZM151.175 76.5625V80.5H150.17V71.7727H151.175V74.9773H151.261C151.414 74.6392 151.644 74.3707 151.951 74.1719C152.261 73.9702 152.672 73.8693 153.187 73.8693C153.633 73.8693 154.023 73.9588 154.359 74.1378C154.694 74.3139 154.954 74.5852 155.138 74.9517C155.326 75.3153 155.42 75.7784 155.42 76.3409V80.5H154.414V76.4091C154.414 75.8892 154.279 75.4872 154.009 75.2031C153.742 74.9162 153.371 74.7727 152.897 74.7727C152.567 74.7727 152.272 74.8423 152.011 74.9815C151.752 75.1207 151.547 75.3239 151.397 75.5909C151.249 75.858 151.175 76.1818 151.175 76.5625ZM160.124 80.6364C159.493 80.6364 158.949 80.4972 158.492 80.2188C158.037 79.9375 157.686 79.5455 157.439 79.0426C157.195 78.5369 157.073 77.9489 157.073 77.2784C157.073 76.608 157.195 76.017 157.439 75.5057C157.686 74.9915 158.03 74.5909 158.47 74.304C158.914 74.0142 159.431 73.8693 160.021 73.8693C160.362 73.8693 160.699 73.9261 161.031 74.0398C161.364 74.1534 161.666 74.3381 161.939 74.5938C162.212 74.8466 162.429 75.1818 162.591 75.5994C162.753 76.017 162.834 76.5312 162.834 77.142V77.5682H157.789V76.6989H161.811C161.811 76.3295 161.737 76 161.59 75.7102C161.445 75.4205 161.237 75.1918 160.968 75.0241C160.7 74.8565 160.385 74.7727 160.021 74.7727C159.621 74.7727 159.274 74.8722 158.982 75.071C158.692 75.267 158.469 75.5227 158.313 75.8381C158.156 76.1534 158.078 76.4915 158.078 76.8523V77.4318C158.078 77.9261 158.164 78.3452 158.334 78.6889C158.507 79.0298 158.747 79.2898 159.054 79.4688C159.361 79.6449 159.718 79.733 160.124 79.733C160.388 79.733 160.627 79.696 160.84 79.6222C161.056 79.5455 161.242 79.4318 161.398 79.2812C161.554 79.1278 161.675 78.9375 161.76 78.7102L162.732 78.983C162.629 79.3125 162.458 79.6023 162.216 79.8523C161.975 80.0994 161.676 80.2926 161.321 80.4318C160.966 80.5682 160.567 80.6364 160.124 80.6364ZM167.979 82.9545V73.9545H168.95V74.9943H169.07C169.144 74.8807 169.246 74.7358 169.377 74.5597C169.51 74.3807 169.7 74.2216 169.948 74.0824C170.198 73.9403 170.536 73.8693 170.962 73.8693C171.513 73.8693 171.999 74.0071 172.419 74.2827C172.84 74.5582 173.168 74.9489 173.404 75.4545C173.639 75.9602 173.757 76.5568 173.757 77.2443C173.757 77.9375 173.639 78.5384 173.404 79.0469C173.168 79.5526 172.841 79.9446 172.423 80.223C172.006 80.4986 171.524 80.6364 170.979 80.6364C170.558 80.6364 170.222 80.5668 169.969 80.4276C169.716 80.2855 169.521 80.125 169.385 79.946C169.249 79.7642 169.144 79.6136 169.07 79.4943H168.985V82.9545H167.979ZM168.967 77.2273C168.967 77.7216 169.04 78.1577 169.185 78.5355C169.33 78.9105 169.541 79.2045 169.82 79.4176C170.098 79.6278 170.439 79.733 170.842 79.733C171.263 79.733 171.614 79.6222 171.895 79.4006C172.179 79.1761 172.392 78.875 172.534 78.4972C172.679 78.1165 172.752 77.6932 172.752 77.2273C172.752 76.767 172.681 76.3523 172.538 75.983C172.399 75.6108 172.188 75.3168 171.904 75.1009C171.622 74.8821 171.269 74.7727 170.842 74.7727C170.433 74.7727 170.09 74.8764 169.811 75.0838C169.533 75.2884 169.323 75.5753 169.181 75.9446C169.038 76.3111 168.967 76.7386 168.967 77.2273ZM178.156 80.6364C177.525 80.6364 176.981 80.4972 176.524 80.2188C176.069 79.9375 175.718 79.5455 175.471 79.0426C175.227 78.5369 175.104 77.9489 175.104 77.2784C175.104 76.608 175.227 76.017 175.471 75.5057C175.718 74.9915 176.062 74.5909 176.502 74.304C176.945 74.0142 177.462 73.8693 178.053 73.8693C178.394 73.8693 178.731 73.9261 179.063 74.0398C179.396 74.1534 179.698 74.3381 179.971 74.5938C180.244 74.8466 180.461 75.1818 180.623 75.5994C180.785 76.017 180.866 76.5312 180.866 77.142V77.5682H175.82V76.6989H179.843C179.843 76.3295 179.769 76 179.622 75.7102C179.477 75.4205 179.269 75.1918 178.999 75.0241C178.732 74.8565 178.417 74.7727 178.053 74.7727C177.653 74.7727 177.306 74.8722 177.014 75.071C176.724 75.267 176.501 75.5227 176.345 75.8381C176.188 76.1534 176.11 76.4915 176.11 76.8523V77.4318C176.11 77.9261 176.195 78.3452 176.366 78.6889C176.539 79.0298 176.779 79.2898 177.086 79.4688C177.393 79.6449 177.749 79.733 178.156 79.733C178.42 79.733 178.658 79.696 178.872 79.6222C179.087 79.5455 179.274 79.4318 179.43 79.2812C179.586 79.1278 179.707 78.9375 179.792 78.7102L180.764 78.983C180.661 79.3125 180.489 79.6023 180.248 79.8523C180.006 80.0994 179.708 80.2926 179.353 80.4318C178.998 80.5682 178.599 80.6364 178.156 80.6364ZM182.516 80.5V73.9545H183.487V74.9432H183.555C183.675 74.6193 183.891 74.3565 184.203 74.1548C184.516 73.9531 184.868 73.8523 185.26 73.8523C185.334 73.8523 185.426 73.8537 185.537 73.8565C185.648 73.8594 185.732 73.8636 185.788 73.8693V74.892C185.754 74.8835 185.676 74.8707 185.554 74.8537C185.435 74.8338 185.308 74.8239 185.175 74.8239C184.857 74.8239 184.573 74.8906 184.323 75.0241C184.075 75.1548 183.879 75.3366 183.734 75.5696C183.592 75.7997 183.521 76.0625 183.521 76.358V80.5H182.516ZM190.425 73.9545V74.8068H186.897V73.9545H190.425ZM187.954 80.5V73.0511C187.954 72.6761 188.042 72.3636 188.218 72.1136C188.394 71.8636 188.623 71.6761 188.904 71.5511C189.185 71.4261 189.482 71.3636 189.795 71.3636C190.042 71.3636 190.244 71.3835 190.4 71.4233C190.556 71.4631 190.673 71.5 190.749 71.5341L190.46 72.4034C190.408 72.3864 190.337 72.3651 190.246 72.3395C190.158 72.3139 190.042 72.3011 189.897 72.3011C189.565 72.3011 189.325 72.3849 189.177 72.5526C189.032 72.7202 188.96 72.9659 188.96 73.2898V80.5H187.954ZM194.43 80.6364C193.799 80.6364 193.255 80.4972 192.798 80.2188C192.343 79.9375 191.992 79.5455 191.745 79.0426C191.501 78.5369 191.379 77.9489 191.379 77.2784C191.379 76.608 191.501 76.017 191.745 75.5057C191.992 74.9915 192.336 74.5909 192.776 74.304C193.219 74.0142 193.737 73.8693 194.327 73.8693C194.668 73.8693 195.005 73.9261 195.337 74.0398C195.67 74.1534 195.972 74.3381 196.245 74.5938C196.518 74.8466 196.735 75.1818 196.897 75.5994C197.059 76.017 197.14 76.5312 197.14 77.142V77.5682H192.094V76.6989H196.117C196.117 76.3295 196.043 76 195.896 75.7102C195.751 75.4205 195.543 75.1918 195.273 75.0241C195.006 74.8565 194.691 74.7727 194.327 74.7727C193.927 74.7727 193.58 74.8722 193.288 75.071C192.998 75.267 192.775 75.5227 192.619 75.8381C192.462 76.1534 192.384 76.4915 192.384 76.8523V77.4318C192.384 77.9261 192.469 78.3452 192.64 78.6889C192.813 79.0298 193.053 79.2898 193.36 79.4688C193.667 79.6449 194.023 79.733 194.43 79.733C194.694 79.733 194.933 79.696 195.146 79.6222C195.362 79.5455 195.548 79.4318 195.704 79.2812C195.86 79.1278 195.981 78.9375 196.066 78.7102L197.038 78.983C196.935 79.3125 196.764 79.6023 196.522 79.8523C196.281 80.0994 195.982 80.2926 195.627 80.4318C195.272 80.5682 194.873 80.6364 194.43 80.6364ZM201.449 80.6364C200.835 80.6364 200.307 80.4915 199.864 80.2017C199.42 79.9119 199.08 79.5128 198.841 79.0043C198.602 78.4957 198.483 77.9148 198.483 77.2614C198.483 76.5966 198.605 76.0099 198.849 75.5014C199.097 74.9901 199.44 74.5909 199.881 74.304C200.324 74.0142 200.841 73.8693 201.432 73.8693C201.892 73.8693 202.307 73.9545 202.676 74.125C203.045 74.2955 203.348 74.5341 203.584 74.8409C203.82 75.1477 203.966 75.5057 204.023 75.9148H203.017C202.94 75.6165 202.77 75.3523 202.506 75.1222C202.244 74.8892 201.892 74.7727 201.449 74.7727C201.057 74.7727 200.713 74.875 200.418 75.0795C200.125 75.2812 199.896 75.5668 199.732 75.9361C199.57 76.3026 199.489 76.733 199.489 77.2273C199.489 77.733 199.568 78.1733 199.727 78.5483C199.889 78.9233 200.116 79.2145 200.409 79.4219C200.705 79.6293 201.051 79.733 201.449 79.733C201.71 79.733 201.947 79.6875 202.16 79.5966C202.374 79.5057 202.554 79.375 202.702 79.2045C202.849 79.0341 202.955 78.8295 203.017 78.5909H204.023C203.966 78.9773 203.825 79.3253 203.601 79.6349C203.379 79.9418 203.085 80.1861 202.719 80.3679C202.355 80.5469 201.932 80.6364 201.449 80.6364ZM208.459 73.9545V74.8068H205.067V73.9545H208.459ZM206.056 72.3864H207.062V78.625C207.062 78.9091 207.103 79.1222 207.185 79.2642C207.271 79.4034 207.379 79.4972 207.509 79.5455C207.643 79.5909 207.783 79.6136 207.931 79.6136C208.042 79.6136 208.133 79.608 208.204 79.5966C208.275 79.5824 208.332 79.571 208.374 79.5625L208.579 80.4659C208.511 80.4915 208.415 80.517 208.293 80.5426C208.171 80.571 208.016 80.5852 207.829 80.5852C207.545 80.5852 207.266 80.5241 206.994 80.402C206.724 80.2798 206.499 80.0938 206.32 79.8438C206.144 79.5938 206.056 79.2784 206.056 78.8977V72.3864ZM216.434 73.9545V74.8068H213.042V73.9545H216.434ZM214.03 72.3864H215.036V78.625C215.036 78.9091 215.077 79.1222 215.16 79.2642C215.245 79.4034 215.353 79.4972 215.484 79.5455C215.617 79.5909 215.758 79.6136 215.905 79.6136C216.016 79.6136 216.107 79.608 216.178 79.5966C216.249 79.5824 216.306 79.571 216.349 79.5625L216.553 80.4659C216.485 80.4915 216.39 80.517 216.268 80.5426C216.145 80.571 215.991 80.5852 215.803 80.5852C215.519 80.5852 215.241 80.5241 214.968 80.402C214.698 80.2798 214.474 80.0938 214.295 79.8438C214.118 79.5938 214.03 79.2784 214.03 78.8977V72.3864ZM218.067 80.5V73.9545H219.072V80.5H218.067ZM218.578 72.8636C218.382 72.8636 218.213 72.7969 218.071 72.6634C217.932 72.5298 217.862 72.3693 217.862 72.1818C217.862 71.9943 217.932 71.8338 218.071 71.7003C218.213 71.5668 218.382 71.5 218.578 71.5C218.774 71.5 218.942 71.5668 219.081 71.7003C219.223 71.8338 219.294 71.9943 219.294 72.1818C219.294 72.3693 219.223 72.5298 219.081 72.6634C218.942 72.7969 218.774 72.8636 218.578 72.8636ZM221.034 80.5V73.9545H222.006V74.9773H222.091C222.227 74.6278 222.448 74.3565 222.752 74.1634C223.056 73.9673 223.421 73.8693 223.847 73.8693C224.279 73.8693 224.638 73.9673 224.925 74.1634C225.215 74.3565 225.441 74.6278 225.602 74.9773H225.671C225.838 74.6392 226.09 74.3707 226.425 74.1719C226.76 73.9702 227.162 73.8693 227.631 73.8693C228.216 73.8693 228.695 74.0526 229.067 74.419C229.439 74.7827 229.625 75.3494 229.625 76.1193V80.5H228.62V76.1193C228.62 75.6364 228.487 75.2912 228.223 75.0838C227.959 74.8764 227.648 74.7727 227.29 74.7727C226.83 74.7727 226.473 74.9119 226.22 75.1903C225.968 75.4659 225.841 75.8153 225.841 76.2386V80.5H224.818V76.017C224.818 75.6449 224.698 75.3452 224.456 75.1179C224.215 74.8878 223.904 74.7727 223.523 74.7727C223.262 74.7727 223.017 74.8423 222.79 74.9815C222.566 75.1207 222.384 75.3139 222.245 75.5611C222.108 75.8054 222.04 76.0881 222.04 76.4091V80.5H221.034ZM234.328 80.6364C233.698 80.6364 233.154 80.4972 232.696 80.2188C232.242 79.9375 231.891 79.5455 231.644 79.0426C231.399 78.5369 231.277 77.9489 231.277 77.2784C231.277 76.608 231.399 76.017 231.644 75.5057C231.891 74.9915 232.235 74.5909 232.675 74.304C233.118 74.0142 233.635 73.8693 234.226 73.8693C234.567 73.8693 234.904 73.9261 235.236 74.0398C235.568 74.1534 235.871 74.3381 236.144 74.5938C236.416 74.8466 236.634 75.1818 236.796 75.5994C236.958 76.017 237.039 76.5312 237.039 77.142V77.5682H231.993V76.6989H236.016C236.016 76.3295 235.942 76 235.794 75.7102C235.649 75.4205 235.442 75.1918 235.172 75.0241C234.905 74.8565 234.59 74.7727 234.226 74.7727C233.825 74.7727 233.479 74.8722 233.186 75.071C232.896 75.267 232.673 75.5227 232.517 75.8381C232.361 76.1534 232.283 76.4915 232.283 76.8523V77.4318C232.283 77.9261 232.368 78.3452 232.539 78.6889C232.712 79.0298 232.952 79.2898 233.259 79.4688C233.566 79.6449 233.922 79.733 234.328 79.733C234.592 79.733 234.831 79.696 235.044 79.6222C235.26 79.5455 235.446 79.4318 235.602 79.2812C235.759 79.1278 235.879 78.9375 235.965 78.7102L236.936 78.983C236.834 79.3125 236.662 79.6023 236.421 79.8523C236.179 80.0994 235.881 80.2926 235.526 80.4318C235.171 80.5682 234.771 80.6364 234.328 80.6364ZM245.03 73.9545V74.8068H241.638V73.9545H245.03ZM242.627 72.3864H243.632V78.625C243.632 78.9091 243.673 79.1222 243.756 79.2642C243.841 79.4034 243.949 79.4972 244.08 79.5455C244.213 79.5909 244.354 79.6136 244.502 79.6136C244.612 79.6136 244.703 79.608 244.774 79.5966C244.845 79.5824 244.902 79.571 244.945 79.5625L245.149 80.4659C245.081 80.4915 244.986 80.517 244.864 80.5426C244.742 80.571 244.587 80.5852 244.399 80.5852C244.115 80.5852 243.837 80.5241 243.564 80.402C243.294 80.2798 243.07 80.0938 242.891 79.8438C242.715 79.5938 242.627 79.2784 242.627 78.8977V72.3864ZM249.251 80.6364C248.661 80.6364 248.142 80.4957 247.696 80.2145C247.253 79.9332 246.906 79.5398 246.656 79.0341C246.409 78.5284 246.286 77.9375 246.286 77.2614C246.286 76.5795 246.409 75.9844 246.656 75.4759C246.906 74.9673 247.253 74.5724 247.696 74.2912C248.142 74.0099 248.661 73.8693 249.251 73.8693C249.842 73.8693 250.359 74.0099 250.803 74.2912C251.249 74.5724 251.595 74.9673 251.842 75.4759C252.092 75.9844 252.217 76.5795 252.217 77.2614C252.217 77.9375 252.092 78.5284 251.842 79.0341C251.595 79.5398 251.249 79.9332 250.803 80.2145C250.359 80.4957 249.842 80.6364 249.251 80.6364ZM249.251 79.733C249.7 79.733 250.07 79.6179 250.359 79.3878C250.649 79.1577 250.864 78.8551 251.003 78.4801C251.142 78.1051 251.212 77.6989 251.212 77.2614C251.212 76.8239 251.142 76.4162 251.003 76.0384C250.864 75.6605 250.649 75.3551 250.359 75.1222C250.07 74.8892 249.7 74.7727 249.251 74.7727C248.803 74.7727 248.433 74.8892 248.144 75.1222C247.854 75.3551 247.639 75.6605 247.5 76.0384C247.361 76.4162 247.291 76.8239 247.291 77.2614C247.291 77.6989 247.361 78.1051 247.5 78.4801C247.639 78.8551 247.854 79.1577 248.144 79.3878C248.433 79.6179 248.803 79.733 249.251 79.733ZM262.004 75.4205L261.101 75.6761C261.044 75.5256 260.96 75.3793 260.849 75.2372C260.741 75.0923 260.593 74.973 260.406 74.8793C260.218 74.7855 259.978 74.7386 259.686 74.7386C259.285 74.7386 258.951 74.831 258.684 75.0156C258.42 75.1974 258.288 75.429 258.288 75.7102C258.288 75.9602 258.379 76.1577 258.561 76.3026C258.743 76.4474 259.027 76.5682 259.413 76.6648L260.385 76.9034C260.97 77.0455 261.406 77.2628 261.693 77.5554C261.98 77.8452 262.123 78.2187 262.123 78.6761C262.123 79.0511 262.015 79.3864 261.799 79.6818C261.586 79.9773 261.288 80.2102 260.904 80.3807C260.521 80.5511 260.075 80.6364 259.566 80.6364C258.899 80.6364 258.346 80.4915 257.909 80.2017C257.471 79.9119 257.194 79.4886 257.078 78.9318L258.032 78.6932C258.123 79.0455 258.295 79.3097 258.548 79.4858C258.804 79.6619 259.137 79.75 259.549 79.75C260.018 79.75 260.39 79.6506 260.666 79.4517C260.944 79.25 261.083 79.0085 261.083 78.7273C261.083 78.5 261.004 78.3097 260.845 78.1562C260.686 78 260.441 77.8835 260.112 77.8068L259.021 77.5511C258.422 77.4091 257.981 77.1889 257.7 76.8906C257.422 76.5895 257.282 76.2131 257.282 75.7614C257.282 75.392 257.386 75.0653 257.593 74.7812C257.804 74.4972 258.089 74.2741 258.45 74.1122C258.814 73.9503 259.226 73.8693 259.686 73.8693C260.333 73.8693 260.842 74.0114 261.211 74.2955C261.583 74.5795 261.848 74.9545 262.004 75.4205ZM266.501 80.6364C265.871 80.6364 265.327 80.4972 264.869 80.2188C264.415 79.9375 264.064 79.5455 263.817 79.0426C263.572 78.5369 263.45 77.9489 263.45 77.2784C263.45 76.608 263.572 76.017 263.817 75.5057C264.064 74.9915 264.408 74.5909 264.848 74.304C265.291 74.0142 265.808 73.8693 266.399 73.8693C266.74 73.8693 267.077 73.9261 267.409 74.0398C267.741 74.1534 268.044 74.3381 268.317 74.5938C268.589 74.8466 268.807 75.1818 268.969 75.5994C269.131 76.017 269.212 76.5312 269.212 77.142V77.5682H264.166V76.6989H268.189C268.189 76.3295 268.115 76 267.967 75.7102C267.822 75.4205 267.615 75.1918 267.345 75.0241C267.078 74.8565 266.763 74.7727 266.399 74.7727C265.999 74.7727 265.652 74.8722 265.359 75.071C265.07 75.267 264.847 75.5227 264.69 75.8381C264.534 76.1534 264.456 76.4915 264.456 76.8523V77.4318C264.456 77.9261 264.541 78.3452 264.712 78.6889C264.885 79.0298 265.125 79.2898 265.432 79.4688C265.739 79.6449 266.095 79.733 266.501 79.733C266.766 79.733 267.004 79.696 267.217 79.6222C267.433 79.5455 267.619 79.4318 267.776 79.2812C267.932 79.1278 268.053 78.9375 268.138 78.7102L269.109 78.983C269.007 79.3125 268.835 79.6023 268.594 79.8523C268.352 80.0994 268.054 80.2926 267.699 80.4318C267.344 80.5682 266.945 80.6364 266.501 80.6364ZM273.708 73.9545V74.8068H270.316V73.9545H273.708ZM271.305 72.3864H272.31V78.625C272.31 78.9091 272.352 79.1222 272.434 79.2642C272.519 79.4034 272.627 79.4972 272.758 79.5455C272.891 79.5909 273.032 79.6136 273.18 79.6136C273.29 79.6136 273.381 79.608 273.452 79.5966C273.523 79.5824 273.58 79.571 273.623 79.5625L273.827 80.4659C273.759 80.4915 273.664 80.517 273.542 80.5426C273.42 80.571 273.265 80.5852 273.077 80.5852C272.793 80.5852 272.515 80.5241 272.242 80.402C271.972 80.2798 271.748 80.0938 271.569 79.8438C271.393 79.5938 271.305 79.2784 271.305 78.8977V72.3864ZM281.751 73.9545V74.8068H278.222V73.9545H281.751ZM279.279 80.5V73.0511C279.279 72.6761 279.367 72.3636 279.543 72.1136C279.719 71.8636 279.948 71.6761 280.229 71.5511C280.511 71.4261 280.807 71.3636 281.12 71.3636C281.367 71.3636 281.569 71.3835 281.725 71.4233C281.881 71.4631 281.998 71.5 282.074 71.5341L281.785 72.4034C281.734 72.3864 281.663 72.3651 281.572 72.3395C281.484 72.3139 281.367 72.3011 281.222 72.3011C280.89 72.3011 280.65 72.3849 280.502 72.5526C280.357 72.7202 280.285 72.9659 280.285 73.2898V80.5H279.279ZM283.28 80.5V73.9545H284.252V74.9432H284.32C284.439 74.6193 284.655 74.3565 284.968 74.1548C285.28 73.9531 285.632 73.8523 286.024 73.8523C286.098 73.8523 286.191 73.8537 286.301 73.8565C286.412 73.8594 286.496 73.8636 286.553 73.8693V74.892C286.519 74.8835 286.441 74.8707 286.318 74.8537C286.199 74.8338 286.073 74.8239 285.939 74.8239C285.621 74.8239 285.337 74.8906 285.087 75.0241C284.84 75.1548 284.644 75.3366 284.499 75.5696C284.357 75.7997 284.286 76.0625 284.286 76.358V80.5H283.28ZM290.41 80.6364C289.779 80.6364 289.235 80.4972 288.778 80.2188C288.323 79.9375 287.973 79.5455 287.725 79.0426C287.481 78.5369 287.359 77.9489 287.359 77.2784C287.359 76.608 287.481 76.017 287.725 75.5057C287.973 74.9915 288.316 74.5909 288.757 74.304C289.2 74.0142 289.717 73.8693 290.308 73.8693C290.649 73.8693 290.985 73.9261 291.318 74.0398C291.65 74.1534 291.953 74.3381 292.225 74.5938C292.498 74.8466 292.715 75.1818 292.877 75.5994C293.039 76.017 293.12 76.5312 293.12 77.142V77.5682H288.075V76.6989H292.098C292.098 76.3295 292.024 76 291.876 75.7102C291.731 75.4205 291.524 75.1918 291.254 75.0241C290.987 74.8565 290.671 74.7727 290.308 74.7727C289.907 74.7727 289.561 74.8722 289.268 75.071C288.978 75.267 288.755 75.5227 288.599 75.8381C288.443 76.1534 288.365 76.4915 288.365 76.8523V77.4318C288.365 77.9261 288.45 78.3452 288.62 78.6889C288.794 79.0298 289.034 79.2898 289.34 79.4688C289.647 79.6449 290.004 79.733 290.41 79.733C290.674 79.733 290.913 79.696 291.126 79.6222C291.342 79.5455 291.528 79.4318 291.684 79.2812C291.84 79.1278 291.961 78.9375 292.046 78.7102L293.018 78.983C292.916 79.3125 292.744 79.6023 292.502 79.8523C292.261 80.0994 291.963 80.2926 291.607 80.4318C291.252 80.5682 290.853 80.6364 290.41 80.6364ZM299.406 75.4205L298.503 75.6761C298.446 75.5256 298.362 75.3793 298.252 75.2372C298.144 75.0923 297.996 74.973 297.808 74.8793C297.621 74.7855 297.381 74.7386 297.088 74.7386C296.688 74.7386 296.354 74.831 296.087 75.0156C295.823 75.1974 295.691 75.429 295.691 75.7102C295.691 75.9602 295.781 76.1577 295.963 76.3026C296.145 76.4474 296.429 76.5682 296.816 76.6648L297.787 76.9034C298.372 77.0455 298.808 77.2628 299.095 77.5554C299.382 77.8452 299.526 78.2187 299.526 78.6761C299.526 79.0511 299.418 79.3864 299.202 79.6818C298.989 79.9773 298.691 80.2102 298.307 80.3807C297.923 80.5511 297.477 80.6364 296.969 80.6364C296.301 80.6364 295.749 80.4915 295.311 80.2017C294.874 79.9119 294.597 79.4886 294.48 78.9318L295.435 78.6932C295.526 79.0455 295.698 79.3097 295.95 79.4858C296.206 79.6619 296.54 79.75 296.952 79.75C297.421 79.75 297.793 79.6506 298.068 79.4517C298.347 79.25 298.486 79.0085 298.486 78.7273C298.486 78.5 298.406 78.3097 298.247 78.1562C298.088 78 297.844 77.8835 297.514 77.8068L296.423 77.5511C295.824 77.4091 295.384 77.1889 295.102 76.8906C294.824 76.5895 294.685 76.2131 294.685 75.7614C294.685 75.392 294.789 75.0653 294.996 74.7812C295.206 74.4972 295.492 74.2741 295.852 74.1122C296.216 73.9503 296.628 73.8693 297.088 73.8693C297.736 73.8693 298.244 74.0114 298.614 74.2955C298.986 74.5795 299.25 74.9545 299.406 75.4205ZM302.165 76.5625V80.5H301.16V71.7727H302.165V74.9773H302.25C302.404 74.6392 302.634 74.3707 302.941 74.1719C303.25 73.9702 303.662 73.8693 304.177 73.8693C304.623 73.8693 305.013 73.9588 305.349 74.1378C305.684 74.3139 305.944 74.5852 306.128 74.9517C306.316 75.3153 306.41 75.7784 306.41 76.3409V80.5H305.404V76.4091C305.404 75.8892 305.269 75.4872 304.999 75.2031C304.732 74.9162 304.361 74.7727 303.887 74.7727C303.557 74.7727 303.262 74.8423 303 74.9815C302.742 75.1207 302.537 75.3239 302.387 75.5909C302.239 75.858 302.165 76.1818 302.165 76.5625ZM311.864 80.5V73.9545H312.836V74.9773H312.921C313.058 74.6278 313.278 74.3565 313.582 74.1634C313.886 73.9673 314.251 73.8693 314.677 73.8693C315.109 73.8693 315.468 73.9673 315.755 74.1634C316.045 74.3565 316.271 74.6278 316.433 74.9773H316.501C316.668 74.6392 316.92 74.3707 317.255 74.1719C317.59 73.9702 317.992 73.8693 318.461 73.8693C319.046 73.8693 319.525 74.0526 319.897 74.419C320.269 74.7827 320.455 75.3494 320.455 76.1193V80.5H319.45V76.1193C319.45 75.6364 319.318 75.2912 319.053 75.0838C318.789 74.8764 318.478 74.7727 318.12 74.7727C317.66 74.7727 317.303 74.9119 317.051 75.1903C316.798 75.4659 316.671 75.8153 316.671 76.2386V80.5H315.649V76.017C315.649 75.6449 315.528 75.3452 315.286 75.1179C315.045 74.8878 314.734 74.7727 314.353 74.7727C314.092 74.7727 313.847 74.8423 313.62 74.9815C313.396 75.1207 313.214 75.3139 313.075 75.5611C312.938 75.8054 312.87 76.0881 312.87 76.4091V80.5H311.864ZM322.414 80.5V73.9545H323.42V80.5H322.414ZM322.925 72.8636C322.729 72.8636 322.56 72.7969 322.418 72.6634C322.279 72.5298 322.21 72.3693 322.21 72.1818C322.21 71.9943 322.279 71.8338 322.418 71.7003C322.56 71.5668 322.729 71.5 322.925 71.5C323.122 71.5 323.289 71.5668 323.428 71.7003C323.57 71.8338 323.641 71.9943 323.641 72.1818C323.641 72.3693 323.57 72.5298 323.428 72.6634C323.289 72.7969 323.122 72.8636 322.925 72.8636ZM326.387 71.7727V80.5H325.382V71.7727H326.387ZM331.094 80.6364C330.463 80.6364 329.919 80.4972 329.462 80.2188C329.007 79.9375 328.656 79.5455 328.409 79.0426C328.165 78.5369 328.043 77.9489 328.043 77.2784C328.043 76.608 328.165 76.017 328.409 75.5057C328.656 74.9915 329 74.5909 329.44 74.304C329.884 74.0142 330.401 73.8693 330.991 73.8693C331.332 73.8693 331.669 73.9261 332.001 74.0398C332.334 74.1534 332.636 74.3381 332.909 74.5938C333.182 74.8466 333.399 75.1818 333.561 75.5994C333.723 76.017 333.804 76.5312 333.804 77.142V77.5682H328.759V76.6989H332.781C332.781 76.3295 332.707 76 332.56 75.7102C332.415 75.4205 332.207 75.1918 331.938 75.0241C331.67 74.8565 331.355 74.7727 330.991 74.7727C330.591 74.7727 330.244 74.8722 329.952 75.071C329.662 75.267 329.439 75.5227 329.283 75.8381C329.126 76.1534 329.048 76.4915 329.048 76.8523V77.4318C329.048 77.9261 329.134 78.3452 329.304 78.6889C329.477 79.0298 329.717 79.2898 330.024 79.4688C330.331 79.6449 330.688 79.733 331.094 79.733C331.358 79.733 331.597 79.696 331.81 79.6222C332.026 79.5455 332.212 79.4318 332.368 79.2812C332.524 79.1278 332.645 78.9375 332.73 78.7102L333.702 78.983C333.599 79.3125 333.428 79.6023 333.186 79.8523C332.945 80.0994 332.646 80.2926 332.291 80.4318C331.936 80.5682 331.537 80.6364 331.094 80.6364ZM340.09 75.4205L339.187 75.6761C339.13 75.5256 339.046 75.3793 338.935 75.2372C338.827 75.0923 338.68 74.973 338.492 74.8793C338.305 74.7855 338.065 74.7386 337.772 74.7386C337.371 74.7386 337.038 74.831 336.771 75.0156C336.506 75.1974 336.374 75.429 336.374 75.7102C336.374 75.9602 336.465 76.1577 336.647 76.3026C336.829 76.4474 337.113 76.5682 337.499 76.6648L338.471 76.9034C339.056 77.0455 339.492 77.2628 339.779 77.5554C340.066 77.8452 340.209 78.2187 340.209 78.6761C340.209 79.0511 340.102 79.3864 339.886 79.6818C339.673 79.9773 339.374 80.2102 338.991 80.3807C338.607 80.5511 338.161 80.6364 337.653 80.6364C336.985 80.6364 336.433 80.4915 335.995 80.2017C335.558 79.9119 335.281 79.4886 335.164 78.9318L336.119 78.6932C336.209 79.0455 336.381 79.3097 336.634 79.4858C336.89 79.6619 337.224 79.75 337.636 79.75C338.104 79.75 338.477 79.6506 338.752 79.4517C339.031 79.25 339.17 79.0085 339.17 78.7273C339.17 78.5 339.09 78.3097 338.931 78.1562C338.772 78 338.528 77.8835 338.198 77.8068L337.107 77.5511C336.508 77.4091 336.067 77.1889 335.786 76.8906C335.508 76.5895 335.369 76.2131 335.369 75.7614C335.369 75.392 335.472 75.0653 335.68 74.7812C335.89 74.4972 336.175 74.2741 336.536 74.1122C336.9 73.9503 337.312 73.8693 337.772 73.8693C338.42 73.8693 338.928 74.0114 339.298 74.2955C339.67 74.5795 339.934 74.9545 340.09 75.4205ZM344.69 73.9545V74.8068H341.298V73.9545H344.69ZM342.287 72.3864H343.292V78.625C343.292 78.9091 343.333 79.1222 343.416 79.2642C343.501 79.4034 343.609 79.4972 343.74 79.5455C343.873 79.5909 344.014 79.6136 344.162 79.6136C344.272 79.6136 344.363 79.608 344.434 79.5966C344.505 79.5824 344.562 79.571 344.605 79.5625L344.809 80.4659C344.741 80.4915 344.646 80.517 344.524 80.5426C344.402 80.571 344.247 80.5852 344.059 80.5852C343.775 80.5852 343.497 80.5241 343.224 80.402C342.954 80.2798 342.73 80.0938 342.551 79.8438C342.375 79.5938 342.287 79.2784 342.287 78.8977V72.3864ZM348.912 80.6364C348.321 80.6364 347.802 80.4957 347.356 80.2145C346.913 79.9332 346.566 79.5398 346.316 79.0341C346.069 78.5284 345.946 77.9375 345.946 77.2614C345.946 76.5795 346.069 75.9844 346.316 75.4759C346.566 74.9673 346.913 74.5724 347.356 74.2912C347.802 74.0099 348.321 73.8693 348.912 73.8693C349.502 73.8693 350.019 74.0099 350.463 74.2912C350.909 74.5724 351.255 74.9673 351.502 75.4759C351.752 75.9844 351.877 76.5795 351.877 77.2614C351.877 77.9375 351.752 78.5284 351.502 79.0341C351.255 79.5398 350.909 79.9332 350.463 80.2145C350.019 80.4957 349.502 80.6364 348.912 80.6364ZM348.912 79.733C349.36 79.733 349.73 79.6179 350.019 79.3878C350.309 79.1577 350.524 78.8551 350.663 78.4801C350.802 78.1051 350.872 77.6989 350.872 77.2614C350.872 76.8239 350.802 76.4162 350.663 76.0384C350.524 75.6605 350.309 75.3551 350.019 75.1222C349.73 74.8892 349.36 74.7727 348.912 74.7727C348.463 74.7727 348.093 74.8892 347.804 75.1222C347.514 75.3551 347.299 75.6605 347.16 76.0384C347.021 76.4162 346.951 76.8239 346.951 77.2614C346.951 77.6989 347.021 78.1051 347.16 78.4801C347.299 78.8551 347.514 79.1577 347.804 79.3878C348.093 79.6179 348.463 79.733 348.912 79.733ZM354.538 76.5625V80.5H353.533V73.9545H354.504V74.9773H354.589C354.743 74.6449 354.976 74.3778 355.288 74.1761C355.601 73.9716 356.004 73.8693 356.498 73.8693C356.942 73.8693 357.329 73.9602 357.662 74.142C357.994 74.321 358.253 74.5938 358.437 74.9602C358.622 75.3239 358.714 75.7841 358.714 76.3409V80.5H357.709V76.4091C357.709 75.8949 357.575 75.4943 357.308 75.2074C357.041 74.9176 356.675 74.7727 356.209 74.7727C355.888 74.7727 355.601 74.8423 355.348 74.9815C355.098 75.1207 354.9 75.3239 354.756 75.5909C354.611 75.858 354.538 76.1818 354.538 76.5625ZM363.416 80.6364C362.786 80.6364 362.242 80.4972 361.784 80.2188C361.33 79.9375 360.979 79.5455 360.732 79.0426C360.487 78.5369 360.365 77.9489 360.365 77.2784C360.365 76.608 360.487 76.017 360.732 75.5057C360.979 74.9915 361.323 74.5909 361.763 74.304C362.206 74.0142 362.723 73.8693 363.314 73.8693C363.655 73.8693 363.992 73.9261 364.324 74.0398C364.656 74.1534 364.959 74.3381 365.232 74.5938C365.504 74.8466 365.722 75.1818 365.884 75.5994C366.046 76.017 366.127 76.5312 366.127 77.142V77.5682H361.081V76.6989H365.104C365.104 76.3295 365.03 76 364.882 75.7102C364.737 75.4205 364.53 75.1918 364.26 75.0241C363.993 74.8565 363.678 74.7727 363.314 74.7727C362.914 74.7727 362.567 74.8722 362.274 75.071C361.985 75.267 361.762 75.5227 361.605 75.8381C361.449 76.1534 361.371 76.4915 361.371 76.8523V77.4318C361.371 77.9261 361.456 78.3452 361.627 78.6889C361.8 79.0298 362.04 79.2898 362.347 79.4688C362.654 79.6449 363.01 79.733 363.416 79.733C363.681 79.733 363.919 79.696 364.132 79.6222C364.348 79.5455 364.534 79.4318 364.691 79.2812C364.847 79.1278 364.968 78.9375 365.053 78.7102L366.024 78.983C365.922 79.3125 365.75 79.6023 365.509 79.8523C365.267 80.0994 364.969 80.2926 364.614 80.4318C364.259 80.5682 363.86 80.6364 363.416 80.6364ZM372.413 75.4205L371.509 75.6761C371.453 75.5256 371.369 75.3793 371.258 75.2372C371.15 75.0923 371.002 74.973 370.815 74.8793C370.627 74.7855 370.387 74.7386 370.095 74.7386C369.694 74.7386 369.36 74.831 369.093 75.0156C368.829 75.1974 368.697 75.429 368.697 75.7102C368.697 75.9602 368.788 76.1577 368.97 76.3026C369.151 76.4474 369.436 76.5682 369.822 76.6648L370.794 76.9034C371.379 77.0455 371.815 77.2628 372.102 77.5554C372.389 77.8452 372.532 78.2187 372.532 78.6761C372.532 79.0511 372.424 79.3864 372.208 79.6818C371.995 79.9773 371.697 80.2102 371.313 80.3807C370.93 80.5511 370.484 80.6364 369.975 80.6364C369.308 80.6364 368.755 80.4915 368.318 80.2017C367.88 79.9119 367.603 79.4886 367.487 78.9318L368.441 78.6932C368.532 79.0455 368.704 79.3097 368.957 79.4858C369.213 79.6619 369.546 79.75 369.958 79.75C370.427 79.75 370.799 79.6506 371.075 79.4517C371.353 79.25 371.492 79.0085 371.492 78.7273C371.492 78.5 371.413 78.3097 371.254 78.1562C371.095 78 370.85 77.8835 370.521 77.8068L369.43 77.5511C368.83 77.4091 368.39 77.1889 368.109 76.8906C367.83 76.5895 367.691 76.2131 367.691 75.7614C367.691 75.392 367.795 75.0653 368.002 74.7812C368.213 74.4972 368.498 74.2741 368.859 74.1122C369.222 73.9503 369.634 73.8693 370.095 73.8693C370.742 73.8693 371.251 74.0114 371.62 74.2955C371.992 74.5795 372.257 74.9545 372.413 75.4205ZM151.523 95.9545V96.8068H148.131V95.9545H151.523ZM149.12 94.3864H150.126V100.625C150.126 100.909 150.167 101.122 150.249 101.264C150.335 101.403 150.442 101.497 150.573 101.545C150.707 101.591 150.847 101.614 150.995 101.614C151.106 101.614 151.197 101.608 151.268 101.597C151.339 101.582 151.396 101.571 151.438 101.562L151.643 102.466C151.575 102.491 151.479 102.517 151.357 102.543C151.235 102.571 151.08 102.585 150.893 102.585C150.609 102.585 150.33 102.524 150.058 102.402C149.788 102.28 149.563 102.094 149.384 101.844C149.208 101.594 149.12 101.278 149.12 100.898V94.3864ZM155.745 102.636C155.154 102.636 154.636 102.496 154.19 102.214C153.746 101.933 153.4 101.54 153.15 101.034C152.903 100.528 152.779 99.9375 152.779 99.2614C152.779 98.5795 152.903 97.9844 153.15 97.4759C153.4 96.9673 153.746 96.5724 154.19 96.2912C154.636 96.0099 155.154 95.8693 155.745 95.8693C156.336 95.8693 156.853 96.0099 157.296 96.2912C157.742 96.5724 158.089 96.9673 158.336 97.4759C158.586 97.9844 158.711 98.5795 158.711 99.2614C158.711 99.9375 158.586 100.528 158.336 101.034C158.089 101.54 157.742 101.933 157.296 102.214C156.853 102.496 156.336 102.636 155.745 102.636ZM155.745 101.733C156.194 101.733 156.563 101.618 156.853 101.388C157.143 101.158 157.357 100.855 157.496 100.48C157.636 100.105 157.705 99.6989 157.705 99.2614C157.705 98.8239 157.636 98.4162 157.496 98.0384C157.357 97.6605 157.143 97.3551 156.853 97.1222C156.563 96.8892 156.194 96.7727 155.745 96.7727C155.296 96.7727 154.927 96.8892 154.637 97.1222C154.347 97.3551 154.133 97.6605 153.994 98.0384C153.854 98.4162 153.785 98.8239 153.785 99.2614C153.785 99.6989 153.854 100.105 153.994 100.48C154.133 100.855 154.347 101.158 154.637 101.388C154.927 101.618 155.296 101.733 155.745 101.733ZM161.626 102.5L159.632 95.9545H160.689L162.104 100.966H162.172L163.57 95.9545H164.643L166.024 100.949H166.092L167.507 95.9545H168.564L166.57 102.5H165.581L164.149 97.4716H164.047L162.615 102.5H161.626ZM171.94 102.653C171.525 102.653 171.148 102.575 170.81 102.419C170.472 102.26 170.204 102.031 170.005 101.733C169.806 101.432 169.707 101.068 169.707 100.642C169.707 100.267 169.78 99.9631 169.928 99.7301C170.076 99.4943 170.273 99.3097 170.521 99.1761C170.768 99.0426 171.04 98.9432 171.339 98.8778C171.64 98.8097 171.942 98.7557 172.246 98.7159C172.644 98.6648 172.967 98.6264 173.214 98.6009C173.464 98.5724 173.646 98.5256 173.759 98.4602C173.876 98.3949 173.934 98.2812 173.934 98.1193V98.0852C173.934 97.6648 173.819 97.3381 173.589 97.1051C173.361 96.8722 173.016 96.7557 172.553 96.7557C172.073 96.7557 171.697 96.8608 171.424 97.071C171.151 97.2812 170.959 97.5057 170.849 97.7443L169.894 97.4034C170.065 97.0057 170.292 96.696 170.576 96.4744C170.863 96.25 171.175 96.0937 171.513 96.0057C171.854 95.9148 172.19 95.8693 172.519 95.8693C172.729 95.8693 172.971 95.8949 173.244 95.946C173.519 95.9943 173.785 96.0952 174.04 96.2486C174.299 96.402 174.513 96.6335 174.684 96.9432C174.854 97.2528 174.94 97.6676 174.94 98.1875V102.5H173.934V101.614H173.883C173.815 101.756 173.701 101.908 173.542 102.07C173.383 102.232 173.171 102.369 172.907 102.483C172.643 102.597 172.32 102.653 171.94 102.653ZM172.093 101.75C172.491 101.75 172.826 101.672 173.099 101.516C173.374 101.359 173.582 101.158 173.721 100.911C173.863 100.663 173.934 100.403 173.934 100.131V99.2102C173.891 99.2614 173.798 99.3082 173.653 99.3509C173.511 99.3906 173.346 99.4261 173.158 99.4574C172.974 99.4858 172.793 99.5114 172.617 99.5341C172.444 99.554 172.303 99.571 172.195 99.5852C171.934 99.6193 171.69 99.6747 171.462 99.7514C171.238 99.8253 171.056 99.9375 170.917 100.088C170.78 100.236 170.712 100.437 170.712 100.693C170.712 101.043 170.842 101.307 171.1 101.486C171.361 101.662 171.692 101.75 172.093 101.75ZM176.895 102.5V95.9545H177.867V96.9432H177.935C178.054 96.6193 178.27 96.3565 178.583 96.1548C178.895 95.9531 179.247 95.8523 179.639 95.8523C179.713 95.8523 179.806 95.8537 179.916 95.8565C180.027 95.8594 180.111 95.8636 180.168 95.8693V96.892C180.134 96.8835 180.056 96.8707 179.933 96.8537C179.814 96.8338 179.688 96.8239 179.554 96.8239C179.236 96.8239 178.952 96.8906 178.702 97.0241C178.455 97.1548 178.259 97.3366 178.114 97.5696C177.972 97.7997 177.901 98.0625 177.901 98.358V102.5H176.895ZM183.752 102.636C183.207 102.636 182.725 102.499 182.308 102.223C181.89 101.945 181.563 101.553 181.328 101.047C181.092 100.538 180.974 99.9375 180.974 99.2443C180.974 98.5568 181.092 97.9602 181.328 97.4545C181.563 96.9489 181.892 96.5582 182.312 96.2827C182.732 96.0071 183.218 95.8693 183.769 95.8693C184.196 95.8693 184.532 95.9403 184.779 96.0824C185.029 96.2216 185.22 96.3807 185.35 96.5597C185.484 96.7358 185.588 96.8807 185.661 96.9943H185.747V93.7727H186.752V102.5H185.781V101.494H185.661C185.588 101.614 185.482 101.764 185.346 101.946C185.21 102.125 185.015 102.286 184.762 102.428C184.509 102.567 184.173 102.636 183.752 102.636ZM183.889 101.733C184.292 101.733 184.633 101.628 184.911 101.418C185.19 101.205 185.402 100.911 185.546 100.536C185.691 100.158 185.764 99.7216 185.764 99.2273C185.764 98.7386 185.693 98.3111 185.551 97.9446C185.409 97.5753 185.198 97.2884 184.92 97.0838C184.642 96.8764 184.298 96.7727 183.889 96.7727C183.463 96.7727 183.107 96.8821 182.823 97.1009C182.542 97.3168 182.33 97.6108 182.188 97.983C182.049 98.3523 181.98 98.767 181.98 99.2273C181.98 99.6932 182.051 100.116 182.193 100.497C182.338 100.875 182.551 101.176 182.832 101.401C183.116 101.622 183.468 101.733 183.889 101.733ZM192.997 104.955C192.826 104.955 192.674 104.94 192.541 104.912C192.407 104.886 192.315 104.861 192.264 104.835L192.519 103.949C192.764 104.011 192.98 104.034 193.167 104.017C193.355 104 193.521 103.916 193.666 103.766C193.813 103.618 193.948 103.378 194.07 103.045L194.258 102.534L191.838 95.9545H192.928L194.735 101.17H194.803L196.61 95.9545H197.701L194.923 103.455C194.798 103.793 194.643 104.072 194.458 104.294C194.274 104.518 194.059 104.685 193.815 104.793C193.573 104.901 193.301 104.955 192.997 104.955ZM201.573 102.636C200.982 102.636 200.464 102.496 200.018 102.214C199.575 101.933 199.228 101.54 198.978 101.034C198.731 100.528 198.607 99.9375 198.607 99.2614C198.607 98.5795 198.731 97.9844 198.978 97.4759C199.228 96.9673 199.575 96.5724 200.018 96.2912C200.464 96.0099 200.982 95.8693 201.573 95.8693C202.164 95.8693 202.681 96.0099 203.124 96.2912C203.57 96.5724 203.917 96.9673 204.164 97.4759C204.414 97.9844 204.539 98.5795 204.539 99.2614C204.539 99.9375 204.414 100.528 204.164 101.034C203.917 101.54 203.57 101.933 203.124 102.214C202.681 102.496 202.164 102.636 201.573 102.636ZM201.573 101.733C202.022 101.733 202.391 101.618 202.681 101.388C202.971 101.158 203.186 100.855 203.325 100.48C203.464 100.105 203.534 99.6989 203.534 99.2614C203.534 98.8239 203.464 98.4162 203.325 98.0384C203.186 97.6605 202.971 97.3551 202.681 97.1222C202.391 96.8892 202.022 96.7727 201.573 96.7727C201.124 96.7727 200.755 96.8892 200.465 97.1222C200.176 97.3551 199.961 97.6605 199.822 98.0384C199.683 98.4162 199.613 98.8239 199.613 99.2614C199.613 99.6989 199.683 100.105 199.822 100.48C199.961 100.855 200.176 101.158 200.465 101.388C200.755 101.618 201.124 101.733 201.573 101.733ZM210.319 99.8239V95.9545H211.325V102.5H210.319V101.392H210.251C210.098 101.724 209.859 102.007 209.535 102.24C209.211 102.47 208.802 102.585 208.308 102.585C207.899 102.585 207.535 102.496 207.217 102.317C206.899 102.135 206.649 101.862 206.467 101.499C206.285 101.132 206.194 100.67 206.194 100.114V95.9545H207.2V100.045C207.2 100.523 207.334 100.903 207.601 101.188C207.871 101.472 208.214 101.614 208.632 101.614C208.882 101.614 209.136 101.55 209.395 101.422C209.656 101.294 209.875 101.098 210.051 100.834C210.23 100.57 210.319 100.233 210.319 99.8239ZM213.287 102.5V95.9545H214.259V96.9432H214.327C214.446 96.6193 214.662 96.3565 214.975 96.1548C215.287 95.9531 215.639 95.8523 216.031 95.8523C216.105 95.8523 216.198 95.8537 216.308 95.8565C216.419 95.8594 216.503 95.8636 216.56 95.8693V96.892C216.526 96.8835 216.448 96.8707 216.325 96.8537C216.206 96.8338 216.08 96.8239 215.946 96.8239C215.628 96.8239 215.344 96.8906 215.094 97.0241C214.847 97.1548 214.651 97.3366 214.506 97.5696C214.364 97.7997 214.293 98.0625 214.293 98.358V102.5H213.287ZM221.503 102.5V93.7727H222.509V96.9943H222.594C222.668 96.8807 222.77 96.7358 222.901 96.5597C223.034 96.3807 223.225 96.2216 223.472 96.0824C223.722 95.9403 224.06 95.8693 224.486 95.8693C225.037 95.8693 225.523 96.0071 225.944 96.2827C226.364 96.5582 226.692 96.9489 226.928 97.4545C227.164 97.9602 227.282 98.5568 227.282 99.2443C227.282 99.9375 227.164 100.538 226.928 101.047C226.692 101.553 226.365 101.945 225.948 102.223C225.53 102.499 225.049 102.636 224.503 102.636C224.083 102.636 223.746 102.567 223.493 102.428C223.24 102.286 223.046 102.125 222.909 101.946C222.773 101.764 222.668 101.614 222.594 101.494H222.475V102.5H221.503ZM222.492 99.2273C222.492 99.7216 222.564 100.158 222.709 100.536C222.854 100.911 223.066 101.205 223.344 101.418C223.623 101.628 223.963 101.733 224.367 101.733C224.787 101.733 225.138 101.622 225.419 101.401C225.704 101.176 225.917 100.875 226.059 100.497C226.204 100.116 226.276 99.6932 226.276 99.2273C226.276 98.767 226.205 98.3523 226.063 97.983C225.924 97.6108 225.712 97.3168 225.428 97.1009C225.147 96.8821 224.793 96.7727 224.367 96.7727C223.958 96.7727 223.614 96.8764 223.336 97.0838C223.057 97.2884 222.847 97.5753 222.705 97.9446C222.563 98.3111 222.492 98.7386 222.492 99.2273ZM233.065 99.8239V95.9545H234.071V102.5H233.065V101.392H232.997C232.843 101.724 232.605 102.007 232.281 102.24C231.957 102.47 231.548 102.585 231.054 102.585C230.645 102.585 230.281 102.496 229.963 102.317C229.645 102.135 229.395 101.862 229.213 101.499C229.031 101.132 228.94 100.67 228.94 100.114V95.9545H229.946V100.045C229.946 100.523 230.079 100.903 230.346 101.188C230.616 101.472 230.96 101.614 231.377 101.614C231.627 101.614 231.882 101.55 232.14 101.422C232.402 101.294 232.62 101.098 232.797 100.834C232.975 100.57 233.065 100.233 233.065 99.8239ZM240.669 97.4205L239.766 97.6761C239.709 97.5256 239.625 97.3793 239.514 97.2372C239.406 97.0923 239.258 96.973 239.071 96.8793C238.883 96.7855 238.643 96.7386 238.351 96.7386C237.95 96.7386 237.616 96.831 237.349 97.0156C237.085 97.1974 236.953 97.429 236.953 97.7102C236.953 97.9602 237.044 98.1577 237.226 98.3026C237.408 98.4474 237.692 98.5682 238.078 98.6648L239.05 98.9034C239.635 99.0455 240.071 99.2628 240.358 99.5554C240.645 99.8452 240.788 100.219 240.788 100.676C240.788 101.051 240.68 101.386 240.464 101.682C240.251 101.977 239.953 102.21 239.57 102.381C239.186 102.551 238.74 102.636 238.232 102.636C237.564 102.636 237.011 102.491 236.574 102.202C236.136 101.912 235.859 101.489 235.743 100.932L236.697 100.693C236.788 101.045 236.96 101.31 237.213 101.486C237.469 101.662 237.803 101.75 238.214 101.75C238.683 101.75 239.055 101.651 239.331 101.452C239.609 101.25 239.749 101.009 239.749 100.727C239.749 100.5 239.669 100.31 239.51 100.156C239.351 100 239.107 99.8835 238.777 99.8068L237.686 99.5511C237.087 99.4091 236.646 99.1889 236.365 98.8906C236.087 98.5895 235.947 98.2131 235.947 97.7614C235.947 97.392 236.051 97.0653 236.258 96.7812C236.469 96.4972 236.754 96.2741 237.115 96.1122C237.479 95.9503 237.891 95.8693 238.351 95.8693C238.999 95.8693 239.507 96.0114 239.876 96.2955C240.249 96.5795 240.513 96.9545 240.669 97.4205ZM242.422 102.5V95.9545H243.428V102.5H242.422ZM242.934 94.8636C242.738 94.8636 242.568 94.7969 242.426 94.6634C242.287 94.5298 242.218 94.3693 242.218 94.1818C242.218 93.9943 242.287 93.8338 242.426 93.7003C242.568 93.5668 242.738 93.5 242.934 93.5C243.13 93.5 243.297 93.5668 243.436 93.7003C243.578 93.8338 243.649 93.9943 243.649 94.1818C243.649 94.3693 243.578 94.5298 243.436 94.6634C243.297 94.7969 243.13 94.8636 242.934 94.8636ZM246.396 98.5625V102.5H245.39V95.9545H246.361V96.9773H246.447C246.6 96.6449 246.833 96.3778 247.146 96.1761C247.458 95.9716 247.861 95.8693 248.356 95.8693C248.799 95.8693 249.187 95.9602 249.519 96.142C249.851 96.321 250.11 96.5938 250.295 96.9602C250.479 97.3239 250.572 97.7841 250.572 98.3409V102.5H249.566V98.4091C249.566 97.8949 249.432 97.4943 249.165 97.2074C248.898 96.9176 248.532 96.7727 248.066 96.7727C247.745 96.7727 247.458 96.8423 247.205 96.9815C246.955 97.1207 246.758 97.3239 246.613 97.5909C246.468 97.858 246.396 98.1818 246.396 98.5625ZM255.274 102.636C254.643 102.636 254.099 102.497 253.642 102.219C253.187 101.938 252.836 101.545 252.589 101.043C252.345 100.537 252.223 99.9489 252.223 99.2784C252.223 98.608 252.345 98.017 252.589 97.5057C252.836 96.9915 253.18 96.5909 253.62 96.304C254.063 96.0142 254.581 95.8693 255.171 95.8693C255.512 95.8693 255.849 95.9261 256.181 96.0398C256.514 96.1534 256.816 96.3381 257.089 96.5938C257.362 96.8466 257.579 97.1818 257.741 97.5994C257.903 98.017 257.984 98.5312 257.984 99.142V99.5682H252.938V98.6989H256.961C256.961 98.3295 256.887 98 256.74 97.7102C256.595 97.4205 256.387 97.1918 256.117 97.0241C255.85 96.8565 255.535 96.7727 255.171 96.7727C254.771 96.7727 254.424 96.8722 254.132 97.071C253.842 97.267 253.619 97.5227 253.463 97.8381C253.306 98.1534 253.228 98.4915 253.228 98.8523V99.4318C253.228 99.9261 253.313 100.345 253.484 100.689C253.657 101.03 253.897 101.29 254.204 101.469C254.511 101.645 254.867 101.733 255.274 101.733C255.538 101.733 255.777 101.696 255.99 101.622C256.206 101.545 256.392 101.432 256.548 101.281C256.704 101.128 256.825 100.937 256.91 100.71L257.882 100.983C257.779 101.312 257.607 101.602 257.366 101.852C257.125 102.099 256.826 102.293 256.471 102.432C256.116 102.568 255.717 102.636 255.274 102.636ZM264.27 97.4205L263.367 97.6761C263.31 97.5256 263.226 97.3793 263.115 97.2372C263.007 97.0923 262.86 96.973 262.672 96.8793C262.485 96.7855 262.245 96.7386 261.952 96.7386C261.551 96.7386 261.218 96.831 260.951 97.0156C260.686 97.1974 260.554 97.429 260.554 97.7102C260.554 97.9602 260.645 98.1577 260.827 98.3026C261.009 98.4474 261.293 98.5682 261.679 98.6648L262.651 98.9034C263.236 99.0455 263.672 99.2628 263.959 99.5554C264.246 99.8452 264.389 100.219 264.389 100.676C264.389 101.051 264.281 101.386 264.066 101.682C263.852 101.977 263.554 102.21 263.171 102.381C262.787 102.551 262.341 102.636 261.833 102.636C261.165 102.636 260.612 102.491 260.175 102.202C259.737 101.912 259.46 101.489 259.344 100.932L260.299 100.693C260.389 101.045 260.561 101.31 260.814 101.486C261.07 101.662 261.404 101.75 261.816 101.75C262.284 101.75 262.656 101.651 262.932 101.452C263.21 101.25 263.35 101.009 263.35 100.727C263.35 100.5 263.27 100.31 263.111 100.156C262.952 100 262.708 99.8835 262.378 99.8068L261.287 99.5511C260.688 99.4091 260.247 99.1889 259.966 98.8906C259.688 98.5895 259.549 98.2131 259.549 97.7614C259.549 97.392 259.652 97.0653 259.86 96.7812C260.07 96.4972 260.355 96.2741 260.716 96.1122C261.08 95.9503 261.492 95.8693 261.952 95.8693C262.6 95.8693 263.108 96.0114 263.477 96.2955C263.85 96.5795 264.114 96.9545 264.27 97.4205ZM270.66 97.4205L269.756 97.6761C269.699 97.5256 269.616 97.3793 269.505 97.2372C269.397 97.0923 269.249 96.973 269.062 96.8793C268.874 96.7855 268.634 96.7386 268.341 96.7386C267.941 96.7386 267.607 96.831 267.34 97.0156C267.076 97.1974 266.944 97.429 266.944 97.7102C266.944 97.9602 267.035 98.1577 267.216 98.3026C267.398 98.4474 267.682 98.5682 268.069 98.6648L269.04 98.9034C269.626 99.0455 270.062 99.2628 270.349 99.5554C270.635 99.8452 270.779 100.219 270.779 100.676C270.779 101.051 270.671 101.386 270.455 101.682C270.242 101.977 269.944 102.21 269.56 102.381C269.177 102.551 268.731 102.636 268.222 102.636C267.555 102.636 267.002 102.491 266.564 102.202C266.127 101.912 265.85 101.489 265.733 100.932L266.688 100.693C266.779 101.045 266.951 101.31 267.204 101.486C267.459 101.662 267.793 101.75 268.205 101.75C268.674 101.75 269.046 101.651 269.322 101.452C269.6 101.25 269.739 101.009 269.739 100.727C269.739 100.5 269.66 100.31 269.501 100.156C269.341 100 269.097 99.8835 268.768 99.8068L267.677 99.5511C267.077 99.4091 266.637 99.1889 266.356 98.8906C266.077 98.5895 265.938 98.2131 265.938 97.7614C265.938 97.392 266.042 97.0653 266.249 96.7812C266.459 96.4972 266.745 96.2741 267.106 96.1122C267.469 95.9503 267.881 95.8693 268.341 95.8693C268.989 95.8693 269.498 96.0114 269.867 96.2955C270.239 96.5795 270.503 96.9545 270.66 97.4205ZM278.55 105.091C278.064 105.091 277.646 105.028 277.297 104.903C276.948 104.781 276.656 104.619 276.423 104.418C276.193 104.219 276.01 104.006 275.874 103.778L276.675 103.216C276.766 103.335 276.881 103.472 277.02 103.625C277.159 103.781 277.35 103.916 277.591 104.03C277.835 104.146 278.155 104.205 278.55 104.205C279.078 104.205 279.514 104.077 279.858 103.821C280.202 103.565 280.374 103.165 280.374 102.619V101.29H280.288C280.215 101.409 280.109 101.557 279.973 101.733C279.84 101.906 279.646 102.061 279.394 102.197C279.144 102.331 278.806 102.398 278.379 102.398C277.851 102.398 277.377 102.273 276.956 102.023C276.538 101.773 276.208 101.409 275.963 100.932C275.722 100.455 275.601 99.875 275.601 99.1932C275.601 98.5227 275.719 97.9389 275.955 97.4418C276.19 96.9418 276.519 96.5554 276.939 96.2827C277.359 96.0071 277.845 95.8693 278.396 95.8693C278.823 95.8693 279.161 95.9403 279.411 96.0824C279.663 96.2216 279.857 96.3807 279.99 96.5597C280.127 96.7358 280.232 96.8807 280.306 96.9943H280.408V95.9545H281.379V102.688C281.379 103.25 281.252 103.707 280.996 104.06C280.743 104.415 280.402 104.675 279.973 104.839C279.547 105.007 279.073 105.091 278.55 105.091ZM278.516 101.494C278.919 101.494 279.26 101.402 279.538 101.217C279.817 101.033 280.029 100.767 280.173 100.42C280.318 100.074 280.391 99.6591 280.391 99.1761C280.391 98.7045 280.32 98.2884 280.178 97.9276C280.036 97.5668 279.825 97.2841 279.547 97.0795C279.269 96.875 278.925 96.7727 278.516 96.7727C278.09 96.7727 277.734 96.8807 277.45 97.0966C277.169 97.3125 276.958 97.6023 276.815 97.9659C276.676 98.3295 276.607 98.733 276.607 99.1761C276.607 99.6307 276.678 100.033 276.82 100.382C276.965 100.729 277.178 101.001 277.459 101.2C277.743 101.396 278.095 101.494 278.516 101.494ZM285.999 102.636C285.408 102.636 284.89 102.496 284.444 102.214C284.001 101.933 283.654 101.54 283.404 101.034C283.157 100.528 283.033 99.9375 283.033 99.2614C283.033 98.5795 283.157 97.9844 283.404 97.4759C283.654 96.9673 284.001 96.5724 284.444 96.2912C284.89 96.0099 285.408 95.8693 285.999 95.8693C286.59 95.8693 287.107 96.0099 287.551 96.2912C287.997 96.5724 288.343 96.9673 288.59 97.4759C288.84 97.9844 288.965 98.5795 288.965 99.2614C288.965 99.9375 288.84 100.528 288.59 101.034C288.343 101.54 287.997 101.933 287.551 102.214C287.107 102.496 286.59 102.636 285.999 102.636ZM285.999 101.733C286.448 101.733 286.818 101.618 287.107 101.388C287.397 101.158 287.612 100.855 287.751 100.48C287.89 100.105 287.96 99.6989 287.96 99.2614C287.96 98.8239 287.89 98.4162 287.751 98.0384C287.612 97.6605 287.397 97.3551 287.107 97.1222C286.818 96.8892 286.448 96.7727 285.999 96.7727C285.551 96.7727 285.181 96.8892 284.891 97.1222C284.602 97.3551 284.387 97.6605 284.248 98.0384C284.109 98.4162 284.039 98.8239 284.039 99.2614C284.039 99.6989 284.109 100.105 284.248 100.48C284.387 100.855 284.602 101.158 284.891 101.388C285.181 101.618 285.551 101.733 285.999 101.733ZM292.547 102.653C292.132 102.653 291.755 102.575 291.417 102.419C291.079 102.26 290.811 102.031 290.612 101.733C290.413 101.432 290.314 101.068 290.314 100.642C290.314 100.267 290.387 99.9631 290.535 99.7301C290.683 99.4943 290.88 99.3097 291.128 99.1761C291.375 99.0426 291.647 98.9432 291.946 98.8778C292.247 98.8097 292.549 98.7557 292.853 98.7159C293.251 98.6648 293.574 98.6264 293.821 98.6009C294.071 98.5724 294.253 98.5256 294.366 98.4602C294.483 98.3949 294.541 98.2812 294.541 98.1193V98.0852C294.541 97.6648 294.426 97.3381 294.196 97.1051C293.968 96.8722 293.623 96.7557 293.16 96.7557C292.68 96.7557 292.304 96.8608 292.031 97.071C291.758 97.2812 291.566 97.5057 291.456 97.7443L290.501 97.4034C290.672 97.0057 290.899 96.696 291.183 96.4744C291.47 96.25 291.782 96.0937 292.12 96.0057C292.461 95.9148 292.797 95.8693 293.126 95.8693C293.336 95.8693 293.578 95.8949 293.851 95.946C294.126 95.9943 294.392 96.0952 294.647 96.2486C294.906 96.402 295.12 96.6335 295.291 96.9432C295.461 97.2528 295.547 97.6676 295.547 98.1875V102.5H294.541V101.614H294.49C294.422 101.756 294.308 101.908 294.149 102.07C293.99 102.232 293.778 102.369 293.514 102.483C293.25 102.597 292.927 102.653 292.547 102.653ZM292.7 101.75C293.098 101.75 293.433 101.672 293.706 101.516C293.981 101.359 294.189 101.158 294.328 100.911C294.47 100.663 294.541 100.403 294.541 100.131V99.2102C294.498 99.2614 294.405 99.3082 294.26 99.3509C294.118 99.3906 293.953 99.4261 293.765 99.4574C293.581 99.4858 293.4 99.5114 293.224 99.5341C293.051 99.554 292.91 99.571 292.802 99.5852C292.541 99.6193 292.297 99.6747 292.069 99.7514C291.845 99.8253 291.663 99.9375 291.524 100.088C291.387 100.236 291.319 100.437 291.319 100.693C291.319 101.043 291.449 101.307 291.707 101.486C291.968 101.662 292.299 101.75 292.7 101.75ZM298.508 93.7727V102.5H297.502V93.7727H298.508ZM305.106 97.4205L304.203 97.6761C304.146 97.5256 304.062 97.3793 303.951 97.2372C303.843 97.0923 303.696 96.973 303.508 96.8793C303.321 96.7855 303.081 96.7386 302.788 96.7386C302.387 96.7386 302.054 96.831 301.787 97.0156C301.522 97.1974 301.39 97.429 301.39 97.7102C301.39 97.9602 301.481 98.1577 301.663 98.3026C301.845 98.4474 302.129 98.5682 302.515 98.6648L303.487 98.9034C304.072 99.0455 304.508 99.2628 304.795 99.5554C305.082 99.8452 305.226 100.219 305.226 100.676C305.226 101.051 305.118 101.386 304.902 101.682C304.689 101.977 304.39 102.21 304.007 102.381C303.623 102.551 303.177 102.636 302.669 102.636C302.001 102.636 301.449 102.491 301.011 102.202C300.574 101.912 300.297 101.489 300.18 100.932L301.135 100.693C301.226 101.045 301.397 101.31 301.65 101.486C301.906 101.662 302.24 101.75 302.652 101.75C303.12 101.75 303.493 101.651 303.768 101.452C304.047 101.25 304.186 101.009 304.186 100.727C304.186 100.5 304.106 100.31 303.947 100.156C303.788 100 303.544 99.8835 303.214 99.8068L302.123 99.5511C301.524 99.4091 301.083 99.1889 300.802 98.8906C300.524 98.5895 300.385 98.2131 300.385 97.7614C300.385 97.392 300.488 97.0653 300.696 96.7812C300.906 96.4972 301.191 96.2741 301.552 96.1122C301.916 95.9503 302.328 95.8693 302.788 95.8693C303.436 95.8693 303.944 96.0114 304.314 96.2955C304.686 96.5795 304.95 96.9545 305.106 97.4205ZM307.592 102.568C307.382 102.568 307.202 102.493 307.051 102.342C306.901 102.192 306.825 102.011 306.825 101.801C306.825 101.591 306.901 101.411 307.051 101.26C307.202 101.109 307.382 101.034 307.592 101.034C307.803 101.034 307.983 101.109 308.134 101.26C308.284 101.411 308.359 101.591 308.359 101.801C308.359 101.94 308.324 102.068 308.253 102.185C308.185 102.301 308.092 102.395 307.976 102.466C307.862 102.534 307.734 102.568 307.592 102.568Z\" fill=\"#667085\" />\n        </svg>\n    );\n};\n\nexport default NOTaskSVG;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"skip-setup_modal__5-63V\",\"iconStyle\":\"skip-setup_iconStyle__PmKXA\",\"headerTitle\":\"skip-setup_headerTitle__HQLwm\",\"DialogTitle\":\"skip-setup_DialogTitle__y3Raq\",\"skipSetupText\":\"skip-setup_skipSetupText__7iu--\"};","import React from 'react';\nimport { ExclamationOctagon } from 'react-bootstrap-icons';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport style from './skip-setup.module.scss';\n\nconst SkipSetup = ({ visible, setVisible, progress }) => {\n    const handleSkipSetup = () => {\n        localStorage.setItem('skipSetup', true);\n        setVisible(false);\n    };\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <div className=\"w-100 d-flex align-items-center gap-2\">\n                <b className={style.iconStyle}><ExclamationOctagon size={24} color=\"#F04438\" /></b>\n                <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                    Skip setup for now?\n                </span>\n            </div>\n        </div>\n    );\n\n    const footerContent = (\n        <div className='d-flex justify-content-end gap-2'>\n            <Button className='outline-button' onClick={() => setVisible(false)}>Cancel</Button>\n            <Button className='solid-button' onClick={handleSkipSetup}>Skip</Button>\n        </div>\n    );\n    return (\n        <Dialog header={headerElement} visible={visible} onHide={() => setVisible(false)} footer={footerContent} className={`${style.modal} custom-modal`}>\n            <div className='d-flex flex-column align-items-center'>\n                <h1 className={style.DialogTitle}>You've completed 60% of your setup.</h1>\n                <div style={{ width: '374px', height: 12, background: '#EAECF0', borderRadius: 17, overflow: 'hidden', position: 'relative', margin: '15px 0px' }}>\n                    <div style={{ position: 'absolute', left: 0, top: 0, height: '100%', width: `${progress}%`, background: 'linear-gradient(to right, #4db8ff, #ffaa40)', borderRadius: 4, transition: 'width 0.3s' }}></div>\n                </div>\n                <p className={style.skipSetupText}>You can finish these steps later from your<br /> dashboard.</p>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default SkipSetup;","import React, { useState, useEffect, useRef } from 'react';\nimport { Placeholder } from 'react-bootstrap';\nimport { CheckCircle, PlusLg, ChevronDoubleUp, ChevronDoubleDown, InfoCircle, Check, Link as LinkIcon, X, ArrowRight, ArrowUpShort, Dash, ArrowsAngleExpand, ArrowDownShort } from \"react-bootstrap-icons\";\nimport CountUp from 'react-countup';\nimport { Helmet } from 'react-helmet-async';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Dialog } from 'primereact/dialog';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { toast } from 'sonner';\nimport { getOutgoingEmail } from '../APIs/email-template';\nimport { fetchHomePage, getActivity } from \"../APIs/HomeApi\";\nimport { fetchProfile } from '../APIs/ProfileApi';\nimport { getListOfTasks } from '../APIs/task-api';\nimport { TaskCompleteJob } from '../APIs/TasksApi';\nimport { dateFormat } from './Business/shared/utils/helper';\nimport AccountingContact from './layout/modals/accounting-contact';\nimport BookkeepingContact from './layout/modals/book-keeping-contact';\nimport InsuranceContact from './layout/modals/insurance-contact';\nimport ModalSalesContactFinance from './layout/modals/modal-sales-contact-finance';\nimport { useAuth } from '../app/providers/auth-provider';\nimport { useTrialHeight } from '../app/providers/trial-height-provider';\nimport joshImage from '../assets/images/Avatar.png';\nimport NOTaskSVG from '../assets/svg/no-task';\nimport RequestHelp from '../features/dashboard/request-help/request-help';\nimport SkipSetup from '../features/dashboard/skip-setup/skip-setup';\nimport CreateTask from './Work/features/task/create-task/create-task';\nimport ViewTaskModal from './Work/features/task/view-task/view-task';\n\nconst Home = () => {\n    const { session } = useAuth();\n    const observerRef = useRef(null);\n    const { trialHeight } = useTrialHeight();\n    const navigate = useNavigate();\n    const [tasksLoading, setTasksLoading] = useState(true);\n    const [showCreateTask, setShowCreateTask] = useState(false);\n    const [viewTask, setViewTask] = useState(false);\n    const [taskId, setTaskId] = useState(null);\n    const [completingTask, setCompletingTask] = useState({ id: null, isCompleting: false });\n    const [visible, setVisible] = useState(false);\n    const [isMinimize, setMinimize] = useState(false);\n    const [isVisible, setIsVisible] = useState(false);\n    const [showSkipSetup, setShowSkipSetup] = useState(false);\n    const [hasBankDetails, setHasBankDetails] = useState(true);\n    const [showRequestDemo, setShowRequestDemo] = useState(false);\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const [homeData, setHomeData] = useState({\n        expense: {},\n        invoices_due: {},\n        quote_this_week: {},\n        active_quotes: {},\n        waiting_for_approval: {},\n        projects: {}\n    });\n\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const limit = 25;\n\n    const loadData = async (pageToLoad = page, reset = false) => {\n        setTasksLoading(true);\n        const data = await getListOfTasks(pageToLoad, limit, '', '', false, true, session?.desktop_user_id);\n        if (reset) {\n            setTasks(data.results);\n        } else {\n            setTasks(prev => {\n                const existingIds = new Set(prev.map(item => item.id));\n                const newData = data.results.filter(item => !existingIds.has(item.id));\n                return [...prev, ...newData];\n            });\n        }\n        const totalLoaded = reset ? data.results.length : tasks.length + data.results.length;\n        setHasMoreData(totalLoaded < data.count);\n        setTasksLoading(false);\n    };\n\n    useEffect(() => {\n        loadData(page);\n    }, [page]);\n\n    const refetchTasks = async () => {\n        setPage(1);\n        await loadData(1, true);\n    };\n\n    useEffect(() => {\n        if (tasks.length > 0 && hasMoreData) {\n            const timeout = setTimeout(() => {\n                const lastRow = document.querySelector('.tasks-container li.dashboardTask:last-child');\n\n                if (lastRow) {\n                    observerRef.current = new IntersectionObserver(entries => {\n                        if (entries[0].isIntersecting) {\n                            setPage(prevPage => prevPage + 1);\n                        }\n                    });\n                    observerRef.current.observe(lastRow);\n                }\n            }, 1000); // Wait for DOM paint\n\n            return () => {\n                clearTimeout(timeout);\n                if (observerRef.current) observerRef.current.disconnect();\n            };\n        }\n    }, [tasks, hasMoreData]);\n\n    const completeTaskMutation = useMutation({\n        mutationFn: (taskId) => TaskCompleteJob(taskId, true),\n        onSuccess: () => {\n            refetchTasks();\n            toast.success(`Task completed successfully`);\n        },\n        onError: (error) => {\n            console.error('Error updating task:', error);\n            toast.error(`Failed to complete task. Please try again.`);\n        }\n    });\n    const handleTaskAction = async (id) => {\n        setCompletingTask({ id, isCompleting: true });\n        await completeTaskMutation.mutateAsync(id);\n        setCompletingTask({ id: null, isCompleting: false });\n    };\n    const viewTaskDetails = (id) => {\n        setViewTask(true);\n        setTaskId(id);\n    };\n\n\n    // Week navigation\n    const [currentWeek, setCurrentWeek] = useState(null);\n    const [currentYear, setCurrentYear] = useState(() => {\n        const nowSydney = new Date(new Date().toLocaleString('en-US', { timeZone: 'Australia/Sydney' }));\n        return nowSydney.getFullYear();\n    });\n\n    const getActivityQuery = useQuery({\n        queryKey: ['getActivity', currentYear, currentWeek],\n        queryFn: () => getActivity(currentYear, currentWeek),\n        enabled: !!currentYear && !!currentWeek\n    });\n\n    const goToPreviousWeek = () => {\n        if (currentWeek > 1) {\n            setCurrentWeek(currentWeek - 1);\n        } else {\n            setCurrentYear(currentYear - 1);\n            setCurrentWeek(52);\n        }\n    };\n\n    const getSydneyDate = (date = new Date()) => {\n        return new Date(date.toLocaleString('en-US', { timeZone: 'Australia/Sydney' }));\n    };\n\n    const getWeekNumber = (date) => {\n        const sydneyDate = getSydneyDate(date);\n\n        // Determine \"effective date\" based on your week start time\n        const weekStartCutoff = new Date(sydneyDate);\n        weekStartCutoff.setHours(12, 1, 0, 0); // Monday 12:01 PM Sydney time\n        weekStartCutoff.setDate(\n            weekStartCutoff.getDate() - ((weekStartCutoff.getDay() + 6) % 7) // Go back to Monday\n        );\n\n        // If the date is before Monday 12:01 PM, consider it part of previous week\n        if (sydneyDate < weekStartCutoff) {\n            sydneyDate.setDate(sydneyDate.getDate() - 1);\n        }\n\n        // Copy date so we don't mutate original\n        const tmp = new Date(Date.UTC(sydneyDate.getFullYear(), sydneyDate.getMonth(), sydneyDate.getDate()));\n        tmp.setUTCDate(tmp.getUTCDate() + 4 - (tmp.getUTCDay() || 7)); // Thursday of current week\n\n        const yearStart = new Date(Date.UTC(tmp.getUTCFullYear(), 0, 1));\n        const weekNo = Math.ceil((((tmp - yearStart) / 86400000) + 1) / 7);\n\n        return weekNo;\n    };\n\n    const isNextButtonDisabled = () => {\n        // Check if next week button should be disabled\n        const currentDate = new Date(new Date().toLocaleString('en-US', { timeZone: 'Australia/Sydney' }));\n        const currentYearNum = currentDate.getFullYear();\n\n        // Disable if we're in a future year\n        if (currentYear > currentYearNum) {\n            return true;\n        }\n\n        // Disable if we're in the current year and at or beyond the current week\n        if (currentYear === currentYearNum) {\n            const currentWeekNum = getWeekNumber(currentDate);\n            if (currentWeek >= currentWeekNum) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    const goToNextWeek = () => {\n        // Don't proceed if button is disabled\n        if (isNextButtonDisabled()) {\n            return;\n        }\n\n        // Normal week navigation logic\n        if (currentWeek < 52) {\n            setCurrentWeek(currentWeek + 1);\n        } else {\n            setCurrentYear(currentYear + 1);\n            setCurrentWeek(1);\n        }\n    };\n\n    useEffect(() => {\n        const todaySydney = getSydneyDate();\n        const weekNum = getWeekNumber(todaySydney);\n        setCurrentWeek(weekNum);\n    }, []);\n\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail\n    });\n    const isConnectedEmail = outgoingEmailTemplateQuery?.data?.outgoing_email !== 'no-reply@memate.com.au';\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await fetchProfile();\n                setHasBankDetails(!!data?.bank_detail?.account_number);\n            } catch (error) {\n                console.error(\"Error fetching profile:\", error);\n            }\n        };\n\n        if (!profileData?.bank_details?.account_number) fetchData();\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await fetchHomePage();\n                setHomeData(result);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const formatCurrency = (value) => {\n        if (value !== undefined && value !== null) {\n            return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n        } else {\n            return 'N/A'; // Or any default value you prefer\n        }\n    };\n\n    const toggleVisibility = () => {\n        setIsVisible(!isVisible);\n    };\n\n    const getGreeting = () => {\n        const hour = new Date().getHours();\n        if (hour < 12) return 'Good morning';\n        if (hour < 17) return 'Good afternoon';\n        return 'Good evening';\n    };\n\n    const initialTasks = [\n        { id: 1, title: 'Link Your Email', desc: 'Connect your email to manage communications.', status: isConnectedEmail ? 'complete' : 'pending', type: 'Starter', link: '/settings/integrations?openEmail=true' },\n        { id: 2, title: 'Enter Bank Details', desc: 'Provide your bank details to secure transactions.', status: hasBankDetails ? 'complete' : 'pending', type: 'Starter', link: '/settings/generalinformation/bank-details' },\n    ];\n\n    const completedCount = initialTasks.filter(t => t.status === 'complete').length;\n    const progress = Math.round((completedCount / initialTasks.length) * 100) || 0;\n\n    useEffect(() => {\n        if (progress < 100) {\n            if (localStorage.getItem('skipSetup') == \"false\" || !localStorage.getItem('skipSetup')) {\n                setVisible(true);\n            }\n        }\n    }, [progress]);\n\n    const handleCloseInitialSetup = () => {\n        setVisible(false);\n        setShowSkipSetup(true);\n    };\n\n    return (\n        <div className='homeDashboardPage' style={{ position: 'relative' }}>\n            <Helmet>\n                <title>MeMate - Dashboard</title>\n            </Helmet>\n            <div className='HomePageWrap' style={{ height: `calc(100vh - 95px - ${trialHeight}px)` }}>\n                <div className=\"goodHeading\" >\n                    <h1 style={{ fontSize: '26px' }}>{getGreeting()}, {profileData?.first_name ? profileData.first_name : 'Guest'} 👋</h1>\n                </div>\n                {/* My Tasks Card */}\n                <div className=\"myTasksCard\" style={{ width: '942px', margin: '0px auto', display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: '8px' }}>\n                    <div className='d-flex justify-content-between w-100 mb-3'>\n                        <div style={{ fontWeight: 600, fontSize: 16 }}>My Tasks</div>\n                        <Button variant=\"link\" onClick={() => setShowCreateTask(true)} size=\"sm\" style={{ fontWeight: 600, fontSize: 14, color: '#158ECC', textDecoration: 'none', padding: 0, marginRight: 2, display: 'flex', alignItems: 'center', gap: 4 }}>New Task <PlusLg size={14} color={\"#158ECC\"} /></Button>\n                    </div>\n                    <ul className='tasks-container' style={{ listStyle: 'none', padding: 0, margin: 0, width: '100%', maxHeight: 270, overflowY: 'auto' }}>\n                        {tasks.map((task) => (\n                            <li className=\"dashboardTask cursor-pointer\" onClick={() => viewTaskDetails(task.id)} key={task.id} style={{ borderRadius: 8, marginBottom: 8, padding: '6px 24px 6px 16px', display: 'flex', alignItems: 'center' }}>\n                                <div style={{ display: 'flex', alignItems: 'center', width: '70%' }}>\n                                    <div className='gap-2' style={{ display: 'flex', alignItems: 'center', fontWeight: 700, color: '#101828', fontSize: 17 }}>\n                                        {task.finished ?\n                                            <div style={{ border: '1px solid #F2F4F7', width: 24, height: 24, display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: '50%', background: '#BAE8FF' }}>\n                                                <Check size={16} color=\"#158ECC\" />\n                                            </div>\n                                            : <div style={{ border: '1px solid #F2F4F7', width: 24, height: 24, display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: '50%', background: '#F2F4F7' }}>\n                                                <Check size={16} />\n                                            </div>\n                                        }\n                                        <div className='d-flex flex-column align-items-start'>\n                                            <div className='font-14 ellipsis-width' style={{ color: '#101828', fontWeight: '500', maxWidth: '565px' }}>{task.title}</div>\n                                            <span className='font-14 ellipsis-width' style={{ color: '#475467', fontWeight: '400', maxWidth: '565px' }}>{task.description}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', gap: 8, alignItems: 'center', marginLeft: 'auto' }}>\n                                    <span className='d-flex gap-2 me-2 text-nowrap'>\n                                        <LinkIcon size={16} color=\"#1AB2FF\" />\n                                        <span\n                                            className=\"font-12\"\n                                            style={{\n                                                fontWeight: '400',\n                                                color: new Date(+task?.to_date * 1000).getTime() < Date.now() ? '#DC6803' : '#475467',\n                                            }}\n                                        >\n                                            {dateFormat(task?.to_date)}\n                                            {new Date(task?.to_date).getTime() < Date.now()}\n                                        </span>\n                                    </span>\n                                    <Button className='outline-complete-button' disabled={completingTask.isCompleting && completingTask.id === task.id} onClick={(e) => { e.stopPropagation(); handleTaskAction(task.id); }}>\n                                        Complete\n                                        {completingTask.isCompleting && completingTask.id === task.id ? (\n                                            <ProgressSpinner style={{ width: '16px', height: '16px' }} />\n                                        ) : (<>\n                                            <CheckCircle size={16} color=\"#079455\" />\n                                        </>)}\n                                    </Button>\n                                </div>\n                            </li>\n                        ))}\n                        {tasksLoading && <>\n                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px', borderRadius: '8px' }}>\n                                <Placeholder xs={12} bg=\"secondary\" style={{ height: '56px', width: '100%', }} size='lg' />\n                            </Placeholder>\n                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px', borderRadius: '8px' }}>\n                                <Placeholder xs={12} bg=\"secondary\" style={{ height: '56px', width: '100%', }} size='lg' />\n                            </Placeholder>\n                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px', borderRadius: '8px' }}>\n                                <Placeholder xs={12} bg=\"secondary\" style={{ height: '56px', width: '100%', }} size='lg' />\n                            </Placeholder>\n                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px', borderRadius: '8px' }}>\n                                <Placeholder xs={12} bg=\"secondary\" style={{ height: '56px', width: '100%', }} size='lg' />\n                            </Placeholder>\n                        </>}\n                        {!tasksLoading && tasks.length === 0 && (\n                            <div style={{ position: 'relative', top: '-30px' }}>\n                                <NOTaskSVG />\n                            </div>\n                        )}\n                    </ul>\n                </div>\n\n                <div>\n                    <div className='d-flex gap-3' style={{ width: '942px', margin: '16px auto' }}>\n                        <div className='d-flex flex-column gap-2 justify-content-center'>\n                            <span style={{ fontSize: '14px', color: '#344054', fontWeight: 600, whiteSpace: 'nowrap' }}>Your Weekly Activity</span>\n                            <div className='d-flex align-items-center justify-content-between gap-2' style={{ color: '#344054', height: '36px', padding: \"6px 12px\", border: '1px solid #EAECF0', borderRadius: '46px', whiteSpace: 'nowrap' }}>\n                                <button\n                                    className='border-0'\n                                    style={{\n                                        background: 'transparent',\n                                        cursor: 'pointer',\n                                        opacity: 1\n                                    }}\n                                    onClick={goToPreviousWeek}\n                                >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.35355 1.80514C8.54882 2.0004 8.54882 2.31698 8.35355 2.51224L2.70711 8.15869L8.35355 13.8051C8.54882 14.0004 8.54882 14.317 8.35355 14.5122C8.15829 14.7075 7.84171 14.7075 7.64645 14.5122L1.64645 8.51224C1.45118 8.31698 1.45118 8.0004 1.64645 7.80514L7.64645 1.80514C7.84171 1.60988 8.15829 1.60988 8.35355 1.80514Z\" fill=\"#344054\" />\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.3536 1.80514C12.5488 2.0004 12.5488 2.31698 12.3536 2.51224L6.70711 8.15869L12.3536 13.8051C12.5488 14.0004 12.5488 14.317 12.3536 14.5122C12.1583 14.7075 11.8417 14.7075 11.6464 14.5122L5.64645 8.51224C5.45118 8.31698 5.45118 8.0004 5.64645 7.80514L11.6464 1.80514C11.8417 1.60988 12.1583 1.60988 12.3536 1.80514Z\" fill=\"#344054\" />\n                                    </svg>\n                                </button>\n                                <span className='font-14'>Week {currentWeek} </span>\n                                <button\n                                    className='border-0'\n                                    style={{\n                                        background: 'transparent',\n                                        cursor: isNextButtonDisabled() ? 'not-allowed' : 'pointer',\n                                        opacity: isNextButtonDisabled() ? 0.5 : 1\n                                    }}\n                                    onClick={goToNextWeek}\n                                    disabled={isNextButtonDisabled()}\n                                    aria-disabled={isNextButtonDisabled()}\n                                >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.64645 1.80514C3.84171 1.60988 4.15829 1.60988 4.35355 1.80514L10.3536 7.80514C10.5488 8.0004 10.5488 8.31698 10.3536 8.51224L4.35355 14.5122C4.15829 14.7075 3.84171 14.7075 3.64645 14.5122C3.45118 14.317 3.45118 14.0004 3.64645 13.8051L9.29289 8.15869L3.64645 2.51224C3.45118 2.31698 3.45118 2.0004 3.64645 1.80514Z\" fill=\"#344054\" />\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.64645 1.80514C7.84171 1.60988 8.15829 1.60988 8.35355 1.80514L14.3536 7.80514C14.5488 8.0004 14.5488 8.31698 14.3536 8.51224L8.35355 14.5122C8.15829 14.7075 7.84171 14.7075 7.64645 14.5122C7.45118 14.317 7.45118 14.0004 7.64645 13.8051L13.2929 8.15869L7.64645 2.51224C7.45118 2.31698 7.45118 2.0004 7.64645 1.80514Z\" fill=\"#344054\" />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column justify-content-center align-items-start' style={{ width: '256px', border: '1px solid #EAECF0', borderRadius: 6, padding: '8px 32px' }}>\n                            <span style={{ fontSize: '14px', color: '#344054', fontWeight: 600 }}>Email Sent</span>\n                            <div className='d-flex gap-1 align-items-center'>\n                                <span style={{ fontSize: '30px', color: '#98A2B3', fontWeight: 600 }}>\n                                    {\n                                        getActivityQuery?.isFetching ?\n                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                <Placeholder bg=\"secondary\" style={{ height: '15px', width: '100px', borderRadius: '4px' }} size=\"lg\" />\n                                            </Placeholder>\n                                            : getActivityQuery?.data?.email_sent?.value || 0\n                                    }\n                                </span>\n                                {getActivityQuery?.data?.email_sent?.delta > 0\n                                    ? <><ArrowUpShort size={16} color=\"#067647\" /> <span className='font-14' style={{ color: '#067647', fontWeight: 500 }}>{Math.abs(getActivityQuery?.data?.email_sent?.delta || 0)}%</span></>\n                                    : <><ArrowDownShort size={16} color=\"#EA5455\" /> <span className='font-14' style={{ color: '#EA5455', fontWeight: 500 }}>{Math.abs(getActivityQuery?.data?.email_sent?.delta || 0)}%</span></>\n                                }\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column justify-content-center align-items-start' style={{ width: '256px', border: '1px solid #EAECF0', borderRadius: 6, padding: '8px 32px' }}>\n                            <span style={{ fontSize: '14px', color: '#344054', fontWeight: 600 }}>Quotes Won</span>\n                            <div className='d-flex gap-1 align-items-center'>\n                                <span style={{ fontSize: '30px', color: '#98A2B3', fontWeight: 600 }}>\n                                    {\n                                        getActivityQuery?.isFetching ?\n                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                <Placeholder bg=\"secondary\" style={{ height: '15px', width: '100px', borderRadius: '4px' }} size=\"lg\" />\n                                            </Placeholder>\n                                            : getActivityQuery?.data?.quotes_won?.value || 0\n                                    }\n                                </span>\n                                {getActivityQuery?.data?.quotes_won?.delta > 0\n                                    ? <><ArrowUpShort size={16} color=\"#067647\" /> <span className='font-14' style={{ color: '#067647', fontWeight: 500 }}>{Math.abs(getActivityQuery?.data?.quotes_won?.delta || 0)}%</span></>\n                                    : <><ArrowDownShort size={16} color=\"#EA5455\" /> <span className='font-14' style={{ color: '#EA5455', fontWeight: 500 }}>{Math.abs(getActivityQuery?.data?.quotes_won?.delta || 0)}%</span></>\n                                }\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column justify-content-center align-items-start' style={{ width: '256px', border: '1px solid #EAECF0', borderRadius: 6, padding: '8px 32px' }}>\n                            <span style={{ fontSize: '14px', color: '#344054', fontWeight: 600 }}>New Customers</span>\n                            <div className='d-flex gap-1 align-items-center'>\n                                <span style={{ fontSize: '30px', color: '#98A2B3', fontWeight: 600 }}>\n                                    {\n                                        getActivityQuery?.isFetching ?\n                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                <Placeholder bg=\"secondary\" style={{ height: '15px', width: '100px', borderRadius: '4px' }} size=\"lg\" />\n                                            </Placeholder>\n                                            : getActivityQuery?.data?.new_clients?.value || 0\n                                    }\n                                </span>\n                                {getActivityQuery?.data?.new_clients?.delta > 0\n                                    ? <>\n                                        <ArrowUpShort size={16} color=\"#067647\" />\n                                        <span className='font-14' style={{ color: '#067647', fontWeight: 500 }}>{Math.abs(getActivityQuery?.data?.new_clients?.delta || 0)}%</span>\n                                    </>\n                                    : <>\n                                        <ArrowDownShort size={16} color=\"#EA5455\" />\n                                        <span className='font-14' style={{ color: '#EA5455', fontWeight: 500 }}>{Math.abs(getActivityQuery?.data?.new_clients?.delta || 0)}%</span>\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <Container style={{ maxWidth: '965px', margin: '0px auto' }}>\n                    <Row className='d-flex flex-nowrap'>\n                        <Col className='mt-4'>\n                            <Link to=\"/expenses?isShowUnpaid=true\">\n                                <div className=\"bigBoxHome tobePaidWrap\" >\n                                    <div className='TooltipWrapper'>\n                                        {['top'].map((placement) => (\n                                            <OverlayTrigger\n                                                key={placement}\n                                                placement={placement}\n                                                overlay={\n                                                    <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                        Number and Total value of all expenses to be paid\n                                                    </Tooltip>\n                                                }\n                                            >\n                                                <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                            </OverlayTrigger>\n                                        ))}\n                                    </div>\n                                    <h3>Expense to be paid</h3>\n                                    <div className='countNoBox tobePaidH'> <span><CountUp start={0} end={homeData?.expense?.cnt != null ? homeData?.expense?.cnt : 0} duration={10} /></span>\n                                    </div>\n                                    <h4>{formatCurrency(homeData?.expense?.sum || 0)}</h4>\n                                </div>\n                            </Link>\n                        </Col>\n                        <Col className='mt-4'>\n                            <Link to=\"/invoices?isShowUnpaid=true\">\n                                <div className=\"bigBoxHome invoiceDuewrap\" >\n                                    <div className='TooltipWrapper'>\n                                        {['top'].map((placement) => (\n                                            <OverlayTrigger\n                                                key={placement}\n                                                placement={placement}\n                                                overlay={\n                                                    <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                        Number and value of all Invoices which are due to be paid.\n                                                    </Tooltip>\n                                                }\n                                            >\n                                                <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                            </OverlayTrigger>\n                                        ))}\n                                    </div>\n                                    <h3>Invoices Due</h3>\n                                    <div className='countNoBox invoiceDueH'> <span> <CountUp start={0} end={homeData?.invoices_due?.cnt} duration={9} /></span></div>\n                                    <h4>{formatCurrency(homeData?.invoices_due?.sum)}</h4>\n                                </div>\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-5'>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Summary of all Quotes in Sales excluding status Draft and Declined\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <h3>Active Quotes</h3>\n                                <div className='countNoBox activeQouteH'>\n                                    <Link to=\"/sales\">\n                                        <div className='pluslgIcon'> <PlusLg size={20} color=\"#106B99\" /></div>\n                                    </Link>\n                                    <span> <CountUp start={0} end={homeData?.active_quotes?.cnt} duration={5} /></span></div>\n                                <h4>{formatCurrency(homeData?.active_quotes?.sum)}</h4>\n                            </div>\n                        </Col>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Total Amount and Value of all quotes Won this week\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <div className='d-flex align-items-center gap-2 mx-auto' style={{ width: 'fit-content' }}>\n                                    <h3 className='mb-0'>Quotes Won</h3>\n                                    <div style={{ border: '1px solid #D0D5DD', borderRadius: '24px', padding: '2px 12px', fontSize: '10px' }}>{new Date().toLocaleString('default', { month: 'long' })}</div>\n                                </div>\n                                <div className='countNoBox activeQouteH'>\n                                    <Link to=\"/sales\">\n                                        <div className='pluslgIcon'> <PlusLg size={20} color=\"#106B99\" /></div>\n                                    </Link>\n                                    <span>\n                                        <CountUp start={0} end={0} duration={4} />\n                                    </span>\n                                </div>\n                                <h4>{formatCurrency(0)}</h4>\n                            </div>\n                        </Col>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Total of all projects in Management\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <h3>Active Projects</h3>\n                                <div className='countNoBox ActiveProjectH'>\n                                    <Link to=\"/sales\">\n                                        <div className='pluslgIcon'> <PlusLg size={20} color=\"#106B99\" /></div>\n                                    </Link>\n                                    <span><CountUp start={0} end={homeData?.projects?.cnt} duration={4} /></span>\n                                </div>\n                                <h4>{formatCurrency(homeData?.projects?.sum)}</h4>\n                            </div>\n                        </Col>\n\n                        {session?.has_work_subscription && (<>\n                            <Col className='mt-4'>\n                                <div className=\"bigBoxHome h-100\">\n                                    <div className='TooltipWrapper'>\n                                        {['top'].map((placement) => (\n                                            <OverlayTrigger\n                                                key={placement}\n                                                placement={placement}\n                                                overlay={\n                                                    <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                        Total number of all jobs created this month, including those in progress, completed, and waiting for approval.\n                                                    </Tooltip>\n                                                }\n                                            >\n                                                <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                            </OverlayTrigger>\n                                        ))}\n                                    </div>\n                                    <div className='d-flex align-items-center gap-2 mx-auto' style={{ width: 'fit-content' }}>\n                                        <h3 className='mb-0'>Total Jobs </h3>\n                                        <div style={{ border: '1px solid #D0D5DD', borderRadius: '24px', padding: '2px 12px', fontSize: '10px' }}>{new Date().toLocaleString('default', { month: 'long' })}</div>\n                                    </div>\n                                    <div className='countNoBox ActiveProjectH'>\n                                        <Link to=\"/work/jobs\">\n                                            <div className='pluslgIcon'><PlusLg size={20} color=\"#106B99\" /></div>\n                                        </Link>\n                                        <span><CountUp start={0} end={homeData?.quote_this_week?.cnt} duration={2} /></span></div>\n                                    <h4>{formatCurrency(homeData?.quote_this_week?.sum)}</h4>\n                                </div>\n                            </Col>\n\n                            <Col className='mt-4'>\n                                <div className=\"bigBoxHome h-100\">\n                                    <div className='TooltipWrapper'>\n                                        {['top'].map((placement) => (\n                                            <OverlayTrigger\n                                                key={placement}\n                                                placement={placement}\n                                                overlay={\n                                                    <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                        Total Amount and Value of all Jobs and Time sheets waiting for approval by Employee and Contractors\n                                                    </Tooltip>\n                                                }\n                                            >\n                                                <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                            </OverlayTrigger>\n                                        ))}\n                                    </div>\n                                    <h3>Job waiting for approval</h3>\n                                    <div className='countNoBox jobWaitingH'>\n                                        <Link to=\"/work/approval\">\n                                            <div className='pluslgIcon'><PlusLg size={20} color=\"#106B99\" /></div>\n                                        </Link>\n                                        <span> <CountUp start={0} end={homeData?.waiting_for_approval?.count} duration={8} /></span>\n                                    </div>\n                                    <h4>{formatCurrency(homeData?.waiting_for_approval?.sum)}</h4>\n                                </div>\n                            </Col>\n                        </>)}\n                    </Row>\n\n                </Container>\n\n                <div className='p-3 d-flex align-items-center gap-2 cursor-pointer' onClick={() => setShowRequestDemo(true)} style={{ position: 'fixed', bottom: '50px', left: '40px', backgroundColor: '#F9FAFB', borderRadius: '8px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)' }}>\n                    <div className='outline-button p-0' style={{ width: '46px', height: '46px', overflow: 'hidden' }}>\n                        <img src={joshImage} alt='Josh' className='w-100 h-100' />\n                    </div>\n                    <div className='d-flex flex-column justify-content-center mt-1'>\n                        <span className='font-14 text-left'>Need help with this?</span>\n                        <Link to={\"#\"} style={{ color: '#158ECC' }}>Book a call with Josh <ArrowRight size={16} color=\"#158ECC\" /></Link>\n                    </div>\n                </div>\n            </div>\n\n            <div className={`my-component homeBottom ${isVisible ? 'show' : 'hide'}`}>\n                <button className='downArrowIcon' style={{ position: 'relative', top: '-35px', margin: 'auto' }} onClick={toggleVisibility}>\n\n                    Additional Services {isVisible ? (\n                        <ChevronDoubleUp size={20} color=\"#6941C6\" />\n                    ) : (\n                        <ChevronDoubleDown size={20} color=\"#6941C6\" />\n                    )}\n                </button>\n                <div className='w-100 mx-auto'>\n                    <ul className='pt-0'>\n                        <li>\n                            <ModalSalesContactFinance />\n                        </li>\n                        <li>\n                            <BookkeepingContact />\n                        </li>\n                        <li>\n                            <InsuranceContact />\n                        </li>\n                        <li>\n                            <AccountingContact />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <Dialog headerClassName='p-1 border-0' contentClassName='pb-0' visible={visible} position={'bottom-right'} style={{ width: `${isMinimize ? '706px' : '706px'}`, height: `${isMinimize ? '68px' : 'auto'}`, boxShadow: '0 20px 24px -4px rgba(16, 24, 40, 0.08), 0 8px 8px -4px rgba(16, 24, 40, 0.03)', border: '1px solid #1AB2FF' }} closable={false} onHide={handleCloseInitialSetup} draggable={false} resizable={false} modal={false}>\n                {isMinimize ? (\n                    <div className='pt-1 d-flex justify-content-between align-items-center w-100'>\n                        <div className='d-flex justify-content-center align-items-center gap-4 pb-1 h-100'>\n                            <div style={{ fontWeight: 600, fontSize: 16, color: '#1D2939', marginBottom: '0px', whiteSpace: 'nowrap' }}>Let's get you started</div>\n                            <div style={{ width: '289px', height: 12, background: '#EAECF0', borderRadius: 17, overflow: 'hidden', position: 'relative' }}>\n                                <div style={{ position: 'absolute', left: 0, top: 0, height: '100%', width: `${progress}%`, background: 'linear-gradient(to right, #4db8ff, #ffaa40)', borderRadius: 4, transition: 'width 0.3s' }}></div>\n                            </div>\n                        </div>\n                        <div className='d-flex mb-3 align-items-center justify-content-end gap-2 w-100'>\n                            <Button className='close-button' onClick={() => setMinimize(false)}>\n                                <ArrowsAngleExpand size={12} color=\"#344054\" />\n                            </Button>\n                            <Button className='close-button' onClick={handleCloseInitialSetup}>\n                                <X size={20} color=\"#344054\" />\n                            </Button>\n                        </div>\n                    </div>) : (\n                    <div className='p-3'>\n                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\n                            <div style={{ fontWeight: 600, fontSize: 16, color: '#1D2939', marginBottom: '0px' }}>Let's get you started</div>\n                            <div className='d-flex align-items-center gap-2'>\n                                <Button className='close-button' onClick={() => setMinimize(true)}>\n                                    <Dash size={20} color=\"#344054\" />\n                                </Button>\n                                <Button className='close-button' onClick={handleCloseInitialSetup}>\n                                    <X size={20} color=\"#344054\" />\n                                </Button>\n                            </div>\n                        </div>\n                        <div style={{ color: '#475467', fontSize: 14, textAlign: 'left', width: '100%', marginBottom: 14 }}>A Few Essential Tasks to Set Up Your Account and Start Using MeMate</div>\n                        <div style={{ width: '100%', margin: '0 auto 5px auto', display: 'flex', flexDirection: 'column' }}>\n                            <div style={{ height: 12, background: '#EAECF0', borderRadius: 17, overflow: 'hidden', position: 'relative' }}>\n                                <div style={{ position: 'absolute', left: 0, top: 0, height: '100%', width: `${progress}%`, background: 'linear-gradient(to right, #4db8ff, #ffaa40)', borderRadius: 4, transition: 'width 0.3s' }}></div>\n                            </div>\n                            <div style={{ color: '#344054', fontSize: 14, fontWeight: 500, minWidth: 90, textAlign: 'right', margin: '8px 0px 0px 0px' }}>{progress}% Completed</div>\n                        </div>\n                        <ul style={{ listStyle: 'none', padding: 0, margin: 0, width: '100%', maxHeight: 270, overflowY: 'auto' }}>\n                            {initialTasks.map((task) => (\n                                <li className=\"dashboardTask border cursor-pointer\" onClick={() => navigate(task.link)} key={task.id} style={{ borderRadius: 8, marginBottom: 8, padding: '6px 24px 6px 16px', display: 'flex', alignItems: 'center' }}>\n                                    <div className='gap-2' style={{ display: 'flex', alignItems: 'center', fontWeight: 700, color: '#101828', fontSize: 17 }}>\n                                        {task.status === 'complete' ?\n                                            <div style={{ border: '1px solid #F2F4F7', width: 24, height: 24, display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: '50%', background: '#BAE8FF' }}>\n                                                <Check size={16} color=\"#158ECC\" />\n                                            </div>\n                                            : <div style={{ border: '1px solid #F2F4F7', width: 24, height: 24, display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: '50%', background: '#F2F4F7' }}>\n                                                <Check size={16} />\n                                            </div>\n                                        }\n                                        <div className='d-flex flex-column align-items-start'>\n                                            <div className='d-flex align-items-center gap-2'>\n                                                <span className='font-14 ellipsis-width' style={{ color: '#101828', fontWeight: '500', maxWidth: '100%' }}>{task.title}</span>\n                                                <div className='starterBadge'>Starter</div>\n                                            </div>\n                                            <span className='font-14 ellipsis-width' style={{ color: '#475467', fontWeight: '400', maxWidth: '100%' }}>{task.desc}</span>\n                                        </div>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n            </Dialog>\n            <CreateTask show={showCreateTask} setShow={setShowCreateTask} refetch={refetchTasks} />\n            <ViewTaskModal view={viewTask} setView={setViewTask} taskId={taskId} setTaskId={setTaskId} reInitialize={refetchTasks} />\n            <RequestHelp visible={showRequestDemo} setVisible={setShowRequestDemo} />\n            <SkipSetup visible={showSkipSetup} setVisible={setShowSkipSetup} progress={progress} />\n        </div>\n    );\n};\nexport default Home;","import React from 'react';\nimport Home from '../../../components/Home';\n\nconst Dashboard = () => {\n  return (\n    <Home />\n  );\n};\n\nexport default Dashboard;"],"names":["headerElement","_jsx","className","style","modalHeader","children","_jsxs","iconStyle","QuestionCircle","size","color","headerTitle","_ref","visible","setVisible","session","useAuth","Dialog","header","onHide","modal","InlineWidget","url","styles","width","border","height","margin","minHeight","prefill","name","full_name","email","pageSettings","hideEventTypeDetails","hideLandingPageDetails","primaryColor","textColor","romanize","num","i","lookup","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","roman","formatMoney","number","toLocaleString","currency","dateFormat","dateInMiliSec","isDotformate","_date$toLocaleDateStr","date","Date","toLocaleDateString","day","month","year","replace","API_BASE_URL","process","fetchProfile","async","myHeaders","Headers","accessToken","localStorage","getItem","append","requestOptions","method","headers","redirect","response","fetch","status","window","clear","sessionStorage","location","ok","Error","contentType","get","includes","data","json","setItem","JSON","stringify","text","error","console","updateProfile","photo","formData","FormData","Object","keys","forEach","key","croppedImageBlob","photoHintId","nanoid","body","result","log","getJobTemplates","URL","fetchAPI","toString","getJobTemplate","id","createJobTemplate","options","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","createAdditionalService","AccountingContact","open","setOpen","useState","handleClose","control","handleSubmit","formState","errors","reset","useForm","defaultValues","type","first_name","last_name","job_title","phone","mode","mutate","isPending","useMutation","mutationFn","onSuccess","toast","success","onError","_Fragment","onClick","handleOpen","backgroundImage","homeBoxImg04","backgroundSize","backgroundRepeat","cursor","Button","variant","Modal","onClose","Box","sx","Typography","component","IconButton","edge","CloseIcon","Row","Col","sm","onSubmit","Controller","rules","required","render","field","placeholder","message","_ref2","pattern","value","_ref3","_ref4","_ref5","onChange","PhoneInput","defaultCountry","_ref6","NavLink","to","disabled","src","ClockHistoryCircle","alt","LockZapCircle","ZapCircle","LenderPanel","onAdd","homeboxImg02","_ref7","InsuranceContact","homeboxImg03","ModalSalesContactFinance","homeboxImg01","NOTaskSVG","viewBox","fill","xmlns","x","y","rx","stroke","transform","d","fillOpacity","progress","ExclamationOctagon","footerContent","handleSkipSetup","footer","DialogTitle","background","borderRadius","overflow","position","left","top","transition","skipSetupText","Home","_outgoingEmailTemplat","_getActivityQuery$dat","_getActivityQuery$dat2","_getActivityQuery$dat3","_getActivityQuery$dat4","_getActivityQuery$dat5","_getActivityQuery$dat6","_getActivityQuery$dat7","_getActivityQuery$dat8","_getActivityQuery$dat9","_getActivityQuery$dat10","_getActivityQuery$dat11","_getActivityQuery$dat12","_getActivityQuery$dat13","_getActivityQuery$dat14","_getActivityQuery$dat15","_getActivityQuery$dat16","_getActivityQuery$dat17","_getActivityQuery$dat18","_getActivityQuery$dat19","_getActivityQuery$dat20","_getActivityQuery$dat21","_getActivityQuery$dat22","_getActivityQuery$dat23","_getActivityQuery$dat24","_homeData$expense","_homeData$expense2","_homeData$expense3","_homeData$invoices_du","_homeData$invoices_du2","_homeData$active_quot","_homeData$active_quot2","_homeData$projects","_homeData$projects2","_homeData$quote_this_","_homeData$quote_this_2","_homeData$waiting_for","_homeData$waiting_for2","observerRef","useRef","trialHeight","useTrialHeight","navigate","useNavigate","tasksLoading","setTasksLoading","showCreateTask","setShowCreateTask","viewTask","setViewTask","taskId","setTaskId","completingTask","setCompletingTask","isCompleting","isMinimize","setMinimize","isVisible","setIsVisible","showSkipSetup","setShowSkipSetup","hasBankDetails","setHasBankDetails","showRequestDemo","setShowRequestDemo","profileData","parse","homeData","setHomeData","expense","invoices_due","quote_this_week","active_quotes","waiting_for_approval","projects","tasks","setTasks","page","setPage","hasMoreData","setHasMoreData","loadData","pageToLoad","arguments","length","undefined","getListOfTasks","desktop_user_id","results","prev","existingIds","Set","map","item","newData","filter","has","totalLoaded","count","useEffect","refetchTasks","timeout","setTimeout","lastRow","document","querySelector","current","IntersectionObserver","entries","isIntersecting","prevPage","observe","clearTimeout","disconnect","completeTaskMutation","TaskCompleteJob","currentWeek","setCurrentWeek","currentYear","setCurrentYear","timeZone","getFullYear","getActivityQuery","useQuery","queryKey","queryFn","week","getActivity","enabled","getSydneyDate","getWeekNumber","sydneyDate","weekStartCutoff","setHours","setDate","getDate","getDay","tmp","UTC","getMonth","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","Math","ceil","isNextButtonDisabled","currentDate","currentYearNum","currentWeekNum","todaySydney","weekNum","outgoingEmailTemplateQuery","isConnectedEmail","outgoing_email","_profileData$bank_det","bank_details","account_number","_data$bank_detail","bank_detail","fetchData","fetchHomePage","formatCurrency","initialTasks","title","desc","link","completedCount","t","round","handleCloseInitialSetup","Helmet","fontSize","getGreeting","hour","getHours","display","flexDirection","alignItems","fontWeight","textDecoration","padding","marginRight","gap","PlusLg","listStyle","maxHeight","overflowY","task","viewTaskDetails","marginBottom","finished","justifyContent","Check","maxWidth","description","marginLeft","LinkIcon","to_date","getTime","now","e","stopPropagation","mutateAsync","handleTaskAction","ProgressSpinner","CheckCircle","Placeholder","as","animation","xs","bg","whiteSpace","opacity","goToPreviousWeek","fillRule","clipRule","goToNextWeek","isFetching","email_sent","delta","ArrowUpShort","abs","ArrowDownShort","quotes_won","new_clients","Container","Link","placement","OverlayTrigger","overlay","Tooltip","InfoCircle","CountUp","start","end","cnt","duration","sum","has_work_subscription","bottom","backgroundColor","boxShadow","joshImage","ArrowRight","toggleVisibility","ChevronDoubleUp","ChevronDoubleDown","BookkeepingContact","headerClassName","contentClassName","closable","draggable","resizable","ArrowsAngleExpand","Dash","textAlign","minWidth","CreateTask","show","setShow","refetch","ViewTaskModal","view","setView","reInitialize","RequestHelp","SkipSetup","Dashboard"],"sourceRoot":""}