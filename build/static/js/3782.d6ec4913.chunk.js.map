{"version":3,"file":"static/js/3782.d6ec4913.chunk.js","mappings":"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","sources":["components/layout/settings/termsandconditions/TermsandConditions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { Placeholder } from \"react-bootstrap\";\nimport { PencilSquare } from \"react-bootstrap-icons\";\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { Editor } from \"primereact/editor\";\nimport { toast } from 'sonner';\nimport style from './terms-.module.scss';\nimport { getInvoiceTermsapp, updateTermsapp } from \"../../../../APIs/terms-and-condition\";\nimport { renderHeader } from '../../../../shared/ui/editor/editor-header-template';\nimport Sidebar from '../Sidebar';\n\nconst TermsandConditions = () => {\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const has_work_subscription = !!profileData?.has_work_subscription;\n    const [activeTab, setActiveTab] = useState('terms-and-conditions');\n    const [edit, setEdit] = useState(false);\n    const [terms, setTerms] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Fetching terms data\n    const fetchData = async () => {\n        try {\n            setIsLoading(true);\n            const data = await getInvoiceTermsapp();\n            setTerms(data);  // Assuming 'data' is a string\n        } catch (error) {\n            console.error('Error fetching data: ', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // UseEffect to fetch data on component mount\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const updateMutation = useMutation({\n        mutationFn: (data) => updateTermsapp(data),\n        onSuccess: async () => {\n            toast.success('Terms have been successfully updated.');\n            await fetchData();\n            setEdit(false);\n        },\n        onError: (error) => {\n            console.error('Error updating terms:', error);\n            toast.error('Failed to update the terms. Please try again.');\n        }\n    });\n\n    const handleEditClick = () => setEdit(true);\n\n    const handleSaveClick = () => {\n        updateMutation.mutate(terms);\n    };\n\n    const handleCancelClick = () => setEdit(false);\n    const headerTemplate = renderHeader();\n\n    return (\n        <div className='settings-wrap'>\n            <Helmet>\n                <title>MeMate - Terms and Conditions</title>\n            </Helmet>\n            <div className=\"settings-wrapper\">\n                <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                <div className=\"settings-content setModalelBoots\">\n                    <div className='headSticky'>\n                        <h1>Terms and Conditions</h1>\n                        <div className='contentMenuTab'>\n                            <ul>\n                                <li>\n                                    <Link to=\"/settings/termsandconditions/terms-and-conditions-invoice\">Quote & Invoice Terms and Conditions</Link>\n                                </li>\n                                {has_work_subscription && (\n                                    <li className='menuActive'>\n                                        <Link to=\"/settings/termsandconditions/terms-and-conditions\">Application Terms and Conditions</Link>\n                                    </li>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"content_wrap_main\">\n                        <div className='content_wrapper'>\n                            <div className=\"listwrapper\">\n\n                                <div className={`topHeadStyle pb-4 flex-column ${style.topHeadStyle}`}>\n                                    <div className='w-100 d-flex gap-2 justify-content-end align-items-center'>\n                                        {!edit && (\n                                            <>\n                                                <button onClick={handleEditClick} className='text-nowrap'>\n                                                    Edit &nbsp; <PencilSquare color=\"#344054\" size={20} />\n                                                </button>\n                                                {/* <Link to={`${process.env.REACT_APP_URL}/media/organization_${profileData?.organization?.id}/terms_and_conditions.pdf`} style={{ padding: '10px 18px' }} target='_blank'>\n                                                    Preview &nbsp; <BoxArrowUpRight color=\"#344054\" size={20} />\n                                                </Link> */}\n                                            </>\n                                        )}\n                                    </div>\n                                    <div className='w-100 text-start'>\n                                        <h2>Terms and Conditions for Application</h2>\n                                        <p>Please fill in your company Terms and Conditions for Subcontractors, which they will follow while using the MeMate Application.</p>\n                                    </div>\n                                </div>\n\n                                <div>\n                                    {isLoading ? (\n                                        <>\n                                            <Placeholder as=\"h2\" animation=\"wave\" style={{ marginBottom: '10px', marginTop: '5px' }}>\n                                                <Placeholder bg=\"secondary\" size='md' style={{ width: '100%' }} />\n                                            </Placeholder>\n\n                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '10px', marginTop: '5px' }}>\n                                                <Placeholder bg=\"secondary\" size='md' style={{ width: '100%', height: '300px' }} />\n                                            </Placeholder>\n                                        </>\n\n                                    ) : edit ? (\n                                        <>\n                                            <Row className={style.qlEditorText}>\n                                                <Col sm={12}>\n                                                    <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                                                        <label className={clsx(style.label)}>Message</label>\n                                                        <Editor\n                                                            value={terms.terms_application}\n                                                            onTextChange={(e) => setTerms(prevTerms => ({\n                                                                ...prevTerms,\n                                                                terms_application: e.htmlValue\n                                                            }))}\n                                                            style={{ minHeight: '320px', fontSize: '14px', color: '#475467' }}\n                                                            headerTemplate={headerTemplate}\n                                                        />\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <div className='d-flex justify-content-end mt-4 mb-4'>\n                                                <Button className='outline-button me-2' onClick={handleCancelClick}>\n                                                    Cancel\n                                                </Button>\n                                                <Button className='solid-button' onClick={handleSaveClick}>\n                                                    Save\n                                                </Button>\n                                            </div>\n                                        </>\n                                    ) : (\n                                        <Editor readOnly showHeader={false} modules={{}}\n                                            style={{ border: \"none\", fontSize: \"14px\", color: '#475467' }}\n                                            value={terms.terms_application}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TermsandConditions;\n"],"names":["TermsandConditions","profileData","JSON","parse","window","localStorage","getItem","has_work_subscription","activeTab","setActiveTab","useState","edit","setEdit","terms","setTerms","isLoading","setIsLoading","fetchData","async","data","getInvoiceTermsapp","error","console","useEffect","updateMutation","useMutation","mutationFn","updateTermsapp","onSuccess","toast","success","onError","headerTemplate","renderHeader","_jsxs","className","children","_jsx","Helmet","Sidebar","Link","to","style","topHeadStyle","_Fragment","onClick","handleEditClick","PencilSquare","color","size","Placeholder","as","animation","marginBottom","marginTop","bg","width","height","Row","qlEditorText","Col","sm","position","clsx","label","Editor","value","terms_application","onTextChange","e","prevTerms","htmlValue","minHeight","fontSize","Button","handleCancelClick","handleSaveClick","mutate","readOnly","showHeader","modules","border"],"sourceRoot":""}