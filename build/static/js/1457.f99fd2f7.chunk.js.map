{"version":3,"file":"static/js/1457.f99fd2f7.chunk.js","mappings":"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","sources":["APIs/base-api.js","APIs/terms-and-condition.js","components/layout/settings/termsandconditions/TermsandConditions.js","shared/ui/editor/editor-header-template.js","../node_modules/react-bootstrap-icons/dist/icons/pencil-square.js","components/layout/settings/termsandconditions/terms-.module.scss"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getInvoiceTermsapp = async () => {\n  const endpoint = `/settings/app-terms/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\nexport const updateTermsapp = async (terms) => {\n  const endpoint = `/settings/app-terms/`;\n  const options = {\n    method: 'PUT',\n    body: terms,\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n\n\nexport const getInvoiceTerms = async () => {\n  const endpoint = `/settings/invoice-terms/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\nexport const updateTerms = async (terms) => {\n  const endpoint = `/settings/invoice-terms/`;\n  const options = {\n    method: 'PUT',\n    body: terms,\n\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { Placeholder } from \"react-bootstrap\";\nimport { PencilSquare } from \"react-bootstrap-icons\";\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { Editor } from \"primereact/editor\";\nimport { toast } from 'sonner';\nimport style from './terms-.module.scss';\nimport { getInvoiceTermsapp, updateTermsapp } from \"../../../../APIs/terms-and-condition\";\nimport { renderHeader } from '../../../../shared/ui/editor/editor-header-template';\n\nconst TermsandConditions = () => {\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const has_work_subscription = !!profileData?.has_work_subscription;\n    const [edit, setEdit] = useState(false);\n    const [terms, setTerms] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Fetching terms data\n    const fetchData = async () => {\n        try {\n            setIsLoading(true);\n            const data = await getInvoiceTermsapp();\n            setTerms(data);  // Assuming 'data' is a string\n        } catch (error) {\n            console.error('Error fetching data: ', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // UseEffect to fetch data on component mount\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const updateMutation = useMutation({\n        mutationFn: (data) => updateTermsapp(data),\n        onSuccess: async () => {\n            toast.success('Terms have been successfully updated.');\n            await fetchData();\n            setEdit(false);\n        },\n        onError: (error) => {\n            console.error('Error updating terms:', error);\n            toast.error('Failed to update the terms. Please try again.');\n        }\n    });\n\n    const handleEditClick = () => setEdit(true);\n\n    const handleSaveClick = () => {\n        updateMutation.mutate(terms);\n    };\n\n    const handleCancelClick = () => setEdit(false);\n    const headerTemplate = renderHeader();\n\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Terms and Conditions</title>\n            </Helmet>\n            <div className=\"settings-content setModalelBoots w-100\">\n                <div className='headSticky'>\n                    <h1>Terms and Conditions</h1>\n                    <div className='contentMenuTab'>\n                        <ul>\n                            <li>\n                                <Link to=\"/settings/termsandconditions/terms-and-conditions-invoice\">Quote & Invoice Terms and Conditions</Link>\n                            </li>\n                            {has_work_subscription && (\n                                <li className='menuActive'>\n                                    <Link to=\"/settings/termsandconditions/terms-and-conditions\">Application Terms and Conditions</Link>\n                                </li>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"content_wrap_main\">\n                    <div className='content_wrapper'>\n                        <div className=\"listwrapper\">\n\n                            <div className={`topHeadStyle pb-4 flex-column ${style.topHeadStyle}`}>\n                                <div className='w-100 d-flex gap-2 justify-content-end align-items-center'>\n                                    {!edit && (\n                                        <>\n                                            <button onClick={handleEditClick} className='text-nowrap'>\n                                                Edit &nbsp; <PencilSquare color=\"#344054\" size={20} />\n                                            </button>\n                                            {/* <Link to={`${process.env.REACT_APP_URL}/media/organization_${profileData?.organization?.id}/terms_and_conditions.pdf`} style={{ padding: '10px 18px' }} target='_blank'>\n                                                    Preview &nbsp; <BoxArrowUpRight color=\"#344054\" size={20} />\n                                                </Link> */}\n                                        </>\n                                    )}\n                                </div>\n                                <div className='w-100 text-start'>\n                                    <h2>Terms and Conditions for Application</h2>\n                                    <p>Please fill in your company Terms and Conditions for Subcontractors, which they will follow while using the MeMate Application.</p>\n                                </div>\n                            </div>\n\n                            <div>\n                                {isLoading ? (\n                                    <>\n                                        <Placeholder as=\"h2\" animation=\"wave\" style={{ marginBottom: '10px', marginTop: '5px' }}>\n                                            <Placeholder bg=\"secondary\" size='md' style={{ width: '100%' }} />\n                                        </Placeholder>\n\n                                        <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '10px', marginTop: '5px' }}>\n                                            <Placeholder bg=\"secondary\" size='md' style={{ width: '100%', height: '300px' }} />\n                                        </Placeholder>\n                                    </>\n\n                                ) : edit ? (\n                                    <>\n                                        <Row className={style.qlEditorText}>\n                                            <Col sm={12}>\n                                                <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                                                    <label className={clsx(style.label)}>Message</label>\n                                                    <Editor\n                                                        value={terms.terms_application}\n                                                        onTextChange={(e) => setTerms(prevTerms => ({\n                                                            ...prevTerms,\n                                                            terms_application: e.htmlValue\n                                                        }))}\n                                                        style={{ minHeight: '320px', fontSize: '14px', color: '#475467' }}\n                                                        headerTemplate={headerTemplate}\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <div className='d-flex justify-content-end mt-4 mb-4'>\n                                            <Button className='outline-button me-2' onClick={handleCancelClick}>\n                                                Cancel\n                                            </Button>\n                                            <Button className='solid-button' onClick={handleSaveClick}>\n                                                Save\n                                            </Button>\n                                        </div>\n                                    </>\n                                ) : (\n                                    <Editor readOnly showHeader={false} modules={{}}\n                                        style={{ border: \"none\", fontSize: \"14px\", color: '#475467' }}\n                                        value={terms.terms_application}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default TermsandConditions;\n","export const renderHeader = () => {\n    return (\n        <>\n            <span className=\"ql-formats\">\n                <button className=\"ql-bold me-1\" aria-label=\"Bold\"></button>\n                <button className=\"ql-italic me-1\" aria-label=\"Italic\"></button>\n                <button className=\"ql-underline me-1\" aria-label=\"Underline\"></button>\n            </span>\n            <span className=\"ql-formats\">\n                <button className=\"ql-list me-1\" value=\"ordered\" aria-label=\"Ordered List\" />\n                <button className=\"ql-list me-1\" value=\"bullet\" aria-label=\"Unordered List\" />\n                <button className=\"ql-indent me-1\" value=\"-1\" aria-label=\"Indent\" />\n                <button className=\"ql-indent me-1\" value=\"+1\" aria-label=\"Outdent\" />\n            </span>\n            <span className=\"ql-formats\">\n                <select className=\"ql-size me-1\">\n                    <option value=\"small\">Small</option>\n                    <option value=\"\" selected>Normal</option>\n                    <option value=\"large\">Large</option>\n                    <option value=\"huge\">Huge</option>\n                </select>\n                <select className=\"ql-color me-1\" />\n                <button className=\"ql-link me-1\" value=\"+1\" aria-label=\"Outdent\" />\n            </span>\n        </>\n    );\n};","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PencilSquare = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-pencil-square', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z\"\n  }));\n});\nPencilSquare.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nPencilSquare.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null,\n  className: ''\n};\nexport default PencilSquare;","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","window","clear","sessionStorage","location","replace","Error","contentType","get","includes","json","message","text","error","console","API_BASE_URL","process","getInvoiceTermsapp","toString","updateTermsapp","terms","getInvoiceTerms","updateTerms","TermsandConditions","profileData","parse","has_work_subscription","edit","setEdit","useState","setTerms","isLoading","setIsLoading","fetchData","data","useEffect","updateMutation","useMutation","mutationFn","onSuccess","toast","success","onError","headerTemplate","renderHeader","_jsxs","_Fragment","children","_jsx","Helmet","className","Link","to","style","topHeadStyle","onClick","handleEditClick","PencilSquare","color","size","Placeholder","as","animation","marginBottom","marginTop","bg","width","height","Row","qlEditorText","Col","sm","position","clsx","label","Editor","value","terms_application","onTextChange","e","prevTerms","htmlValue","minHeight","fontSize","Button","handleCancelClick","handleSaveClick","mutate","readOnly","showHeader","modules","border","selected","_excluded","_extends","Object","assign","target","i","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","_ref","ref","title","rest","React","xmlns","viewBox","fill","filter","Boolean","join","d","fillRule","propTypes","PropTypes","defaultProps"],"sourceRoot":""}