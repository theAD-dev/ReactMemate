{"version":3,"file":"static/js/9119.b4caf714.chunk.js","mappings":"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","sources":["APIs/OnboardingApi.js","APIs/base-api.js","components/layout/onboarding/Regionalsettings.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// Onboarding API endpoints\nexport const OnboardingCreateApi = async (data) => {\n  const endpoint = `/onboarding/create/user/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const onboardingNextStep = async (uuid) => {\n  const endpoint = `/onboarding/next-step/${uuid}/`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCode = async (otpCode, uuid) => {\n  const endpoint = `/onboarding/verify/user/${uuid}/`;\n  const options = {\n    method: \"PUT\",\n    body: { code: otpCode },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateOrganisation = async (uuid, data) => {\n  const endpoint = `/onboarding/create/organization/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateSubscription = async (uuid, data) => {\n  const endpoint = `/onboarding/create/subscription/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreatePassword = async (uuid, data) => {\n  const endpoint = `/onboarding/create/password/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\n\nexport const requestDemoCreate = async (mainData) => {\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify(mainData);\n  console.log('raw: ', raw);\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/onboarding/request_demo/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n\n  } catch (error) {\n    console.error('Error:', error);\n    return error.text().then(errorMessage => {\n      console.error('Error Message:', errorMessage);\n      throw new Error(errorMessage);\n    });\n  }\n};\n\n\n\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Dropdown } from 'primereact/dropdown';\nimport timezones from './timezones.json';\nimport { OnboardingCreateOrganisation } from \"../../../APIs/OnboardingApi\";\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport RegionalSettings from \"../../../assets/images/img/emailSlider03.jpg\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst Regionalsettings = () => {\n  const navigate = useNavigate();\n  const { uuid } = useParams();\n  const email = new URLSearchParams(useLocation().search).get(\"email\");\n  const company_name = new URLSearchParams(useLocation().search).get(\"company_name\");\n  const [timezonesOptions, setTimezonesOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const [country, setCountry] = useState(\"\");\n  const [timezone, setTimezone] = useState(\"\");\n\n\n  useEffect(() => {\n    if (!company_name) {\n      navigate(`/company-name/${uuid}?email=${email}`);\n    }\n  }, [company_name, email, uuid]);\n\n  useEffect(() => {\n    if (country) {\n      const findData = timezones.find((timezone) => timezone.name === country);\n      setTimezonesOptions(Object.keys(findData?.timezones || {}));\n    }\n  }, [country]);\n\n  const handleNext = async () => {\n    setError(\"\");\n    if (!country || !timezone) {\n      setError(\"Please select both country and timezone.\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const data = { name: company_name, country, timezone };\n      await OnboardingCreateOrganisation(uuid, data);\n      navigate(`/discover-memate/${uuid}`);\n    } catch (error) {\n      setError(error.message || \"Failed to proceed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>MeMate - Onboarding - Regional Settings</title>\n      </Helmet>\n      <div className='requestDemoWrap'>\n        <div className=\"logohead\">\n          <img src={LoinLogo} alt=\"Loin Logo\" />\n        </div>\n        <div className=\"copywrite\">© Memate {new Date().getFullYear()}</div>\n        <div className='OnboardingStep1'>\n          <form>\n            <div className=\"loginPage\">\n              <div className=\"boxinfo\">\n                <div className=\"boxLogin\">\n                  <h2>\n                    Customize Your<br></br> Regional <span>Settings</span>\n                  </h2>\n                  <div className=\"step-progress\">\n                    <div className=\"step\"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step active\"></div>\n                    <div className=\"step\"></div>\n                  </div>\n                  <div className=\"formgroup timezoneWrapGroup\">\n                    <label>Country<span style={{ color: \"#f04438\" }}>*</span></label>\n                    <Dropdown\n                      value={country}\n                      options={timezones.map((timezone) => ({ value: timezone.name, label: timezone.name }))}\n                      placeholder=\"Select country\"\n                      className='w-100 rounded'\n                      onChange={(e) => setCountry(e.value)}\n                      filter\n                    />\n                  </div>\n                  <div className=\"formgroup removeBorder1\">\n                    <label>Timezone<span style={{ color: \"#f04438\" }}>*</span></label>\n                    <Dropdown\n                      value={timezone}\n                      options={timezonesOptions.map((option) => ({ value: option, label: option }))}\n                      placeholder=\"Select timezone\"\n                      className='w-100'\n                      onChange={(e) => setTimezone(e.value)}\n                    />\n                  </div>\n                  {error && <p className=\"error-message\">{error}</p>}\n                  <button\n                    type='button'\n                    className=\"fillbtn flexcenterbox\"\n                    onClick={handleNext}\n                    disabled={loading}\n                  >\n                    {loading ? \"Processing...\" : \"Next Step\"}\n                    {!loading && <img src={arrowRight} alt=\"Arrow Right\" />}\n                  </button>\n                </div>\n              </div>\n              <div className=\"sliderRight SinglBgRight\" style={{\n                backgroundImage: `url(${RegionalSettings})`,\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}>\n                <p>Helping Australian businesses with digital solutions.</p>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Regionalsettings;\n"],"names":["API_BASE_URL","process","onboardingNextStep","async","endpoint","uuid","fetchAPI","method","headers","OnboardingCode","otpCode","options","body","code","OnboardingCreateOrganisation","data","OnboardingCreateSubscription","OnboardingCreatePassword","requestDemoCreate","myHeaders","Headers","append","raw","JSON","stringify","mainData","console","log","requestOptions","redirect","response","fetch","result","text","error","then","errorMessage","Error","arguments","length","undefined","isRequiredLoggedin","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","url","URL","ok","status","window","clear","sessionStorage","location","replace","contentType","get","includes","json","message","Regionalsettings","navigate","useNavigate","useParams","email","URLSearchParams","useLocation","search","company_name","timezonesOptions","setTimezonesOptions","useState","loading","setLoading","setError","country","setCountry","timezone","setTimezone","useEffect","findData","timezones","find","name","Object","keys","_jsxs","_Fragment","children","_jsx","Helmet","className","src","LoinLogo","alt","Date","getFullYear","style","color","Dropdown","value","map","label","placeholder","onChange","e","filter","option","type","onClick","disabled","arrowRight","backgroundImage","RegionalSettings","backgroundSize","backgroundRepeat"],"sourceRoot":""}