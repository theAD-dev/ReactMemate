{"version":3,"file":"static/js/2306.908d6bf6.chunk.js","mappings":"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","sources":["APIs/invoice-api.js","webpack://memateapp/./src/components/Business/Pages/invoices/invoice.module.scss?5b2a","webpack://memateapp/./src/components/Business/features/invoice-features/invoice-partial-payment/invoice-partial-payment.module.scss?0a83","components/Business/features/invoice-features/invoice-partial-payment/invoice-partial-payment.js","components/Business/features/invoice-features/resend-email/resend-email.js","components/Business/features/invoice-features/send-email/send-email.js","components/Business/Pages/invoices/invoices-table.js","components/Business/features/invoice-features/create-statement/create-statement.js","webpack://memateapp/./src/components/Business/features/invoice-features/invoice-filters/invoice-dropdown.module.scss?cd57","components/Business/features/invoice-features/invoice-filters/invoice-dropdown.js","components/Business/features/invoice-features/invoice-filters/invoices-filters.js","components/Business/Pages/invoices/index.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfInvoice = async (page, limit, search = \"\", order = \"\", isShowUnpaid, clientsFilter) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/invoices/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowUnpaid) url.searchParams.append('status', 'not_paid');\n  if (clientsFilter) url.searchParams.append('clients', clientsFilter);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getInvoice = async (uniqueId) => {\n  const endpoint = `/invoices/view/${uniqueId}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const paymentIntentCreate = async (uniqueId, data) => {\n  const endpoint = `/invoices/payment-intent/${uniqueId}/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const deleteInvoice = async (uniqueId) => {\n  const endpoint = `/invoices/delete/${uniqueId}/`;\n  const options = {\n    method: 'DELETE'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendInvoiceEmail = async (id, data) => {\n  const endpoint = `/invoices/send/${id}/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const resendInvoiceEmail = async (id, data) => {\n    const endpoint = `/resend/invoice/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const partialPaymentCreate = async (id, data) => {\n  const endpoint = `/invoices/partial-payment/${id}/`;\n  const options = {\n      method: 'POST',\n      body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendInvoiceToXeroApi = async (data) => {\n  const endpoint = `/invoices/to-xero/`;\n  const options = {\n      method: 'PUT',\n      body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markInvoiceAsPaid = async (id) => {\n  const endpoint = `/team/mobile-users/invoices/${id}/pay/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markInvoiceAsUnpaid = async (id) => {\n  const endpoint = `/team/mobile-users/invoices/${id}/unpay/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"invoice_filterBox__36jYC\",\"menu\":\"invoice_menu__XnbN-\",\"newButton\":\"invoice_newButton__Zwu50\",\"total\":\"invoice_total__9UXKw\",\"totalCount\":\"invoice_totalCount__5pnjp\",\"totalMoney\":\"invoice_totalMoney__B+H00\",\"clientImg\":\"invoice_clientImg__aSRSR\",\"ellipsis\":\"invoice_ellipsis__MToPC\",\"location\":\"invoice_location__98M5g\",\"active\":\"invoice_active__g3Bt5\",\"selectedCount\":\"invoice_selectedCount__5R4mY\",\"deletedRow\":\"invoice_deletedRow__iZM+L\",\"paidRow\":\"invoice_paidRow__+-UAI\",\"unpaidRow\":\"invoice_unpaidRow__7a9Tr\",\"partialPaidRow\":\"invoice_partialPaidRow__UIQwV\",\"fontStanderdSize\":\"invoice_fontStanderdSize__sKilw\",\"paid\":\"invoice_paid__8CgVs\",\"plusIcon\":\"invoice_plusIcon__paSYh\",\"unpaid\":\"invoice_unpaid__HNSOb\",\"partialPaid\":\"invoice_partialPaid__YSX48\",\"status\":\"invoice_status__Zlf8W\",\"inactive\":\"invoice_inactive__mkKPg\",\"actionButton\":\"invoice_actionButton__vFx0E\",\"shakeText\":\"invoice_shakeText__KJ+lD\",\"tilt-n-move-shaking\":\"invoice_tilt-n-move-shaking__fv6o8\",\"allInvoice\":\"invoice_allInvoice__T+ods\",\"unpaidInvoice\":\"invoice_unpaidInvoice__qngZ9\",\"payInvoiceButton\":\"invoice_payInvoiceButton__AoSIv\",\"onHover\":\"invoice_onHover__Gg9HO\",\"normal\":\"invoice_normal__DF2W5\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"invoice-partial-payment_modal__Dbqcb\",\"modalHeader\":\"invoice-partial-payment_modalHeader__O5yS9\",\"border\":\"invoice-partial-payment_border__Iepxr\",\"lable\":\"invoice-partial-payment_lable__dtrrk\",\"inputText\":\"invoice-partial-payment_inputText__CTim0\",\"error\":\"invoice-partial-payment_error__RZeCG\",\"box\":\"invoice-partial-payment_box__r-bzO\",\"box2\":\"invoice-partial-payment_box2__buWFO\",\"box3\":\"invoice-partial-payment_box3__1L6cb\",\"box4\":\"invoice-partial-payment_box4__Hfap-\",\"box5\":\"invoice-partial-payment_box5__6Wn2j\",\"box6\":\"invoice-partial-payment_box6__cjGiq\",\"box8\":\"invoice-partial-payment_box8__e1Nzw\",\"box7\":\"invoice-partial-payment_box7__fQGnQ\",\"text\":\"invoice-partial-payment_text__vazCt\",\"borderTable\":\"invoice-partial-payment_borderTable__rNXbt\"};","import React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bank, Cash, CreditCard, FilePdf, Link as LinkIcon, Stripe } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Dialog } from 'primereact/dialog';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { toast } from 'sonner';\nimport style from './invoice-partial-payment.module.scss';\nimport { partialPaymentCreate } from '../../../../../APIs/invoice-api';\nimport { formatAUD } from '../../../../../shared/lib/format-aud';\n\nconst headerElement = (\n    <div className={`${style.modalHeader}`}>\n        <div className=\"d-flex align-items-center gap-2\">\n            Confirm Payment\n        </div>\n    </div>\n);\n\nconst InvoicePartialPayment = ({ show, setShow, invoice, setRefetch }) => {\n    const [isShowHistory, setIsShowHistory] = useState(false);\n    const [deposit, setDeposit] = useState(0.00);\n    const [type, setType] = useState(2);\n    const [errors, setErrors] = useState({});\n    const options = [\n        { icon: <Bank size={20} />, label: 'Bank', value: 2 },\n        { icon: <Cash size={20} />, label: 'Cash', value: 1 },\n        { icon: <CreditCard size={20} />, label: 'EFTPOS', value: 4 },\n    ];\n    const justifyTemplate = (option) => {\n        return <div className='d-flex align-items-center gap-2'>\n            {option.icon}\n            {option.label}\n        </div>;\n    };\n    const mutation = useMutation({\n        mutationFn: (data) => partialPaymentCreate(invoice?.unique_id, data),\n        onSuccess: () => {\n            setShow(false);\n            setRefetch((old) => !old);\n            toast.success(`Partial payment is completed successfully.`);\n        },\n        onError: (error) => {\n            console.error('Failed to payment:', error);\n            toast.error(`Failed to payment. Please try again.`);\n        }\n    });\n\n    const onsubmit = () => {\n        let errorCount = 0;\n        setErrors({});\n\n        if (!type) {\n            errorCount++;\n            setErrors((others) => ({ ...others, type: true }));\n        }\n        if (!deposit) {\n            errorCount++;\n            setErrors((others) => ({ ...others, deposit: true }));\n        }\n        if (errorCount) return;\n        mutation.mutate({ deposit, type });\n    };\n\n    useEffect(() => {\n        setErrors({});\n        setDeposit(0.00);\n        setType(2);\n    }, [show]);\n\n    return (\n        <Dialog\n            visible={show}\n            modal={true}\n            header={headerElement}\n            onHide={setShow}\n            className={`${style.modal} custom-modal custom-scroll-integration`}\n        >\n            <Card className={clsx(style.border, 'mb-3')}>\n                <Card.Body>\n                    <label>Select Payment Method</label>\n                    <div className='d-flex justify-content-between align-items-center'>\n                        <div className='d-flex flex-column pt-2'>\n                            <SelectButton className='rounded' value={type} onChange={(e) => setType(e.value)} itemTemplate={justifyTemplate} optionLabel=\"label\" options={options} />\n                            {errors?.type && (\n                                <p className=\"error-message mb-0\">{\"Payment type is required\"}</p>\n                            )}\n                        </div>\n\n                        <div className='d-flex gap-2 align-items-center'>\n                            <Link to={`${invoice?.invoice_url}`} target='_blank'>\n                                <Button className=\"danger-outline-button px-3 py-2\">\n                                    <FilePdf color='#F04438' size={17} />\n                                </Button>\n                            </Link>\n                            <Link to={`/invoice/${invoice?.unique_id}`} target='_blank'>\n                                <Button className=\"info-button px-3 py-2\">\n                                    <LinkIcon color='#158ECC' size={17} />\n                                </Button>\n                            </Link>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            <Card className={clsx(style.border, 'mb-3')}>\n                <Card.Body>\n                    <div className='d-flex justify-content-between gap-3 align-items-center'>\n                        <div className='d-flex flex-column flex-fill'>\n                            <label className=\"mb-2\">Enter Amount</label>\n                            <IconField className='w-100' iconPosition=\"left\">\n                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                <InputNumber\n                                    value={deposit}\n                                    onValueChange={(e) => setDeposit(e.target.value || 0)}\n                                    style={{ width: '100%', minWidth: '420px', padding: '0px 16px' }}\n                                    className={clsx(style.inputText, { [style.error]: errors?.deposit })}\n                                    maxFractionDigits={2}\n                                    minFractionDigits={2}\n                                    placeholder='0.00'\n                                    inputId=\"minmaxfraction\"\n                                />\n                            </IconField>\n                            {errors?.deposit && (\n                                <p className=\"error-message mb-0\">{\"Payment type is required\"}</p>\n                            )}\n                        </div>\n                        <div className={clsx(style.box, 'd-flex flex-column flex-fill')} onClick={() => setDeposit(parseFloat(invoice?.amount || 0).toFixed(2))}>\n                            <label>Total invoice</label>\n                            <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.amount || 0)}</h1>\n                        </div>\n                        <div className={clsx(style.box, 'd-flex flex-column flex-fill')} onClick={() => setDeposit(parseFloat(invoice?.to_be_paid || 0).toFixed(2))}>\n                            <label>To Be Paid</label>\n                            <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.to_be_paid || 0)}</h1>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            <Card className={clsx(style.border, 'mb-3')}>\n                <Card.Body>\n                    <div className='d-flex justify-content-between align-items-center'>\n                        <div className={clsx(style.box3, 'd-flex flex-column text-start justify-content-center')}>\n                            <label style={{ fontWeight: 400 }}>Budget</label>\n                            <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.budget || 0)}</h1>\n                        </div>\n                        <div className='d-flex flex-column' style={{ flex: 1 }}>\n                            <div className={clsx(style.box4, 'd-flex flex-column align-items-center text-left w-100 h-100')}>\n                                <label style={{ fontWeight: 400 }}>Real Cost</label>\n                                <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.real_cost || 0)}</h1>\n                            </div>\n                            <div className='d-flex align-items-center'>\n                                <div className={clsx(style.box5, 'd-flex flex-column text-end flex-fill')}>\n                                    <label style={{ fontWeight: 400 }}>Cost Of Sale</label>\n                                    <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.cost_of_sale || 0)}</h1>\n                                </div>\n                                <div className={clsx(style.box6, 'd-flex flex-column text-end flex-fill')}>\n                                    <label>Labour</label>\n                                    <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.labor_expenses || 0)}</h1>\n                                </div>\n                                <div className={clsx(style.box8, 'd-flex flex-column text-end flex-fill')}>\n                                    <label>Operating Expense</label>\n                                    <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.labor_expenses || 0)}</h1>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={clsx(style.box7, 'd-flex flex-column text-end justify-content-center')}>\n                            <label>Operational Profit</label>\n                            <h1 className={clsx(style.text, 'mt-2')}>${formatAUD(invoice?.profit || 0)}</h1>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            <Card className={clsx(style.border, 'mb-3')}>\n                <Card.Body className='d-flex justify-content-end gap-2'>\n                    <Button className='outline-button' onClick={() => setShow(false)}>Cancel</Button>\n                    <Button className='success-button' disabled={mutation?.isPending} onClick={onsubmit}>Process Payment\n                        {mutation?.isPending && (\n                            <ProgressSpinner\n                                style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />\n                        )}\n                    </Button>\n                </Card.Body>\n                <div className='mb-2 text-center' style={{ borderTop: '.5px solid #F2F4F7' }}>\n                    <Button className='text-button m-auto' onClick={() => setIsShowHistory(!isShowHistory)}>{isShowHistory ? \"Hide\" : \"Show\"} History</Button>\n                </div>\n            </Card>\n\n            {isShowHistory && <InvoiceHistory history={invoice?.billing_history || []} />}\n\n        </Dialog>\n    );\n};\n\nconst InvoiceHistory = ({ history }) => {\n    const nameBody = (rowData) => {\n        return (\n            <div className='d-flex align-items-center gap-2'>\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden' }}>\n                    <img src={rowData?.manager?.photo} style={{ widows: '24px' }} />\n                </div>\n                <span>{rowData?.manager?.name}</span>\n            </div>\n        );\n    };\n\n    const referenceBody = (rawData) => {\n        let type = rawData.type;\n        if (type === 2)\n            return <div className='d-flex align-items-center gap-2'>\n                <Bank size={18} />\n                <span>Bank</span>\n            </div>;\n        else if (type === 1) {\n            return <div className='d-flex align-items-center gap-2'>\n                <Cash size={18} />\n                <span>Cash</span>\n            </div>;\n        } else if (type === 3) {\n            return <div className='d-flex align-items-center gap-2'>\n                <Stripe size={18} />\n                <span>Stripe</span>\n            </div>;\n        } else if (type === 4) {\n            return <div className='d-flex align-items-center gap-2'>\n                <CreditCard size={18} />\n                <span>EFTPOS</span>\n            </div>;\n        }\n\n    };\n\n    const formatDate = (timestamp) => {\n        const date = new Date(timestamp * 1000);\n        const day = date.getDate();\n        const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n            month: \"short\",\n        }).format(date);\n        const year = date.getFullYear();\n        return `${day} ${monthAbbreviation} ${year}`;\n    };\n\n    const depositDate = (rawData) => {\n        return <span>{formatDate(rawData?.created)}</span>;\n    };\n\n    return (\n        <Card className={clsx(style.border, 'mb-3 mt-2')}>\n            <Card.Body>\n                <h1 style={{ fontSize: '16px' }}>History</h1>\n                <DataTable value={history} className={style.borderTable} showGridlines>\n                    <Column field=\"\" style={{ width: 'auto' }} body={(rowData, { rowIndex }) => <>#{rowIndex + 1}</>} header=\"ID\"></Column>\n                    <Column field=\"type\" style={{ width: '150px' }} header=\"Reference\" body={referenceBody}></Column>\n                    <Column field=\"deposit\" style={{ width: '210px', textAlign: 'right' }} body={(rowData) => <>${formatAUD(rowData?.deposit)}</>} header=\"Amount\"></Column>\n                    <Column field=\"manager.name\" style={{ width: '210px' }} header=\"Manager\" body={nameBody}></Column>\n                    <Column field=\"created\" style={{ width: '147px' }} header=\"Created at\" body={depositDate}></Column>\n                </DataTable>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default InvoicePartialPayment;","import React, { useState } from 'react';\nimport { Bell } from 'react-bootstrap-icons';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { Button } from 'primereact/button';\nimport { toast } from 'sonner';\nimport { getClientById } from '../../../../../APIs/ClientsApi';\nimport { resendInvoiceEmail } from '../../../../../APIs/invoice-api';\nimport SendDynamicEmailForm from '../../../../../ui/send-email-2/send-email';\n\nconst ResendInvoiceEmail = ({ projectId, clientId, isAction }) => {\n    const [show, setShow] = useState(false);\n    const [payload, setPayload] = useState({});\n    const clientQuery = useQuery({\n        queryKey: ['id', clientId],\n        queryFn: () => getClientById(clientId),\n        enabled: !!clientId && !!show,\n        retry: 1,\n    });\n\n    const mutation = useMutation({\n        mutationFn: (data) => resendInvoiceEmail(projectId, data),\n        onSuccess: () => {\n            setShow(false);\n            toast.success(`Reminder email sent successfully.`);\n        },\n        onError: (error) => {\n            console.error('Error sending email:', error);\n            toast.error(`Failed to send reminder email. Please try again.`);\n        }\n    });\n\n    return (\n        <>\n            {\n                isAction ? <div className='d-flex align-items-center cursor-pointer gap-3 hover-greay px-2 py-2' onClick={() => setShow(true)}>\n                    <Bell color='#667085' size={20} />\n                    <span style={{ color: '#101828', fontSize: '16px', fontWeight: 500 }}>Send Reminder</span>\n                </div>\n                    : <Button label=\"Resend\" style={{ position: 'static' }} onClick={() => setShow(true)} className='primary-text-button ms-3 show-on-hover-element not-show-checked' text />\n            }\n            <SendDynamicEmailForm show={show} setShow={setShow} setPayload={setPayload} mutation={mutation} contactPersons={clientQuery?.data?.contact_persons || []} projectCardData={() => { }} defaultTemplateId={'Resend Invoice'} />\n        </>\n\n    );\n};\n\nexport default ResendInvoiceEmail;","import React, { useState } from 'react';\nimport { Send } from 'react-bootstrap-icons';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { Button } from 'primereact/button';\nimport { toast } from 'sonner';\nimport { getClientById } from '../../../../../APIs/ClientsApi';\nimport { sendInvoiceEmail } from '../../../../../APIs/invoice-api';\nimport SendDynamicEmailForm from '../../../../../ui/send-email-2/send-email';\n\nconst SendInvoiceEmail = ({ projectId, clientId, isAction }) => {\n    const [show, setShow] = useState(false);\n    const [payload, setPayload] = useState({});\n    const clientQuery = useQuery({\n        queryKey: ['id', clientId],\n        queryFn: () => getClientById(clientId),\n        enabled: !!clientId && !!show,\n        retry: 1,\n    });\n\n    const mutation = useMutation({\n        mutationFn: (data) => sendInvoiceEmail(projectId, data),\n        onSuccess: () => {\n            setShow(false);\n            toast.success(`Email sent successfully.`);\n        },\n        onError: (error) => {\n            console.error('Error sending email:', error);\n            toast.error(`Failed to resent email. Please try again.`);\n        }\n    });\n\n    return (\n        <>\n            {\n                isAction ? <div className='d-flex align-items-center cursor-pointer gap-3 hover-greay px-2 py-2' onClick={() => setShow(true)}>\n                    <Send color='#667085' size={20} />\n                    <span style={{ color: '#101828', fontSize: '16px', fontWeight: 500 }}>Send Invoice</span>\n                </div>\n                    : <Button label=\"Resend\" style={{ position: 'static' }} onClick={() => setShow(true)} className='primary-text-button ms-3 show-on-hover-element not-show-checked' text />\n            }\n            <SendDynamicEmailForm show={show} setShow={setShow} setPayload={setPayload} mutation={mutation} contactPersons={clientQuery?.data?.contact_persons || []} projectCardData={() => { }} defaultTemplateId={'Invoice'} />\n        </>\n\n    );\n};\n\nexport default SendInvoiceEmail;","\n\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { CloseButton } from 'react-bootstrap';\nimport { FilePdf, Link45deg, InfoCircle, ThreeDotsVertical, Files, FileEarmarkSpreadsheet, Trash, PlusLg, Coin, Calendar3Event, Bank, Stripe, Cash, CreditCard, CurrencyDollar } from 'react-bootstrap-icons';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ControlledMenu, useClick } from '@szhsin/react-menu';\nimport { useMutation } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Badge } from 'primereact/badge';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Tag } from 'primereact/tag';\nimport { toast } from 'sonner';\nimport style from './invoice.module.scss';\nimport { deleteInvoice, getListOfInvoice } from '../../../../APIs/invoice-api';\nimport { fetchduplicateData } from '../../../../APIs/SalesApi';\nimport { useAuth } from '../../../../app/providers/auth-provider';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { PERMISSIONS } from '../../../../shared/lib/access-control/permission';\nimport { hasPermission } from '../../../../shared/lib/access-control/role-permission';\nimport { formatAUD } from '../../../../shared/lib/format-aud';\nimport Loader from '../../../../shared/ui/loader/loader';\nimport ImageAvatar from '../../../../ui/image-with-fallback/image-avatar';\nimport NoDataFoundTemplate from '../../../../ui/no-data-template/no-data-found-template';\nimport InvoicePartialPayment from '../../features/invoice-features/invoice-partial-payment/invoice-partial-payment';\nimport ResendInvoiceEmail from '../../features/invoice-features/resend-email/resend-email';\nimport SendInvoiceEmail from '../../features/invoice-features/send-email/send-email';\n\nconst formatDate = (timestamp) => {\n    try {\n        const date = new Date(timestamp * 1000);\n        const day = date.getDate();\n        const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n            month: \"short\",\n        }).format(date);\n        const year = date.getFullYear();\n        return `${day} ${monthAbbreviation} ${year}`;\n    } catch (error) {\n        console.log('error: ', error);\n        return '';\n    }\n};\n\nconst InvoiceTable = forwardRef(({ searchValue, setTotal, setTotalMoney, selected, setSelected, isShowDeleted, refetch, setRefetch, isFilterEnabled, filters }, ref) => {\n    const { role } = useAuth();\n    const observerRef = useRef(null);\n    const navigate = useNavigate();\n    const { trialHeight } = useTrialHeight();\n    const [invoices, setInvoices] = useState([]);\n    const [page, setPage] = useState(1);\n    const [sort, setSort] = useState({ sortField: 'number', sortOrder: -1 });\n    const [tempSort, setTempSort] = useState({ sortField: 'number', sortOrder: -1 });\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [invoiceData, setInvoiceData] = useState(null);\n    const limit = 25;\n\n    useEffect(() => {\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    }, [searchValue, refetch, isShowDeleted, filters]);\n\n    useEffect(() => {\n        const loadData = async () => {\n            setLoading(true);\n\n            let order = \"\";\n            if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n            else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n            let clientsFilter = '';\n            if (filters?.client) {\n                clientsFilter = filters?.client?.map(client => client.id).join(',');\n            }\n\n            const data = await getListOfInvoice(page, limit, searchValue, order, isShowDeleted, clientsFilter);\n            setTotal(() => (data?.count || 0));\n            setTotalMoney(data?.total_amount || 0);\n            if (page === 1) setInvoices(data.results);\n            else {\n                if (data?.results?.length > 0)\n                    setInvoices(prev => {\n                        const existingClientIds = new Set(prev.map(client => client.id));\n                        const newClients = data.results.filter(client => !existingClientIds.has(client.id));\n                        return [...prev, ...newClients];\n                    });\n            }\n            setSort(tempSort);\n            setHasMoreData(data.count !== invoices.length);\n            setLoading(false);\n        };\n\n        loadData();\n\n    }, [page, searchValue, tempSort, refetch, isShowDeleted, JSON.stringify(filters)]);\n\n    useEffect(() => {\n        if (invoices.length > 0 && hasMoreData) {\n            observerRef.current = new IntersectionObserver(entries => {\n                if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n            });\n\n            const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n            if (lastRow) observerRef.current.observe(lastRow);\n        }\n\n        return () => {\n            if (observerRef.current) observerRef.current.disconnect();\n        };\n    }, [invoices, hasMoreData]);\n\n    const InvoiceIDBody = (rowData) => {\n        return <div className={`d-flex align-items-center gap-2 justify-content-between show-on-hover`}>\n            <div className='d-flex flex-column' style={{ lineHeight: '1.385' }}>\n                <span>{rowData.number}</span>\n                <span className='font-12' style={{ color: '#98A2B3' }}>{formatDate(rowData.created)}</span>\n            </div>\n            <Button label=\"Open\" onClick={() => navigate(`/management?unique_id=${rowData.unique_id}&reference=${rowData?.reference}&number=${rowData?.number}&value=${rowData.id}`)} className='primary-text-button ms-3 show-on-hover-element not-show-checked' text />\n        </div>;\n    };\n\n    const InvoiceBody = (rowData) => {\n        return <div className='d-flex align-items-center justify-content-around'>\n            <Link to={`${process.env.REACT_APP_URL}${rowData?.invoice_url}`} target='_blank'><FilePdf color='#FF0000' size={16} /></Link>\n            <Link to={`/invoice/${rowData.unique_id}`} target='_blank'><Link45deg color='#3366CC' size={16} /></Link>\n        </div>;\n    };\n\n    const customerNameBody = (rowData) => {\n        return <div className='d-flex align-items-center'>\n            <ImageAvatar has_photo={rowData?.client?.has_photo} photo={rowData?.client?.photo} is_business={rowData?.client?.is_business} />\n            <div className='d-flex flex-column gap-1'>\n                <div className={`${style.ellipsis}`}>{rowData.client?.name}</div>\n                {rowData.deleted ?\n                    <Tag value=\"Deleted\" style={{ height: '22px', width: '59px', borderRadius: '16px', border: '1px solid #FECDCA', background: '#FEF3F2', color: '#912018', fontSize: '12px', fontWeight: 500 }}></Tag> : ''}\n            </div>\n        </div>;\n    };\n\n    const dueDate = (rowData) => {\n        return <div className={`d-flex align-items-center justify-content-start gap-2 show-on-hover`} style={{ color: \"#98A2B3\" }}>\n            {\n                rowData.paid ?\n                    <div className={`${style.status} ${style.active}`}>\n                        <Badge severity=\"success\"></Badge> Paid\n                    </div>\n                    : rowData.overdue > 0 ?\n                        <div className={`${style.status} ${style.inactive}`}>\n                            Overdue {rowData.overdue} days <Badge severity=\"danger\"></Badge>\n                        </div>\n                        : <div className={`${style.status} ${style.inactive}`}>\n                            <Badge severity=\"warning\"></Badge> Not Paid\n                        </div>\n            }\n\n            {formatDate(rowData.due_date)}\n            <ResendInvoiceEmail projectId={rowData.unique_id} clientId={rowData?.client?.id} isAction={false} />\n        </div>;\n    };\n\n    const totalBody = (rowData) => {\n        return <div className={`d-flex align-items-center justify-content-end ${style.fontStanderdSize}`}>\n            <div className={`text-dark`}>\n                ${formatAUD(rowData?.amount)}\n            </div>\n        </div>;\n    };\n\n    const ToBePaidBody = (rowData) => {\n        return <div className={`d-flex align-items-center justify-content-end show-on-hover ${style.fontStanderdSize}`}>\n            <div className={`text-dark`}>\n                <span style={{ color: rowData.payment_status === 'paid' ? '#98A2B3' : rowData.payment_status === 'not_paid' ? '#D92D20' : '#F79009' }}>${formatAUD(rowData?.to_be_paid)}</span>\n            </div>\n        </div>;\n    };\n\n    const DepositBody = (rowData) => {\n        const isPaid = rowData.payment_status === 'paid';\n\n        return <Button onClick={() => { setVisible(true); setInvoiceData(rowData); }} className={clsx(style.payInvoiceButton, { [style.paid]: rowData.payment_status === 'paid', [style.unpaid]: rowData.payment_status === 'not_paid', [style.partialPaid]: rowData.payment_status !== 'not_paid' && rowData.payment_status !== 'paid' })}>\n            {isPaid ? <><span className={style.normal}>Pay Invoice</span><span className={style.onHover}>Edit Payment</span></> : 'Pay Invoice'}\n            <CurrencyDollar color={rowData.payment_status === 'paid' ? '#17B26A' : rowData.payment_status === 'not_paid' ? '#D92D20' : '#F79009'} size={16} />\n        </Button>;\n    };\n\n    const xeroBody = (rowData) => {\n        return <div className={`d-flex align-items-center justify-content-center`}>\n            {\n                rowData?.xero_status === \"in_progress\"\n                    ? <span style={{ color: '#158ECC' }} className={style.shakeText}>xero</span>\n                    : rowData?.xero_status === \"completed\" ? <span style={{ color: '#158ECC' }}>xero</span> : <span></span>\n            }\n        </div>;\n    };\n\n    const deleteMutation = useMutation({\n        mutationFn: (data) => deleteInvoice(data),\n        onSuccess: () => {\n            toast.success(`Invoice deleted successfully`);\n            deleteMutation.reset();\n            setRefetch(!refetch);\n        },\n        onError: (error) => {\n            deleteMutation.reset();\n            console.log('error: ', error);\n            toast.error(`Failed to delete invoice. Please try again.`);\n        }\n    });\n\n    const duplicateMutation = useMutation({\n        mutationFn: (data) => fetchduplicateData(data),\n        onSuccess: () => {\n            toast.success(`Project has been successfully duplicated`);\n            duplicateMutation.reset();\n            navigate('/sales');\n        },\n        onError: (error) => {\n            deleteMutation.reset();\n            console.log('error: ', error);\n            toast.error(`Failed to duplicate project. Please try again.`);\n        }\n    });\n\n    const InfoBodyTemplate = (rowData) => {\n        const ref = useRef(null);\n        const [isOpen, setOpen] = useState(false);\n        const anchorProps = useClick(isOpen, setOpen);\n        return <React.Fragment>\n            <InfoCircle color='#667085' size={18} className='cursor-pointer' ref={ref} {...anchorProps} />\n            <div className='fixedMenu' style={{ position: 'fixed', top: '40%', left: '40%' }}>\n                <ControlledMenu\n                    state={isOpen ? 'open' : 'closed'}\n                    anchorRef={ref}\n                    onClose={() => setOpen(false)}\n                    menuStyle={{ padding: '24px 24px 20px 24px', width: '605px', marginTop: '45px', maxHeight: '100%' }}\n                >\n                    <div className='d-flex justify-content-between mb-4'>\n                        <div className='BoxNo'>\n                            <div>\n                                <InfoCircle color='#FFFFFF' size={24} />\n                            </div>\n                        </div>\n                        <CloseButton onClick={() => setOpen(false)} />\n                    </div>\n                    <div style={{ width: '100%', maxHeight: '500px', overflow: 'auto' }}>\n                        {\n                            rowData?.billing_history.map((history, index) =>\n                                <div key={rowData.unique_id + index} className='d-flex gap-4 border justify-content-start py-1 px-2 rounded mb-2 w-100' style={{ width: 'fit-content' }}>\n                                    <div className='d-flex align-items-center'>\n                                        {\n                                            history?.type === 0 ? (\n                                                <>\n                                                    <div className='d-flex justify-content-center align-items-center rounded-circle' style={{ width: '24px', height: '24px', background: 'linear-gradient(180deg, #f9fafb 0%, #edf0f3 100%)', marginRight: '10px' }}>\n                                                        <Stripe size={14} color=\"#98A2B3\" />\n                                                    </div>\n                                                    <div className='font-14 ellipsis-width text-start' style={{ width: '120px', maxWidth: '120px' }}>Stripe</div>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <ImageAvatar has_photo={history?.manager?.has_photo} photo={history?.manager?.photo} is_business={false} />\n                                                    <div className='font-14 ellipsis-width text-start' style={{ width: '120px', maxWidth: '120px' }}>{history?.manager?.name}</div>\n                                                </>\n                                            )\n                                        }\n                                    </div>\n                                    <div className='d-flex gap-2 align-items-center justify-content-start'>\n                                        <Coin color='#98A2B3' size={14} />\n                                        <span style={{ fontWeight: 600, fontSize: 16 }}>${formatAUD(history.deposit)}</span>\n                                    </div>\n                                    <div className='d-flex gap-2 align-items-center justify-content-start'>\n                                        {history?.type === 2 ? <Bank size={14} color='#98A2B3' />\n                                            : history.type === 1 ? <Cash size={14} color=\"#98A2B3\" />\n                                                : history.type === 4 ? <CreditCard size={14} color=\"#98A2B3\" />\n                                                    : <Stripe size={14} color=\"#98A2B3\" />}\n                                        <div className='border rounded font-12 px-1'>\n                                            {history?.type === 2 ? \"Bank\" : history.type === 1 ? \"Cash\" : history.type === 4 ? \"EFTPOS\" : \"Stripe\"}\n                                        </div>\n                                    </div>\n                                    <div className='d-flex gap-2 align-items-center'>\n                                        <Calendar3Event color='#98A2B3' size={14} />\n                                        <div className='font-14'>{formatDate(history.created)}</div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n\n                    {\n                        rowData.paid\n                            ? <div className='d-flex gap-2 mt-3 justify-content-center align-items-center p-2 rounded' style={{ background: '#ECFDF3' }}>\n                                <span className='font-14' style={{ color: '#17B26A' }}>Invoice Paid</span>\n                            </div>\n                            : rowData.payment_status === 'partial_payment' ? <div className='d-flex gap-2 mt-3 justify-content-center align-items-center p-2 rounded' style={{ background: '#fffaeb' }}>\n                                <span className='font-14' style={{ color: '#b54708' }}>Invoice Partialy Paid</span>\n                            </div>\n                                : <div className='d-flex gap-2 mt-3 justify-content-center align-items-center p-2 rounded' style={{ background: '#FEF3F2' }}>\n                                    <span className='font-14' style={{ color: '#B42318' }}>Invoice Due</span>\n                                </div>\n                    }\n\n                </ControlledMenu>\n            </div>\n        </React.Fragment>;\n    };\n\n    const StatusBody = (rowData) => {\n        const ref = useRef(null);\n        const [isOpen, setOpen] = useState(false);\n        const anchorProps = useClick(isOpen, setOpen);\n\n        return <React.Fragment>\n            <ThreeDotsVertical size={24} color=\"#667085\" className='cursor-pointer' ref={ref} {...anchorProps} />\n\n            <ControlledMenu\n                state={isOpen ? 'open' : 'closed'}\n                anchorRef={ref}\n                onClose={() => setOpen(false)}\n                className={\"threeDots\"}\n                menuStyle={{ padding: '4px', width: '241px', textAlign: 'left' }}\n            >\n                <div className='d-flex flex-column gap-2'>\n                    <SendInvoiceEmail projectId={rowData.unique_id} clientId={rowData?.client?.id} isAction={true} />\n                    <ResendInvoiceEmail projectId={rowData.unique_id} clientId={rowData?.client?.id} isAction={true} />\n                    <div className='d-flex align-items-center cursor-pointer gap-3 hover-greay px-2 py-2' onClick={async () => { await duplicateMutation.mutateAsync(rowData.unique_id); setOpen(false); }}>\n                        <Files color='#667085' size={20} />\n                        <span style={{ color: '#101828', fontSize: '16px', fontWeight: 500 }}>Duplicate project</span>\n                        {duplicateMutation?.variables === rowData.unique_id ? <ProgressSpinner style={{ width: '20px', height: '20px' }}></ProgressSpinner> : \"\"}\n                    </div>\n                    <div className='d-flex align-items-center gap-3 hover-greay px-2 py-2' style={{ opacity: .5 }}>\n                        <FileEarmarkSpreadsheet color='#667085' size={20} />\n                        <span style={{ color: '#101828', fontSize: '16px', fontWeight: 500 }}>Create credit note</span>\n                    </div>\n                    {\n                        hasPermission(role, PERMISSIONS.INVOICE.DELETE) && (\n                            <div className='d-flex align-items-center cursor-pointer gap-3 hover-greay px-2 py-2' onClick={async () => { await deleteMutation.mutateAsync(rowData.unique_id); setOpen(false); }}>\n                                <Trash color='#B42318' size={20} />\n                                <span style={{ color: '#B42318', fontSize: '16px', fontWeight: 500 }}>Delete invoice</span>\n                                {deleteMutation?.variables === rowData.unique_id ? <ProgressSpinner style={{ width: '20px', height: '20px' }}></ProgressSpinner> : \"\"}\n                            </div>\n                        )\n                    }\n                </div>\n            </ControlledMenu>\n        </React.Fragment>;\n    };\n\n    const rowClassName = (data) => (data?.deleted ? style.deletedRow : \"\");\n\n    const onSort = (event) => {\n        const { sortField, sortOrder } = event;\n\n        setTempSort({ sortField, sortOrder });\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    };\n\n    return (\n        <>\n            <DataTable ref={ref} value={invoices} scrollable selectionMode={'checkbox'}\n                columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n                scrollHeight={`calc(100vh - 175px - ${trialHeight}px - ${isFilterEnabled ? 56 : 0}px)`} className=\"border\" selection={selected}\n                onSelectionChange={(e) => setSelected(e.value)}\n                loading={loading}\n                loadingIcon={Loader}\n                emptyMessage={<NoDataFoundTemplate isDataExist={!!searchValue || !!isShowDeleted} />}\n                sortField={sort?.sortField}\n                sortOrder={sort?.sortOrder}\n                onSort={onSort}\n                rowClassName={rowClassName}\n            >\n                <Column selectionMode=\"multiple\" headerClassName='ps-4 border-end-0' bodyClassName={'show-on-hover border-end-0 ps-4'} headerStyle={{ width: '3rem', textAlign: 'center' }} frozen></Column>\n                <Column field=\"id\" header=\"Invoice ID\" body={InvoiceIDBody} headerClassName='paddingLeftHide' bodyClassName='paddingLeftHide' style={{ minWidth: '160px', maxWidth: '160px', width: '160px' }} frozen sortable></Column>\n                <Column field=\"\" header=\"Invoice\" body={InvoiceBody} style={{ minWidth: '114px', maxWidth: '114px', width: '114px' }} frozen></Column>\n                <Column field=\"client__name\" header=\"Customer A→Z\" body={customerNameBody} headerClassName='shadowRight' bodyClassName='shadowRight' style={{ minWidth: '295px', maxWidth: '295px', width: '295px' }} frozen sortable></Column>\n                <Column field=\"reference\" header=\"Invoice Reference\" style={{ minWidth: '250px' }}></Column>\n                <Column field=\"due_date\" header=\"Due Date\" body={dueDate} style={{ minWidth: '56px' }} className='text-center' sortable></Column>\n                <Column field='amount' header=\"Total invoice\" body={totalBody} style={{ minWidth: '56px', textAlign: 'end' }}></Column>\n                <Column field='to_be_paid' header=\"To be paid\" body={ToBePaidBody} style={{ minWidth: '123px', textAlign: 'right' }} sortable></Column>\n                <Column field='deposit' header=\"Deposit/Payment\" body={DepositBody} style={{ minWidth: '114px', maxWidth: '164px', width: '164px', textAlign: 'left' }} sortable></Column>\n                <Column field='total_requests' header=\"Info\" body={InfoBodyTemplate} style={{ minWidth: '89px', maxWidth: '89px', width: '89px', textAlign: 'center' }} sortable></Column>\n                <Column field='xero' header=\"Xero/Myob\" body={xeroBody} style={{ minWidth: '120px', maxWidth: '120px', width: '120px', textAlign: 'center' }} sortable></Column>\n                <Column field='paid' header=\"Actions\" body={StatusBody} style={{ minWidth: '75px', maxWidth: '75px', width: '75px', textAlign: 'center' }} bodyStyle={{ color: '#667085' }}></Column>\n            </DataTable>\n            <InvoicePartialPayment show={visible} setShow={() => setVisible(false)} setRefetch={setRefetch} invoice={invoiceData} />\n        </>\n    );\n});\n\nexport default InvoiceTable;","import { Button } from 'react-bootstrap';\nimport { useMutation } from '@tanstack/react-query';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport { downloadStatement } from '../../../../../APIs/expenses-api';\n\nconst CreateStatement = ({ invoices }) => {\n    const downloadStatementMutation = useMutation({\n        mutationFn: (data) => downloadStatement(data),\n        onSuccess: (data) => {\n            const url = data?.pdf_url || data;\n            if (!url) return;\n            window.open(`/invoice/account-statement?pdf=${url}`, '_blank');\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            toast.error(`Failed to download statement. Please try again.`);\n        }\n    });\n\n    const handleDownload = () => {\n        const invoiceIds = invoices.map(item => item.id);\n        downloadStatementMutation.mutate(invoiceIds);\n    };\n\n    return (\n        <>\n            <Button className={\"solid-button font-14\"} style={{ height: '32px' }} onClick={handleDownload}>\n                Create Statement\n                {downloadStatementMutation?.isPending && <ProgressSpinner style={{ width: '20px', height: '20px' }} />}\n            </Button>\n        </>\n    );\n};\n\nexport default CreateStatement;","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"invoice-dropdown_filterBox__9P7yU\",\"dropdownSelect\":\"invoice-dropdown_dropdownSelect__vrlQP\",\"searchBox\":\"invoice-dropdown_searchBox__0j6at\",\"supplierDropdownItem\":\"invoice-dropdown_supplierDropdownItem__Vwm1I\",\"mainTagsWrapper\":\"invoice-dropdown_mainTagsWrapper__iqJlf\",\"tagsInputContainer\":\"invoice-dropdown_tagsInputContainer__wKtvw\",\"tagItemsWrap\":\"invoice-dropdown_tagItemsWrap__mloI7\",\"tagItemWrap\":\"invoice-dropdown_tagItemWrap__Lb-P9\"};","import { useEffect, useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Check, Filter, People } from 'react-bootstrap-icons';\nimport clsx from 'clsx';\nimport { useDebounce } from 'primereact/hooks';\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport style from './invoice-dropdown.module.scss';\nimport { getListOfClients } from '../../../../../APIs/ClientsApi';\nimport { FallbackImage } from '../../../../../shared/ui/image-with-fallback/image-avatar';\n\nconst InvoiceDropdown = ({ setFilters, filter }) => {\n    const observerRef = useRef(null);\n    const [showFilter, setShowFilter] = useState(false);\n    const [key, setKey] = useState('clients');\n    const [clientValue, setClientValue] = useState('');\n    const [clients, setClients] = useState([]);\n    const [page, setPage] = useState(1);\n    const [selectedClient, setSelectedClient] = useState(null);\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n    const limit = 25;\n\n    useEffect(() => {\n        setPage(1);\n    }, [debouncedValue]);\n\n    useEffect(() => {\n        const loadData = async () => {\n            const data = await getListOfClients(page, limit, debouncedValue, 'name');\n            if (page === 1) {\n                if (clientValue) {\n                    const filteredClients = data.results.filter(client => client.id !== clientValue);\n                    return setClients([...selectedClient, ...filteredClients]);\n                }\n\n                setClients(data.results);\n            }\n\n            else {\n                if (data?.results?.length > 0) {\n                    let results = data.results;\n                    if (clientValue) {\n                        results = [...selectedClient, ...data.results];\n                    }\n                    setClients(prev => {\n                        let previous = prev;\n                        if (clientValue) {\n                            previous = [...prev, ...selectedClient];\n                        }\n                        const existingClientIds = new Set(previous.map(client => client.id));\n                        const newClients = results.filter(client => !existingClientIds.has(client.id));\n                        return [...prev, ...newClients];\n                    });\n                }\n            }\n            setHasMoreData(data.count !== clients.length);\n        };\n\n        loadData();\n    }, [page, debouncedValue, clientValue, selectedClient]);\n\n    useEffect(() => {\n        if (clients.length > 0 && hasMoreData) {\n            const timeout = setTimeout(() => {\n                const lastRow = document.querySelector('.supplier-dropdown .supplier-dropdown-item:last-child');\n\n                if (lastRow) {\n                    observerRef.current = new IntersectionObserver(entries => {\n                        if (entries[0].isIntersecting) {\n                            setPage(prevPage => prevPage + 1);\n                        }\n                    });\n                    observerRef.current.observe(lastRow);\n                }\n            }, 1000); // Wait for DOM paint\n\n            return () => {\n                clearTimeout(timeout);\n                if (observerRef.current) observerRef.current.disconnect();\n            };\n        }\n    }, [clients, hasMoreData, showFilter]);\n\n    const handleCancel = () => {\n        setShowFilter(false);\n        setKey('clients');\n        setClientValue('');\n        setSelectedClient(null);\n        setInputValue('');\n        setPage(1);\n        setHasMoreData(true);\n        setClients([]);\n        setFilters((prev) => {\n            const { client, ...rest } = prev;\n            return rest;\n        });\n    };\n\n    const handleApply = () => {\n        setShowFilter(false);\n        if (!selectedClient?.length) return;\n        setFilters((prev) => ({ ...prev, client: [...selectedClient] }));\n    };\n\n    useEffect(()=> {\n        if (!filter['client']) {\n            setSelectedClient(null);\n        }\n    }, [filter]);\n\n    return (\n        <div className='supplier-filters'>\n            <button className={`${style.filterBox}`} onClick={() => setShowFilter(!showFilter)}>\n                <Filter />\n            </button>\n            {showFilter &&\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"filtterBoxWrapper\"\n                    style={{ marginLeft: '5px', marginTop: '5px' }}\n                >\n                    <Tab\n                        eventKey=\"clients\"\n                        title={\n                            <>\n                                <People color=\"#667085\" size={16} />Clients\n                            </>\n                        }\n                    >\n                        <div className={style.searchBox}>\n                            <div style={{ position: 'absolute', top: '7px', left: '18px' }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                    <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                </svg>\n                            </div>\n                            <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '260px', border: '1px solid #D0D5DD', color: '#424242', padding: '10px 10px 10px 36px', fontSize: '14px', height: '40px' }} />\n                        </div>\n                        <div className='supplier-dropdown' style={{ height: '350px', overflow: 'auto', marginLeft: '0px' }}>\n                            {\n                                clients?.map(option =>\n                                    <div key={option.id} className={clsx(style.supplierDropdownItem, 'supplier-dropdown-item')} onClick={() => setSelectedClient(prev => {\n                                        if (prev?.some(client => client.id === option.id)) {\n                                            return prev.filter(client => client.id !== option.id);\n                                        }\n                                        if (!prev) return [option];\n                                        \n                                        return [...prev, option];\n                                    })}>\n                                        <div className='d-flex gap-2 align-items-center w-100'>\n                                            <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '4px', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={true} size={17} />\n                                            </div>\n                                            <div className='ellipsis-width' style={{ maxWidth: '200px' }}>{option?.name}</div>\n                                        </div>\n                                        {\n                                            selectedClient?.some(client => client.id === option.id) ? (\n                                                <Check color=\"#1AB2FF\" size={20} />\n                                            ) : null\n                                        }\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className='d-flex justify-content-end gap-2 p-3 border-top'>\n                            <Button className='outline-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleCancel}>Cancel</Button>\n                            <Button className='solid-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleApply}>Apply</Button>\n                        </div>\n                    </Tab>\n                </Tabs>\n            }\n        </div>\n    );\n};\n\nexport default InvoiceDropdown;","import React from 'react';\nimport { X } from 'react-bootstrap-icons';\nimport Button from \"react-bootstrap/Button\";\nimport style from './invoice-dropdown.module.scss';\n\nconst InvoicesFilters = ({ filter, setFilters }) => {\n    const handleRemoveTag = (group, itemName) => {\n        const newFilters = { ...filter };\n        const newItems = newFilters[group].filter((item) => item !== itemName);\n        if (newItems.length === 0) {\n            delete newFilters[group];\n        } else {\n            newFilters[group] = newItems;\n        }\n        setFilters(newFilters);\n    };\n\n    const handleRemoveGroup = (groupName) => {\n        const newFilters = { ...filter };\n        delete newFilters[groupName];\n        setFilters(newFilters);\n    };\n\n    return (\n        <>\n            {Object.keys(filter)?.length > 0 && (\n                <div className={style.mainTagsWrapper}>\n                    {Object.entries(filter)?.map(([group, items]) => (\n                        <div key={group}>\n                            {items?.length > 0 && (\n                                <div className={style.tagsInputContainer}>\n                                    <ul className={style.tagItemsWrap}>\n                                        {items.map((item, index) => (\n                                            <li className={style.tagItemWrap} key={index}>\n                                                {item?.name}\n                                                {items?.length > 1 && (\n                                                    <Button\n                                                        variant=\"link\"\n                                                        size=\"sm\"\n                                                        style={{ marginLeft: \"5px\", padding: 0 }}\n                                                        onClick={() => handleRemoveTag(group, item)}\n                                                    >\n                                                        <X color=\"#F96969\" size={15} />\n                                                    </Button>\n                                                )}\n                                            </li>\n                                        ))}\n                                        <Button\n                                            variant=\"link\"\n                                            size=\"sm\"\n                                            style={{ marginLeft: \"0px\", padding: 0 }}\n                                            onClick={() => handleRemoveGroup(group)}\n                                        >\n                                            <X color=\"#F96969\" size={20} />\n                                        </Button>\n                                    </ul>\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default InvoicesFilters;","import React, { useEffect, useRef, useState } from 'react';\nimport { Download, Printer, Send } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { useSearchParams } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport { Button } from 'primereact/button';\nimport { useDebounce } from 'primereact/hooks';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport style from './invoice.module.scss';\nimport InvoiceTable from './invoices-table';\nimport { paidExpense } from '../../../../APIs/expenses-api';\nimport { sendInvoiceToXeroApi } from '../../../../APIs/invoice-api';\nimport { formatAUD } from '../../../../shared/lib/format-aud';\nimport NewExpensesCreate from '../../features/expenses-features/new-expenses-create/new-expense-create';\nimport CreateStatement from '../../features/invoice-features/create-statement/create-statement';\nimport InvoiceDropdown from '../../features/invoice-features/invoice-filters/invoice-dropdown';\nimport InvoicesFilters from '../../features/invoice-features/invoice-filters/invoices-filters';\n\nconst InvoicePage = () => {\n    const dt = useRef(null);\n    const [searchParams] = useSearchParams();\n    const isShowUnpaid = searchParams.get('isShowUnpaid');\n    const [total, setTotal] = useState(0);\n    const [totalMoney, setTotalMoney] = useState(0);\n    const [filter, setFilters] = useState({});\n    const [isStatementCreationPossible, setIsStatementCreationPossible] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [refetch, setRefetch] = useState(false);\n    const [isShowDeleted, setIsShowDeleted] = useState(isShowUnpaid ? true : false);\n    const [selected, setSelected] = useState(null);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n\n    const exportCSV = (selectionOnly) => {\n        if (dt.current) {\n            dt.current.exportCSV({ selectionOnly });\n        } else {\n            console.error('DataTable ref is null');\n        }\n    };\n\n    const paidMutation = useMutation({\n        mutationFn: (data) => paidExpense(data),\n        onSuccess: () => {\n            setRefetch((refetch) => !refetch);\n            setSelected(null);\n            toast.success(`Expenses have been successfully marked as paid.`);\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            toast.error(`Failed to mark the expenses as paid. Please try again.`);\n        }\n    });\n\n    const sendInvoiceToXeroMutation = useMutation({\n        mutationFn: (data) => sendInvoiceToXeroApi(data),\n        onSuccess: () => {\n            setRefetch((refetch) => !refetch);\n            setSelected(null);\n            toast.success(`Invoice successfully sent to Xero!`);\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            toast.error(`Failed to send the invoice to xero. Please try again.`);\n        }\n    });\n\n    const sendInvoiceToXero = () => {\n        const ids = selected.map(item => item.unique_id);\n        sendInvoiceToXeroMutation.mutate({ ids: ids });\n    };\n\n    const handleUnpaid = () => {\n        setIsShowDeleted(!isShowDeleted);\n        if (isShowUnpaid === 'true' && isShowDeleted) {\n            window.history.pushState({}, '', '/invoices');\n        }\n    };\n\n    useEffect(() => {\n        if (selected?.length) {\n            const findSameSupplier = selected.every(item => item?.client?.id === selected[0].client?.id);\n            setIsStatementCreationPossible(findSameSupplier);\n        }else {\n            setIsStatementCreationPossible(false);\n        }\n    }, [selected]);\n\n    return (\n        <div className='peoples-page'>\n            <Helmet>\n                <title>MeMate - Invoices</title>\n            </Helmet>\n            <div className={`topbar ${selected?.length ? style.active : ''}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    {\n                        selected?.length ? (\n                            <>\n                                <h6 className={style.selectedCount}>Selected: {selected?.length}</h6>\n                                <div className='filtered-box d-flex align-items-center gap-2'>\n                                    <button className={`outline-button ${style.actionButton}`} disabled={sendInvoiceToXeroMutation.isPending} onClick={sendInvoiceToXero}>Send to Xero/MYOB\n                                        {\n                                            sendInvoiceToXeroMutation.isPending\n                                                ? <ProgressSpinner\n                                                    style={{ width: \"20px\", height: \"20px\" }}\n                                                /> : <Send color='#1D2939' size={20} />\n                                        }\n                                    </button>\n                                    <button className={`${style.filterBox}`} onClick={() => exportCSV(true)}><Download /></button>\n                                    <button className={`${style.filterBox}`} onClick={() => { }}><Printer /></button>\n                                </div>\n                            </>\n                        )\n                            : (\n                                <>\n                                    <div className='filtered-box'>\n                                        <InvoiceDropdown setFilters={setFilters} filter={filter} />\n                                    </div>\n\n                                    <div className=\"searchBox\" style={{ position: 'relative' }}>\n                                        <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                                <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                            </svg>\n                                        </div>\n                                        <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                                    </div>\n                                </>\n                            )\n                    }\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0\">Invoices</h1>\n                </div>\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    {isStatementCreationPossible && <CreateStatement invoices={selected} />}\n                    <Button className={isShowDeleted ? style.unpaidInvoice : style.allInvoice} onClick={handleUnpaid}>Unpaid</Button>\n                    {isShowDeleted && <>\n                        <h1 className={`${style.total} mb-0`}>Total</h1>\n                        <div className={`${style.totalCount}`}>{total} Invoice</div>\n                        <h1 className={style.totalMoney}>${formatAUD(totalMoney || 0.00)}</h1>\n                    </>\n                    }\n                </div>\n            </div>\n            {\n                Object.keys(filter).length > 0 && (\n                    <InvoicesFilters filter={filter} setFilters={setFilters} />\n                )\n            }\n            <InvoiceTable ref={dt} searchValue={debouncedValue} setTotal={setTotal} setTotalMoney={setTotalMoney}\n                selected={selected} setSelected={setSelected}\n                isShowDeleted={isShowDeleted}\n                refetch={refetch}\n                setRefetch={setRefetch}\n                isFilterEnabled={Object.keys(filter).length > 0}\n                filters={filter}\n            />\n            <NewExpensesCreate visible={visible} setVisible={setVisible} setRefetch={setRefetch} />\n        </div>\n    );\n};\n\nexport default InvoicePage;"],"names":["API_BASE_URL","process","getListOfInvoice","async","page","limit","search","arguments","length","undefined","order","isShowUnpaid","clientsFilter","offset","url","URL","searchParams","append","fetchAPI","toString","method","getInvoice","uniqueId","paymentIntentCreate","data","options","body","deleteInvoice","sendInvoiceEmail","id","resendInvoiceEmail","partialPaymentCreate","sendInvoiceToXeroApi","markInvoiceAsPaid","markInvoiceAsUnpaid","headerElement","_jsx","className","style","children","InvoiceHistory","_ref2","history","formatDate","timestamp","date","Date","getDate","Intl","DateTimeFormat","month","format","getFullYear","Card","clsx","_jsxs","Body","fontSize","DataTable","value","showGridlines","Column","field","width","rowData","_ref3","rowIndex","_Fragment","header","rawData","type","Bank","size","Cash","Stripe","CreditCard","textAlign","formatAUD","deposit","_rowData$manager","_rowData$manager2","height","borderRadius","overflow","src","manager","photo","widows","name","created","_ref","show","setShow","invoice","setRefetch","isShowHistory","setIsShowHistory","useState","setDeposit","setType","errors","setErrors","icon","label","mutation","useMutation","mutationFn","unique_id","onSuccess","old","toast","success","onError","error","console","useEffect","Dialog","visible","modal","onHide","SelectButton","onChange","e","itemTemplate","option","optionLabel","Link","to","invoice_url","target","Button","FilePdf","color","LinkIcon","IconField","iconPosition","InputIcon","position","top","InputNumber","onValueChange","minWidth","padding","maxFractionDigits","minFractionDigits","placeholder","inputId","onClick","parseFloat","amount","toFixed","to_be_paid","fontWeight","budget","flex","real_cost","cost_of_sale","labor_expenses","profit","disabled","isPending","onsubmit","errorCount","others","mutate","ProgressSpinner","borderTop","billing_history","_clientQuery$data","projectId","clientId","isAction","payload","setPayload","clientQuery","useQuery","queryKey","queryFn","getClientById","enabled","retry","Bell","text","SendDynamicEmailForm","contactPersons","contact_persons","projectCardData","defaultTemplateId","Send","day","monthAbbreviation","log","InvoiceTable","forwardRef","ref","searchValue","setTotal","setTotalMoney","selected","setSelected","isShowDeleted","refetch","isFilterEnabled","filters","role","useAuth","observerRef","useRef","navigate","useNavigate","trialHeight","useTrialHeight","invoices","setInvoices","setPage","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","loading","setLoading","setVisible","invoiceData","setInvoiceData","_filters$client","client","map","join","_data$results","count","total_amount","results","prev","existingClientIds","Set","newClients","filter","has","loadData","JSON","stringify","current","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","deleteMutation","reset","duplicateMutation","fetchduplicateData","scrollable","selectionMode","columnResizeMode","resizableColumns","scrollHeight","selection","onSelectionChange","loadingIcon","Loader","emptyMessage","NoDataFoundTemplate","isDataExist","onSort","event","rowClassName","deleted","headerClassName","bodyClassName","headerStyle","frozen","lineHeight","number","reference","maxWidth","sortable","Link45deg","_rowData$client","_rowData$client2","_rowData$client3","_rowData$client4","ImageAvatar","has_photo","is_business","Tag","border","background","_rowData$client5","paid","Badge","severity","overdue","due_date","ResendInvoiceEmail","payment_status","isPaid","CurrencyDollar","isOpen","setOpen","anchorProps","useClick","React","InfoCircle","left","ControlledMenu","state","anchorRef","onClose","menuStyle","marginTop","maxHeight","CloseButton","index","_history$manager","_history$manager2","_history$manager3","marginRight","Coin","Calendar3Event","xero_status","_rowData$client6","_rowData$client7","ThreeDotsVertical","SendInvoiceEmail","mutateAsync","Files","variables","opacity","FileEarmarkSpreadsheet","hasPermission","PERMISSIONS","INVOICE","DELETE","Trash","bodyStyle","InvoicePartialPayment","downloadStatementMutation","downloadStatement","pdf_url","window","open","handleDownload","invoiceIds","item","setFilters","showFilter","setShowFilter","key","setKey","clientValue","setClientValue","clients","setClients","selectedClient","setSelectedClient","inputValue","debouncedValue","setInputValue","useDebounce","getListOfClients","filteredClients","previous","timeout","setTimeout","clearTimeout","Filter","Tabs","activeKey","onSelect","k","marginLeft","Tab","eventKey","title","People","xmlns","viewBox","fill","d","some","FallbackImage","Check","handleCancel","rest","handleApply","_Object$keys","_Object$entries","Object","keys","group","items","variant","handleRemoveTag","itemName","newFilters","newItems","X","groupName","handleRemoveGroup","InvoicePage","dt","useSearchParams","get","total","totalMoney","isStatementCreationPossible","setIsStatementCreationPossible","setIsShowDeleted","sendInvoiceToXeroMutation","paidExpense","findSameSupplier","every","_item$client","_selected$0$client","Helmet","gap","sendInvoiceToXero","ids","exportCSV","selectionOnly","Download","Printer","InvoiceDropdown","paddingLeft","transform","CreateStatement","handleUnpaid","pushState","InvoicesFilters","NewExpensesCreate"],"sourceRoot":""}