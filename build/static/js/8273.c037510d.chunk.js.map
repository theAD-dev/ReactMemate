{"version":3,"file":"static/js/8273.c037510d.chunk.js","mappings":"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","sources":["components/Business/Pages/sales/new-request/scope-of-work.js","APIs/base-api.js","APIs/ClientsApi.js","APIs/SalesApi.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { CardList, ChevronLeft, InfoSquare, Person, FileText, FileImage, FileCode, FilePdf, FileWord, Upload, Trash } from 'react-bootstrap-icons';\nimport { useForm } from 'react-hook-form';\nimport { Link, NavLink, useNavigate, useParams } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as yup from 'yup';\nimport { getClientById } from '../../../../../APIs/ClientsApi';\nimport { draftSalesRequest } from '../../../../../APIs/SalesApi';\nimport exclamationCircle from \"../../../../../assets/images/icon/exclamation-circle.svg\";\n\n\n\nconst schema = yup\n    .object({\n        reference: yup.string().required(\"Project reference is required\")\n    })\n    .required();\n\nconst getFileIcon = (fileType) => {\n    if (fileType.includes('pdf')) return <FilePdf color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('image')) return <FileImage color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('text')) return <FileText color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('word')) return <FileWord color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('code')) return <FileCode color=\"#000000\" width={20} height={20} />;\n    return <FileText color=\"#000000\" size={20} />; // Default icon\n};\n\nconst ScopeOfWorkComponent = () => {\n    const navigate = useNavigate();\n    const { id } = useParams();\n    let quoteFormData = {};\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || \"{}\");\n    try {\n        const storedData = window.sessionStorage.getItem(`new-request`);\n        if (storedData) {\n            quoteFormData = JSON.parse(storedData);\n        }\n    } catch (error) {\n        console.error('Failed to parse form data from sessionStorage', error);\n    }\n    const [files, setFiles] = useState([]);\n    const [defaultValues,] = useState({\n        reference: quoteFormData.reference || \"\",\n        requirements: quoteFormData.requirements || \"\"\n    });\n    const { register, handleSubmit, trigger, formState: { errors }, watch } = useForm({\n        resolver: yupResolver(schema),\n        defaultValues\n    });\n\n    const onSubmit = (data) => {\n        const formObject = {\n            id: id,\n            reference: data.reference,\n            requirements: data.requirements,\n            files: files.map(file => file.file)\n        };\n        window.sessionStorage.setItem(`new-request`, JSON.stringify(formObject));\n        navigate(`/sales/quote-calculation`);\n    };\n\n    const handleFileChange = (e) => {\n        const newFiles = Array.from(e.target.files).map(file => ({\n            id: uuidv4(),\n            file,\n            type: file.type,\n        }));\n        setFiles(prevFiles => [...prevFiles, ...newFiles]);\n    };\n\n    const handleRemoveFile = (id) => {\n        setFiles(prevFiles => prevFiles.filter(file => file.id !== id));\n    };\n\n\n    const mutation = useMutation({\n        mutationFn: (data) => draftSalesRequest(data),\n        onSuccess: () => {\n            navigate('/sales');\n            toast.success(`New request created as draft successfully.`);\n        },\n        onError: (error) => {\n            console.error('Error creating draft new request:', error);\n            toast.error(`Failed to create new request. Please try again.`);\n        }\n    });\n\n    const clientQuery = useQuery({\n        queryKey: ['id', id],\n        queryFn: () => getClientById(id),\n        enabled: !!id,\n        retry: 1,\n    });\n\n    const saveAsDraft = async () => {\n        const isValid = await trigger();\n\n        const person = clientQuery.data?.contact_persons[0];\n        const find = clientQuery.data?.contact_persons.find((contact) => contact.is_main === true);\n        const contact_person = find?.id ? find?.id : person?.id;\n        if (!contact_person) {\n            toast.error('No contact person found for this client. Please add a contact person before saving as a draft.');\n            return;\n        }\n\n        if (isValid) {\n            mutation.mutate({\n                client: id,\n                action: 'draft',\n                contact_person,\n                reference: watch('reference'),\n                description: watch('requirements'),\n                managers: [{ manager: profileData?.desktop_user_id }],\n            });\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"newQuotePage existingClients borderSkyColor\">\n                <div style={{ height: 'calc(100vh - 249px)' }}>\n                    <div className=\"newQuoteBack\">\n                        <NavLink to={\"/sales/newquote/selectyourclient\"}>\n                            <button>\n                                <ChevronLeft color=\"#000000\" size={20} /> &nbsp;&nbsp;Go Back\n                            </button>\n                        </NavLink>\n                    </div>\n                    <div className=\"newQuoteContent h-100\">\n                        <div className='navStepClient'>\n                            <ul>\n                                <li><span><Person color=\"#D0D5DD\" size={15} /></span> <p>Choose Client</p></li>\n                                <li><span><InfoSquare color=\"#D0D5DD\" size={15} /></span> <p>Client Information</p> </li>\n                                <li className='activeClientTab'><span><CardList color=\"#D0D5DD\" size={15} /></span> <p>Scope of Work</p> </li>\n                            </ul>\n                        </div>\n                        <div className='individual height'>\n                            <div className='formgroupboxs' style={{ paddingTop: '32px' }}>\n                                <Row className='text-left'>\n                                    <Col sm={12}>\n                                        <div className=\"formgroup mb-3 mt-0\">\n                                            <label>Project Reference<span className='required'>*</span></label>\n                                            <div className={`inputInfo ${errors.reference ? 'error-border' : ''}`}>\n                                                <input {...register(\"reference\")} placeholder='Add Reference for your Project' />\n                                                {errors.reference && <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Exclamation Circle\" />}\n                                            </div>\n                                            {errors.reference && <p className=\"error-message\">{errors.reference.message}</p>}\n                                        </div>\n                                    </Col>\n\n                                    <Col sm={12}>\n                                        <div className=\"formgroup mb-2 mt-0\">\n                                            <label>Describe requirements for the order below<br />\n                                                <small style={{ color: '#475467', fontWeight: 400 }}>Use for organisation. Not customer-facing.</small>\n                                            </label>\n                                            <div style={{ position: 'relative' }} className={`inputInfo textarea ${errors.requirements ? 'error-border' : ''}`}>\n                                                <textarea {...register(\"requirements\")} placeholder='Enter a description...' />\n                                                {errors.requirements && <img className=\"ExclamationCircle\" style={{ position: 'absolute', right: '10px', bottom: '10px' }} src={exclamationCircle} alt=\"Exclamation Circle\" />}\n                                            </div>\n                                            {errors.requirements && <p className=\"error-message\">{errors.requirements.message}</p>}\n                                        </div>\n                                    </Col>\n\n                                    <Col sm={12}>\n                                        <div className=\"formgroup mb-3 mt-0\">\n                                            <label style={{ fontWeight: 'normal' }}>Only for internal use.</label>\n                                            <div className=\"custom-file-upload\" style={{ marginTop: '10px' }}>\n                                                <label htmlFor=\"file-upload\" className=\"custom-upload-btn\" style={{ border: \"1px solid var(--Gray-300, #D0D5DD)\", borderRadius: '4px', padding: '8px 14px' }}>\n                                                    Attach Files &nbsp;<Upload color=\"#1D2939\" width={20} height={20} />\n                                                </label>\n                                                <input id=\"file-upload\" type=\"file\" multiple onChange={handleFileChange} style={{ display: 'none' }} />\n                                            </div>\n                                        </div>\n                                    </Col>\n\n                                    <Col sm={12}>\n                                        {files.length > 0 && (\n                                            <div className=\"uploaded-files pb-5\">\n                                                <ul>\n                                                    {files.map(file => (\n                                                        <li key={file.id} className='ps-0'>\n                                                            {getFileIcon(file.type)}\n                                                            <span className='text-lowercase'>{file.file.name}</span>\n                                                            <Trash color=\"#98A2B3\" style={{ cursor: 'pointer', marginLeft: '20px' }} onClick={() => handleRemoveFile(file.id)} />\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n                                        )}\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                        <div className='individual bottomBox justify-content-between'>\n                            <Link to={\"/sales\"}>\n                                <button type=\"button\" className=\"cancel-button border-0 text-danger\">\n                                    Cancel\n                                </button>\n                            </Link>\n\n                            <div className='d-flex' style={{ gap: '12px' }}>\n                                <button type=\"button\" disabled={mutation.isPending} onClick={saveAsDraft} className=\"cancel-button\">\n                                    Save Draft {\" \"}\n                                    {mutation.isPending && <ProgressSpinner style={{ width: '18px', height: '18px' }} />}\n                                </button>\n\n                                <button type=\"submit\" className=\"submit-button\">\n                                    Calculate\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default ScopeOfWorkComponent;\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createNewIndividualClient = async (data) => {\n  const endpoint = '/clients/individual/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewBusinessClient = async (data) => {\n  const endpoint = '/clients/business/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const restoreClient = async (id) => {\n  const endpoint = `/clients/restore/${id}/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientById = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientCategories = async () => {\n  const endpoint = `/references/clients/categories/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientIndustries = async () => {\n  const endpoint = `/references/clients/industries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getCountries = async () => {\n  const endpoint = `/references/countries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  const response = await fetchAPI(url.toString(), options, false);\n  const allowedCountries = [1];\n  return response?.filter(country => allowedCountries.includes(country.id)) || [];\n};\n\nexport const getStates = async (country) => {\n  const endpoint = `/references/states/${country}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getCities = async (state) => {\n  const endpoint = `/references/cities/${state}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getProjectManager = async () => {\n  const endpoint = `/references/desktop-users/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientEditApi = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getListOfClients = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (name) url.searchParams.append(\"name\", name);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientOrderHistory = async (id, page, limit, search = \"\", order = \"\",) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/${id}/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"number\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  \n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainContact = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteClient = async (id) => {\n  const endpoint = `/clients/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteContactPerson = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchClients = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/clients`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Clients fetch error:', error);\n    throw error;\n  }\n};\n\nexport const bringBack = async (id) => {\n  const endpoint = `/projects/back/`;\n  const options = {\n    method: 'PUT',\n    body: { unique_id: id }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const draftSalesRequest = async (data) => {\n  const endpoint = `/sales/new-request/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n// Sale Table Api\nexport const fetchSales = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n// Sales Note Api\nexport const fetchSalesNotes = async (saleUniqueId, updatedNote) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ sales_note: updatedNote }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/notes/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales notes update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales notes update error:', error);\n    throw error;\n  }\n};\n\nexport const markWon = async (ids) => {\n  const endpoint = `/sales/status/won/`;\n  const options = {\n    method: 'PUT',\n    body: { ids: ids }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markLost = async (ids) => {\n  const endpoint = `/sales/status/lost/`;\n  const options = {\n    method: 'PUT',\n    body: { ids: ids }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n// Sale Won Api\nexport const fetchWon = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify({\n    \"ids\": [saleUniqueId]\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  const response = await fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n};\n\n\n// Sale Contact Api\nexport const fetchContacts = async (saleUniqueId, formData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(formData),\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/contacts/`, requestOptions);\n    if (response.ok) {\n      return response;\n    } else {\n      console.log('Error:', response.status);\n      return null;\n    }\n  } catch (error) {\n    console.log('Error:', error);\n    return null;\n  }\n};\n\n\n// Sale Lead Api\nexport const fetchSaleslead = async (saleUniqueId, updatedLead) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ lead: updatedLead, unique_id: saleUniqueId }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/lead/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales lead update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales lead update error:', error);\n    throw error;\n  }\n};\n\n\n\n\n// Sale Multi Won Api\nexport const fetchMultipleData = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  const responses = await Promise.all([\n    fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions), // Pass requestOptions directly\n  ]);\n\n  const data = await Promise.all(responses.map(response => response.json()));\n  return data;\n};\n\n\n// Sale DUPLICATE Api\nexport const fetchduplicateData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/duplicate/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n};\n\n\n\n\n// Sale history Api\nexport const fetchhistoryData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/history/`, requestOptions);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\n\n\n\n// Sale Multi Lost Api\nexport const fetchMultipleLost = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n\n  const responses = await Promise.all([\n    fetch(`${API_BASE_URL}/sales/status/lost/`, requestOptions), // Pass requestOptions directly\n  ]);\n\n  const data = await Promise.all(responses.map(response => response.json()));\n  return data; // Return data to handleMoveToManagementWon function\n};\n\n\n\n\n\n"],"names":["schema","yup","reference","required","ScopeOfWorkComponent","navigate","useNavigate","id","useParams","quoteFormData","profileData","JSON","parse","window","localStorage","getItem","storedData","sessionStorage","error","console","files","setFiles","useState","defaultValues","requirements","register","handleSubmit","trigger","formState","errors","watch","useForm","resolver","yupResolver","mutation","useMutation","mutationFn","data","draftSalesRequest","onSuccess","toast","success","onError","clientQuery","useQuery","queryKey","queryFn","getClientById","enabled","retry","_jsx","onSubmit","formObject","map","file","setItem","stringify","children","className","_jsxs","style","height","NavLink","to","ChevronLeft","color","size","Person","InfoSquare","CardList","paddingTop","Row","Col","sm","placeholder","src","exclamationCircle","alt","message","fontWeight","position","right","bottom","marginTop","htmlFor","border","borderRadius","padding","Upload","width","type","multiple","onChange","e","newFiles","Array","from","target","uuidv4","prevFiles","display","length","fileType","includes","FilePdf","FileImage","FileText","FileWord","FileCode","name","Trash","cursor","marginLeft","onClick","filter","handleRemoveFile","Link","gap","disabled","isPending","async","_clientQuery$data","_clientQuery$data2","isValid","person","contact_persons","find","contact","is_main","contact_person","mutate","client","action","description","managers","manager","desktop_user_id","ProgressSpinner","fetchAPI","endpoint","options","arguments","undefined","isRequiredLoggedin","method","headers","body","accessToken","isFormData","FormData","defaultHeaders","requestOptions","redirect","url","URL","response","fetch","contentType","get","ok","_errorData","errorData","json","text","status","clear","location","replace","Error","API_BASE_URL","process","restoreClient","toString","getClientCategories","getClientIndustries","getCountries","allowedCountries","country","getStates","getCities","state","getProjectManager","getListOfClients","page","limit","order","isShowDeleted","offset","searchParams","append","clientOrderHistory","search","markeMainAddress","markeMainContact","deleteClient","deleteContactPerson","deleteAddress","bringBack","unique_id","fetchSales","myHeaders","Headers","fetchSalesNotes","saleUniqueId","updatedNote","sales_note","errorText","result","trim","markWon","ids","markLost","fetchContacts","formData","log","fetchSaleslead","updatedLead","lead","fetchMultipleData","selectedUniqueIds","responses","Promise","all","fetchduplicateData","fetchMultipleLost"],"sourceRoot":""}