{"version":3,"file":"static/js/1281.e4388d45.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","APIs/management-api.js","APIs/base-api.js","shared/ui/circular-progressbar/index.js","APIs/jobs-api.js","APIs/email-template.js","APIs/team-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { createNewJob, updateJob } from '../../../../APIs/jobs-api';\nimport { getManagement } from '../../../../APIs/management-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\n\nexport function getFileIcon(fileType) {\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\n\nconst CreateJob = ({ visible, setVisible, setRefetch = () => { }, workerId, isEditMode = false, jobData = null, jobId = null, refetch = () => { } }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            const newFiles = acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file),\n                progress: 0,\n            }));\n\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...newFiles,\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const [start, setStart] = useState(\"\");\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileUserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({\n        queryKey: [\"getManagement\"],\n        queryFn: getManagement,\n        staleTime: Infinity,\n    });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    {option?.image === \"openJob\"\n                        ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                            <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                        </svg>\n                        : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    }\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        {option?.image === \"openJob\"\n                            ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                                <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                            </svg>\n                            : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                        }\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            // Limit job reference to 50 characters when loading from template\n            const templateTitle = getTemplateByIDQuery?.data?.title || \"\";\n            setJobReference(templateTitle.substring(0, 50));\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    const uploadToS3 = async (file, url) => {\n        try {\n            const response = await axios.put(url, file, {\n                headers: {\n                    \"Content-Type\": \"\",\n                },\n                onUploadProgress: (progressEvent) => {\n                    const progress = Math.round(\n                        (progressEvent.loaded / progressEvent.total) * 100\n                    );\n                    setFiles((prevFiles) => {\n                        return prevFiles.map((f) =>\n                            f.name === file.name\n                                ? Object.assign(f, { progress, url })\n                                : f\n                        );\n                    });\n                },\n            });\n\n            // Mark as successfully uploaded\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 100, uploaded: true })\n                        : f\n                );\n            });\n\n            return response;\n        } catch (err) {\n            // Handle specific error types\n            let errorMessage = \"Upload failed\";\n\n            if (err.response) {\n                if (err.response.status === 403) {\n                    errorMessage = \"Permission denied (403 Forbidden)\";\n                } else {\n                    errorMessage = `Server error: ${err.response.status}`;\n                }\n            } else if (err.request) {\n                errorMessage = \"No response from server\";\n            } else {\n                errorMessage = err.message;\n            }\n\n            console.error(`Error uploading ${file.name}:`, errorMessage);\n\n            // Update file with error status but don't stop other uploads\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, {\n                            progress: 0,\n                            error: true,\n                            errorMessage,\n                            uploadFailed: true\n                        })\n                        : f\n                );\n            });\n\n            // Return error object instead of throwing\n            return { error: true, message: errorMessage };\n        }\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            if (file.error || !file.url) continue;\n\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        let successCount = 0;\n        let errorCount = 0;\n\n        // Process each file independently\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n                if (!url) {\n                    console.error(`No URL returned for file: ${file.name}`);\n                    errorCount++;\n                    continue;\n                }\n\n                // Step 2: Upload the file to S3 using the signed URL\n                const result = await uploadToS3(file, url);\n\n                // Check if upload was successful\n                if (result && !result.error) {\n                    successCount++;\n                } else {\n                    errorCount++;\n                }\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n\n                // Update file with error status\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, {\n                                progress: 0,\n                                error: true,\n                                errorMessage: error.message || \"Failed to get upload URL\",\n                                uploadFailed: true\n                            })\n                            : f\n                    );\n                });\n\n                errorCount++;\n                // Continue with next file instead of stopping\n            }\n        }\n\n        // Show summary toasts\n        if (successCount > 0) {\n            toast.success(`Successfully uploaded ${successCount} file(s)`);\n        }\n        if (errorCount > 0) {\n            toast.error(`Failed to upload ${errorCount} file(s)`);\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => {\n            if (isEditMode && jobId) {\n                return updateJob(jobId, data);\n            } else {\n                return createNewJob(data);\n            }\n        },\n        onSuccess: async (response) => {\n            const id = isEditMode ? jobId : response.id;\n\n            if (files.length > 0) {\n                await fileUploadBySignedURL(id);\n                await attachmentsUpdateInJob(id);\n            }\n\n            // Call setRefetch to trigger a refresh in the parent component\n            if (jobData) refetch();\n            setRefetch((prev) => !prev);\n\n            toast.success(`Job ${isEditMode ? 'updated' : 'created'} successfully`);\n            setVisible(false);\n            reset();\n        },\n        onError: (error) => {\n            console.error(`Error ${isEditMode ? 'updating' : 'creating'} job:`, error);\n            toast.error(`Failed to ${isEditMode ? 'update' : 'create'} job. Please try again.`);\n        }\n    });\n\n    const onSubmit = () => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else if (userId && userId != \"0\") payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        // if (!projectId) tempErrors.projectId = true;\n        if (projectId) payload.project = projectId;\n\n        if (projectPhotoDeliver)\n            payload.project_photos = projectPhotoDeliver;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = useCallback((id) => {\n        let user = mobileUserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        }\n    }, [mobileUserQuery?.data?.users]);\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId || \"0\");\n            workerDetailsSet(+workerId || \"\");\n        }\n    }, [workerId, workerDetailsSet]);\n\n    // Populate form with job data when in edit mode\n    useEffect(() => {\n        if (isEditMode && jobData) {\n            // Set job reference and description\n            setJobReference(jobData.short_description || \"\");\n            setDescription(jobData.long_description || \"\");\n\n            // Set worker details\n            if (jobData.worker) {\n                setUserId(jobData.worker.id);\n                workerDetailsSet(jobData.worker.id);\n            } else {\n                setUserId(\"0\");\n            }\n\n            // Set project\n            if (jobData.project) {\n                setProjectId(jobData.project.id);\n            }\n\n            // Set payment type and cost\n            setType(jobData.type || \"2\");\n            setCost(jobData.cost || 0.00);\n\n            // Set time type and duration\n            set_time_type(jobData.time_type || \"\");\n            setDuration(jobData.duration || \"\");\n\n            // Set dates\n            if (jobData.start_date) {\n                const startDate = new Date(+jobData.start_date * 1000);\n                setStart(startDate);\n            }\n            if (jobData.end_date) {\n                const endDate = new Date(+jobData.end_date * 1000);\n                setEnd(endDate);\n            }\n\n            // Set project photos\n            setProjectPhotoDeliver(jobData.project_photos || \"3\");\n\n            // Set attachments if available\n            if (jobData.attachments && jobData.attachments.length > 0) {\n                setFiles(jobData.attachments.map(attachment => ({\n                    name: attachment.name,\n                    size: attachment.size,\n                    url: attachment.link,\n                    progress: 100,\n                    isExisting: true\n                })));\n            }\n        }\n    }, [isEditMode, jobData, workerDetailsSet]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            {!isEditMode && (\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <Dropdown\n                                        options={\n                                            (templateQuery &&\n                                                templateQuery.data?.map((template) => ({\n                                                    value: template.id,\n                                                    label: `${template.name}`,\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\"\n                                        )}\n                                        style={{ height: \"44px\", width: '606px' }}\n                                        placeholder=\"Select template\"\n                                        onChange={(e) => {\n                                            setTemplatedId(e.value);\n                                        }}\n                                        value={templateId}\n                                        loading={templateQuery?.isFetching}\n                                        filter\n                                    />\n                                </div>\n                            )}\n                            {isEditMode && (\n                                <h2 className=\"mb-0\" style={{ fontSize: '18px', fontWeight: '500' }}>Edit Job #{jobId}</h2>\n                            )}\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>{isEditMode ? 'Edit Job' : 'New Job'}</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference<span className=\"required\">*</span></label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    const value = e.target.value;\n                                                    if (value.length <= 50) {\n                                                        setJobReference(value);\n                                                        if (value)\n                                                            setErrors((others) => ({ ...others, jobReference: false }));\n                                                    }\n                                                }}\n                                                maxLength={50}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        {errors?.jobReference && (\n                                            <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                        )}\n                                        <small className=\"text-muted ms-auto\">{jobReference.length}/50</small>\n                                    </div>\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to<span className=\"required\">*</span></h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={[\n                                                    { value: \"0\", label: \"Open job\", image: \"openJob\", has_photo: false },\n                                                    ...(mobileUserQuery?.data?.users\n                                                        ?.filter((user) => user.status !== 'disconnected')\n                                                        ?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        })) || [])\n                                                ]}\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileUserQuery?.isFetching}\n                                                filter\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        {userId && userId != \"0\" &&\n                                            <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                                <Col sm={2} className='p-0'>\n                                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                        <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                    </div>\n                                                </Col>\n                                                <Col sm={5} className='pe-0 ps-0'>\n                                                    <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                    <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                                </Col>\n                                                <Col sm={5} className=''>\n                                                    <div className='d-flex align-items-center gap-2 mb-3'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                        <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                    </div>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                        <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment<span className=\"required\">*</span></label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time<span className=\"required\">*</span></label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts<span className=\"required\">*</span></label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End<span className=\"required\">*</span></label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.unique_id,\n                                                    label: `${project.reference} - ${project.number}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        filter\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"None\" name=\"projectPhotoDeliver\" value=\"\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == ''} />\n                                            <label htmlFor=\"None\" className=\"ms-2 cursor-pointer\">None</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>\n                                                                {parseFloat(file?.size / 1024).toFixed(2)} KB\n                                                                {file.error ?\n                                                                    <span style={{ color: \"#F04438\" }}> - Upload failed</span> :\n                                                                    ` - ${parseInt(file?.progress) || 0}% uploaded`\n                                                                }\n                                                            </p>\n                                                            {file.errorMessage &&\n                                                                <p className='mb-0' style={{ color: \"#F04438\", fontSize: \"12px\" }}>{file.errorMessage}</p>\n                                                            }\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            {file.error ?\n                                                                <div style={{ color: \"#F04438\", width: \"30px\", height: \"30px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>!</div> :\n                                                                <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        <Button type='button' onClick={onSubmit} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending}>\n                            {isEditMode ? 'Update' : 'Create'} {mutation?.isPending && <ProgressSpinner\n                                style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />}\n                        </Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const resendQuoteEmail = async (id, data) => {\n    let endpoint = `/resend/quote/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\n\n\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateJob = async (id, data) => {\n    const endpoint = `/jobs/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n"],"names":["getFileIcon","fileType","fileData","name","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","_ref","_mobileUserQuery$data3","visible","setVisible","setRefetch","workerId","isEditMode","jobData","jobId","refetch","accessToken","localStorage","getItem","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","newFiles","map","file","Object","assign","preview","URL","createObjectURL","progress","prevFiles","type","setType","cost","setCost","time_type","set_time_type","start","setStart","end","setEnd","duration","setDuration","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getJobTemplates","getTemplateByIDQuery","getJobTemplate","enabled","retry","mobileUserQuery","getTeamMobileUser","projectQuery","getManagement","staleTime","Infinity","itemTemplate","option","borderRadius","overflow","border","image","fillRule","clipRule","FallbackImage","photo","has_photo","is_business","size","label","selectedItemTemplate","props","placeholder","useEffect","data","_getTemplateByIDQuery","_getTemplateByIDQuery2","templateTitle","title","substring","others","uploadToS3","async","url","response","axios","put","headers","onUploadProgress","progressEvent","Math","round","loaded","total","f","uploaded","err","errorMessage","status","request","message","console","error","uploadFailed","mutation","useMutation","mutationFn","updateJob","createNewJob","onSuccess","id","length","toast","successCount","errorCount","post","filename","Authorization","result","success","fileUploadBySignedURL","attachments","_file$url","obj","split","push","log","attachmentsUpdateInJob","prev","onError","onSubmit","tempErrors","payload","short_description","long_description","worker","start_date","Date","toISOString","end_date","project","project_photos","values","includes","mutate","workerDetailsSet","useCallback","_mobileUserQuery$data","_mobileUserQuery$data2","user","users","find","paymentCycleObj","parseFloat","hourly_rate","toFixed","payment_cycle","first_name","last_name","startDate","endDate","attachment","link","isExisting","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileUserQuery$data4","_mobileUserQuery$data5","_mobileUserQuery$data6","_projectQuery$data","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","options","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","filter","fontSize","fontWeight","Button","ref","onClick","X","Card","Body","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","maxLength","InputTextarea","Row","Col","sm","valueTemplate","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","unique_id","reference","number","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","minWidth","disabled","isPending","API_BASE_URL","process","fetchAPI","endpoint","arguments","undefined","method","body","requestOptions","JSON","stringify","redirect","fetch","ok","Error","contentType","get","json","text","updateProjectScheduleById","toString","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","resendQuoteEmail","myHeaders","Headers","append","ProjectCardApi","uniqueId","isRequiredLoggedin","isFormData","FormData","defaultHeaders","window","clear","sessionStorage","location","replace","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition","getListOfJobs","page","limit","order","isShowDeleted","offset","searchParams","getJob","getJobDashboardData","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getTeamDesktopUser"],"sourceRoot":""}