{"version":3,"file":"static/js/6453.270b232d.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/components/Work/Pages/approval/approval.module.scss?cde7","components/Work/Pages/approval/week-navigator.js","APIs/approval-api.js","webpack://memateapp/./src/components/Work/features/approve-job/approve-job.module.scss?5fb3","components/Work/features/approve-job/approve-job.jsx","components/Work/Pages/approval/approval-table.js","components/Work/Pages/approval/index.js","webpack://memateapp/./src/ui/image-with-fallback/image-avatar.module.scss?81d4","ui/image-with-fallback/image-avatar.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"approval_filterBox__ystSi\",\"total\":\"approval_total__t03q9\",\"totalCount\":\"approval_totalCount__hTTBc\",\"shadowRight\":\"approval_shadowRight__X9zTG\",\"payment\":\"approval_payment__YwghB\",\"paymentHours\":\"approval_paymentHours__0t+W3\",\"paymentFix\":\"approval_paymentFix__CXsuw\",\"time\":\"approval_time__EPrle\",\"tracker\":\"approval_tracker__67lYj\",\"clientImg\":\"approval_clientImg__UHBLY\",\"clientName\":\"approval_clientName__lw-Sd\",\"inProgress\":\"approval_inProgress__WFpNd\",\"approved\":\"approval_approved__oWI1u\",\"defaultStatus\":\"approval_defaultStatus__sa3+W\",\"finished\":\"approval_finished__tAhe6\",\"finishedAction\":\"approval_finishedAction__PNOct\",\"assign\":\"approval_assign__EvOLi\",\"assignAction\":\"approval_assignAction__ENiFC\",\"shadowLeft\":\"approval_shadowLeft__Slbva\",\"yearDropdown\":\"approval_yearDropdown__dYRYk\",\"clientPhoto\":\"approval_clientPhoto__T0lPw\",\"workerPhoto\":\"approval_workerPhoto__riwim\",\"button\":\"approval_button__2omTf\"};","import React, { useState, useEffect } from 'react';\nimport { Button, Dropdown } from 'react-bootstrap';\nimport { Calendar3 } from 'react-bootstrap-icons';\nimport clsx from 'clsx';\nimport style from './approval.module.scss';\n\nconst WeekNavigator = ({ onWeekChange }) => {\n  const [currentWeek, setCurrentWeek] = useState(null);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [weekInfo, setWeekInfo] = useState({ start: '', end: '' });\n\n  const currentYearNum = new Date().getFullYear();\n  const years = Array.from({ length: 5 }, (_, i) => currentYearNum - i);\n\n  const getWeekNumber = (date) => {\n    const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n    const pastDaysOfYear = (date - firstDayOfYear) / 86400000;\n    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\n  };\n\n  const getWeekDates = (weekNumber, year) => {\n    const firstDayOfYear = new Date(year, 0, 1);\n    const daysOffset = (weekNumber - 1) * 7 - (firstDayOfYear.getDay() - 1);\n\n    const firstDayOfWeek = new Date(year, 0, 1 + daysOffset);\n    const lastDayOfWeek = new Date(year, 0, 1 + daysOffset + 6);\n\n    return {\n      start: firstDayOfWeek,\n      end: lastDayOfWeek\n    };\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short'\n    });\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const weekNum = getWeekNumber(today);\n    setCurrentWeek(weekNum);\n\n    updateWeekDates(weekNum, currentYear);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    updateWeekDates(currentWeek, currentYear);\n\n    if (onWeekChange) {\n      const { start, end } = getWeekDates(currentWeek, currentYear);\n      onWeekChange({\n        week: currentWeek,\n        year: currentYear,\n        startDate: start,\n        endDate: end\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentWeek, currentYear]);\n\n  const updateWeekDates = (week, year) => {\n    const { start, end } = getWeekDates(week, year);\n    setWeekInfo({\n      start: formatDate(start),\n      end: formatDate(end)\n    });\n  };\n\n  const goToPreviousWeek = () => {\n    if (currentWeek > 1) {\n      setCurrentWeek(currentWeek - 1);\n    } else {\n      setCurrentYear(currentYear - 1);\n      setCurrentWeek(52);\n    }\n  };\n\n  // Check if next week button should be disabled\n  const isNextButtonDisabled = () => {\n    const currentDate = new Date();\n    const currentYearNum = currentDate.getFullYear();\n\n    // Disable if we're in a future year\n    if (currentYear > currentYearNum) {\n      return true;\n    }\n\n    // Disable if we're in the current year and at or beyond the current week\n    if (currentYear === currentYearNum) {\n      const currentWeekNum = getWeekNumber(currentDate);\n      if (currentWeek >= currentWeekNum) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const goToNextWeek = () => {\n    // Don't proceed if button is disabled\n    if (isNextButtonDisabled()) {\n      return;\n    }\n\n    // Normal week navigation logic\n    if (currentWeek < 52) {\n      setCurrentWeek(currentWeek + 1);\n    } else {\n      setCurrentYear(currentYear + 1);\n      setCurrentWeek(1);\n    }\n  };\n\n  const handleYearSelect = (year) => {\n    const selectedYear = parseInt(year);\n    const currentDate = new Date();\n    const currentYearNum = currentDate.getFullYear();\n\n    // Prevent selecting future years\n    if (selectedYear > currentYearNum) {\n      return;\n    }\n\n    // If selecting current year, make sure week is not in the future\n    if (selectedYear === currentYearNum) {\n      const currentWeekNum = getWeekNumber(currentDate);\n      if (currentWeek > currentWeekNum) {\n        setCurrentWeek(currentWeekNum);\n      }\n    }\n\n    setCurrentYear(selectedYear);\n  };\n\n  return (\n    <div className='d-flex align-items-center w-100' style={{ gap: '32px', position: 'relative' }}>\n      <Dropdown style={{ position: 'absolute', right: '16px' }}>\n        <Dropdown.Toggle as={Button} className={clsx(style.button, \"outline-button mx-auto\")}>\n          <Calendar3 size={16} color=\"#667085\" />\n          {currentYear}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {years.map(year => (\n            <Dropdown.Item\n              key={year}\n              onClick={() => handleYearSelect(year)}\n              active={year === currentYear}\n            >\n              {year}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <div className='d-flex align-items-center mx-auto'>\n        <button\n          className='border-0'\n          style={{\n            background: 'transparent',\n            cursor: 'pointer',\n            opacity: 1\n          }}\n          onClick={goToPreviousWeek}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.35355 1.80514C8.54882 2.0004 8.54882 2.31698 8.35355 2.51224L2.70711 8.15869L8.35355 13.8051C8.54882 14.0004 8.54882 14.317 8.35355 14.5122C8.15829 14.7075 7.84171 14.7075 7.64645 14.5122L1.64645 8.51224C1.45118 8.31698 1.45118 8.0004 1.64645 7.80514L7.64645 1.80514C7.84171 1.60988 8.15829 1.60988 8.35355 1.80514Z\" fill=\"#344054\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.3536 1.80514C12.5488 2.0004 12.5488 2.31698 12.3536 2.51224L6.70711 8.15869L12.3536 13.8051C12.5488 14.0004 12.5488 14.317 12.3536 14.5122C12.1583 14.7075 11.8417 14.7075 11.6464 14.5122L5.64645 8.51224C5.45118 8.31698 5.45118 8.0004 5.64645 7.80514L11.6464 1.80514C11.8417 1.60988 12.1583 1.60988 12.3536 1.80514Z\" fill=\"#344054\" />\n          </svg>\n        </button>\n\n        <div className='d-flex align-items-center justify-content-center' style={{ gap: '4px', width: '200px' }}>\n          <span className='font-14' style={{ color: '#344054' }}>\n            Week {currentWeek} | {weekInfo.start} - {weekInfo.end}\n          </span>\n        </div>\n\n        <button\n          className='border-0'\n          style={{\n            background: 'transparent',\n            cursor: isNextButtonDisabled() ? 'not-allowed' : 'pointer',\n            opacity: isNextButtonDisabled() ? 0.5 : 1\n          }}\n          onClick={goToNextWeek}\n          disabled={isNextButtonDisabled()}\n          aria-disabled={isNextButtonDisabled()}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.64645 1.80514C3.84171 1.60988 4.15829 1.60988 4.35355 1.80514L10.3536 7.80514C10.5488 8.0004 10.5488 8.31698 10.3536 8.51224L4.35355 14.5122C4.15829 14.7075 3.84171 14.7075 3.64645 14.5122C3.45118 14.317 3.45118 14.0004 3.64645 13.8051L9.29289 8.15869L3.64645 2.51224C3.45118 2.31698 3.45118 2.0004 3.64645 1.80514Z\" fill=\"#344054\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.64645 1.80514C7.84171 1.60988 8.15829 1.60988 8.35355 1.80514L14.3536 7.80514C14.5488 8.0004 14.5488 8.31698 14.3536 8.51224L8.35355 14.5122C8.15829 14.7075 7.84171 14.7075 7.64645 14.5122C7.45118 14.317 7.45118 14.0004 7.64645 13.8051L13.2929 8.15869L7.64645 2.51224C7.45118 2.31698 7.45118 2.0004 7.64645 1.80514Z\" fill=\"#344054\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WeekNavigator;\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobsToApprove = async () => {\n    const endpoint = `/jobs/to-approve/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getApproveNotInvoice = async (year, week) => {\n    const endpoint = `/jobs/to-invoice/${year}/${week}/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"approve-job_heading__NCGqc\",\"border\":\"approve-job_border__pYPi2\",\"borderBottom\":\"approve-job_borderBottom__73j1d\",\"cardBody\":\"approve-job_cardBody__igMLE\",\"jobDetailHeading\":\"approve-job_jobDetailHeading__RtqsC\",\"customLabel\":\"approve-job_customLabel__5r9ok\",\"text\":\"approve-job_text__VC0CF\",\"plannedTable\":\"approve-job_plannedTable__QV7Mr\",\"whiteTr\":\"approve-job_whiteTr__p+JS6\",\"active1\":\"approve-job_active1__LwXX9\",\"nonActive\":\"approve-job_nonActive__R5QLG\",\"borderRightNone\":\"approve-job_borderRightNone__kqdzx\",\"active2\":\"approve-job_active2__6XFPc\",\"active3\":\"approve-job_active3__q5Ndq\",\"lastRow\":\"approve-job_lastRow__0-xNd\",\"fixRateBox\":\"approve-job_fixRateBox__53ez4\",\"shiftBox\":\"approve-job_shiftBox__vzGQP\",\"clockIcon\":\"approve-job_clockIcon__RE0Ne\",\"moneyBox\":\"approve-job_moneyBox__l1MqE\",\"InputTextarea\":\"approve-job_InputTextarea__KagCa\",\"activeOutlineButton\":\"approve-job_activeOutlineButton__Gc88x\",\"amountRow\":\"approve-job_amountRow__HNjds\",\"dollar\":\"approve-job_dollar__cnrmS\",\"helpIcon\":\"approve-job_helpIcon__BuOoR\",\"buttonGroup\":\"approve-job_buttonGroup__zIyky\",\"iconButton\":\"approve-job_iconButton__uf9jA\",\"amountInputBox\":\"approve-job_amountInputBox__BQBK5\",\"inputText\":\"approve-job_inputText__Dsfys\"};","import { useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { ClockHistory, QuestionCircle, X } from 'react-bootstrap-icons';\nimport { useQuery } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { Checkbox } from 'primereact/checkbox';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Sidebar } from 'primereact/sidebar';\nimport style from './approve-job.module.scss';\nimport { getApprovedJob } from '../../../../APIs/jobs-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { formatDate } from '../../Pages/jobs/jobs-table';\n\nconst ApproveJob = ({ jobId = null, visible = false, setVisible }) => {\n    const [isOpenJobDetailsSection, setIsOpenJobDetailsSection] = useState(true);\n    const [isOpenPlannedVsActualSection, setIsOpenPlannedVsActualSection] = useState(true);\n    const [isOpenVariationSection, setIsOpenVariationSection] = useState(true);\n    const [isOpenJobTrackingSection, setIsOpenJobTrackingSection] = useState(true);\n    const [selectedColumn, setSelectedColumn] = useState(\"planned\");\n    const [amount, setAmount] = useState(0);\n    const [currentClient, setCurrentClient] = useState(null);\n\n    const increment = () => setAmount(prev => prev + 1);\n    const decrement = () => setAmount(prev => Math.max(0, prev - 1));\n\n    const jobQuery = useQuery({\n        queryKey: [\"getApprovedJob\", jobId],\n        queryFn: () => getApprovedJob(jobId),\n        enabled: !!jobId,\n        retry: 1,\n    });\n    const job = jobQuery?.data;\n    console.log('job: ', job);\n\n    const mobileUserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    useEffect(() => {\n        if (job && mobileUserQuery?.data?.users) {\n            let findClient = mobileUserQuery?.data?.users?.find(user => user?.id === job?.worker?.id);\n            console.log('findClient: ', findClient, job?.worker?.id, mobileUserQuery?.data?.users);\n            setCurrentClient(findClient);\n        }\n    }, [mobileUserQuery?.data, job]);\n\n\n    const formatTime = (timestamp) => {\n        const date = new Date(parseInt(timestamp) * 1000);\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    };\n\n    const formatHours = (hours) => {\n        const totalMinutes = hours * 60;\n        const h = Math.floor(totalMinutes / 60);\n        const m = Math.round(totalMinutes % 60);\n        return `${h}:${m.toString().padStart(2, '0')}`;\n    };\n\n    const calculateActualHours = () => {\n        if (job?.start && job?.finish) {\n            const start = parseInt(job.start) * 1000;\n            const finish = parseInt(job.finish) * 1000;\n            const diffMs = finish - start;\n            const hours = diffMs / (1000 * 60 * 60);\n            return formatHours(hours);\n        }\n        return \"0:00\";\n    };\n\n    const plannedHours = \"1:00\";\n    const plannedRate = parseFloat(currentClient?.hourly_rate || 0);\n    const plannedSubtotal = parseInt(plannedHours.split(':')[0]) * plannedRate;\n    const actualHours = job?.spent_time || 0;\n    const actualSubtotal = (actualHours * plannedRate).toFixed(2);\n    const variation = 0;\n    const plannedTotal = (plannedSubtotal + variation).toFixed(2);\n    const actualTotal = (parseFloat(actualSubtotal) + variation).toFixed(2);\n\n    const mapEmbedUrl = job?.locations?.length > 0\n        ? `https://www.openstreetmap.org/export/embed.html?bbox=${parseFloat(job.locations[0].longitude) - 0.005},${parseFloat(job.locations[0].latitude) - 0.005},${parseFloat(job.locations[0].longitude) + 0.005},${parseFloat(job.locations[0].latitude) + 0.005}&marker=${job.locations[0].latitude},${job.locations[0].longitude}`\n        : null;\n\n    const handlePlannedRowClick = () => {\n        setSelectedColumn(\"planned\");\n    };\n\n    const handleActualRowClick = () => {\n        setSelectedColumn(\"actual\");\n    };\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            <span className={style.heading}>{job?.id}-{job?.number}</span>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenJobDetailsSection(!isOpenJobDetailsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenJobDetailsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenJobDetailsSection &&\n                                <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                    <h1 className={clsx(style.jobDetailHeading, 'mb-3')}>Link to Project</h1>\n\n                                    <label className={clsx(style.customLabel)}>Short Description</label>\n                                    <p className={clsx(style.text)}>{job?.short_description}</p>\n\n                                    <label className={clsx(style.customLabel)}>Long Description</label>\n                                    <p className={clsx(style.text)}>{job?.long_description}</p>\n\n                                    <Row>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>Client</label>\n                                            <p className={clsx(style.text)}>{job?.client?.name}</p>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>Location</label>\n                                            <p className={clsx(style.text)}>{job?.location?.name}</p>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>Start Date</label>\n                                            <p className={clsx(style.text)}>{job?.start_date ? formatDate(job?.start_date) : \"N/A\"}</p>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>End Date</label>\n                                            <p className={clsx(style.text)}>{job?.end_date ? formatDate(job?.end_date) : \"N/A\"}</p>\n                                        </Col>\n                                    </Row>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenPlannedVsActualSection(!isOpenPlannedVsActualSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Planned vs Actual</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenPlannedVsActualSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenPlannedVsActualSection &&\n                                <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between px-0 py-0', style.borderBottom)}>\n                                    <table className={clsx('w-100', style.plannedTable)}>\n                                        <thead>\n                                            <tr>\n                                                <th>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <div className={style.fixRateBox}>Fix Rate</div>\n                                                        <div>\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                                                <path d=\"M10 5C10.3452 5 10.625 5.27982 10.625 5.625V9.375H14.375C14.7202 9.375 15 9.65482 15 10C15 10.3452 14.7202 10.625 14.375 10.625H10.625V14.375C10.625 14.7202 10.3452 15 10 15C9.65482 15 9.375 14.7202 9.375 14.375V10.625H5.625C5.27982 10.625 5 10.3452 5 10C5 9.65482 5.27982 9.375 5.625 9.375H9.375V5.625C9.375 5.27982 9.65482 5 10 5Z\" fill=\"#667085\" />\n                                                            </svg>\n                                                        </div>\n                                                        <div className={style.shiftBox}>Shift</div>\n                                                    </div>\n                                                </th>\n                                                <th className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <Checkbox checked={selectedColumn === \"planned\"} onChange={() => setSelectedColumn(selectedColumn === \"planned\" ? null : \"planned\")} />\n                                                        <label className={clsx(style.customLabel)}>Planned</label>\n                                                    </div>\n                                                </th>\n                                                <th className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                    <div className='d-flex justify-content-between'>\n                                                        <div className='d-flex align-items-center gap-2'>\n                                                            <Checkbox checked={selectedColumn === \"actual\"} onChange={() => setSelectedColumn(selectedColumn === \"actual\" ? null : \"actual\")} />\n                                                            <label className={clsx(style.customLabel)}>Actual</label>\n                                                        </div>\n                                                        <div className={style.clockIcon}>\n                                                            <ClockHistory color='#475467' size={16} />\n                                                        </div>\n                                                    </div>\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr className={style.whiteTr}>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Start</span>\n                                                </td>\n                                                <td className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                    <span className='font-14'>{job?.start ? formatTime(job.start) : \"N/A\"} | {job?.start_date ? formatDate(job?.start_date) : \"N/A\"}</span>\n                                                </td>\n                                                <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                    <span className='font-14'>{job?.start ? formatTime(job.start) : \"N/A\"} | {job?.start_date ? formatDate(job?.start_date) : \"N/A\"}</span>\n                                                </td>\n                                            </tr>\n                                            <tr className={style.whiteTr}>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Finish</span>\n                                                </td>\n                                                <td className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                    <span className='font-14'>{job?.finish ? formatTime(job.finish) : \"N/A\"} | {job?.end_date ? formatDate(job?.end_date) : \"N/A\"}</span>\n                                                </td>\n                                                <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                    <span className='font-14'>{job?.finish ? formatTime(job.finish) : \"N/A\"} | {job?.end_date ? formatDate(job?.end_date) : \"N/A\"}</span>\n                                                </td>\n                                            </tr>\n                                            <tr className={style.whiteTr}>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Hours</span>\n                                                </td>\n                                                <td className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                    <span className='font-14'>{plannedHours}</span>\n                                                </td>\n                                                <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                    <span className='font-14'>{calculateActualHours()}</span>\n                                                </td>\n                                            </tr>\n                                            <tr className={style.whiteTr}>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Rate per hour</span>\n                                                </td>\n                                                <td colSpan={2} className={clsx(selectedColumn === \"planned\" ? style.active1 : style.active3, 'text-center', style.borderRightNone)}>\n                                                    <div className={clsx(style.moneyBox)}>${plannedRate.toFixed(2)}</div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Subtotal</span>\n                                                </td>\n                                                <td className={clsx(selectedColumn === \"planned\" ? style.active1 : style.nonActive, selectedColumn === \"planned\" ? style.active2 : '')} onClick={handlePlannedRowClick}>\n                                                    <span className='font-14'>${plannedSubtotal.toFixed(2)}</span>\n                                                </td>\n                                                <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                    <span className='font-14'>${actualSubtotal}</span>\n                                                </td>\n                                            </tr>\n                                            <tr className={style.whiteTr}>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Variation</span>\n                                                </td>\n                                                <td colSpan={2} className={clsx(selectedColumn === \"planned\" ? style.active1 : style.active3, 'text-center', selectedColumn !== \"planned\" ? \"\" : style.borderRightNone)}>\n                                                    <div className={clsx(style.moneyBox)}>${variation.toFixed(2)}</div>\n                                                </td>\n                                            </tr>\n                                            <tr className={clsx(style.lastRow)}>\n                                                <td>\n                                                    <span className='font-16' style={{ color: '#344054' }}>Total</span>\n                                                </td>\n                                                <td className={clsx(selectedColumn === \"planned\" ? style.active1 : style.nonActive, selectedColumn === \"planned\" ? style.active2 : '')} onClick={handlePlannedRowClick}>\n                                                    <Button className={clsx(\"outline-button px-3 py-1 font-14 mx-auto gap-2\", selectedColumn === \"planned\" ? style.activeOutlineButton : \"\")}>\n                                                        ${plannedTotal}\n                                                        {\n                                                            selectedColumn === \"planned\" ?\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\">\n                                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 5C0 4.65482 0.279822 4.375 0.625 4.375L7.86612 4.375L5.18306 1.69194C4.93898 1.44786 4.93898 1.05214 5.18306 0.808058C5.42714 0.56398 5.82286 0.56398 6.06694 0.808058L9.81694 4.55806C10.061 4.80213 10.061 5.19786 9.81694 5.44194L6.06694 9.19194C5.82286 9.43602 5.42714 9.43602 5.18306 9.19194C4.93898 8.94786 4.93898 8.55213 5.18306 8.30806L7.86612 5.625H0.625C0.279822 5.625 0 5.34518 0 5Z\" fill=\"white\" />\n                                                                </svg> :\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"10\" viewBox=\"0 0 11 10\" fill=\"none\">\n                                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.5 5C0.5 4.65482 0.779822 4.375 1.125 4.375L8.36612 4.375L5.68306 1.69194C5.43898 1.44786 5.43898 1.05214 5.68306 0.808058C5.92714 0.56398 6.32286 0.56398 6.56694 0.808058L10.3169 4.55806C10.561 4.80213 10.561 5.19786 10.3169 5.44194L6.56694 9.19194C6.32286 9.43602 5.92714 9.43602 5.68306 9.19194C5.43898 8.94786 5.43898 8.55213 5.68306 8.30806L8.36612 5.625H1.125C0.779822 5.625 0.5 5.34518 0.5 5Z\" fill=\"#344054\" />\n                                                                </svg>\n                                                        }\n                                                    </Button>\n                                                </td>\n                                                <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                    <Button className={clsx(\"outline-button px-3 py-1 font-14 mx-auto gap-2\", selectedColumn === \"actual\" ? style.activeOutlineButton : \"\")}>\n                                                        ${actualTotal}\n                                                        {\n                                                            selectedColumn === \"actual\" ?\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\">\n                                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 5C0 4.65482 0.279822 4.375 0.625 4.375L7.86612 4.375L5.18306 1.69194C4.93898 1.44786 4.93898 1.05214 5.18306 0.808058C5.42714 0.56398 5.82286 0.56398 6.06694 0.808058L9.81694 4.55806C10.061 4.80213 10.061 5.19786 9.81694 5.44194L6.06694 9.19194C5.82286 9.43602 5.42714 9.43602 5.18306 9.19194C4.93898 8.94786 4.93898 8.55213 5.18306 8.30806L7.86612 5.625H0.625C0.279822 5.625 0 5.34518 0 5Z\" fill=\"white\" />\n                                                                </svg> :\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"10\" viewBox=\"0 0 11 10\" fill=\"none\">\n                                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.5 5C0.5 4.65482 0.779822 4.375 1.125 4.375L8.36612 4.375L5.68306 1.69194C5.43898 1.44786 5.43898 1.05214 5.68306 0.808058C5.92714 0.56398 6.32286 0.56398 6.56694 0.808058L10.3169 4.55806C10.561 4.80213 10.561 5.19786 10.3169 5.44194L6.56694 9.19194C6.32286 9.43602 5.92714 9.43602 5.68306 9.19194C5.43898 8.94786 5.43898 8.55213 5.68306 8.30806L8.36612 5.625H1.125C0.779822 5.625 0.5 5.34518 0.5 5Z\" fill=\"#344054\" />\n                                                                </svg>\n                                                        }\n                                                    </Button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenVariationSection(!isOpenVariationSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Variation</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenVariationSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenVariationSection &&\n                                <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                    <div className='form-group mb-3 w-100'>\n                                        <label className={clsx(style.customLabel)}>Amount</label>\n                                        <div className={style.amountRow}>\n                                            <div className={style.amountInputBox}>\n                                                <span className={style.dollar}>$</span>\n                                                <InputNumber\n                                                    className={clsx(style.inputText)}\n                                                    value={amount}\n                                                    onChange={(e) => setAmount(parseFloat(e.value || 0))}\n                                                />\n                                                <span className={style.helpIcon}>\n                                                    <QuestionCircle size={16} color='#98A2B3' />\n                                                </span>\n                                            </div>\n                                            <div className={style.buttonGroup}>\n                                                <button className='info-button p-0' style={{ width: '44px', height: '44px' }} onClick={increment}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 0.5C8.34518 0.5 8.625 0.779822 8.625 1.125V7.375H14.875C15.2202 7.375 15.5 7.65482 15.5 8C15.5 8.34518 15.2202 8.625 14.875 8.625H8.625V14.875C8.625 15.2202 8.34518 15.5 8 15.5C7.65482 15.5 7.375 15.2202 7.375 14.875V8.625H1.125C0.779822 8.625 0.5 8.34518 0.5 8C0.5 7.65482 0.779822 7.375 1.125 7.375H7.375V1.125C7.375 0.779822 7.65482 0.5 8 0.5Z\" fill=\"#158ECC\" />\n                                                    </svg>\n                                                </button>\n                                                <button className='outline-button p-0' style={{ width: '44px', height: '44px' }} onClick={decrement}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"2\" viewBox=\"0 0 10 2\" fill=\"none\">\n                                                        <path d=\"M0 1C0 0.447715 0.447715 0 1 0H9C9.55229 0 10 0.447715 10 1C10 1.55228 9.55229 2 9 2H1C0.447715 2 0 1.55228 0 1Z\" fill=\"#B42318\" />\n                                                    </svg>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className='form-group mb-3 w-100'>\n                                        <label className={clsx(style.customLabel)}>Reason</label>\n                                        <InputTextarea\n                                            className={clsx('w-100', style.InputTextarea)}\n                                            rows={4}\n                                            placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                        />\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenJobTrackingSection(!isOpenJobTrackingSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Tracking</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenJobTrackingSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenJobTrackingSection &&\n                                <Card.Header className={clsx(style.background, 'border-0 p-0', style.borderBottom)}>\n                                    {mapEmbedUrl ? (\n                                        <>\n                                            <iframe\n                                                width=\"100%\"\n                                                height=\"300\"\n                                                frameBorder=\"0\"\n                                                style={{ border: 0 }}\n                                                src={mapEmbedUrl}\n                                                allowFullScreen\n                                            ></iframe>\n                                        </>\n                                    ) : (\n                                        <p className={clsx(style.text)}>Location map unavailable: No coordinates provided.</p>\n                                    )}\n                                </Card.Header>\n                            }\n                        </Card>\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='danger-outline-button'>Decline</Button>\n                        <Button type='button' onClick={() => { }} className='info-button' style={{ minWidth: '75px' }}>Approve</Button>\n                        <Button type='button' onClick={() => { }} className='solid-button' style={{ minWidth: '75px' }}>Approve & See Next  {false && <ProgressSpinner\n                            style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                        />}</Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default ApproveJob;","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link45deg, Person, Repeat } from 'react-bootstrap-icons';\nimport { useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Chip } from 'primereact/chip';\nimport { Column } from 'primereact/column';\nimport { ColumnGroup } from 'primereact/columngroup';\nimport { DataTable } from 'primereact/datatable';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Row } from 'primereact/row';\nimport { Tag } from 'primereact/tag';\nimport { toast } from 'sonner';\nimport style from './approval.module.scss';\nimport WeekNavigator from './week-navigator';\nimport { getJobsToApprove, getApproveNotInvoice } from '../../../../APIs/approval-api';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { FallbackImage } from '../../../../ui/image-with-fallback/image-avatar';\nimport ApproveJob from '../../features/approve-job/approve-job';\n\nconst ApprovalTable = React.memo(() => {\n    const { trialHeight } = useTrialHeight();\n    const [selectedApprovals, setSelectedApprovals] = useState(null);\n    const [selectedInvoiceApprovals, setSelectedInvoiceApprovals] = useState(null);\n    const [weekData, setSelectedPeriod] = useState({\n        week: null,\n        year: null,\n        startDate: null,\n        endDate: null\n    });\n\n    const [isApproveJobVisible, setIsApproveJobVisible] = useState(false);\n    const [selectedJobId, setSelectedJobId] = useState(null);\n\n    const handleWeekChange = useCallback((periodData) => {\n        setSelectedPeriod(periodData);\n    }, []);\n\n    const {\n        data: approveData = [],\n        isLoading: isLoadingApprove,\n        error: approveError\n    } = useQuery({\n        queryKey: ['jobsToApprove'],\n        queryFn: getJobsToApprove,\n        refetchOnWindowFocus: false,\n        onError: (error) => {\n            toast.error('Failed to load jobs to approve');\n            console.error('Error loading jobs to approve:', error);\n        }\n    });\n\n    const fetchInvoiceData = React.useCallback(() => {\n        if (!weekData?.week || !weekData?.year) {\n            return Promise.resolve([]);\n        }\n        return getApproveNotInvoice(weekData.year, weekData.week);\n    }, [weekData?.week, weekData?.year]);\n\n    const {\n        data: invoiceData = [],\n        isLoading: isLoadingInvoice,\n        error: invoiceError\n    } = useQuery({\n        queryKey: ['jobsToInvoice', weekData?.week, weekData?.year],\n        queryFn: fetchInvoiceData,\n        enabled: !!weekData?.week && !!weekData?.year,\n        refetchOnWindowFocus: false,\n        onError: (error) => {\n            toast.error('Failed to load approved jobs for invoicing');\n            console.error('Error loading jobs to invoice:', error);\n        }\n    });\n\n    const paymentBody = (rowData) => {\n        const paymentType = rowData.time_type === \"1\" ? \"Hours\" : \"Fix\";\n        return (\n            <div className='d-flex justify-content-center align-items-center' style={{ gap: '10px' }}>\n                <div className={`${style.payment} ${paymentType === 'Hours' ? style.paymentHours : style.paymentFix}`}>\n                    {paymentType}\n                </div>\n                <Repeat color='#158ECC' />\n            </div>\n        );\n    };\n\n    const timeBody = (rowData) => {\n        const timeType = rowData.type === \"2\" ? \"TimeFrame\" : \"TimeTracker\";\n        return (\n            <div className={`d-flex align-items-center show-on-hover`}>\n                <div className={`${style.time} ${timeType === 'TimeFrame' ? style.frame : style.tracker}`}>\n                    {timeType}\n                </div>\n            </div>\n        );\n    };\n\n    const clientHeader = () => {\n        return <div className='d-flex align-items-center'>\n            Client\n            <small>A→Z</small>\n        </div>;\n    };\n\n    const clientBody = (rowData) => {\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientImg}`}>\n                <FallbackImage\n                    has_photo={rowData.client?.has_photo}\n                    photo={rowData.client?.photo}\n                    is_business={true}\n                    size={16}\n                />\n            </div>\n            {rowData.client?.name || 'N/A'}\n        </div>;\n    };\n\n    const nameBody = (rowData) => {\n        const fullName = `${rowData.worker?.first_name || ''} ${rowData.worker?.last_name || ''}`.trim();\n        const initials = fullName ? fullName.split(' ').map(word => word[0]).join('') : 'N/A';\n\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientName}`}>\n                {rowData.worker?.has_photo ? (\n                    <FallbackImage\n                        has_photo={rowData.worker?.has_photo}\n                        photo={rowData.worker?.photo}\n                        is_business={false}\n                        size={16}\n                    />\n                ) : initials}\n            </div>\n            {fullName || 'N/A'}\n        </div>;\n    };\n\n    const actionBody = (rowData) => {\n        return (\n            <div className='d-flex justify-content-center gap-2'>\n                <Chip\n                    className={`status ${style.finishedAction} cursor-pointer`}\n                    label=\"Approve\"\n                    onClick={() => handleApprove(rowData.id)}\n                />\n            </div>\n        );\n    };\n\n    const statusBody = () => {\n        return <Chip className={`status ${style.approved}`} label=\"Approved\" />;\n    };\n\n    const handleApprove = React.useCallback((id) => {\n        setSelectedJobId(id);\n        setIsApproveJobVisible(true);\n    }, []);\n\n\n    const formatDate = React.useCallback((dateString) => {\n        if (!dateString) return 'N/A';\n\n        try {\n            const date = new Date(dateString);\n            const day = String(date.getDate()).padStart(2, '0');\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n\n            const year = date.getFullYear();\n            return `${day} ${month} ${year}`;\n        } catch (error) {\n            console.error('Error formatting date:', error);\n            return dateString || 'N/A';\n        }\n    }, []);\n\n    const linkToBody = (rowData) => {\n        return rowData.project ? (\n            <div className='d-flex align-items-center' style={{ gap: '10px' }}>\n                {rowData.project.number}\n                <Link45deg color='#3366CC' />\n            </div>\n        ) : 'N/A';\n    };\n\n    const totalBody = (rowData) => {\n        return <Tag value={rowData.total} style={{ border: \"2px solid var(--Orange-200, #FFE0BC)\", background: '#FFF7EE', color: '#FFB258', fontSize: '12px', fontWeight: 500 }} rounded></Tag>;\n    };\n\n    const thisWeekTotalBody = (rowData) => {\n        return <span style={{ fontWeight: 'bold' }}>{rowData.total}</span>;\n    };\n\n    const header = (\n        <div className=\"d-flex align-items-center justify-content-end gap-2\" style={{ position: 'relative' }}>\n            <p style={{ color: '#344054', fontWeight: 400 }} className='m-0 font-14'>Review & Approve</p>\n            {isLoadingApprove && <ProgressSpinner style={{ width: '20px', height: '20px', marginLeft: '8px', position: 'absolute', right: '-40px' }} />}\n        </div>\n    );\n\n    const header2 = (\n        <div className=\"d-flex align-items-center justify-content-between gap-2\" style={{ position: 'relative' }}>\n            <p style={{ color: '#344054', fontWeight: 500 }} className='m-0 font-14'>\n                {weekData?.week && weekData?.year\n                    ? `Week ${weekData.week}, ${weekData.year} - Approved Jobs (Not Invoiced)`\n                    : 'Approved Jobs - Not Invoiced'}\n            </p>\n            {isLoadingInvoice && <ProgressSpinner style={{ width: '20px', height: '20px', marginRight: '8px', position: 'absolute', right: '-40px' }} />}\n        </div>\n    );\n\n    const approveTotal = React.useMemo(() => {\n        if (!approveData || approveData.length === 0) return 0;\n        return approveData.reduce((sum, job) => sum + parseFloat(job.total || 0), 0);\n    }, [approveData]);\n\n    const invoiceTotal = React.useMemo(() => {\n        if (!invoiceData || invoiceData.length === 0) return 0;\n        return invoiceData.reduce((sum, job) => sum + parseFloat(job.total || 0), 0);\n    }, [invoiceData]);\n\n    const approveFooterGroup = React.useMemo(() => {\n        const formattedTotal = approveTotal.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        });\n\n        return (\n            <ColumnGroup>\n                <Row className='w-100'>\n                    <Column colSpan={12} />\n                    <Column\n                        footer={`Total= $${formattedTotal}`}\n                        footerStyle={{ position: 'sticky', right: 0 }}\n                    />\n                </Row>\n            </ColumnGroup>\n        );\n    }, [approveTotal]);\n\n    const invoiceFooterGroup = React.useMemo(() => {\n        const formattedTotal = invoiceTotal.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        });\n\n        return (\n            <ColumnGroup>\n                <Row className='w-100'>\n                    <Column colSpan={12} />\n                    <Column\n                        footer={`Total= $${formattedTotal}`}\n                        footerStyle={{ position: 'sticky', right: 0 }}\n                    />\n                </Row>\n            </ColumnGroup>\n        );\n    }, [invoiceTotal]);\n\n    useEffect(() => {\n        if (approveError) {\n            toast.error(`Error loading jobs to approve: ${approveError.message || 'Please try again later'}`);\n        }\n        if (invoiceError) {\n            toast.error(`Error loading jobs to invoice: ${invoiceError.message || 'Please try again later'}`);\n        }\n    }, [approveError, invoiceError]);\n\n    return (\n        <>\n            {/* Jobs to Approve DataTable */}\n            <DataTable\n                value={approveData}\n                header={header}\n                footerColumnGroup={approveFooterGroup}\n                scrollable\n                selectionMode={'checkbox'}\n                removableSort\n                columnResizeMode=\"expand\"\n                resizableColumns\n                showGridlines\n                size={'large'}\n                scrollHeight=\"calc(50vh - 150px)\"\n                className=\"border-0\"\n                selection={selectedApprovals}\n                onSelectionChange={(e) => setSelectedApprovals(e.value)}\n                emptyMessage=\"No jobs to approve\"\n                loading={isLoadingApprove}\n                loadingIcon={<></>}\n            >\n                <Column selectionMode=\"multiple\" bodyClassName={'show-on-hover'} headerStyle={{ width: '3rem' }} frozen></Column>\n                <Column field=\"number\" header=\"Job ID\" style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"time_type\" header=\"Payment Type\" body={paymentBody} style={{ minWidth: '130px' }} frozen sortable></Column>\n                <Column field=\"type\" header=\"Time\" body={timeBody} style={{ minWidth: '118px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column\n                    field=\"submitted\"\n                    header=\"Submitted\"\n                    style={{ minWidth: '122px' }}\n                    sortable\n                    body={(rowData) => formatDate(rowData.submitted)}\n                ></Column>\n                <Column field=\"short_description\" header=\"Job Reference\" style={{ minWidth: '270px' }}></Column>\n                <Column field=\"client.name\" header={clientHeader} body={clientBody} style={{ minWidth: '162px' }}></Column>\n                <Column field=\"project.number\" header=\"Linked To Project\" body={linkToBody} style={{ minWidth: '105px' }}></Column>\n                <Column field=\"worker.first_name\" header=\"Worker\" body={nameBody} style={{ minWidth: '205px' }}></Column>\n                <Column field=\"spent_time\" header=\"Spent Time\" style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"real_total\" header=\"Real Total\" body={thisWeekTotalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"total\" header=\"Total\" body={totalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"id\" header=\"Actions\" body={actionBody} style={{ minWidth: '120px' }} bodyClassName={`${style.shadowLeft}`} headerClassName={clsx(`${style.shadowLeft}`, 'd-flex justify-content-center')} frozen alignFrozen=\"right\"></Column>\n            </DataTable>\n\n            <div className=\"topbar d-flex justify-content-center text-center w-100\" style={{ padding: '4px 0px', position: 'relative', height: '48px', borderTop: '1px solid #dedede', borderBottom: '0px solid #dedede', background: '#F9FAFB' }}>\n                <WeekNavigator onWeekChange={handleWeekChange} />\n            </div>\n\n            {/* Jobs to Invoice DataTable */}\n            <DataTable\n                value={invoiceData || []}\n                header={header2}\n                footerColumnGroup={invoiceFooterGroup}\n                scrollable\n                selectionMode={'checkbox'}\n                removableSort\n                columnResizeMode=\"expand\"\n                resizableColumns\n                showGridlines\n                size={'large'}\n                scrollHeight={`calc(50vh - 150px - ${trialHeight}px)`}\n                className=\"border-0\"\n                selection={selectedInvoiceApprovals}\n                onSelectionChange={(e) => setSelectedInvoiceApprovals(e.value)}\n                emptyMessage=\"No approved jobs waiting to be invoiced\"\n                loading={isLoadingInvoice}\n                loadingIcon={<></>}\n            >\n                <Column selectionMode=\"multiple\" bodyClassName={'show-on-hover'} headerStyle={{ width: '3rem' }} frozen></Column>\n                <Column field=\"number\" header=\"Job ID\" style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"time_type\" header=\"Payment Type\" body={paymentBody} style={{ minWidth: '130px' }} frozen sortable></Column>\n                <Column field=\"type\" header=\"Time\" body={timeBody} style={{ minWidth: '118px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column\n                    field=\"submitted\"\n                    header=\"Submitted\"\n                    style={{ minWidth: '122px' }}\n                    sortable\n                    body={(rowData) => formatDate(rowData.submitted)}\n                ></Column>\n                <Column field=\"short_description\" header=\"Job Reference\" style={{ minWidth: '270px' }}></Column>\n                <Column field=\"client.name\" header={clientHeader} body={clientBody} style={{ minWidth: '162px' }}></Column>\n                <Column field=\"project.number\" header=\"Linked To Project\" body={linkToBody} style={{ minWidth: '105px' }}></Column>\n                <Column field=\"worker.first_name\" header=\"Worker\" body={nameBody} style={{ minWidth: '205px' }}></Column>\n                <Column field=\"spent_time\" header=\"Spent Time\" style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"real_total\" header=\"Real Total\" body={thisWeekTotalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"total\" header=\"Total\" body={totalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"id\" header=\"Status\" body={statusBody} style={{ minWidth: '120px' }} bodyClassName={clsx(`${style.shadowLeft}`, 'text-center')} headerClassName={clsx(`${style.shadowLeft}`, 'd-flex justify-content-center')} frozen alignFrozen=\"right\"></Column>\n            </DataTable>\n\n            <ApproveJob visible={isApproveJobVisible} setVisible={setIsApproveJobVisible} jobId={selectedJobId} />\n        </>\n    );\n});\n\nexport default ApprovalTable;","import React from 'react';\nimport { Filter } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport ApprovalTable from './approval-table';\nimport style from './approval.module.scss';\n\nconst ApprovalPage = () => {\n    const handleSearch = () => { };\n\n    return (\n        <div className='approval-page'>\n            <Helmet>\n                <title>MeMate - Approval</title>\n            </Helmet>\n            <div className=\"topbar\" style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    <div className='filtered-box'>\n                        <button className={`${style.filterBox}`}><Filter size={20} /></button>\n                    </div>\n                    <div className=\"searchBox\" style={{ position: 'relative' }}>\n                        <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                            </svg>\n                        </div>\n                        <input type=\"text\" placeholder=\"Search\" onChange={handleSearch} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                    </div>\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0 mt-1\">Approval</h1>\n                </div>\n\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    <h1 className={`${style.total} mb-0`}>Total</h1>\n                    <div className={`${style.totalCount}`}>30 Jobs</div>\n                </div>\n            </div>\n\n            <ApprovalTable />\n        </div>\n    );\n};\n\nexport default ApprovalPage;","// extracted by mini-css-extract-plugin\nexport default {\"clientImg\":\"image-avatar_clientImg__-nnRU\"};","import React, { useState } from 'react';\nimport { Building, Person } from 'react-bootstrap-icons';\nimport style from './image-avatar.module.scss';\n\nconst ImageAvatar = ({ has_photo, photo, is_business }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return (\n        <div className={`d-flex justify-content-center align-items-center ${style.clientImg} ${is_business ? \"\" : \"rounded-circle\"}`} style={{ overflow: 'hidden' }}>\n            {has_photo && photo && !imgError ? (\n                <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n            ) : (\n                <Icon color=\"#667085\" />\n            )}\n        </div>\n    );\n};\n\nexport const FallbackImage = ({ has_photo, photo, is_business, size }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return <>\n        {has_photo && photo && !imgError ? (\n            <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n        ) : (\n            <Icon color=\"#667085\" size={size}/>\n        )}\n    </>;\n};\n\nexport default ImageAvatar;\n"],"names":["_ref","onWeekChange","currentWeek","setCurrentWeek","useState","currentYear","setCurrentYear","Date","getFullYear","weekInfo","setWeekInfo","start","end","currentYearNum","years","Array","from","length","_","i","getWeekNumber","date","firstDayOfYear","pastDaysOfYear","Math","ceil","getDay","getWeekDates","weekNumber","year","daysOffset","formatDate","toLocaleDateString","day","month","useEffect","today","weekNum","updateWeekDates","week","startDate","endDate","isNextButtonDisabled","currentDate","currentWeekNum","_jsxs","className","style","gap","position","children","Dropdown","right","Toggle","as","Button","clsx","button","_jsx","Calendar3","size","color","Menu","map","Item","onClick","selectedYear","parseInt","handleYearSelect","active","background","cursor","opacity","goToPreviousWeek","xmlns","width","height","viewBox","fill","fillRule","clipRule","d","goToNextWeek","disabled","API_BASE_URL","process","getJobsToApprove","async","url","URL","fetchAPI","toString","method","_job$locations","jobId","visible","setVisible","isOpenJobDetailsSection","setIsOpenJobDetailsSection","isOpenPlannedVsActualSection","setIsOpenPlannedVsActualSection","isOpenVariationSection","setIsOpenVariationSection","isOpenJobTrackingSection","setIsOpenJobTrackingSection","selectedColumn","setSelectedColumn","amount","setAmount","currentClient","setCurrentClient","increment","prev","decrement","max","jobQuery","useQuery","queryKey","queryFn","getApprovedJob","enabled","retry","job","data","console","log","mobileUserQuery","getTeamMobileUser","_mobileUserQuery$data","users","_mobileUserQuery$data2","_mobileUserQuery$data3","_job$worker2","_mobileUserQuery$data4","findClient","find","user","_job$worker","id","worker","formatTime","timestamp","toLocaleTimeString","hour","minute","calculateActualHours","finish","hours","totalMinutes","floor","round","padStart","formatHours","plannedHours","plannedRate","parseFloat","hourly_rate","plannedSubtotal","split","actualSubtotal","spent_time","toFixed","plannedTotal","actualTotal","mapEmbedUrl","locations","longitude","latitude","handlePlannedRowClick","handleActualRowClick","Sidebar","onHide","modal","dismissable","content","_ref2","_job$client","_job$location","closeIconRef","hide","borderBottom","padding","heading","number","type","ref","e","X","overflow","Card","border","Body","cardBody","fontWeight","Header","jobDetailHeading","customLabel","text","short_description","long_description","Row","Col","sm","client","name","location","start_date","end_date","plannedTable","fixRateBox","shiftBox","active1","nonActive","Checkbox","checked","onChange","clockIcon","ClockHistory","whiteTr","colSpan","active3","borderRightNone","moneyBox","active2","lastRow","activeOutlineButton","amountRow","amountInputBox","dollar","InputNumber","inputText","value","helpIcon","QuestionCircle","buttonGroup","InputTextarea","rows","placeholder","_Fragment","frameBorder","src","allowFullScreen","borderTop","stopPropagation","minWidth","React","trialHeight","useTrialHeight","selectedApprovals","setSelectedApprovals","selectedInvoiceApprovals","setSelectedInvoiceApprovals","weekData","setSelectedPeriod","isApproveJobVisible","setIsApproveJobVisible","selectedJobId","setSelectedJobId","handleWeekChange","useCallback","periodData","approveData","isLoading","isLoadingApprove","error","approveError","refetchOnWindowFocus","onError","toast","fetchInvoiceData","getApproveNotInvoice","Promise","resolve","invoiceData","isLoadingInvoice","invoiceError","paymentBody","rowData","paymentType","time_type","payment","paymentHours","paymentFix","Repeat","timeBody","timeType","time","frame","tracker","clientHeader","clientBody","_rowData$client","_rowData$client2","_rowData$client3","clientImg","FallbackImage","has_photo","photo","is_business","nameBody","_rowData$worker","_rowData$worker2","_rowData$worker3","_rowData$worker4","_rowData$worker5","fullName","first_name","last_name","trim","initials","word","join","clientName","handleApprove","dateString","String","getDate","getMonth","linkToBody","project","Link45deg","totalBody","Tag","total","fontSize","rounded","thisWeekTotalBody","header","ProgressSpinner","marginLeft","header2","marginRight","approveTotal","reduce","sum","invoiceTotal","approveFooterGroup","formattedTotal","toLocaleString","minimumFractionDigits","maximumFractionDigits","ColumnGroup","Column","footer","footerStyle","invoiceFooterGroup","message","DataTable","footerColumnGroup","scrollable","selectionMode","removableSort","columnResizeMode","resizableColumns","showGridlines","scrollHeight","selection","onSelectionChange","emptyMessage","loading","loadingIcon","bodyClassName","headerStyle","frozen","field","sortable","body","shadowRight","headerClassName","submitted","Chip","finishedAction","label","shadowLeft","alignFrozen","WeekNavigator","statusBody","approved","ApproveJob","ApprovalPage","Helmet","filterBox","Filter","top","left","handleSearch","borderRadius","paddingLeft","transform","totalCount","ApprovalTable","imgError","setImgError","Icon","Building","Person","alt"],"sourceRoot":""}