{"version":3,"file":"static/js/6236.80e3f888.chunk.js","mappings":"gIA0CA,MACA,EAAe,IAA0B,iE,gLC1CzC,MAAMA,EAAeC,mCAERC,EAAkBC,UAC7B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,qBACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7BC,EAAiBN,UAC5B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,mBAAmBU,QAKpC,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7BG,EAAoBR,UAC/B,MACMS,EAAU,CACdJ,OAAQ,OACRK,KAAMC,GAEFV,EAAM,IAAIC,IAAI,GAAGL,qBACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAAYK,EAAQ,EAG7BG,EAAoBZ,MAAOO,EAAII,KAC1C,MACMF,EAAU,CACdJ,OAAQ,MACRK,KAAMC,GAEFV,EAAM,IAAIC,IAAI,GAAGL,IALN,mBAAmBU,QAMpC,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAAYK,EAAQ,EAG7BI,EAAoBb,UAC/B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,mBAAmBU,QAKpC,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,UAG8B,EAG7BS,EAAoBd,UAC/B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,yCACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7BU,EAAsBf,UACjC,MACMS,EAAU,CACdJ,OAAQ,OACRK,KAAMC,GAEFV,EAAM,IAAIC,IAAI,GAAGL,yCACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAAYK,EAAQ,EAG7BO,EAAsBhB,MAAOO,EAAII,KAC5C,MACMF,EAAU,CACdJ,OAAQ,MACRK,KAAMC,GAEFV,EAAM,IAAIC,IAAI,GAAGL,IALN,uCAAuCU,QAMxD,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAAYK,EAAQ,EAG7BQ,EAAWjB,UACtB,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,uCAAuCU,QAKxD,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7Ba,EAAuBlB,UAClC,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,cAAcU,QAK/B,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bc,EAAmBnB,UAC9B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,gCACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7Be,EAAuBpB,UAClC,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,uCAAuCU,QAKxD,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,UAG8B,EAG7BgB,EAAwBrB,UACnC,MAIMC,EAAM,IAAIC,IAAI,GAAGL,yBACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAG7BiB,EAAuBtB,UAClC,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,uBAAuBU,QAKxC,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,OAG8B,EAa7BkB,EAA0BvB,UACrC,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,8BAA8BU,QAK/C,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACdC,OAAQ,UAG8B,C,gJCrJ1C,MAAMR,EAAeC,mCAQfK,EAAWH,eAAOwB,GAA4B,IAAlBf,EAAOgB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzC,MAAM,OAAEpB,EAAS,MAAK,QAAEuB,EAAU,CAAC,EAAC,KAAElB,GAASD,EASzCoB,EAAiB,CACnBxB,SACAuB,QARmB,CACnB,cAAiB,UAHDE,aAAaC,QAAQ,kBAIrC,eAAgB,sBACbH,GAMHlB,KAAMsB,KAAKC,UAAUvB,GACrBwB,SAAU,UAGd,IACI,MAAMjC,EAAM,IAAIC,IAAI,GAAGsB,KACjBW,QAAiBC,MAAMnC,EAAK4B,GAClC,IAAKM,EAASE,GACV,MAAM,IAAIC,MAAM,uBAAuBH,EAASI,UAGpD,MAAMC,EAAcL,EAASP,QAAQa,IAAI,gBACzC,GAAID,GAAeA,EAAYE,SAAS,oBACpC,aAAaP,EAASQ,OAItB,MAAO,CAAEC,QAAS,oBAAqBlC,WADpByB,EAASU,OAIpC,CAAE,MAAOC,GAEL,MADAC,QAAQD,MAAM,mBAAoBA,GAC5BA,CACV,CACJ,EAGaE,EAA4BhD,MAAOO,EAAII,KAChD,MACMF,EAAU,CACZJ,OAAQ,MACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IALN,0BAA0BU,QAM3C,OAAOJ,EAASF,EAAIG,WAAYK,EAAQ,EAG/BwC,EAA0BjD,MAAOO,EAAII,KAC9C,MACMF,EAAU,CACZJ,OAAQ,MACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IALN,+BAA+BU,QAMhD,OAAOJ,EAASF,EAAIG,WAAYK,EAAQ,EAG/ByC,EAA6BlD,MAAOO,EAAII,KACjD,MACMF,EAAU,CACZJ,OAAQ,MACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IALN,2BAA2BU,QAM5C,OAAOJ,EAASF,EAAIG,WAAYK,EAAQ,EAG/B0C,EAAwBnD,MAAOO,EAAII,KAC5C,MACMF,EAAU,CACZJ,OAAQ,OACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IALN,sBAAsBU,QAMvC,OAAOJ,EAASF,EAAIG,WAAYK,EAAQ,EAG/B2C,EAAwBpD,UACjC,MACMS,EAAU,CACZJ,OAAQ,MACRK,KAAM,CAAE2C,UAAW9C,IAEjBN,EAAM,IAAIC,IAAI,GAAGL,oBACvB,OAAOM,EAASF,EAAIG,WAAYK,EAAQ,EAG/B6C,EAAuBtD,UAChC,MACMS,EAAU,CACZJ,OAAQ,MACRK,KAAM,CAAE2C,UAAW9C,IAEjBN,EAAM,IAAIC,IAAI,GAAGL,uBACvB,OAAOM,EAASF,EAAIG,WAAYK,EAAQ,EAG/B8C,EAAmBvD,UAC5B,MACMS,EAAU,CACZJ,OAAQ,MACRK,KAAM,CAAE2C,UAAW9C,IAEjBN,EAAM,IAAIC,IAAI,GAAGL,wBACvB,OAAOM,EAASF,EAAIG,WAAYK,EAAQ,EAG/B+C,EAAoBxD,UAC7B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,IAJN,oBAAoBU,QAKrC,OAAOJ,EAASF,EAAIG,WAJJ,CACZC,OAAQ,QAG4B,EAG/BoD,EAA2BzD,MAAOO,EAAII,KAC/C,MACMF,EAAU,CACZJ,OAAQ,OACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IALN,kBAAkBU,QAMnC,OAAOJ,EAASF,EAAIG,WAAYK,EAAQ,EAG/BiD,EAAmB1D,MAAOO,EAAIoD,EAAQhD,KAC/C,IAAIa,EACQA,EAARmC,EAAmB,iBAAiBpD,KAAMoD,KAC9B,iBAAiBpD,KAEjC,MAAME,EAAU,CACZJ,OAAQ,OACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IAAe2B,KACtC,OAAOrB,EAASF,EAAIG,WAAYK,EAAQ,EAG/BmD,EAAU5D,MAAOO,EAAII,KAE9B,MAAMF,EAAU,CACZJ,OAAQ,OACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,IALR,QAAQU,QAMvB,OAAOJ,EAASF,EAAIG,WAAYK,EAAQ,EAG/BoD,EAAgB7D,UACzB,MAAM8D,EAAY,IAAIC,QAChBC,EAAclC,aAAaC,QAAQ,gBACzC+B,EAAUG,OAAO,gBAAiB,UAAUD,KAC5CF,EAAUG,OAAO,eAAgB,oBAEjC,MAAMpC,EAAiB,CACnBxB,OAAQ,MACRuB,QAASkC,EACT5B,SAAU,UAGd,IACI,MAAMC,QAAiBC,MAAM,GAAGvC,gBAA4BgC,GAE5D,aADqBM,EAASQ,MAElC,CAAE,MAAOG,GAEL,MADAC,QAAQD,MAAMA,GACRA,CACV,GAKSoB,EAAiBlE,UAC1B,MAAM8D,EAAY,IAAIC,QAChBC,EAAclC,aAAaC,QAAQ,gBACzC+B,EAAUG,OAAO,gBAAiB,UAAUD,KAC5CF,EAAUG,OAAO,eAAgB,oBAEjC,MAAMpC,EAAiB,CACnBxB,OAAQ,MACRuB,QAASkC,EACT5B,SAAU,UAGd,IACI,MAAMC,QAAiBC,MAAM,GAAGvC,kBAA6BsE,KAAatC,GAE1E,aADqBM,EAASQ,MAElC,CAAE,MAAOG,GAEL,MADAC,QAAQD,MAAMA,GACRA,CACV,E,0DC1MJ,MAAMjD,EAAeC,mCAERsE,EAAoBpE,UAC7B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,wBACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACZC,OAAQ,OAG4B,EAG/BgE,EAAqBrE,UAC9B,MAIMC,EAAM,IAAIC,IAAI,GAAGL,0BACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACZC,OAAQ,OAG4B,C,gECjB5C,SAAgB,OAAS,qBAAqB,cAAgB,4BAA4B,UAAY,wBAAwB,UAAY,wBAAwB,MAAQ,oBAAoB,WAAa,yBAAyB,YAAc,0BAA0B,QAAU,sBAAsB,aAAe,2BAA2B,WAAa,yBAAyB,KAAO,mBAAmB,QAAU,sBAAsB,UAAY,wBAAwB,WAAa,yBAAyB,WAAa,yBAAyB,cAAgB,4BAA4B,OAAS,qBAAqB,KAAO,mBAAmB,SAAW,uBAAuB,UAAY,wBAAwB,OAAS,qBAAqB,aAAe,2BAA2B,UAAY,wBAAwB,SAAW,uBAAuB,iBAAmB,+BAA+B,SAAW,uBAAuB,OAAS,sB,uICA37B,SAAgB,MAAQ,0BAA0B,YAAc,gCAAgC,YAAc,gCAAgC,UAAY,8BAA8B,SAAW,6BAA6B,aAAe,kC,yBCMhO,SAASiE,EAAeC,GAA2B,IAA1B,QAAEC,EAAO,WAAEC,GAAYF,EAE3D,MAAMG,GACFC,EAAAA,EAAAA,MAAA,OAAKC,UAAW,GAAGC,EAAMC,cAAcC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAAA,EAAaC,IAAI,eAAeN,MAAO,CAAEO,MAAO,OAAQC,OAAQ,WAC1EL,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,sBAAsBC,EAAMS,cAAcP,SAAC,4CAI9DQ,GACFZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDG,SAAA,EAC9DC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,aAAab,UAAU,gBAAgBc,QAASA,IAAMjB,GAAW,GAAQkB,WAAS,KAChGX,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,SAASb,UAAU,iBAAiBc,QAASA,IAAMjB,GAAW,GAAQkB,WAAS,OAGrG,OACIX,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACpB,QAASA,EAASqB,OAAK,EAACC,OAAQpB,EAAeqB,OAAQR,EAAeX,UAAW,GAAGC,EAAMgB,qBAAsBG,OAAQA,KAAaxB,GAAiBC,GAAW,EAAM,EAAIM,UAC/KJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEG,SAAA,EACbJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDG,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEoB,SAAU,OAAQC,MAAO,UAAWC,WAAY,IAAKC,aAAc,QAASrB,SAAC,iBAC1FC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,WAAYnB,SAAC,2BAE7DC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,WAAYnB,SAAC,mBACzDC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEoB,SAAU,OAAQC,MAAO,UAAWC,WAAY,IAAKC,aAAc,QAASrB,SAAC,qFAK1G,C,eC3Be,SAASsB,EAAU9B,GAAsC,IAArC,QAAEC,EAAO,WAAEC,EAAU,WAAE4B,GAAW9B,EACjE,MAAO+B,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,GAE3C9B,GACFC,EAAAA,EAAAA,MAAA,OAAKC,UAAW,GAAGC,EAAMC,cAAcC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAM4B,aAAa1B,UAACC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,KAAM,GAAIT,MAAM,eAC9DlB,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,sBAAsBC,EAAMS,cAAcP,SAAC,mBAI9DQ,GACFP,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,aAAab,UAAU,gBAAgBc,QAASA,IAAMa,GAAgB,GAAOZ,WAAS,MAG5G,OACIhB,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACIC,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACpB,QAASA,EAASqB,OAAO,EAAOC,OAAQpB,EAAeqB,OAAQR,EAAeX,UAAW,GAAGC,EAAMgB,qBAAsBG,OAAQA,KAAaxB,GAAiBC,GAAW,EAAM,EAAIM,UACvLJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEG,SAAA,EACbC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,WAAYnB,SAAC,YACzDC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,UAAUC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,IAAKC,aAAc,QAASrB,SAAC,gBAC5FC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,WAAYnB,SAAC,eACzDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,UAAUC,EAAMgC,YAAY9B,SAAA,EACxCC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMkC,WAAYtB,MAAO,YACpDT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMkC,WAAYtB,MAAO,eACpDT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMkC,WAAYtB,MAAO,iBAExDd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQG,SAAA,EACnBJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEO,MAAO,SAAUL,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,WAAYnB,SAAC,YACzDC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,oBAE9EJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEO,MAAO,SAAUL,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,WAAYnB,SAAC,UACzDC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAeC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,4BAK1FC,EAAAA,EAAAA,KAACV,EAAe,CAACE,QAAS8B,EAAc7B,WAAY8B,MAGhE,C,qCCjDA,MAAM1G,EAAeC,mC,gFCArB,QAAiE,yBAAjE,EAAqJ,6BAArJ,EAAgM,8BAAhM,EAAqO,uBAArO,EAA0Q,8BAA1Q,EAAwT,gCAAxT,EAAkW,0BAAlW,EAA0Y,8BAA1Y,EAA4gB,8BAA5gB,EAAgjB,sBAAhjB,EAA8kB,wBAA9kB,EAAonB,8BAApnB,EAA0pB,wBAA1pB,EAA8rB,4BAA9rB,EAAuuB,6BAAvuB,EAAkxB,8BAAlxB,EAA6zB,6BAA7zB,EAAs2B,4BAAt2B,EAA+4B,6BAA/4B,EAAs7B,0BAAt7B,GAA89B,8BAA99B,GAA4gC,gCAA5gC,GAAqlC,uBAArlC,GAAunC,2BAAvnC,GAA8pC,4BAA9pC,GAAmsC,yBAAnsC,GAA2uC,+BAA3uC,GAAsxC,4BAAtxC,GAA6zC,2BAA7zC,GAA22C,mCAA32C,GAA89C,wBAA99C,GAAogD,8BAApgD,GAAgjD,8BAAhjD,GAA8lD,gC,wCCM9lD,MAuCA,GAvCyByE,IAAqC,IAApC,KAAEyC,EAAI,QAAEC,EAAO,YAAEC,GAAa3C,EACpD,MAAMG,GACFM,EAAAA,EAAAA,KAAA,OAAKJ,UAAW,GAAGC,KAAoBE,UACnCC,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,sBAAsBC,KAAoBE,SAAC,gBAG9DQ,GACFP,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,gCAA+BG,UAC1CC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACZ,UAAU,iBAAiBc,QAASA,IAAMuB,GAAQ,GAAQpC,MAAO,CAAEsC,aAAc,QAASpC,SAAC,YAG3G,OACIC,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACpB,QAASwC,EAAMnB,OAAO,EAAOC,OAAQpB,EAAeqB,OAAQR,EAAeX,UAAW,GAAGC,kBAA4BmB,OAAQA,KAAagB,GAAcC,GAAQ,EAAM,EAAIlC,UAC9KC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,yBAAwBG,SAEpB,OAAXmC,QAAW,IAAXA,OAAW,EAAXA,EAAaE,KAAKC,IACd1C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAoBE,SAAA,EAChCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,yeAAyeD,KAAK,eAE1fxC,EAAAA,EAAAA,KAAC0C,GAAAA,GAAI,CAACC,GAAc,OAAVN,QAAU,IAAVA,OAAU,EAAVA,EAAYO,KAAMC,OAAO,SAAQ9C,UACvCC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,YAAWG,SAAY,OAAVsC,QAAU,IAAVA,OAAU,EAAVA,EAAYS,aAIjD9C,EAAAA,EAAAA,KAAA,UAAQJ,UAAU,uBAAsBG,UACpCC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,yYAAyYD,KAAK,wBAOza,EC3BXO,GAAcxF,IAChB,OAAQA,GACJ,IAAK,IACD,OAAOyC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAAsBY,MAAO,SACnE,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAAwBY,MAAO,WACrE,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAA8BY,MAAO,kBAC3E,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAA2BY,MAAO,cACxE,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAA2BY,MAAO,cACxE,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAAkCY,MAAO,aAC/E,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAA0BY,MAAO,aACvE,IAAK,IACD,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAA0BY,MAAO,aACvE,QACI,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,aAA+BY,MAAOlD,IAChF,EA2RJ,GAxRgBgC,IAAqC,IAApC,QAAEC,EAAO,WAAEC,EAAU,MAAEuD,GAAOzD,EAC3C,MAAOyC,EAAMC,IAAWT,EAAAA,EAAAA,WAAS,GACjC,IAAIyB,EAAkB,CAClB,EAAK,OACL,GAAM,YACN,GAAM,aACN,EAAK,SAET,MAAMC,GAAWC,EAAAA,EAAAA,GAAS,CACtBC,SAAU,CAAC,UAAWJ,GACtBK,QAASA,IHnBKrI,WAClB,MAIMC,EAAM,IAAIC,IAAI,GAAGL,UAJGU,MAK1B,OAAOJ,EAAAA,EAAAA,GAASF,EAAIG,WAJJ,CACZC,OAAQ,OAG4B,EGarBiI,CAAON,GACtBO,UAAWP,EACXQ,MAAO,IAELC,EAAc,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUvH,KAEtB,OACIgE,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACIC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAO,CAAClE,QAASA,EAASmE,SAAS,QAAQ3C,OAAQA,IAAMvB,GAAW,GAAQoB,OAAO,EAAO+C,aAAa,EAAO/D,MAAO,CAAEO,MAAO,SAC3HyD,QAASC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,aAAEC,EAAY,KAAEC,GAAMX,EAAA,OAC5BnE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCG,SAAA,EAC9CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAkEC,MAAO,CAAE6E,aAAc,oBAAqBC,QAAS,QAAS5E,SAAA,EAC3IJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAcE,UAC1BC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,4qBAA4qBD,KAAK,iBAGjsBxC,EAAAA,EAAAA,KAAA,QAAMJ,UAAWC,GAAkBE,SAAC,oBAExCC,EAAAA,EAAAA,KAAA,QAAAD,UACIC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACoE,KAAK,SAAShF,UAAU,cAAciF,IAAKL,EAAc9D,QAAUoE,GAAML,EAAKK,GAAG/E,UACrFC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAC,CAACpD,KAAM,GAAIT,MAAM,oBAM/BvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAaC,MAAO,CAAE8E,QAAS,OAAQtE,OAAQ,4BAA6B2E,SAAU,QAASjF,SAAA,EAC1GJ,EAAAA,EAAAA,MAAA,OAAKC,WAAWqF,EAAAA,GAAAA,GAAK,0DAA0DlF,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAcE,SAAC,iBAC9BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,CAC3CgD,GAAc,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKlG,SACjBoC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,UAASG,SAAA,CAAC,WAASiD,YAG3ChD,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,YAAYE,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,mBAC3CC,EAAAA,EAAAA,KAAA,KAAGJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAYE,UAAK,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAK2B,oBAAqB,UAE/DzF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,qBAC3CC,EAAAA,EAAAA,KAAA,KAAGJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAYA,GAAmBE,UAAK,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAK4B,mBAAoB,eAKzFrF,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAe,QAAQE,SAAC,iBAC5CC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,iBAAiBE,UAC5DJ,EAAAA,EAAAA,MAAC2F,EAAAA,EAAG,CAAC1F,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAqB,cAAe,QAAQE,SAAA,EAC7DC,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,MAAKG,UACvBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,0DAA0DC,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQ8B,aAAc,MAAO6C,SAAU,UAAWjF,SACnJ,OAAH0D,QAAG,IAAHA,GAAW,QAARM,EAAHN,EAAKgC,cAAM,IAAA1B,GAAXA,EAAa2B,WAAY1F,EAAAA,EAAAA,KAAA,OAAKC,IAAQ,OAAHwD,QAAG,IAAHA,GAAW,QAARO,EAAHP,EAAKgC,cAAM,IAAAzB,OAAR,EAAHA,EAAa2B,MAAO9F,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQ8B,aAAc,UACxGnC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,UAASG,SAAK,OAAH0D,QAAG,IAAHA,GAAW,QAARQ,EAAHR,EAAKgC,cAAM,IAAAxB,OAAR,EAAHA,EAAa2B,aAItDjG,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,YAAWG,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAmB,eAAeE,UAAK,OAAH0D,QAAG,IAAHA,GAAW,QAARS,EAAHT,EAAKgC,cAAM,IAAAvB,OAAR,EAAHA,EAAa2B,YAAa,OACrF7F,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEiG,WAAY,UAAWC,OAAQ,oBAAqB5D,aAAc,OAAQ6D,UAAW,UAAWjG,SAAC,iBAEnHJ,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,GAAEG,SAAA,EACpBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQyF,WAAY,UAAWC,OAAQ,oBAAqB5D,aAAc,OAAQ6D,UAAW,SAAUC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWpG,SAAC,OAC/MJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EAAU,OAAH0D,QAAG,IAAHA,GAAW,QAARU,EAAHV,EAAKgC,cAAM,IAAAtB,OAAR,EAAHA,EAAaiC,cAAe,IAAI,cAE3CzG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQyF,WAAY,UAAWC,OAAQ,oBAAqB5D,aAAc,OAAQ6D,UAAW,SAAUC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWpG,UAACC,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAACnF,MAAM,UAAUS,KAAM,QAChP3B,EAAAA,EAAAA,KAAA,QAAAD,SAAOkD,EAAmB,OAAHQ,QAAG,IAAHA,GAAW,QAARW,EAAHX,EAAKgC,cAAM,IAAArB,OAAR,EAAHA,EAAakC,gBAAkB,oBAO1EtG,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAe,QAAQE,SAAC,kBAC5CC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,qCAAqCE,SAAA,EAChFJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcG,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBE,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,iBAEzB,OAAX,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAKmB,QACLjF,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,IAAoBE,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,MACHgL,MAAM,IACNC,SAAO,EACP5G,UAAWC,KAEfG,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,MAAM7G,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkBA,GAAWE,SAAC,WAIzD,OAAX,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAKmB,QACLjF,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,IAAoBE,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,MACHgL,MAAM,IACNC,SAAO,EACP5G,UAAWC,KAEfG,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,QAAQ7G,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkBA,GAAaE,SAAC,aAI7D,OAAX,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAKmB,QACLjF,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,IAAoBE,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,MACHgL,MAAM,IACNC,SAAO,EACP5G,UAAWC,KAEfG,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,cAAc7G,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkBA,GAAmBE,SAAC,wBAI/FJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEG,SAAA,EACbC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,aAC3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAgBE,UAC5BC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,4vBAA4vBD,KAAK,iBAG7wB,OAAHiB,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,OAAQ,EAAK,iBAK/B/G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcG,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBE,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,SAEpB,OAAhB,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAKkD,aACLhH,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,IAAoBE,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,QACHgL,MAAM,IACNC,SAAO,EACP5G,UAAWC,KAEfG,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,QAAQ7G,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkBA,GAAaE,SAAC,aAIxD,OAAhB,OAAH0D,QAAG,IAAHA,OAAG,EAAHA,EAAKkD,aACLhH,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,IAAoBE,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,QACHgL,MAAM,IACNC,SAAO,EACP5G,UAAWC,KAEfG,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,YAAY7G,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkBA,GAAiBE,SAAC,sBAI3FJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEG,SAAA,EACbC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,aAC3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAgBE,UAC5BJ,EAAAA,EAAAA,MAAA,OAAK2C,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,SAAA,EAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,ugDAAugDD,KAAK,aACphDxC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,uwBAAuwBD,KAAK,aACpxBxC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,uOAAuOD,KAAK,iBAGxO,OAAhB,OAAHiB,QAAG,IAAHA,OAAG,EAAHA,EAAKkD,YAAqBC,GAAc,OAAHnD,QAAG,IAAHA,OAAG,EAAHA,EAAKoD,YACvB,OAAhB,OAAHpD,QAAG,IAAHA,OAAG,EAAHA,EAAKkD,aAAqBhH,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,CAAG6G,GAAc,OAAHnD,QAAG,IAAHA,OAAG,EAAHA,EAAKoD,YAAY,MAAID,GAAc,OAAHnD,QAAG,IAAHA,OAAG,EAAHA,EAAKqD,UAAU,OAAK,KACvF,OAAHrD,QAAG,IAAHA,OAAG,EAAHA,EAAKsD,wBAQ5B/G,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAe,QAAQE,SAAC,qBAC5CC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,YAAYE,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,aAC3CC,EAAAA,EAAAA,KAAA,KAAGJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAYE,UAAK,OAAH0D,QAAG,IAAHA,GAAY,QAATY,EAAHZ,EAAKuD,eAAO,IAAA3C,OAAT,EAAHA,EAAc4C,SAAU,UAE7DtH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,eAC3CC,EAAAA,EAAAA,KAAA,KAAGJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAYA,GAAmBE,UAAK,OAAH0D,QAAG,IAAHA,GAAY,QAATa,EAAHb,EAAKuD,eAAO,IAAA1C,OAAT,EAAHA,EAAc4C,YAAa,UAEnFvH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,iBAC3CC,EAAAA,EAAAA,KAAA,KAAGJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAYA,GAAmBE,UAAK,OAAH0D,QAAG,IAAHA,GAAY,QAATc,EAAHd,EAAKuD,eAAO,IAAAzC,OAAT,EAAHA,EAAc4C,cAAe,eAK7FnH,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAe,QAAQE,SAAC,oBAC5CC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,YAAYE,SAAA,EACvDC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAmBE,SAAC,YAC3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAeC,MAAO,CAAEuH,UAAW,QAASrH,SAAA,EACvDC,EAAAA,EAAAA,KAACqH,GAAAA,EAAK,CAACpH,IAAI,uEAAuEE,IAAI,QAAQP,UAAWC,EAAkBO,MAAM,MAAMkH,SAAO,KAC9ItH,EAAAA,EAAAA,KAACqH,GAAAA,EAAK,CAACpH,IAAI,uEAAuEE,IAAI,QAAQP,UAAWC,EAAkBO,MAAM,MAAMkH,SAAO,KAC9ItH,EAAAA,EAAAA,KAACqH,GAAAA,EAAK,CAACpH,IAAI,uEAAuEE,IAAI,QAAQP,UAAWC,EAAkBO,MAAM,MAAMkH,SAAO,KAC9ItH,EAAAA,EAAAA,KAACqH,GAAAA,EAAK,CAACpH,IAAI,uEAAuEE,IAAI,QAAQP,UAAWC,EAAkBO,MAAM,MAAMkH,SAAO,KAC9ItH,EAAAA,EAAAA,KAACqH,GAAAA,EAAK,CAACpH,IAAI,uEAAuEE,IAAI,QAAQP,UAAWC,EAAkBO,MAAM,MAAMkH,SAAO,KAC9ItH,EAAAA,EAAAA,KAACqH,GAAAA,EAAK,CAACpH,IAAI,uEAAuEE,IAAI,QAAQP,UAAWC,EAAkBO,MAAM,MAAMkH,SAAO,aAK1JtH,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAe,QAAQE,SAAC,eAC5CC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,YAAYE,UACvDJ,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACZ,UAAU,8BAA8Bc,QAASA,IAAMuB,GAAQ,GAAOpC,MAAO,CAAEsC,aAAc,QAASpC,SAAA,CAAC,qBAE3GC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,0kBAA0kBD,KAAK,sBAMvmBxC,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAe,QAAQE,SAAC,aAC5CC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAc,QAAQE,UACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,EAAkB,YAAYE,UACvDJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qCAAoCG,SAAA,EACjDC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGZC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,OACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,OACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBAS5BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mEAAmEC,MAAO,CAAE8E,QAAS,YAAa4C,UAAW,qCAAsClH,OAAQ,QAASN,SAAA,EAC/KC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACoE,KAAK,SAASlE,QAAUoE,IAAQA,EAAE0C,kBAAmB/H,GAAW,EAAM,EAAIG,UAAU,iBAAgBG,SAAC,YAC7GJ,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACoE,KAAK,SAASlE,QAASA,OAAWd,UAAU,eAAeC,MAAO,CAAE4H,SAAU,QAAS1H,SAAA,CAAC,WAAQ,UAI1G,KAGdC,EAAAA,EAAAA,KAAC0H,GAAgB,CAACxF,aAAgB,OAAHuB,QAAG,IAAHA,OAAG,EAAHA,EAAKvB,cAAe,GAAIF,KAAMA,EAAMC,QAASA,MAC7E,EC5SE2E,GAAce,IACzB,MAAMC,EAAO,IAAIC,KAAiB,IAAZF,GAMtB,MAAO,GALKC,EAAKE,aACS,IAAIC,KAAKC,eAAe,QAAS,CACzDC,MAAO,UACNC,OAAON,MACGA,EAAKO,eAC0B,EAGxCC,IAAYC,EAAAA,EAAAA,aAAW,CAAA9I,EAAwEsF,KAAS,IAAhF,YAAEyD,EAAW,SAAEC,EAAQ,SAAEC,EAAQ,YAAEC,EAAW,QAAEC,EAAO,WAAEC,GAAYpJ,GAChFqJ,EAAAA,EAAAA,MAAjB,MACMC,GAAcC,EAAAA,EAAAA,QAAO,OACpBtJ,EAASC,IAAc+B,EAAAA,EAAAA,WAAS,IAChCQ,EAAMC,IAAWT,EAAAA,EAAAA,UAAS,CAAEhC,SAAS,EAAOwD,MAAO,QACnD+F,EAAYC,IAAiBxH,EAAAA,EAAAA,UAAS,CAAC,IACvCyH,EAAMC,IAAW1H,EAAAA,EAAAA,UAAS,KAC1B2H,EAAMC,IAAW5H,EAAAA,EAAAA,UAAS,IAC1B6H,EAAMC,IAAW9H,EAAAA,EAAAA,UAAS,CAAE+H,UAAW,KAAMC,WAAY,KACzDC,EAAUC,IAAelI,EAAAA,EAAAA,UAAS,CAAE+H,UAAW,KAAMC,WAAY,KACjEG,EAAaC,IAAkBpI,EAAAA,EAAAA,WAAS,IACxCqI,EAASC,IAActI,EAAAA,EAAAA,WAAS,IAGvCuI,EAAAA,EAAAA,YAAU,KACRX,EAAQ,EAAE,GACT,CAACd,EAAaI,KAEjBqB,EAAAA,EAAAA,YAAU,KACS/O,WACf8O,GAAW,GAEX,IAAIE,EAAQ,GACgB,KAAhB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUD,WAAiBQ,EAAQ,GAAGP,EAASF,aACjB,KAAjB,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAUD,aAAkBQ,EAAQ,IAAIP,EAASF,aAE1D,MAAM5N,QJ/CiBX,eAAOmO,EAAMc,GAAiD,IAA1CnH,EAAIrG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIuN,EAAKvN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIyN,EAAazN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjF,MAAMwN,GAAUhB,EAAO,GAAKc,EAKtBhP,EAAM,IAAIC,IAAI,GAAGL,WAOvB,OANAI,EAAImP,aAAanL,OAAO,QAASgL,GACjChP,EAAImP,aAAanL,OAAO,SAAUkL,GAC9BrH,GAAM7H,EAAImP,aAAanL,OAAO,OAAQ6D,GACtCkH,GAAO/O,EAAImP,aAAanL,OAAO,WAAY+K,GAC3CE,GAAejP,EAAImP,aAAanL,OAAO,UAAW,IAE/C9D,EAAAA,EAAAA,GAASF,EAAIG,WAVJ,CACZC,OAAQ,OAUhB,CIiCyBgP,CAAclB,EAdvB,GAcoCb,EAAa0B,GAGrD,IAADM,GAFL/B,GAAS,KAAW,OAAJ5M,QAAI,IAAJA,OAAI,EAAJA,EAAM4O,QAAS,IAClB,IAATpB,GAAYD,EAAQvN,EAAK6O,UAEnB,OAAJ7O,QAAI,IAAJA,GAAa,QAAT2O,EAAJ3O,EAAM6O,eAAO,IAAAF,OAAT,EAAJA,EAAe5N,QAAS,GAC1BwM,GAAQuB,IACN,MAAMC,EAAc,IAAIC,IAAIF,EAAKrI,KAAIzG,GAAQA,EAAKJ,MAC5CqP,EAAUjP,EAAK6O,QAAQK,QAAOlP,IAAS+O,EAAYI,IAAInP,EAAKJ,MAClE,MAAO,IAAIkP,KAASG,EAAQ,IAGlCtB,EAAQG,GACRG,EAAejO,EAAK4O,QAAUtB,EAAKvM,QACnCoN,GAAW,EAAM,EAGnBiB,EAAU,GAET,CAAC5B,EAAMb,EAAamB,EAAUf,KAEjCqB,EAAAA,EAAAA,YAAU,KACR,GAAId,EAAKvM,OAAS,GAAKiN,EAAa,CAClCd,EAAYmC,QAAU,IAAIC,sBAAqBC,IACzCA,EAAQ,GAAGC,gBAAgB/B,GAAQgC,GAAYA,EAAW,GAAE,IAGlE,MAAMC,EAAUC,SAASC,cAAc,mEACnCF,GAASxC,EAAYmC,QAAQQ,QAAQH,EAC3C,CAEA,MAAO,KACDxC,EAAYmC,SAASnC,EAAYmC,QAAQS,YAAY,CAC1D,GACA,CAACxC,EAAMU,IAoIV,OACEhK,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACEJ,EAAAA,EAAAA,MAAC+L,EAAAA,EAAS,CAAC7G,IAAKA,EAAK0B,MAAO0C,EAAM0C,YAAU,EAACC,cAAe,WAC1DC,iBAAiB,SAASC,kBAAgB,EAACC,eAAa,EAACpK,KAAM,QAC/DqK,aAAc,sBAAuBpM,UAAU,SAASqM,UAAWzD,EACnE0D,kBAAoBpH,GAAM2D,EAAY3D,EAAEyB,OACxCsD,QAASA,EACTsC,YAxBsBC,KACnBpM,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,SAAU,QAAS0I,IAAK,MAAOC,KAAM,MAAOxG,WAAY,QAAS1F,MAAO,OAAQC,OAAQ,OAAQ8B,aAAc,MAAO8D,QAAS,OAAQE,eAAgB,SAAUD,WAAY,SAAUqG,OAAQ,IAAM3M,UAAU,YAAWG,UAC5OC,EAAAA,EAAAA,KAACwM,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,SAAQ3M,UACvCC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,kBAAiBG,SAAC,mBAsBlC4M,aAAcC,EAAAA,EACdrD,UAAe,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAME,UACjBC,UAAe,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMG,UACjBqD,OAlBUC,IACd,MAAM,UAAEvD,EAAS,UAAEC,GAAcsD,EAEjCpD,EAAY,CAAEH,YAAWC,cACzBJ,EAAQ,EAAE,EAeN2D,aArBgBpR,GAAc,OAAJA,QAAI,IAAJA,GAAAA,EAAMqR,QAAUnN,EAAMoN,WAAa,GAqBlClN,SAAA,EAE3BC,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACtB,cAAc,WAAWuB,gBAAgB,oBAAoBC,cAAe,kCAAmCC,YAAa,CAAEjN,MAAO,OAAQ4F,UAAW,UAAYsH,QAAM,KAClLtN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,SAASzM,OAAO,SAASpF,KA/HtB8R,IACd7N,EAAAA,EAAAA,MAAA,OAAKC,UAAW,uEAAuEG,SAAA,EAC5FC,EAAAA,EAAAA,KAAA,QAAAD,SAAOyN,EAAQvG,UACfjH,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,OAAOC,QAASA,IAAMuB,EAAQ,CAACe,MAAOwK,EAAQjS,GAAIiE,SAAS,IAAUI,UAAU,iDAAiD/B,MAAI,OA4HpFgC,MAAO,CAAE4H,SAAU,SAAW6F,QAAM,EAACG,UAAQ,KACzGzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,eAAezM,OAAO,eAAepF,KA7IpCgS,GACU,UAAzBA,EAAQC,cACHhO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAmDC,MAAO,CAAE+N,IAAK,QAAS7N,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,OAAKJ,UAAW,GAAGC,EAAMgO,WAAWhO,EAAMiO,eAAe/N,SAAE2N,EAAQC,gBAC3D,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASK,gBAAgB/N,EAAAA,EAAAA,KAACgO,EAAAA,EAAM,CAAC9M,MAAM,gBAGnCvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAmDC,MAAO,CAAE+N,IAAK,QAAS7N,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,OAAKJ,UAAW,GAAGC,EAAMgO,WAAWhO,EAAMoO,aAAalO,SAAE2N,EAAQC,gBACzD,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASK,gBAAgB/N,EAAAA,EAAAA,KAACgO,EAAAA,EAAM,CAAC9M,MAAM,eAoI8BrB,MAAO,CAAE4H,SAAU,SAAW6F,QAAM,EAACG,UAAQ,KACnHzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,YAAYzM,OAAO,OAAOpF,KA1H5B8R,IACT7N,EAAAA,EAAAA,MAAA,OAAKC,UAAW,iEAAiEG,SAAA,EACtFC,EAAAA,EAAAA,KAAA,OAAKJ,UAAW,GAAGC,EAAMqO,QAA8B,MAAtBV,EAAQ7G,UAAoB9G,EAAMsO,MAAQtO,EAAMuO,UAAUrO,SACxFyN,EAAQa,qBAEXrO,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,OAAOC,QAASA,KA7BhCsI,EA6BkDwE,QA5BlD/N,GAAW,IA4BiDG,UAAU,iDAAiD/B,MAAI,OAqH/DgC,MAAO,CAAE4H,SAAU,SAAW2F,cAAe,GAAGvN,EAAMyO,cAAenB,gBAAiB,GAAGtN,EAAMyO,cAAehB,QAAM,EAACG,UAAQ,KACrLzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,aAAazM,OAAO,QAAQpF,KA7DzBgS,IACd1N,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAEqB,MAAO,WAAYnB,SAAE6G,GAAW8G,EAAQ7G,cA4DKhH,MAAO,CAAE4H,SAAU,SAAWgG,UAAQ,KACrGzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,WAAWzM,OAAO,SAASpF,KA1D1BgS,IACZ1N,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAEqB,MAAO,WAAYnB,SAAE6G,GAAW8G,EAAQ5G,YAyDEjH,MAAO,CAAE4H,SAAU,SAAWgG,UAAQ,KAClGzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,cAAczM,OApHbyN,KACZ5O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BG,SAAA,CAAC,UAEhDC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBAiH6CrE,KA9GpCgS,IAAa,IAADc,EAAAC,EAAAC,EAC9B,OAAO/O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BG,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKJ,UAAW,oDAAoDC,EAAM8O,YAAY5O,SAC5E,OAAP2N,QAAO,IAAPA,GAAe,QAARc,EAAPd,EAASkB,cAAM,IAAAJ,GAAfA,EAAiB9I,WAAY1F,EAAAA,EAAAA,KAAA,OAAKC,IAAY,OAAPyN,QAAO,IAAPA,GAAe,QAARe,EAAPf,EAASkB,cAAM,IAAAH,OAAR,EAAPA,EAAiB9I,SAAY3F,EAAAA,EAAAA,KAAC6O,EAAAA,EAAM,CAAC3N,MAAM,cAE7E,OAAPwM,QAAO,IAAPA,GAAe,QAARgB,EAAPhB,EAASkB,cAAM,IAAAF,OAAR,EAAPA,EAAiB5L,OACd,EAwGkEjD,MAAO,CAAE4H,SAAU,YACvFzH,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,YAAYzM,OAAO,gBAAgBjB,MAAO,CAAE4H,SAAU,YACpEzH,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,mBAAmBzM,OAAO,gBAAWpF,KAvGvCgS,IAAa,IAADoB,EAAAC,EAAAC,EAAAC,EAC5B,MAAMnM,EAAO,GAAU,OAAP4K,QAAO,IAAPA,GAAe,QAARoB,EAAPpB,EAASjI,cAAM,IAAAqJ,OAAR,EAAPA,EAAiBI,cAAqB,OAAPxB,QAAO,IAAPA,GAAe,QAARqB,EAAPrB,EAASjI,cAAM,IAAAsJ,OAAR,EAAPA,EAAiBI,YAC1DC,EAAWtM,EAAKuM,MAAM,KAAKjN,KAAIkN,GAAQA,EAAK,KAAIC,KAAK,IAC3D,OAAO5P,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BG,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKJ,UAAW,oDAAoDC,EAAM2P,aAAazP,SAC7E,OAAP2N,QAAO,IAAPA,GAAe,QAARsB,EAAPtB,EAASjI,cAAM,IAAAuJ,GAAfA,EAAiBrJ,OAAQ3F,EAAAA,EAAAA,KAAA,OAAKC,IAAY,OAAPyN,QAAO,IAAPA,GAAe,QAARuB,EAAPvB,EAASjI,cAAM,IAAAwJ,OAAR,EAAPA,EAAiBtJ,MAAO9F,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQ8B,aAAc,SAAciN,IAEjItM,IACG,EA+FiEjD,MAAO,CAAE4H,SAAU,YACtFzH,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,SAASzM,OAAO,SAASpF,KA7FzBgS,IAClB,MAAMnQ,EAASmQ,EAAQnQ,OACvB,OAAQA,GACN,IAAK,IACH,OAAOyC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAM4P,eAAgBhP,MAAO,SACjE,IAAK,IACH,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAM6P,iBAAkBjP,MAAO,WACnE,IAAK,IACH,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAM8P,uBAAwBlP,MAAO,kBACzE,IAAK,IACH,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAM+P,oBAAqBnP,MAAO,cACtE,IAAK,IACH,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMgQ,oBAAqBpP,MAAO,cACtE,IAAK,IACH,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMiQ,2BAA4BrP,MAAO,aAC7E,IAAK,IACH,OAAOT,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMkQ,mBAAoBtP,MAAO,aACrE,IAAK,IACH,OAAOd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EACrDC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMmQ,mBAAoBvP,MAAO,cAC5DT,EAAAA,EAAAA,KAACiQ,EAAAA,EAAQ,CAACtO,KAAM,QAEpB,QACE,OAAO3B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CAAClC,UAAW,UAAUC,EAAMqQ,wBAAyBzP,MAAOlD,IAC5E,EAqE6DsC,MAAO,CAAE4H,SAAU,YAC5EzH,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,gBAAgBzM,OAAO,gBAAgBpF,KA3DjCgS,IACjB/N,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEqB,MAAO,WAAYnB,SAAA,CAAEoQ,WAAWzC,EAAQ0C,eAAeC,QAAQ,GAAG,OA0DPxQ,MAAO,CAAE4H,SAAU,YAChGzH,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,YAAYzM,OAAO,YAAYpF,KAxD7BgS,IAAa,IAAD4C,EAChC,MAAOC,EAAOC,EAASC,GAAkB,OAAP/C,QAAO,IAAPA,GAAkB,QAAX4C,EAAP5C,EAASgD,iBAAS,IAAAJ,OAAX,EAAPA,EAAoBjB,MAAM,KAAKjN,IAAIuO,QAErE,OAAOhR,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEqB,MAAO,WAAYnB,SAAA,CAAEoQ,WAAWI,EAASC,EAAU,GAAOC,EAAU,MAAOJ,QAAQ,GAAG,MAAQ,EAqD/CjD,cAAe,WAAYD,gBAAgB,cAActN,MAAO,CAAE4H,SAAU,WAC7IzH,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,QAAQzM,OAAO,QAAQpF,KAnDxBgS,IACV/N,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEqB,MAAO,WAAYnB,SAAA,CAAC,IAAEoQ,WAAWzC,EAAQkD,OAAS,GAAGP,QAAQ,MAkDzBxQ,MAAO,CAAE4H,SAAU,QAAUgG,UAAQ,KAC3FzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,QAAQzM,OAAO,QAAQpF,KAhDxBgS,IACV/N,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEqB,MAAO,WAAYnB,SAAA,CAAC,IAAEoQ,WAAWzC,EAAQmD,OAAS,GAAGR,QAAQ,MA+CzBxQ,MAAO,CAAE4H,SAAU,SAAWgG,UAAQ,KAC5FzN,EAAAA,EAAAA,KAACkN,EAAAA,EAAM,CAACK,MAAM,SAASzM,OAAO,YAAYjB,MAAO,CAAE4H,SAAU,eAE/DzH,EAAAA,EAAAA,KAACqB,EAAU,CAAC7B,QAASA,EAASC,WAAYA,EAAYsJ,WAAYA,KAClE/I,EAAAA,EAAAA,KAAC8Q,GAAO,CAACtR,QAAa,OAAJwC,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,QAASwD,MAAW,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,MAAOvD,WAAasR,GAAS9O,GAAS+O,IAAM,IAASA,EAAQxR,QAASuR,UACnH,IAIP,M,kDC1PA,SAA8B,8BCkB9B,GAdgBE,MACDnI,EAAAA,EAAAA,QAAO,MAElB,OACI9I,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAA7B,UACIC,EAAAA,EAAAA,KAAA,UAAQJ,UAAW,GAAGC,cAA6BE,UAC/CC,EAAAA,EAAAA,KAACkR,GAAAA,EAAI,CAAChQ,MAAM,UAAUR,QAAUoE,WAGrC,E,wCCbX,UAAgB,UAAY,8BAA8B,OAAS,2BAA2B,aAAe,iCAAiC,WAAa,+BAA+B,YAAc,gCAAgC,SAAW,6BAA6B,cAAgB,kCAAkC,YAAc,gCAAgC,WAAa,+BAA+B,YAAc,gCAAgC,YAAc,gCAAgC,IAAM,wBAAwB,MAAQ,0BAA0B,YAAc,gCAAgC,MAAQ,0BAA0B,UAAY,8BAA8B,WAAa,+BAA+B,YAAc,gCAAgC,QAAU,4BAA4B,OAAS,2BAA2B,SAAW,6BAA6B,YAAc,gCAAgC,UAAY,8BAA8B,eAAiB,oC,2KCwBv+B,SAASqM,GAAYC,GACjB,MAwBMC,EAxBY,CACd,kBAAmB,CAAEvO,KAAM,MAAO5B,MAAO,WACzC,2BAA4B,CAAE4B,KAAM,QAAS5B,MAAO,WACpD,oEAAqE,CAAE4B,KAAM,QAAS5B,MAAO,WAC7F,qBAAsB,CAAE4B,KAAM,OAAQ5B,MAAO,WAC7C,0EAA2E,CAAE4B,KAAM,OAAQ5B,MAAO,WAClG,aAAc,CAAE4B,KAAM,OAAQ5B,MAAO,WACrC,YAAa,CAAE4B,KAAM,MAAO5B,MAAO,WACnC,YAAa,CAAE4B,KAAM,MAAO5B,MAAO,WACnC,YAAa,CAAE4B,KAAM,MAAO5B,MAAO,WACnC,YAAa,CAAE4B,KAAM,MAAO5B,MAAO,WACnC,YAAa,CAAE4B,KAAM,MAAO5B,MAAO,WACnC,aAAc,CAAE4B,KAAM,OAAQ5B,MAAO,WACrC,kBAAmB,CAAE4B,KAAM,MAAO5B,MAAO,WACzC,mBAAoB,CAAE4B,KAAM,OAAQ5B,MAAO,WAC3C,gBAAiB,CAAE4B,KAAM,MAAO5B,MAAO,WACvC,+BAAgC,CAAE4B,KAAM,MAAO5B,MAAO,WACtD,gCAAiC,CAAE4B,KAAM,MAAO5B,MAAO,WACvD,4EAA6E,CAAE4B,KAAM,MAAO5B,MAAO,WACnG,+BAAgC,CAAE4B,KAAM,YAAa5B,MAAO,WAC5D,gCAAiC,CAAE4B,KAAM,MAAO5B,MAAO,WACvD,oBAAqB,CAAE4B,KAAM,MAAO5B,MAAO,YAGpBkQ,IAAa,CAAEtO,KAAM,UAAW5B,MAAO,WAElE,OACIvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAMyR,OAAOvR,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAK2C,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,SAAA,EAC1FC,EAAAA,EAAAA,KAAA,QACIyC,EAAE,4JACFD,KAAM6O,EAASnQ,SAEnBlB,EAAAA,EAAAA,KAAA,QACIuR,QAAQ,MACR9O,EAAE,4EACFD,KAAK,cAGbxC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,GAAMuR,SAASrR,SAAEsR,EAASvO,SAGtD,CAEA,MAAM0O,GAAsBjS,IAA0F,IAAzF,WAAEkS,EAAU,KAAE9P,EAAO,IAAG,YAAE+P,EAAc,EAAC,MAAExQ,EAAQ,UAAS,WAAE4E,EAAa,QAAQvG,EAC5G,MAAMoS,GAAUhQ,EAAO+P,GAAe,EAChCE,EAAgB,EAAIC,KAAKC,GAAKH,EAC9BI,EAAiBH,EAAiBH,EAAa,IAAOG,EAE5D,OACIjS,EAAAA,EAAAA,MAAA,OAAKS,MAAOuB,EAAMtB,OAAQsB,EAAK5B,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,UACIgS,GAAIrQ,EAAO,EACXsQ,GAAItQ,EAAO,EACXuQ,EAAGP,EACHnP,KAAK,OACL2P,OAAQrM,EACR4L,YAAaA,KAGjB1R,EAAAA,EAAAA,KAAA,UACIgS,GAAIrQ,EAAO,EACXsQ,GAAItQ,EAAO,EACXuQ,EAAGP,EACHnP,KAAK,OACL2P,OAAQjR,EACRwQ,YAAaA,EACbU,gBAAiBR,EACjBS,iBAAkBN,EAClBO,cAAc,QACdzS,MAAO,CAAE0S,WAAY,mCAEvB,EAmiCd,GA/hCkBzO,IAA0C,IAAzC,QAAEtE,EAAO,WAAEC,EAAU,WAAEkJ,GAAY7E,EAClD,MAAM9E,EAAclC,aAAaC,QAAQ,iBAElCyV,EAAYC,IAAkBjR,EAAAA,EAAAA,UAAS,KACvCkR,EAAqBC,IAA0BnR,EAAAA,EAAAA,WAAS,IACxDoR,EAA0BC,IAA+BrR,EAAAA,EAAAA,WAAS,IAClEsR,EAA2BC,IAAgCvR,EAAAA,EAAAA,WAAS,IAEpEwR,EAAcC,IAAmBzR,EAAAA,EAAAA,UAAS,KAC1C2F,EAAa+L,IAAkB1R,EAAAA,EAAAA,UAAS,KAExC2R,EAAQC,IAAa5R,EAAAA,EAAAA,UAAS,KAC9B6R,EAAkBC,IAAuB9R,EAAAA,EAAAA,UAAS,CAAC,IACnD+R,EAAYC,IAAiBhS,EAAAA,EAAAA,UAAS,SACtCiS,EAAcC,IAAmBlS,EAAAA,EAAAA,UAAS,KAE1CmS,EAAWC,IAAgBpS,EAAAA,EAAAA,UAAS,KAGpCqS,EAAQC,IAAatS,EAAAA,EAAAA,UAAS,WAC9BuS,EAAOC,IAAYxS,EAAAA,EAAAA,UAAS,KAC5ByS,EAAQC,IAAa1S,EAAAA,EAAAA,UAAS,KAC9B2S,EAAaC,IAAkB5S,EAAAA,EAAAA,UAAS,KACxC6S,EAAQC,IAAa9S,EAAAA,EAAAA,UAAS,KAC9B+S,EAAWC,IAAgBhT,EAAAA,EAAAA,UAAS,KACpCiT,EAAaC,IAAkBlT,EAAAA,EAAAA,UAAS,KAExCmT,EAAqBC,KAA0BpT,EAAAA,EAAAA,UAAS,MAGxDqT,GAAOC,KAAYtT,EAAAA,EAAAA,UAAS,KAC7B,aACFuT,GAAY,cACZC,KACAC,EAAAA,GAAAA,IAAY,CACZC,OAAQC,IACJpX,QAAQqX,IAAI,kBAAmBD,GAC/BL,IAAUO,GAAc,IACjBA,KACAF,EAAc/S,KAAKkT,GAClBC,OAAOC,OAAOF,EAAM,CAChBhO,QAASpM,IAAIua,gBAAgBH,GAC7BI,SAAU,QAGpB,KAKH9Q,GAAM+Q,KAAWnU,EAAAA,EAAAA,UAAS,MAC1BkF,GAAMkP,KAAWpU,EAAAA,EAAAA,UAAS,IAC1BmF,GAAWkP,KAAiBrU,EAAAA,EAAAA,UAAS,KACrCsU,GAAOC,KAAYvU,EAAAA,EAAAA,UAAS,KAC5BwU,GAAKC,KAAUzU,EAAAA,EAAAA,UAAS,KACxBuF,GAAUmP,KAAe1U,EAAAA,EAAAA,UAAS,KAElC2U,GAAQC,KAAa5U,EAAAA,EAAAA,UAAS,CAAC,GAEhC6U,IAAgBlT,EAAAA,EAAAA,GAAS,CAC3BC,SAAU,CAAC,eACXC,QAAStI,GAAAA,KAEPub,IAAuBnT,EAAAA,EAAAA,GAAS,CAClCC,SAAU,CAAC,aAAcoP,GACzBnP,QAASA,KAAM/H,EAAAA,GAAAA,IAAekX,GAC9BjP,UAAWiP,EACXhP,MAAO,IAGL+S,IAAkBpT,EAAAA,EAAAA,GAAS,CAC7BC,SAAU,CAAC,cACXC,QAASjE,GAAAA,IAGPoX,IAAerT,EAAAA,EAAAA,GAAS,CAC1BC,SAAU,CAAC,iBACXC,QAASxE,GAAAA,GACT4X,UAAWC,MAGTC,GAAgBC,IAEdjX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKG,IAAKyW,EAAOnW,MACbR,IAAK2W,EAAOC,MAAOhX,MAAO,CAAEO,MAAO,OAAQ+B,aAAc,UAC7DnC,EAAAA,EAAAA,KAAA,OAAAD,SAAM6W,EAAOnW,WAKnBqW,GAAuBA,CAACF,EAAQG,IAC9BH,GAEIjX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKG,IAAKyW,EAAOnW,MACbR,IAAK2W,EAAOC,MAAOhX,MAAO,CAAEO,MAAO,OAAQ+B,aAAc,UAC7DnC,EAAAA,EAAAA,KAAA,OAAAD,SAAM6W,EAAOnW,YAKlBT,EAAAA,EAAAA,KAAA,QAAAD,SAAOgX,EAAMC,eAiCxBjN,EAAAA,EAAAA,YAAU,KAC2B,IAADkN,EAAAC,EAAR,OAApBZ,SAAoB,IAApBA,IAAAA,GAAsB3a,OACtBsX,GAAoC,OAApBqD,SAAoB,IAApBA,IAA0B,QAANW,EAApBX,GAAsB3a,YAAI,IAAAsb,OAAN,EAApBA,EAA4BE,QAAS,IACrDjE,GAAmC,OAApBoD,SAAoB,IAApBA,IAA0B,QAANY,EAApBZ,GAAsB3a,YAAI,IAAAub,OAAN,EAApBA,EAA4B/P,cAAe,IAC1DiP,IAAWpF,IAAM,IAAWA,EAAQgC,cAAc,MAClDoD,IAAWpF,IAAM,IAAWA,EAAQ7J,aAAa,MACrD,GACD,CAAqB,OAApBmP,SAAoB,IAApBA,QAAoB,EAApBA,GAAsB3a,OAE1B,MAAMyb,GAAapc,MAAOsa,EAAMra,IACrBoc,GAAAA,EAAMC,IAAIrc,EAAKqa,EAAM,CACxB1Y,QAAS,CACL,eAAgB,IAEpB2a,iBAAmBC,IACf,MAAM9B,EAAW7D,KAAK4F,MACjBD,EAAcE,OAASF,EAAc3G,MAAS,KAEnDiE,IAAUO,GACCA,EAAUjT,KAAKuV,GAClBA,EAAE7U,OAASwS,EAAKxS,KACVyS,OAAOC,OAAOmC,EAAG,CAAEjC,WAAUza,QAC7B0c,KAEZ,IAEPC,OAAOC,IACN/C,IAAUO,GACCA,EAAUjT,KAAKuV,GAClBA,EAAE7U,OAASwS,EAAKxS,KACVyS,OAAOC,OAAOmC,EAAG,CAAEjC,SAAU,EAAGza,MAAK6C,OAAO,IAC5C6Z,KAEZ,IA4DJG,IAAWC,EAAAA,GAAAA,GAAY,CACzBC,WAAarc,GRzTOX,WACxB,MACMS,EAAU,CACZJ,OAAQ,OACRK,KAAMC,GAEJV,EAAM,IAAIC,IAAI,GAAGL,kBACvB,OAAOM,EAAAA,EAAAA,GAASF,EAAIG,WAAYK,EAAQ,EQkTdwc,CAAatc,GACnCuc,UAAWld,eA9BeA,WAC1B,GAAK6Z,GAAMnY,OAAX,CACA,IAAKnB,EAAI,OAAO4c,GAAAA,GAAMC,QAAQ,oBAE9B,IAAK,MAAM9C,KAAQT,GACf,IAEI,MAAM1X,QAAiBka,GAAAA,EAAMgB,KACzB,yDAAiE9c,KACjE,CAAE+c,SAAUhD,EAAKxS,MACjB,CACIlG,QAAS,CACL2b,cAAe,UAAUvZ,QAK/B,IAAE/D,GAAQkC,EAASxB,WAGnByb,GAAW9B,EAAMra,EAC3B,CAAE,MAAO6C,GACLC,QAAQD,MAAM,wBAAyBwX,EAAKxS,KAAMhF,GAClDqa,GAAAA,GAAMra,MAAM,oBAAoBwX,EAAKxS,0BACzC,CAvBqB,CAwBzB,EAMU0V,CAAsBrb,EAAS5B,SA3DdP,WAC3B,IAAIkH,EAAc,GAClB,IAAK,MAAMoT,KAAQT,GAAO,CAAC,IAAD4D,EACtB,IAAIC,EAAM,CACN,KAAY,OAAJpD,QAAI,IAAJA,OAAI,EAAJA,EAAMxS,KACd,MAAY,OAAJwS,QAAI,IAAJA,GAAS,QAALmD,EAAJnD,EAAMra,WAAG,IAAAwd,OAAL,EAAJA,EAAWpJ,MAAM,KAAK,KAAM,GACpC,KAAY,OAAJiG,QAAI,IAAJA,OAAI,EAAJA,EAAM3T,MAElBO,EAAYyW,KAAKD,EACrB,CAEA,IACI,MAAMvb,QAAiBka,GAAAA,EAAMgB,KACzB,qDAA6D9c,KAC7D,CAAE2G,YAAaA,GAAe,IAC9B,CACItF,QAAS,CACL2b,cAAe,UAAUvZ,OAIrCjB,QAAQqX,IAAI,WAAYjY,EAC5B,CAAE,MAAO0a,GACL9Z,QAAQD,MAAM,wBAAyB+Z,GACvCM,GAAAA,GAAMra,MAAM,wDAChB,GAmCU8a,CAAuBzb,EAAS5B,IACtC4c,GAAAA,GAAMC,QAAQ,4BACd3Y,GAAW,GACXkJ,GAAYD,IAAaA,IAjI7B+J,EAAe,IACfE,GAAuB,GACvBE,GAA4B,GAC5BE,GAA6B,GAC7BE,EAAgB,IAChBC,EAAe,IACfE,EAAU,IACVE,EAAoB,CAAC,GACrBE,EAAc,QACdE,EAAgB,IAChBE,EAAa,IACbE,EAAU,UACVE,EAAS,IACTE,EAAU,IACVE,EAAe,IACfE,EAAU,IACVE,EAAa,IACbE,EAAe,IACfE,GAAuB,KACvBE,GAAS,IACTa,GAAQ,KACRC,GAAQ,GACRC,GAAc,IACdE,GAAS,IACTE,GAAO,IACPC,GAAY,IACZE,GAAU,CAAC,EAwGA,EAEXyC,QAAU/a,IACNC,QAAQD,MAAM,0BAA2BA,GACzCqa,GAAAA,GAAMra,MAAM,0CAA0C,IAIxDgb,GAAWA,KAEb,MAAMC,EAAa,CACf/F,cAAc,EACd7L,aAAa,EACbgM,QAAQ,EACRvO,MAAM,EACN8B,MAAM,EACNK,UAAU,EACVJ,WAAW,EACXmP,OAAO,EACPE,KAAK,EACLrC,WAAW,GAGTqF,EAAU,CAAC,EAEZhG,EACAgG,EAAQ5T,kBAAoB4N,EADd+F,EAAW/F,cAAe,EAGxC7L,EACA6R,EAAQ3T,iBAAmB8B,EADd4R,EAAW5R,aAAc,EAGtCgM,EACA6F,EAAQvT,OAAS0N,EADT4F,EAAW5F,QAAS,EAG5BvO,GACAoU,EAAQpU,KAAOA,GADTmU,EAAWnU,MAAO,EAGhB,MAATA,IAAiB8B,GAChBsS,EAAQtS,KAAOA,GADOqS,EAAWrS,MAAO,EAGhC,MAAT9B,IAAiBmC,GACZA,KAAUiS,EAAQjS,UAAYA,IADRgS,EAAWhS,UAAW,EAGhDJ,GACAqS,EAAQrS,UAAYA,GADToS,EAAWpS,WAAY,EAGlCmP,GACAkD,EAAQnS,WAAa,IAAIgB,KAAKiO,IAAOmD,cAD9BF,EAAWjD,OAAQ,EAGb,MAAdnP,IAAsBqP,GACjBA,KAAKgD,EAAQlS,SAAW,IAAIe,KAAKmO,IAAKiD,eADhBF,EAAW/C,KAAM,EAG3CrC,EACAqF,EAAQhS,QAAU2M,EADPoF,EAAWpF,WAAY,EAGvCqF,EAAQE,eAAiBvE,EAGzByB,GAAU2C,GAGLxD,OAAO4D,OAAOJ,GAAYrb,UAAS,IACpCoa,GAASsB,OAAOJ,EACpB,EAIJ,OACIhZ,EAAAA,EAAAA,KAAC0D,EAAAA,EAAO,CAAClE,QAASA,EAASmE,SAAS,QAAQ3C,OAAQA,IAAMvB,GAAW,GAAQoB,OAAO,EAAO+C,aAAa,EAAO/D,MAAO,CAAEO,MAAO,SAC3HyD,QAASwV,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,aAAEjV,EAAY,KAAEC,GAAM4U,EAAA,OAC5B1Z,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCG,SAAA,EAC9CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAkEC,MAAO,CAAE6E,aAAc,oBAAqBC,QAAS,QAAS5E,SAAA,EAC3IC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kCAAiCG,UAC5CC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,SAAU,WAAYqC,UAAW,SAAUjG,UACrDC,EAAAA,EAAAA,KAAC0Z,GAAAA,EAAQ,CACLje,QACK4a,KACqB,QADRiD,EACVjD,GAAc1a,YAAI,IAAA2d,OAAA,EAAlBA,EAAoBlX,KAAKuX,IAAQ,CAC7BpT,MAAOoT,EAASpe,GAChBkF,MAAO,GAAGkZ,EAAS7W,aAE3B,GAEJlD,WAAWqF,EAAAA,GAAAA,GACPpF,GAAM+Z,eACN,wBACA,gBAEJ/Z,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,SAChC4W,YAAY,kBACZ6C,SAAW/U,IACP2N,EAAe3N,EAAEyB,MAAM,EAE3BA,MAAOiM,EACP3I,QAAsB,OAAbwM,SAAa,IAAbA,QAAa,EAAbA,GAAeyD,WACxBjP,QAAM,SAIlB7K,EAAAA,EAAAA,KAAA,QAAAD,UACIC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACoE,KAAK,SAAShF,UAAU,cAAciF,IAAKL,EAAc9D,QAAUoE,GAAML,EAAKK,GAAG/E,UACrFC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAC,CAACpD,KAAM,GAAIT,MAAM,oBAK/BvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAaC,MAAO,CAAE8E,QAAS,OAAQtE,OAAQ,4BAA6B2E,SAAU,QAASjF,SAAA,EAC1GJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,SAAA,EACxCJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAK6U,KAAI,CAACna,WAAWqF,EAAAA,GAAAA,GAAK,oDAAqDpF,GAAM6E,cAAc3E,SAAA,EAChGC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iCAAiCC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,iBAC7FC,EAAAA,EAAAA,KAAA,OAAKJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMma,UAAW,QAAQja,SAAC,gBAEnDJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,YAAY/F,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMoa,aAAala,SAAC,mBAC3CC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,SAAU,YAAa5D,UACjCJ,EAAAA,EAAAA,MAACua,GAAAA,EAAS,CAAAna,SAAA,EACNC,EAAAA,EAAAA,KAACma,GAAAA,EAAS,CAAApa,UACe,OAApBuW,SAAoB,IAApBA,QAAoB,EAApBA,GAAsBwD,cAAc9Z,EAAAA,EAAAA,KAACoa,GAAAA,EAAe,CAACva,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQsD,SAAU,WAAY0I,IAAK,aAE7HrM,EAAAA,EAAAA,KAACqa,GAAAA,EAAS,CACN9T,MAAOyM,EACPpT,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,SAChCT,SAAW/U,IACPmO,EAAgBnO,EAAEjC,OAAO0D,OACrBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQgC,cAAc,KAAS,EAEnEgE,YAAY,8BAIjB,OAANb,SAAM,IAANA,QAAM,EAANA,GAAQnD,gBACLhT,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,kCAI3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMoa,aAAala,SAAC,qBAC3CC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,SAAU,YAAa5D,UACjCJ,EAAAA,EAAAA,MAACua,GAAAA,EAAS,CAAAna,SAAA,EACNC,EAAAA,EAAAA,KAACma,GAAAA,EAAS,CAAApa,UACe,OAApBuW,SAAoB,IAApBA,QAAoB,EAApBA,GAAsBwD,cAAc9Z,EAAAA,EAAAA,KAACoa,GAAAA,EAAe,CAACva,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQsD,SAAU,WAAY0I,IAAK,aAE7HrM,EAAAA,EAAAA,KAACua,GAAAA,EAAa,CACVhU,MAAOY,EACPvH,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,sBAChCT,SAAW/U,IACPoO,EAAepO,EAAEjC,OAAO0D,OACpBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQ7J,aAAa,KAAS,EAElEtH,MAAO,CACHQ,OAAQ,SAEZ2W,YAAY,0SAIjB,OAANb,SAAM,IAANA,QAAM,EAANA,GAAQhP,eACLnH,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,sCAOnDC,EAAAA,EAAAA,KAACkF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,UACxCJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,iBAAiB/F,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,4BAA4BC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,kBACxFJ,EAAAA,EAAAA,MAAC2F,EAAAA,EAAG,CAAAvF,SAAA,EACAC,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,4BAA2BG,UAC7CJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAE8D,SAAU,WAAYqC,UAAW,SAAUjG,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMoa,aAAala,SAAC,iBAC3CC,EAAAA,EAAAA,KAAC0Z,GAAAA,EAAQ,CACLje,QACK8a,KACuB,QADRgD,EACZhD,GAAgB5a,YAAI,IAAA4d,GAAO,QAAPC,EAApBD,EAAsBiB,aAAK,IAAAhB,OAAP,EAApBA,EAA6BpX,KAAKqY,IAAI,CAClClU,MAAOkU,EAAKlf,GACZkF,MAAO,GAAGga,EAAKvL,cAAcuL,EAAKtL,YAClC0H,MAAW,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM9U,YAErB,GAEJgR,aAAcA,GACd/W,WAAWqF,EAAAA,GAAAA,GACPpF,GAAM+Z,eACN,wBACA,gBAEJ/Z,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,SAChC4W,YAAY,cACZ6C,SAAW/U,IAAO,IAAD4V,EAAAC,EACbvH,EAAUtO,EAAEyB,OACZ,IAAIkU,EAAsB,OAAflE,SAAe,IAAfA,IAAqB,QAANmE,EAAfnE,GAAiB5a,YAAI,IAAA+e,GAAO,QAAPC,EAArBD,EAAuBF,aAAK,IAAAG,OAAb,EAAfA,EAA8BC,MAAKH,GAAQA,EAAKlf,KAAOuJ,EAAEyB,QAChEtD,EAAkB,CAClB,EAAK,OACL,GAAM,YACN,GAAM,aACN,EAAK,SAELwX,GACAnH,EAAoB,CAChBC,WAAYpD,YAAe,OAAJsK,QAAI,IAAJA,OAAI,EAAJA,EAAMrU,cAAe,GAAGiK,QAAQ,GACvDoD,aAAcxQ,EAAoB,OAAJwX,QAAI,IAAJA,OAAI,EAAJA,EAAMnU,gBAAkB,GACtDuQ,OAAW,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM9U,QAAS,GACtB7C,KAAM,GAAG2X,EAAKvL,cAAcuL,EAAKtL,cAIrCrK,EAAEyB,OACF6P,IAAWpF,IAAM,IAAWA,EAAQmC,QAAQ,KAAS,EAE7D5M,MAAO4M,EACP0H,cAAe/D,GACfjN,QAAwB,OAAf0M,SAAe,IAAfA,QAAe,EAAfA,GAAiBuD,WAC1BjP,QAAM,KAEH,OAANsL,SAAM,IAANA,QAAM,EAANA,GAAQhD,UACLnT,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,6BAI/CC,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAACC,GAAI,EAAEzF,UACPJ,EAAAA,EAAAA,MAAC2F,EAAAA,EAAG,CAAC1F,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMib,cAAe,eAAe/a,SAAA,EACrDC,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,MAAKG,UACvBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mDAAmDC,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQ8B,aAAc,MAAO6C,SAAU,UAAWjF,UAC/H,OAAhBsT,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBwD,SAAS7W,EAAAA,EAAAA,KAAA,OAAKC,IAAqB,OAAhBoT,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBwD,MAAOhX,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQ8B,aAAc,cAG7HxC,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,YAAWG,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMoa,YAAa,eAAela,UAAkB,OAAhBsT,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvQ,OAAQ,OACrF9C,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEiG,WAAY,UAAWC,OAAQ,oBAAqB5D,aAAc,OAAQ6D,UAAW,UAAWjG,SAAC,iBAEnHJ,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACC,GAAI,EAAG5F,UAAU,GAAEG,SAAA,EACpBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQyF,WAAY,UAAWC,OAAQ,oBAAqB5D,aAAc,OAAQ6D,UAAW,SAAUC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWpG,SAAC,OAC/MJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EAAuB,OAAhBsT,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBE,aAAc,IAAI,cAE/C5T,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQyF,WAAY,UAAWC,OAAQ,oBAAqB5D,aAAc,OAAQ6D,UAAW,SAAUC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWpG,UAACC,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAACnF,MAAM,UAAUS,KAAM,QAChP3B,EAAAA,EAAAA,KAAA,QAAAD,UAAuB,OAAhBsT,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBI,eAAgB,0BASrE9T,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,SAAA,EACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAK6U,KAAI,CAACna,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAM6E,cAAc3E,UAC3CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iCAAiCC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,oBAEjGC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,gBAAiBjG,GAAM6E,cAAc3E,UAChFJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAMkb,YAAYhb,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,OAAOjb,SAAC,kBACrCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAMob,YAAYlb,SAAA,EAC9BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,GAAMqb,cAAcnb,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,MACHuH,KAAK,aACLyD,MAAM,IACNsT,SAAW/U,IACP6Q,GAAQ7Q,EAAEjC,OAAO0D,OACM,MAAnBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQpM,MAAM,KAAS,EAE3D4B,QAAkB,MAAT5B,GACThF,UAAWC,GAAMsb,eAErBnb,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,MAAM7G,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMub,WAAYvb,GAAMwb,KAAKtb,SAAC,YAEvEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QACNJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,GAAMqb,cAAcnb,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,QACHuH,KAAK,aACLyD,MAAM,IACNsT,SAAW/U,IACP6Q,GAAQ7Q,EAAEjC,OAAO0D,OACM,MAAnBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQpM,MAAM,KAAS,EAE3D4B,QAAkB,MAAT5B,GACThF,UAAWC,GAAMsb,eAErBnb,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,QAAQ7G,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMub,WAAYvb,GAAM0Q,OAAOxQ,SAAC,cAE3EC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QACNJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,GAAMqb,cAAcnb,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,cACHuH,KAAK,aACLyD,MAAM,IACNsT,SAAW/U,IACP6Q,GAAQ7Q,EAAEjC,OAAO0D,OACM,MAAnBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQpM,MAAM,KAAS,EAE3D4B,QAAkB,MAAT5B,GACThF,UAAWC,GAAMsb,eAErBnb,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,cAAc7G,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMub,WAAYvb,GAAMyb,aAAavb,SAAC,wBAGpF,OAANoW,SAAM,IAANA,QAAM,EAANA,GAAQvR,QACL5E,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,6BAG1B,MAAT6E,IAAejF,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACXC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,MAAO,aAAajb,SAAC,aAClDJ,EAAAA,EAAAA,MAACua,GAAAA,EAAS,CAACqB,aAAa,OAAMxb,SAAA,EAC1BC,EAAAA,EAAAA,KAACma,GAAAA,EAAS,CAAApa,UAACC,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAE8D,SAAU,WAAY0I,IAAK,QAAStM,SAAC,SAC/DC,EAAAA,EAAAA,KAACqa,GAAAA,EAAS,CAAC9T,MAAOG,GAAMmT,SAAW/U,IAC/B8Q,GAAQ9Q,EAAEjC,OAAO0D,OACbzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQtK,MAAM,KAAS,EACxD8U,UAAW,MAAOC,OAAS3W,IAAC,IAAA4W,EAAA,OAAK9F,GAAQzF,YAAY,OAADrL,QAAC,IAADA,GAAS,QAAR4W,EAAD5W,EAAGjC,cAAM,IAAA6Y,OAAR,EAADA,EAAWnV,QAAS,GAAG8J,QAAQ,GAAG,EAAExQ,MAAO,CAAE8b,YAAa,OAAQvb,MAAO,SAAWR,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,gBAAiBtD,YAAY,WAErM,OAANb,SAAM,IAANA,QAAM,EAANA,GAAQzP,QACL1G,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,4BAGrCJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEO,MAAO,eAAgBL,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,MAAO,qBAAqBjb,SAAW,MAAT6E,GAAe,QAAU,qBACpFjF,EAAAA,EAAAA,MAACua,GAAAA,EAAS,CAACqB,aAAa,OAAMxb,SAAA,EAC1BC,EAAAA,EAAAA,KAACma,GAAAA,EAAS,CAAApa,UAACC,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAE8D,SAAU,WAAY0I,IAAK,QAAStM,SAAC,SAC/DC,EAAAA,EAAAA,KAACqa,GAAAA,EAAS,CAAC9T,MAAOQ,GAAU8S,SAAW/U,IACnCoR,GAAYpR,EAAEjC,OAAO0D,OACjBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQjK,UAAU,KAAS,EAC5DyU,UAAW,MAAOC,OAAS3W,IAAC,IAAA8W,EAAA,OAAK1F,GAAY/F,YAAY,OAADrL,QAAC,IAADA,GAAS,QAAR8W,EAAD9W,EAAGjC,cAAM,IAAA+Y,OAAR,EAADA,EAAWrV,QAAS,GAAG8J,QAAQ,GAAG,EAAExQ,MAAO,CAAE8b,YAAa,OAAQvb,MAAO,SAAWR,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,gBAAiBtD,YAAY,YAEzM,OAANb,SAAM,IAANA,QAAM,EAANA,GAAQpP,YACL/G,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAW,MAAT6E,GAAe,oBAAsB,yCAMhGjF,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,YAAY/F,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAMkb,YAAYhb,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,OAAOjb,SAAC,UACrCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAMob,YAAYlb,SAAA,CAEjB,MAAT6E,KAAgBjF,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACZJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,GAAMqb,cAAcnb,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,QACHuH,KAAK,WACLyD,MAAM,IACNsT,SAAW/U,IACP+Q,GAAc/Q,EAAEjC,OAAO0D,OACA,MAAnBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQrK,WAAW,KAAS,EAEhEH,QAAuB,MAAdG,GACT/G,UAAWC,GAAMsb,eAErBnb,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,QAAQ7G,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMub,WAAYvb,GAAMgc,OAAO9b,SAAC,cAE3EC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WAIdJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,GAAMqb,cAAcnb,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,SACI4E,KAAK,QACLrJ,GAAG,YACHuH,KAAK,WACLyD,MAAM,IACNsT,SAAW/U,IACP+Q,GAAc/Q,EAAEjC,OAAO0D,OACA,MAAnBzB,EAAEjC,OAAO0D,OACT6P,IAAWpF,IAAM,IAAWA,EAAQrK,WAAW,KAAS,EAEhEH,QAAuB,MAAdG,GACT/G,UAAWC,GAAMsb,eAErBnb,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,YAAY7G,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMub,WAAYvb,GAAMic,WAAW/b,SAAC,sBAGhF,OAANoW,SAAM,IAANA,QAAM,EAANA,GAAQxP,aACL3G,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,8BAI3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcG,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYG,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,MAAO,qBAAqBjb,SAAC,YAC1DC,EAAAA,EAAAA,KAAC+b,GAAAA,EAAQ,CACLxV,MAAOuP,GACP+D,SAAW/U,IACPiR,GAASjR,EAAEyB,OACPzB,EAAEyB,OACF6P,IAAWpF,IAAM,IAAWA,EAAQ8E,OAAO,KAAS,EAE5DkG,eAAa,EACbhF,YAAY,cACZiF,WAAW,UACXC,UAAQ,EACRrc,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAAS4E,SAAU,UACnDmX,MAAMnc,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAACnF,MAAM,UAAUS,KAAM,KACvC/B,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,oBAChC8B,WAAW,KACXC,UAAQ,KAEL,OAANlG,SAAM,IAANA,QAAM,EAANA,GAAQL,SACL9V,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,yBAIzB,MAAd4G,KAAqBhH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYG,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,MAAO,qBAAqBjb,SAAC,SAC1DC,EAAAA,EAAAA,KAAC+b,GAAAA,EAAQ,CACLxV,MAAOyP,GACP6D,SAAW/U,IACPmR,GAAOnR,EAAEyB,OACLzB,EAAEyB,OACF6P,IAAWpF,IAAM,IAAWA,EAAQgF,KAAK,KAAS,EAE1DgG,eAAa,EACbhF,YAAY,cACZiF,WAAW,UACXC,UAAQ,EACRrc,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAAS4E,SAAU,UACnDmX,MAAMnc,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAACnF,MAAM,UAAUS,KAAM,KACvC/B,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,oBAChC8B,WAAW,KACXC,UAAQ,KAEL,OAANlG,SAAM,IAANA,QAAM,EAANA,GAAQH,OACLhW,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,wBAK5B,MAAd4G,IAAoC,MAAdA,IAA8B,MAAT/B,MAAkBjF,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEO,MAAO,eAAgBL,SAAA,EAC/FC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMmb,MAAO,qBAAqBjb,SAAC,WAC1DJ,EAAAA,EAAAA,MAACua,GAAAA,EAAS,CAACqB,aAAa,QAAOxb,SAAA,EAC3BC,EAAAA,EAAAA,KAACma,GAAAA,EAAS,CAAApa,UAACC,EAAAA,EAAAA,KAACsc,GAAAA,EAAY,CAACpb,MAAM,UAAUS,KAAM,GAAI9B,MAAO,CAAE8D,SAAU,WAAY0I,IAAK,aACvFrM,EAAAA,EAAAA,KAACqa,GAAAA,EAAS,CAAC9T,MAAOQ,GAAU8S,SAAW/U,GAAMoR,GAAYpR,EAAEjC,OAAO0D,OAAQiV,UAAW,MAAOC,OAAS3W,IAAC,IAAAyX,EAAA,OAAKrG,GAAY/F,YAAY,OAADrL,QAAC,IAADA,GAAS,QAARyX,EAADzX,EAAGjC,cAAM,IAAA0Z,OAAR,EAADA,EAAWhW,QAAS,GAAG8J,QAAQ,GAAG,EAAExQ,MAAO,CAAE8b,YAAa,OAAQvb,MAAO,SAAWR,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,gBAAiBtD,YAAY,wBAS3SrX,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,SAAA,EACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAK6U,KAAI,CAACna,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAM6E,cAAc3E,UAC3CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iCAAiCC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,uBAEjGC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,WAAYjG,GAAM6E,cAAc3E,UAC3EJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAE8D,SAAU,WAAYqC,UAAW,SAAUjG,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SAAOJ,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMoa,aAAala,SAAC,aAC3CC,EAAAA,EAAAA,KAAC0Z,GAAAA,EAAQ,CACLje,QACK+a,KACoB,QADRiD,EACTjD,GAAa7a,YAAI,IAAA8d,OAAA,EAAjBA,EAAmBrX,KAAK4E,IAAO,CAC3BT,MAAOS,EAAQ3I,UACfoC,MAAO,GAAGuG,EAAQE,eAAeF,EAAQC,eAEjD,GAEJrH,WAAWqF,EAAAA,GAAAA,GACPpF,GAAM+Z,eACN,wBACA,eACA,QAEJ/Z,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAChC4W,YAAY,iBACZ6C,SAAW/U,IACP8O,EAAa9O,EAAEyB,OACXzB,EAAEyB,OACF6P,IAAWpF,IAAM,IAAWA,EAAQ2C,WAAW,KAAS,EAEhEpN,MAAOoN,EACP9J,QAAqB,OAAZ2M,SAAY,IAAZA,QAAY,EAAZA,GAAcsD,WACvBjP,QAAM,KAEH,OAANsL,SAAM,IAANA,QAAM,EAANA,GAAQxC,aACL3T,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,iCA+CnDJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,SAAA,EACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAK6U,KAAI,CAACna,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAM6E,aAAc,kBAAmBhE,QAASA,IAAMiS,GAAwBD,GAAqB3S,UAC1HJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCG,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iCAAiCC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,mBAC7FC,EAAAA,EAAAA,KAAA,UAAQJ,UAAU,kBAAiBG,SAE3B2S,GAAsB1S,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,IAAIkC,QAAQ,WAAWC,KAAK,OAAMzC,UAC9GC,EAAAA,EAAAA,KAAA,QAAMwc,SAAS,UAAUC,SAAS,UAAUha,EAAE,uUAAuUD,KAAK,eACrXxC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UACnGC,EAAAA,EAAAA,KAAA,QAAMwc,SAAS,UAAUC,SAAS,UAAUha,EAAE,8TAA8TD,KAAK,qBAOjYkQ,IAAuB/S,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAM6c,eAAe3c,SAAA,EACxDC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,WAAYjG,GAAM6E,cAAc3E,UAC3EJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,SAAS7Z,KAAK,SAASyD,MAAM,SAASsT,SAAW/U,GAAMgP,EAAUhP,EAAEyB,OAAQC,QAAoB,WAAXqN,KACzG7T,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,SAAS7G,UAAU,sBAAqBG,SAAC,eAE5DJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,UAAU7Z,KAAK,SAASyD,MAAM,UAAUsT,SAAW/U,GAAMgP,EAAUhP,EAAEyB,OAAQC,QAAoB,YAAXqN,KAC3G7T,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,UAAU7G,UAAU,sBAAqBG,SAAC,qBAIrEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,WAAYjG,GAAM6E,cAAc3E,UAC3EJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,OAAMG,SAAC,cAET,WAAX8T,IAAuB7T,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,kCAAiCG,SAE/D,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOqC,KAAI,CAACwa,EAAKC,KACxD7c,EAAAA,EAAAA,KAAA,UAAQU,QAASA,KACbsT,GAAU8I,GACNA,EAAUpf,SAASmf,GACbC,EAAUjS,QAAQpI,GAAMA,IAAMoa,IAC9B,IAAIC,EAAWD,IACxB,EACFjd,WAAWqF,EAAAA,GAAAA,GAAK,iBAAkB,CAAE,wBAAyB8O,EAAMrW,SAASmf,KAAU9c,SACpF6c,QAON,YAAX/I,IAAwB7T,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,4CAA2CG,SAE1Egd,MAAMC,KAAK,CAAEtgB,OAAQ,KAAM,CAACugB,EAAGC,IAAMA,EAAI,IAAG9a,KAAK6F,IAC7CjI,EAAAA,EAAAA,KAAA,UAAQU,QAASA,KACbwT,GAAWiJ,GACPA,EAAWzf,SAASuK,GACdkV,EAAWtS,QAAQuS,GAAMA,IAAMnV,IAC/B,IAAIkV,EAAYlV,IACzB,EACFrI,WAAWqF,EAAAA,GAAAA,GAAK,iBAAkB,CAAE,wBAAyBgP,EAAOvW,SAASuK,KAAUlI,SACrFkI,SAMd,OAANkO,SAAM,IAANA,QAAM,EAANA,GAAQkH,MACLrd,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,kCAI/CJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,WAAYjG,GAAM6E,cAAc3E,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,OAAMG,SAAC,YACxBC,EAAAA,EAAAA,KAAC+b,GAAAA,EAAQ,CACLxV,MAAO4N,EACP0F,SAAW/U,GAAMsP,EAAetP,EAAEyB,OAClCyV,eAAa,EACbhF,YAAY,cACZiF,WAAW,UACXC,UAAQ,EACRrc,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAAS4E,SAAU,UACnDmX,MAAMnc,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAACnF,MAAM,UAAUS,KAAM,KACvC/B,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,uBAE7B,OAANnE,SAAM,IAANA,QAAM,EAANA,GAAQhC,eACLnU,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAoBG,SAAE,2BAG3CJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,kBAAmBjG,GAAM6E,cAAc3E,SAAA,EAClFJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,OAAMG,SAAC,UACxBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,KAAK7Z,KAAK,SAASyD,MAAM,KAAKsT,SAAW/U,GAAMwP,EAAUxP,EAAEyB,OAAQC,QAAoB,OAAXqN,KACjG7T,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,KAAK7G,UAAU,sBAAqBG,SAAC,WAExDC,EAAAA,EAAAA,KAAC+b,GAAAA,EAAQ,CACLxV,MAAOgO,EACPsF,SAAW/U,GAAM0P,EAAa1P,EAAEyB,OAChCyV,eAAa,EACbhF,YAAY,cACZiF,WAAW,UACXC,UAAQ,EACRrc,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAAS4E,SAAU,UACnDmX,MAAMnc,EAAAA,EAAAA,KAACqG,EAAAA,EAAS,CAACnF,MAAM,UAAUS,KAAM,KACvC/B,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMya,SAAU,uBAEpC3a,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,QAAQ7Z,KAAK,SAASyD,MAAM,QAAQsT,SAAW/U,GAAMwP,EAAUxP,EAAEyB,OAAQC,QAAoB,UAAXqN,KACvG7T,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,QAAQ7G,UAAU,sBAAqBG,SAAC,oBAInEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,OAAMG,SAAC,iBACxBC,EAAAA,EAAAA,KAAC0Z,GAAAA,EAAQ,CACLje,QACI,CACI,CAAEgF,MAAO,EAAG8F,MAAO,GACnB,CAAE9F,MAAO,EAAG8F,MAAO,GACnB,CAAE9F,MAAO,EAAG8F,MAAO,GACnB,CAAE9F,MAAO,EAAG8F,MAAO,GACnB,CAAE9F,MAAO,EAAG8F,MAAO,GACnB,CAAE9F,MAAO,EAAG8F,MAAO,GACnB,CAAE9F,MAAO,EAAG8F,MAAO,IAG3B3G,WAAWqF,EAAAA,GAAAA,GACPpF,GAAM+Z,eACN,wBACA,eACA,QAEJ/Z,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAChC4W,YAAY,qBACZ6C,SAAW/U,IACP8O,EAAa9O,EAAEyB,MAAM,EAEzBA,MAAOoN,EACP9J,QAAqB,OAAZ2M,SAAY,IAAZA,QAAY,EAAZA,GAAcsD,WACvBjP,QAAM,WAIlBlL,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,8BAA+BjG,GAAM6E,cAAc3E,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,OAAMG,SAAC,wBACxBC,EAAAA,EAAAA,KAAC0Z,GAAAA,EAAQ,CACLje,QACI,CACI,CAAEgF,MAAO,SAAU8F,MAAO,GAC1B,CAAE9F,MAAO,SAAU8F,MAAO,GAC1B,CAAE9F,MAAO,SAAU8F,MAAO,GAC1B,CAAE9F,MAAO,SAAU8F,MAAO,GAC1B,CAAE9F,MAAO,SAAU8F,MAAO,GAC1B,CAAE9F,MAAO,SAAU8F,MAAO,GAC1B,CAAE9F,MAAO,SAAU8F,MAAO,IAGlC3G,WAAWqF,EAAAA,GAAAA,GACPpF,GAAM+Z,eACN,wBACA,eACA,QAEJ/Z,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,SAChC4W,YAAY,cACZ6C,SAAW/U,IACP4P,EAAe5P,EAAEyB,MAAM,EAE3BA,MAAOkO,QAGf9U,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,0CAA2CjG,GAAM6E,cAAc3E,SAAA,EAC1GC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACZ,UAAU,iBAAgBG,SAAC,YACnCC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACZ,UAAU,uCAAsCG,SAAC,oBAMzEJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,SAAA,EACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAK6U,KAAI,CAACna,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAM6E,aAAc,kBAAmBhE,QAASA,IAAMqS,GAA8BD,GAA2B/S,UACtIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCG,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iCAAiCC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,oBAC7FC,EAAAA,EAAAA,KAAA,UAAQJ,UAAU,kBAAiBG,SAE3B+S,GAA4B9S,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,IAAIkC,QAAQ,WAAWC,KAAK,OAAMzC,UACpHC,EAAAA,EAAAA,KAAA,QAAMwc,SAAS,UAAUC,SAAS,UAAUha,EAAE,uUAAuUD,KAAK,eACrXxC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UACnGC,EAAAA,EAAAA,KAAA,QAAMwc,SAAS,UAAUC,SAAS,UAAUha,EAAE,8TAA8TD,KAAK,qBAOjYsQ,IAA6B9S,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,0CAA2CjG,GAAM6E,cAAc3E,UACvIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,mBAAmB7Z,KAAK,sBAAsByD,MAAM,IAAIsT,SAAW/U,GAAM8P,GAAuB9P,EAAEyB,OAAQC,QAAgC,KAAvBmO,KACxI3U,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,mBAAmB7G,UAAU,sBAAqBG,SAAC,yBAEtEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,QAAQ7Z,KAAK,sBAAsByD,MAAM,IAAIsT,SAAW/U,GAAM8P,GAAuB9P,EAAEyB,OAAQC,QAAiC,MAAxBmO,KAC7H3U,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,QAAQ7G,UAAU,sBAAqBG,SAAC,8BAE3DJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCC,EAAAA,EAAAA,KAACkb,GAAAA,EAAW,CAACyB,QAAQ,MAAM7Z,KAAK,sBAAsByD,MAAM,IAAIsT,SAAW/U,GAAM8P,GAAuB9P,EAAEyB,OAAQC,QAAgC,KAAvBmO,KAC3H3U,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,MAAM7G,UAAU,sBAAqBG,SAAC,oBAOzEJ,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAACtF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMkG,OAAQ,QAAQhG,SAAA,EACxCC,EAAAA,EAAAA,KAACkF,EAAAA,EAAK6U,KAAI,CAACna,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAM6E,aAAc,kBAAmBhE,QAASA,IAAMmS,GAA6BD,GAA0B7S,UACpIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCG,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iCAAiCC,MAAO,CAAEqB,MAAO,UAAWC,WAAY,KAAMpB,SAAC,iBAC7FC,EAAAA,EAAAA,KAAA,UAAQJ,UAAU,kBAAiBG,SAE3B6S,GAA2B5S,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,IAAIkC,QAAQ,WAAWC,KAAK,OAAMzC,UACnHC,EAAAA,EAAAA,KAAA,QAAMwc,SAAS,UAAUC,SAAS,UAAUha,EAAE,uUAAuUD,KAAK,eACrXxC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UACnGC,EAAAA,EAAAA,KAAA,QAAMwc,SAAS,UAAUC,SAAS,UAAUha,EAAE,8TAA8TD,KAAK,qBAOjYoQ,IAA4BjT,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACxBC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,2CAA2C/F,UACtFJ,EAAAA,EAAAA,MAAA,UAASoV,GAAa,CAAEnV,UAAW,0EAA4EC,MAAO,CAAEO,MAAO,OAAQC,OAAQ,QAASyF,WAAY,OAAQ3D,aAAc,MAAO4D,OAAQ,oBAAqBuX,UAAW,QAASvd,SAAA,EAC9OC,EAAAA,EAAAA,KAAA,YAAWgV,QACXhV,EAAAA,EAAAA,KAAA,UAAQ4E,KAAK,SAAShF,UAAU,mDAAmDC,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQ0F,OAAQ,oBAAqBD,WAAY,OAAQ3D,aAAc,MAAOf,aAAc,QAASrB,UACpNC,EAAAA,EAAAA,KAACud,GAAAA,EAAW,OAEhB5d,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAOC,MAAO,CAAEqB,MAAO,UAAWD,SAAU,QAASlB,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAEqB,MAAO,UAAWC,WAAY,OAAQpB,SAAC,oBAAsB,wBAC/IC,EAAAA,EAAAA,KAAA,QAAMH,MAAO,CAAEqB,MAAO,UAAWD,SAAU,QAASlB,SAAC,gDAG7DC,EAAAA,EAAAA,KAACkF,EAAAA,EAAKC,OAAM,CAACvF,WAAWqF,EAAAA,GAAAA,GAAKpF,GAAMiG,WAAY,8BAA+BjG,GAAM6E,cAAc3E,UAC9FC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,2BAA0BG,SAE5B,OAAL8U,SAAK,IAALA,QAAK,EAALA,GAAOzS,KAAI,CAACkT,EAAMuH,KACdld,EAAAA,EAAAA,MAAA,OAAiBC,UAAWC,GAAM2d,QAAQzd,SAAA,CACrCoR,GAAYmE,EAAK1Q,OAClBjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAM4d,YAAY1d,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,OAAMG,UAAM,OAAJuV,QAAI,IAAJA,OAAI,EAAJA,EAAMxS,OAAQ,MACnCnD,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMG,SAAA,CAAEoQ,YAAe,OAAJmF,QAAI,IAAJA,OAAI,EAAJA,EAAM3T,MAAO,MAAM0O,QAAQ,GAAG,SAAOqN,SAAa,OAAJpI,QAAI,IAAJA,OAAI,EAAJA,EAAMI,WAAa,EAAE,oBAEvG1V,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,UAASG,UACpBC,EAAAA,EAAAA,KAACwR,GAAmB,CAACC,WAAYiM,SAAa,OAAJpI,QAAI,IAAJA,OAAI,EAAJA,EAAMI,WAAa,EAAG/T,KAAM,GAAIT,MAAM,gBAP9E2b,mBAwB1Cld,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mEAAmEC,MAAO,CAAE8E,QAAS,YAAa4C,UAAW,qCAAsClH,OAAQ,QAASN,SAAA,EAC/KC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACoE,KAAK,SAASlE,QAAUoE,IAAQA,EAAE0C,kBAAmB/H,GAAW,EAAM,EAAIG,UAAU,iBAAgBG,SAAC,YAE7GJ,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACoE,KAAK,SAASlE,QAASoY,GAAUlZ,UAAU,eAAeC,MAAO,CAAE4H,SAAU,QAAS1H,SAAA,CAAC,WAAgB,OAAR+X,SAAQ,IAARA,QAAQ,EAARA,GAAU6F,aAAa3d,EAAAA,EAAAA,KAACoa,GAAAA,EAAe,CAC1Iva,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQa,MAAO,kBAGrD,GAEH,ECxjCnB,GA/DiB0c,KACb,MAAMC,GAAK/U,EAAAA,EAAAA,QAAO,OAEX+H,EAAOtI,KADDO,EAAAA,EAAAA,QAAO,OACMtH,EAAAA,EAAAA,UAAS,KAC5BhC,EAASC,IAAc+B,EAAAA,EAAAA,WAAS,IAChCkH,EAASC,IAAcnH,EAAAA,EAAAA,WAAS,IAChCsc,EAAYC,EAAgBC,IAAiBC,EAAAA,GAAAA,IAAY,GAAI,MAC7DzV,EAAUC,IAAejH,EAAAA,EAAAA,UAAS,IASzC,OACI7B,EAAAA,EAAAA,MAACue,GAAAA,GAAkB,CAACte,UAAU,YAAWG,SAAA,EACrCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,UAAkB,OAAR4I,QAAQ,IAARA,GAAAA,EAAU9L,OAASmD,EAAMse,OAAS,KAAMte,MAAO,CAAE8E,QAAS,oBAAqBhB,SAAU,WAAYtD,OAAQ,QAASN,SAAA,EAC5IC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,sCAAsCC,MAAO,CAAE+N,IAAK,QAAS7N,SAE5D,OAARyI,QAAQ,IAARA,GAAAA,EAAU9L,QACNiD,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACIJ,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAMue,cAAcre,SAAA,CAAC,aAAmB,OAARyI,QAAQ,IAARA,OAAQ,EAARA,EAAU9L,WACzDsD,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,eAAcG,UACzBC,EAAAA,EAAAA,KAAA,UAAQJ,UAAW,GAAGC,EAAMwe,YAAa3d,QAASA,KAAM4d,OAhBrEC,GAgB+E,OAf1FV,EAAG7S,QACH6S,EAAG7S,QAAQsT,UAAU,CAAEC,kBAEvBxgB,QAAQD,MAAM,0BAJHygB,KAgBqF,EAAAxe,UAACC,EAAAA,EAAAA,KAACwe,EAAAA,EAAQ,YAI1F7e,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA7B,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,eAAcG,UACzBC,EAAAA,EAAAA,KAAA,UAAQJ,UAAW,GAAGC,EAAMwe,YAAa3d,QAAUoE,MAAU/E,UAACC,EAAAA,EAAAA,KAACye,EAAAA,EAAM,SAEzE9e,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,MAAO,CAAE8D,SAAU,YAAa5D,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAE8D,SAAU,WAAY0I,IAAK,MAAOC,KAAM,OAAQvM,UAC1DC,EAAAA,EAAAA,KAAA,OAAKsC,MAAM,6BAA6BlC,MAAM,KAAKC,OAAO,KAAKkC,QAAQ,YAAYC,KAAK,OAAMzC,UAC1FC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,mkBAAmkBD,KAAK,iBAGxlBxC,EAAAA,EAAAA,KAAA,SAAO4E,KAAK,OAAOoS,YAAY,SAASzQ,MAAOuX,EAAYjE,SAAW/U,GAAMkZ,EAAclZ,EAAEjC,OAAO0D,OAAQ3G,UAAU,yBAAyBC,MAAO,CAAEsC,aAAc,MAAO/B,MAAO,QAAS2F,OAAQ,oBAAqB7E,MAAO,UAAWya,YAAa,OAAQ1a,SAAU,OAAQZ,OAAQ,mBAO9SV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAwCC,MAAO,CAAE8D,SAAU,WAAY2I,KAAM,MAAOD,IAAK,OAAQtM,SAAA,EAC5GC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,YAAYC,MAAO,CAAE6e,YAAa,QAAS3e,SAAC,UAC1DC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACZ,UAAW,GAAGC,EAAM8e,YAAaje,QAASA,IAAMjB,GAAW,GAAMM,SAAC,YAE9EJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAuCC,MAAO,CAAE+N,IAAK,OAAQ7N,SAAA,EACxEC,EAAAA,EAAAA,KAAA,MAAIJ,UAAW,GAAGC,EAAMgR,aAAa9Q,SAAC,WACtCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,GAAGC,EAAM+e,aAAa7e,SAAA,CAAE8Q,EAAM,kBAGtD7Q,EAAAA,EAAAA,KAACoI,GAAS,CAACvD,IAAKgZ,EAAIvV,YAAayV,EAAgBxV,SAAUA,EAAUC,SAAUA,EAAUC,YAAaA,EAAaC,QAASA,EACxHC,WAAYA,KAChB3I,EAAAA,EAAAA,KAACiR,GAAO,KACRjR,EAAAA,EAAAA,KAAC6e,GAAS,CAACrf,QAASA,EAASC,WAAYA,EAAYkJ,WAAYA,MAChD,C,2DCrE7B,QAA4B,0CAA5B,EAAkF,0CAAlF,EAAoI,sCAApI,EAAqL,yCAArL,EAA2O,2C,sECS3O,MAiBA,EAjB4BiE,KAEpBjN,EAAAA,EAAAA,MAAA,OAAKC,WAAWqF,EAAAA,EAAAA,GAAKpF,GAAiBE,SAAA,EAClCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDC,EAAAA,EAAAA,KAAA,OAAKC,IAAK6e,EAAW3e,IAAI,aACzBH,EAAAA,EAAAA,KAAA,OAAKJ,WAAWqF,EAAAA,EAAAA,GAAKpF,GAAkBI,IAAK8e,EAAY5e,IAAI,eAEhEH,EAAAA,EAAAA,KAAA,MAAIJ,WAAWqF,EAAAA,EAAAA,GAAKpF,GAAaE,SAAC,yBAClCJ,EAAAA,EAAAA,MAAA,KAAGC,WAAWqF,EAAAA,EAAAA,GAAKpF,GAAgBE,SAAA,CAAC,gDACYC,EAAAA,EAAAA,KAAA,SAAM,mCAEtDL,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACZ,UAAU,iBAAiBC,MAAO,CAAEuB,aAAc,QAASrB,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACgf,EAAAA,EAAW,IAAG,eACpFhf,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAI,IAAI5C,UAACC,EAAAA,EAAAA,KAAA,QAAMJ,WAAWqF,EAAAA,EAAAA,GAAKpF,GAAkBE,SAAC,gB","sources":["assets/images/Jobs/Featured icon.svg","APIs/email-template.js","APIs/management-api.js","APIs/team-api.js","webpack://memateapp/./src/components/Work/Pages/jobs/jobs.module.scss?138b","webpack://memateapp/./src/components/Work/features/job-table-actions/job-dialog.module.scss?24f6","components/Work/features/job-table-actions/job-confirmation-dialog.js","components/Work/features/job-table-actions/job-details-dialog.js","APIs/jobs-api.js","webpack://memateapp/./src/components/Work/features/view-job/view-job.module.scss?49a6","components/Work/features/view-job/view-attachements.js","components/Work/features/view-job/view-job.js","components/Work/Pages/jobs/jobs-table.js","webpack://memateapp/./src/components/Work/features/job-chat/job-chat.module.scss?d0b4","components/Work/features/job-chat/index.js","webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","components/Work/Pages/jobs/index.js","webpack://memateapp/./src/ui/no-data-template/no-data-found-template.module.scss?18de","ui/no-data-template/no-data-found-template.js"],"sourcesContent":["var _rect, _rect2, _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFeaturedicon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    width: 48,\n    height: 48,\n    rx: 24,\n    fill: \"#FEE4E2\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    width: 48,\n    height: 48,\n    rx: 24,\n    stroke: \"#FEF3F2\",\n    strokeWidth: 8\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 38.5C22.201 38.5 17.5 33.799 17.5 28C17.5 22.201 22.201 17.5 28 17.5C33.799 17.5 38.5 22.201 38.5 28C38.5 33.799 33.799 38.5 28 38.5ZM28 40C34.6274 40 40 34.6274 40 28C40 21.3726 34.6274 16 28 16C21.3726 16 16 21.3726 16 28C16 34.6274 21.3726 40 28 40Z\",\n    fill: \"#B54708\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.8827 24.6792C23.8713 24.8835 24.0399 25.0491 24.2445 25.0491H25.4812C25.6883 25.0491 25.853 24.8802 25.8808 24.675C26.0143 23.6908 26.6898 22.9734 27.8938 22.9734C28.9221 22.9734 29.8648 23.4875 29.8648 24.7253C29.8648 25.6775 29.303 26.1155 28.4175 26.782C27.4082 27.5151 26.6084 28.3721 26.6656 29.7622L26.67 30.0874C26.6728 30.2925 26.8399 30.4573 27.045 30.4573H28.2615C28.4686 30.4573 28.6365 30.2894 28.6365 30.0823V29.9241C28.6365 28.8481 29.0459 28.5339 30.1504 27.696C31.0645 27.001 32.0166 26.2297 32.0166 24.6111C32.0166 22.345 30.1028 21.25 28.0081 21.25C26.1075 21.25 24.0245 22.1359 23.8827 24.6792ZM26.218 33.3232C26.218 34.123 26.856 34.7134 27.732 34.7134C28.646 34.7134 29.2744 34.123 29.2744 33.3232C29.2744 32.4949 28.646 31.9141 27.732 31.9141C26.856 31.9141 26.218 32.4949 26.218 33.3232Z\",\n    fill: \"#B54708\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFeaturedicon);\nexport default __webpack_public_path__ + \"static/media/Featured icon.f0452deecdd8a0600a95469561a90cfe.svg\";\nexport { ForwardRef as ReactComponent };","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\n\n\n\n\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"jobs_active__ZiLB1\",\"selectedCount\":\"jobs_selectedCount__ylTL-\",\"filterBox\":\"jobs_filterBox__Fm1C9\",\"newButton\":\"jobs_newButton__CoaUb\",\"total\":\"jobs_total__tYu52\",\"totalCount\":\"jobs_totalCount__c5FC+\",\"shadowRight\":\"jobs_shadowRight__smZo7\",\"payment\":\"jobs_payment__i+7WA\",\"paymentHours\":\"jobs_paymentHours__e2Axb\",\"paymentFix\":\"jobs_paymentFix__1tRgO\",\"time\":\"jobs_time__v7zI9\",\"tracker\":\"jobs_tracker__aGhTF\",\"clientImg\":\"jobs_clientImg__9499y\",\"clientName\":\"jobs_clientName__5iKeN\",\"inProgress\":\"jobs_inProgress__QBtOv\",\"defaultStatus\":\"jobs_defaultStatus__XVACp\",\"status\":\"jobs_status__EX7Lm\",\"open\":\"jobs_open__+cga+\",\"Accepted\":\"jobs_Accepted__gypjN\",\"CONFIRMED\":\"jobs_CONFIRMED__VW8Jd\",\"ASSIGN\":\"jobs_ASSIGN__ggryg\",\"NotConfirmed\":\"jobs_NotConfirmed__Jfd2x\",\"COMPLETED\":\"jobs_COMPLETED__BzX88\",\"DECLINED\":\"jobs_DECLINED__XEbSy\",\"MANAGER_DECLINED\":\"jobs_MANAGER_DECLINED__9z2Tw\",\"finished\":\"jobs_finished__8zXDZ\",\"assign\":\"jobs_assign__q7SKF\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"job-dialog_modal__6ffnW\",\"modalHeader\":\"job-dialog_modalHeader__j1WfV\",\"headerTitle\":\"job-dialog_headerTitle__sUBzz\",\"weekNames\":\"job-dialog_weekNames__7amIz\",\"weekName\":\"job-dialog_weekName__H3JqX\",\"iconJobstyle\":\"job-dialog_iconJobstyle__ze7N8\"};","import React, { useState } from \"react\";\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport style from './job-dialog.module.scss';\nimport { Chip } from \"primereact/chip\";\nimport warningIcon from '../../../../assets/images/Jobs/Featured icon.svg';\n\nexport default function JobConfirmation({ visible, setVisible }) {\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <img src={warningIcon} alt=\"task-details\" style={{ width: '48px', height: '48px' }} />\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Are you sure you want to stop cycle?</span>\n        </div>\n    );\n\n    const footerContent = (\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <Button label=\"Stop Cycle\" className=\"danger-button\" onClick={() => setVisible(false)} autoFocus />\n            <Button label=\"Cancel\" className=\"outline-button\" onClick={() => setVisible(false)} autoFocus />\n        </div>\n    );\n    return (\n        <Dialog visible={visible} modal header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={() => { if (!visible) return; setVisible(false); }}>\n            <div className=\"\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <h6 style={{ fontSize: '18px', color: '#101828', fontWeight: 600, marginBottom: '16px' }}>Job Details</h6>\n                    <p className=\"font-14 mb-0\" style={{ color: '#475467' }}>Job ID: 031-240003</p>\n                </div>\n                <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Job Reference</p>\n                <h6 style={{ fontSize: '16px', color: '#475467', fontWeight: 600, marginBottom: '16px' }}>Enter the detailed quote for the client contract here. Include all relevant </h6>     \n            </div>\n        </Dialog>\n\n    )\n}\n","import React, { useState } from \"react\";\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport style from './job-dialog.module.scss';\nimport { Chip } from \"primereact/chip\";\nimport JobConfirmation from \"./job-confirmation-dialog\";\nimport {InfoCircle} from \"react-bootstrap-icons\";\n\nexport default function JobDetails({ visible, setVisible, JobDetails}) {\n    const [confirmation, setConfirmation] = useState(false);\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <b className={style.iconJobstyle}><InfoCircle size={24} color=\"#106B99\" /></b>\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Job Details</span>\n        </div>\n    );\n\n    const footerContent = (\n        <div>\n            <Button label=\"Stop Cycle\" className=\"danger-button\" onClick={() => setConfirmation(true)} autoFocus />\n        </div>\n    );\n    return (\n        <>\n            <Dialog visible={visible} modal={false} header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={() => { if (!visible) return; setVisible(false); }}>\n                <div className=\"\">\n                    <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Repeat</p>\n                    <h6 className=\"font-16\" style={{ color: '#101828', fontWeight: 600, marginBottom: '16px' }}>Every Week</h6>\n                    <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Repeat on</p>\n                    <div className={`d-flex ${style.weekNames}`}>\n                        <Chip className={`status ${style.weekName}`} label={'Monday'} />\n                        <Chip className={`status ${style.weekName}`} label={'Wednesday'} />\n                        <Chip className={`status ${style.weekName}`} label={'Thursday'} />\n                    </div>\n                    <div className=\"d-flex\">\n                        <div style={{ width: '280px' }}>\n                            <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Starts</p>\n                            <p className=\"font-16 mb-0\" style={{ color: '#101828', fontWeight: 600 }}>12 Jul 2025</p>\n                        </div>\n                        <div style={{ width: '280px' }}>\n                            <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Ends</p>\n                            <p className=\"font-16 mb-0\" style={{ color: '#101828', fontWeight: 600 }}>12 Jul 2025</p>\n                        </div>\n                    </div>\n                </div>\n            </Dialog>\n            <JobConfirmation visible={confirmation} setVisible={setConfirmation} />\n        </>\n    )\n}\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1)\n\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"view-job_newJobTag__EyCAF\",\"border\":\"view-job_border__KnprQ\",\"borderBottom\":\"view-job_borderBottom__Ag9Vk\",\"background\":\"view-job_background__eeiN9\",\"customLabel\":\"view-job_customLabel__6I5W6\",\"text\":\"view-job_text__Vqm2T\",\"description\":\"view-job_description__0rHSF\",\"chooseUserBox\":\"view-job_chooseUserBox__hIESK\",\"heading\":\"view-job_heading__XPFer\",\"paymentType\":\"view-job_paymentType__BE0T5\",\"typeBorder\":\"view-job_typeBorder__R7jQm\",\"paymentmain\":\"view-job_paymentmain__ejYfy\",\"customRadio\":\"view-job_customRadio__C9Z8H\",\"fix\":\"view-job_fix__NRFOO\",\"hours\":\"view-job_hours__s1kVw\",\"timetracker\":\"view-job_timetracker__ut0cZ\",\"shift\":\"view-job_shift__2dlSR\",\"timeFrame\":\"view-job_timeFrame__j+Q-T\",\"radioLabel\":\"view-job_radioLabel__19vAG\",\"RadioButton\":\"view-job_RadioButton__F21av\",\"paymentBox\":\"view-job_paymentBox__PS9jL\",\"dollarBox\":\"view-job_dollarBox__CmYGa\",\"jobGalleri\":\"view-job_jobGalleri__Lc+x4\",\"viewBox\":\"view-job_viewBox__04ZW0\",\"viewHeading\":\"view-job_viewHeading__rzJVa\",\"defaultStatus\":\"view-job_defaultStatus__sF7Uc\",\"status\":\"view-job_status__p9QvE\",\"open\":\"view-job_open__-y1qk\",\"Accepted\":\"view-job_Accepted__SPymV\",\"CONFIRMED\":\"view-job_CONFIRMED__LIoTK\",\"ASSIGN\":\"view-job_ASSIGN__Rf5vD\",\"NotConfirmed\":\"view-job_NotConfirmed__hK3lN\",\"COMPLETED\":\"view-job_COMPLETED__LQaDi\",\"DECLINED\":\"view-job_DECLINED__JzIeY\",\"MANAGER_DECLINED\":\"view-job_MANAGER_DECLINED__ZLLTf\",\"finished\":\"view-job_finished__21gzC\",\"assign\":\"view-job_assign__uRJ2w\",\"modal\":\"view-job_modal__9jVc+\",\"modalHeader\":\"view-job_modalHeader__-AqYp\",\"headerTitle\":\"view-job_headerTitle__kcd8H\",\"attachmentBox\":\"view-job_attachmentBox__El24C\"};","import React from 'react'\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport style from './view-job.module.scss';\nimport { InfoCircle } from \"react-bootstrap-icons\";\nimport { Link } from 'react-router-dom';\n\nconst ViewAttachements = ({ show, setShow, attachments }) => {\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Documents</span>\n        </div>\n    );\n    const footerContent = (\n        <div className='d-flex justify-content-center'>\n            <Button className='outline-button' onClick={() => setShow(false)} style={{ borderRadius: '30px' }}>Close</Button>\n        </div>\n    );\n    return (\n        <Dialog visible={show} modal={false} header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={() => { if (!show) return; setShow(false); }}>\n            <div className='d-flex flex-wrap gap-2'>\n                {\n                    attachments?.map((attachment) => (\n                        <div className={style.attachmentBox}>\n                            <div className='d-flex align-items-center gap-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                    <path d=\"M9.29289 0H4C2.89543 0 2 0.895431 2 2V14C2 15.1046 2.89543 16 4 16H12C13.1046 16 14 15.1046 14 14V4.70711C14 4.44189 13.8946 4.18754 13.7071 4L10 0.292893C9.81246 0.105357 9.55811 0 9.29289 0ZM9.5 3.5V1.5L12.5 4.5H10.5C9.94772 4.5 9.5 4.05228 9.5 3.5ZM11 8C11 9.65685 9.65685 11 8 11C6.34315 11 5 9.65685 5 8C5 6.34315 6.34315 5 8 5C9.65685 5 11 6.34315 11 8ZM13 13.7553V14C13 14.5523 12.5523 15 12 15H4C3.44772 15 3 14.5523 3 14V13.7554C3 13.7554 4 12 8 12C12 12 13 13.7553 13 13.7553Z\" fill=\"#667085\" />\n                                </svg>\n                                <Link to={attachment?.link} target='_blank'>\n                                    <span className='text-dark'>{attachment?.name}</span>\n                                </Link>\n                            </div>\n\n                            <button className='border-0 p-0 bg-none'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                    <path d=\"M9.5 13C9.5 13.8284 8.82843 14.5 8 14.5C7.17157 14.5 6.5 13.8284 6.5 13C6.5 12.1716 7.17157 11.5 8 11.5C8.82843 11.5 9.5 12.1716 9.5 13ZM9.5 8C9.5 8.82843 8.82843 9.5 8 9.5C7.17157 9.5 6.5 8.82843 6.5 8C6.5 7.17157 7.17157 6.5 8 6.5C8.82843 6.5 9.5 7.17157 9.5 8ZM9.5 3C9.5 3.82843 8.82843 4.5 8 4.5C7.17157 4.5 6.5 3.82843 6.5 3C6.5 2.17157 7.17157 1.5 8 1.5C8.82843 1.5 9.5 2.17157 9.5 3Z\" fill=\"#344054\" />\n                                </svg>\n                            </button>\n                        </div>\n                    ))\n                }\n            </div>\n        </Dialog>\n    )\n}\n\nexport default ViewAttachements","import { Sidebar } from 'primereact/sidebar';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, X } from 'react-bootstrap-icons';\nimport { useQuery } from \"@tanstack/react-query\";\n\nimport style from './view-job.module.scss';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport clsx from 'clsx';\nimport { getJob } from '../../../../APIs/jobs-api';\nimport { formatDate } from '../../Pages/jobs/jobs-table';\nimport { Image } from 'primereact/image';\nimport { Chip } from 'primereact/chip';\nimport ViewAttachements from './view-attachements';\n\nconst statusBody = (status) => {\n    switch (status) {\n        case '1':\n            return <Chip className={`status ${style.open} font-14`} label={\"Open\"} />\n        case '2':\n            return <Chip className={`status ${style.ASSIGN} font-14`} label={\"Assign\"} />\n        case '3':\n            return <Chip className={`status ${style.NotConfirmed} font-14`} label={\"Not Confirmed\"} />\n        case '4':\n            return <Chip className={`status ${style.CONFIRMED} font-14`} label={\"Confirmed\"} />\n        case '5':\n            return <Chip className={`status ${style.COMPLETED} font-14`} label={\"Completed\"} />\n        case '6':\n            return <Chip className={`status ${style.MANAGER_DECLINED} font-14`} label={\"Canceled\"} />\n        case 'a':\n            return <Chip className={`status ${style.Accepted} font-14`} label={\"Accepted\"} />\n        case 'd':\n            return <Chip className={`status ${style.DECLINED} font-14`} label={\"Declined\"} />\n        default:\n            return <Chip className={`status ${style.defaultStatus} font-14`} label={status} />;\n    }\n}\n\nconst ViewJob = ({ visible, setVisible, jobId }) => {\n    const [show, setShow] = useState(false);\n    let paymentCycleObj = {\n        \"7\": \"WEEK\",\n        \"14\": \"TWO_WEEKS\",\n        \"28\": \"FOUR_WEEKS\",\n        \"1\": \"MONTH\"\n    }\n    const jobQuery = useQuery({\n        queryKey: [\"jobRead\", jobId],\n        queryFn: () => getJob(jobId),\n        enabled: !!jobId,\n        retry: 1,\n    });\n    const job = jobQuery?.data;\n\n    return (\n        <>\n            <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n                content={({ closeIconRef, hide }) => (\n                    <div className='create-sidebar d-flex flex-column'>\n                        <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                            <div className=\"d-flex align-items-center gap-3\">\n                                <div className={style.viewBox}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                                        <path d=\"M9.75 1.5C8.5076 1.5 7.5 2.50675 7.5 3.74963V4.5H2.25C1.00736 4.5 0 5.50736 0 6.75V18.75C0 19.9926 1.00736 21 2.25 21H21.75C22.9926 21 24 19.9926 24 18.75V6.75C24 5.50736 22.9926 4.5 21.75 4.5H16.5V3.74963C16.5 2.50675 15.4924 1.5 14.25 1.5H9.75ZM9.75 3H14.25C14.6645 3 15 3.33695 15 3.75092V4.5H9V3.74963C9 3.33566 9.33555 3 9.75 3ZM12.5797 13.3716L22.5 10.7262V18.75C22.5 19.1642 22.1642 19.5 21.75 19.5H2.25C1.83579 19.5 1.5 19.1642 1.5 18.75V10.7262L11.4203 13.3716C11.8001 13.4729 12.1999 13.4729 12.5797 13.3716ZM2.25 6H21.75C22.1642 6 22.5 6.33579 22.5 6.75V9.17379L12.1932 11.9223C12.0666 11.956 11.9334 11.956 11.8068 11.9223L1.5 9.17379V6.75C1.5 6.33579 1.83579 6 2.25 6Z\" fill=\"#079455\" />\n                                    </svg>\n                                </div>\n                                <span className={style.viewHeading}>Job Details</span>\n                            </div>\n                            <span>\n                                <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                    <X size={24} color='#667085' />\n                                </Button>\n                            </span>\n                        </div>\n\n\n                        <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                            <div className={clsx('d-flex justify-content-between align-items-center mb-3')}>\n                                <h1 className={style.heading}>Job Details</h1>\n                                <div className='d-flex align-items-center gap-2'>\n                                    {statusBody(job?.status)}\n                                    <span className='font-14'>Job ID: {jobId}</span>\n                                </div>\n                            </div>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Job Reference</label>\n                                        <p className={clsx(style.text)}>{job?.short_description || \"-\"}</p>\n                                    </div>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Job Description</label>\n                                        <p className={clsx(style.text, style.description)}>{job?.long_description || \"-\"}</p>\n                                    </div>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Assigned to</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                    <Row className={clsx(style.chooseUserBox, 'flex-nowrap', 'w-75')}>\n                                        <Col sm={2} className='p-0'>\n                                            <div className='d-flex justify-content-center align-items-center border' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden' }}>\n                                                {job?.worker?.has_photo ? <img src={job?.worker?.photo} style={{ width: '62px', height: '62px', borderRadius: '50%' }} />\n                                                    : <span className='font-16'>{job?.worker?.alias}</span>\n                                                }\n                                            </div>\n                                        </Col>\n                                        <Col sm={5} className='pe-0 ps-0'>\n                                            <label className={clsx(style.customLabel, 'text-nowrap')}>{job?.worker?.full_name || \"-\"}</label>\n                                            <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                        </Col>\n                                        <Col sm={5} className=''>\n                                            <div className='d-flex align-items-center gap-2 mb-3'>\n                                                <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                <span>{job?.worker?.hourly_rate || \"-\"} AUD</span>\n                                            </div>\n                                            <div className='d-flex align-items-center gap-2'>\n                                                <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                <span>{paymentCycleObj[job?.worker?.payment_cycle] || \"-\"}</span>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Time / Money</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column gap-3')}>\n                                    <div className='d-flex gap-3'>\n                                        <div className={style.paymentType}>\n                                            <label className={clsx(style.customLabel)}>Payment Type</label>\n                                            {\n                                                job?.type === \"2\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"fix\"\n                                                        value=\"2\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                                </div>\n                                            }\n                                            {\n                                                job?.type === \"3\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"fix\"\n                                                        value=\"3\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                                </div>\n                                            }\n                                            {\n                                                job?.type === \"4\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"fix\"\n                                                        value=\"4\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                                </div>\n                                            }\n                                        </div>\n                                        <div className=''>\n                                            <label className={clsx(style.customLabel)}>Payment</label>\n                                            <div className={style.paymentBox}>\n                                                <div className={style.dollarBox}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                        <path d=\"M4 10.7813C4.14782 12.4484 5.51294 13.6306 7.59107 13.7837V15H8.63448V13.7837C10.9039 13.6051 12.3125 12.3463 12.3125 10.4836C12.3125 8.89307 11.3647 7.97448 9.35617 7.45565L8.63448 7.26853V3.46659C9.75615 3.57716 10.5126 4.18104 10.7039 5.08262H12.1734C12.0082 3.4836 10.6343 2.33536 8.63448 2.20778V1H7.59107V2.23329C5.65207 2.46294 4.32172 3.70474 4.32172 5.38882C4.32172 6.84326 5.28687 7.87242 6.98241 8.3062L7.59107 8.4678V12.4994C6.44332 12.3293 5.65207 11.6999 5.46077 10.7813H4ZM7.39108 6.94532C6.34767 6.68165 5.79119 6.12029 5.79119 5.32928C5.79119 4.38518 6.49549 3.68773 7.59107 3.50061V6.99635L7.39108 6.94532ZM8.98228 8.81652C10.2692 9.13973 10.8343 9.67558 10.8343 10.5857C10.8343 11.6829 10.0083 12.4143 8.63448 12.5249V8.73147L8.98228 8.81652Z\" fill=\"#158ECC\" />\n                                                    </svg>\n                                                </div>\n                                                {job?.cost || 0.00} AUD\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className='d-flex gap-3'>\n                                        <div className={style.paymentType}>\n                                            <label className={clsx(style.customLabel)}>Time</label>\n                                            {\n                                                job?.time_type === \"1\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        value=\"1\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                            }\n                                            {\n                                                job?.time_type === \"T\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        value=\"T\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                                </div>\n                                            }\n                                        </div>\n                                        <div className=''>\n                                            <label className={clsx(style.customLabel)}>Payment</label>\n                                            <div className={style.paymentBox}>\n                                                <div className={style.dollarBox}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                        <path d=\"M8.51496 1.01896C8.34401 1.00635 8.17225 1 8 1V0C8.19685 0 8.39314 0.00726199 8.58852 0.0216722L8.51496 1.01896ZM10.5193 1.46905C10.1985 1.34533 9.86912 1.2454 9.53371 1.17008L9.75282 0.194382C10.1361 0.280463 10.5126 0.394665 10.8792 0.536055L10.5193 1.46905ZM11.889 2.17971C11.7458 2.08402 11.5994 1.99388 11.4503 1.90939L11.9432 1.0393C12.1136 1.13586 12.2809 1.23888 12.4446 1.34824C12.6082 1.4576 12.7674 1.5727 12.9219 1.69322L12.3066 2.48158C12.1715 2.37612 12.0322 2.27541 11.889 2.17971ZM13.7231 3.96934C13.5252 3.68829 13.3068 3.42218 13.0697 3.17321L13.794 2.48368C14.0649 2.76821 14.3145 3.07233 14.5407 3.39353L13.7231 3.96934ZM14.4672 5.32122C14.4012 5.16208 14.3296 5.00583 14.2526 4.85271L15.1458 4.40311C15.2339 4.5781 15.3157 4.75667 15.391 4.93853C15.4664 5.12039 15.5348 5.30453 15.5962 5.49054L14.6467 5.80423C14.5929 5.64147 14.5331 5.48035 14.4672 5.32122ZM14.9979 7.82822C14.9895 7.48455 14.9557 7.14197 14.8969 6.80326L15.8822 6.63231C15.9494 7.01939 15.988 7.41092 15.9976 7.80367L14.9979 7.82822ZM14.8655 9.36563C14.8991 9.1967 14.9264 9.02699 14.9474 8.85687L15.9398 8.97929C15.9159 9.17372 15.8847 9.36766 15.8463 9.56072C15.8079 9.75378 15.7625 9.94489 15.7102 10.1337L14.7464 9.867C14.7922 9.70179 14.8319 9.53457 14.8655 9.36563ZM13.914 11.745C14.0979 11.4546 14.2602 11.151 14.3995 10.8367L15.3137 11.2419C15.1545 11.6011 14.969 11.9481 14.7588 12.28L13.914 11.745ZM12.9497 12.9497C13.0715 12.828 13.1885 12.702 13.3005 12.5722L14.0577 13.2254C13.9297 13.3737 13.796 13.5177 13.6569 13.6569L12.9497 12.9497Z\" fill=\"#158ECC\" />\n                                                        <path d=\"M8 1C6.84885 1 5.71545 1.2839 4.70022 1.82655C3.68499 2.3692 2.81926 3.15386 2.17971 4.11101C1.54017 5.06816 1.14654 6.16827 1.03371 7.31388C0.920876 8.45949 1.09232 9.61525 1.53285 10.6788C1.97337 11.7423 2.66939 12.6808 3.55925 13.4111C4.44911 14.1414 5.50533 14.6409 6.63437 14.8655C7.76341 15.0901 8.93041 15.0327 10.032 14.6986C11.1336 14.3644 12.1358 13.7637 12.9497 12.9497L13.6569 13.6569C12.7266 14.5871 11.5812 15.2736 10.3223 15.6555C9.06332 16.0374 7.72961 16.1029 6.43928 15.8463C5.14895 15.5896 3.94183 15.0187 2.92486 14.1841C1.90788 13.3495 1.11243 12.2769 0.608966 11.0615C0.105504 9.846 -0.0904279 8.52514 0.0385242 7.21586C0.167476 5.90659 0.617333 4.64933 1.34825 3.55544C2.07916 2.46155 3.06857 1.5648 4.22883 0.94463C5.38909 0.324457 6.68439 0 8 0V1Z\" fill=\"#158ECC\" />\n                                                        <path d=\"M7.5 3C7.77614 3 8 3.22386 8 3.5V8.70984L11.2481 10.5659C11.4878 10.7029 11.5711 11.0083 11.4341 11.2481C11.2971 11.4878 10.9917 11.5711 10.7519 11.4341L7.25193 9.43412C7.09615 9.3451 7 9.17943 7 9V3.5C7 3.22386 7.22386 3 7.5 3Z\" fill=\"#158ECC\" />\n                                                    </svg>\n                                                </div>\n                                                {job?.time_type === \"1\" && formatDate(job?.start_date)}\n                                                {job?.time_type === \"T\" && <>{formatDate(job?.start_date)} - {formatDate(job?.end_date)} </>}\n                                                . {job?.duration}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Link to Project</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Project</label>\n                                        <p className={clsx(style.text)}>{job?.project?.number || \"-\"}</p>\n                                    </div>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Reference</label>\n                                        <p className={clsx(style.text, style.description)}>{job?.project?.reference || \"-\"}</p>\n                                    </div>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Description</label>\n                                        <p className={clsx(style.text, style.description)}>{job?.project?.description || \"-\"}</p>\n                                    </div>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Project Photos</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <label className={clsx(style.customLabel)}>Before</label>\n                                    <div className='d-flex gap-2' style={{ overflowX: 'auto' }}>\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria10.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria11.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria12.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria13.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria14.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria15.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                    </div>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Documents</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <Button className='outline-button d-flex gap-2' onClick={() => setShow(true)} style={{ borderRadius: '40px' }}>\n                                        Viw All Documents\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                            <path d=\"M1.25 4.375C1.25 3.33947 2.08947 2.5 3.125 2.5H6.57992C7.77713 2.5 8.78091 3.19995 9.46927 3.97997C9.98156 4.56048 10.5984 5 11.25 5H16.8759C17.912 5 18.75 5.84003 18.75 6.875V15.625C18.75 16.6605 17.9105 17.5 16.875 17.5H3.125C2.08947 17.5 1.25 16.6605 1.25 15.625V4.375ZM3.125 3.75C2.77982 3.75 2.5 4.02982 2.5 4.375V7.5H17.5V6.875C17.5 6.52926 17.2205 6.25 16.8759 6.25H11.25C10.0451 6.25 9.11184 5.46409 8.53203 4.80706C7.96726 4.16709 7.27657 3.75 6.57992 3.75H3.125ZM17.5 8.75H2.5V15.625C2.5 15.9702 2.77982 16.25 3.125 16.25H16.875C17.2202 16.25 17.5 15.9702 17.5 15.625V8.75Z\" fill=\"#344054\" />\n                                        </svg>\n                                    </Button>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>History</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <table className='w-100 table table-bordered rounded'>\n                                        <thead>\n                                            <tr>\n                                                <td>Date</td>\n                                                <td>User</td>\n                                                <td>Status</td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>-</td>\n                                                <td>-</td>\n                                                <td>-</td>\n                                            </tr>\n                                        </tbody>\n\n                                    </table>\n                                </Card.Header>\n                            </Card>\n                        </div>\n\n                        <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                            <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false) }} className='outline-button'>Cancel</Button>\n                            <Button type='button' onClick={() => { }} className='solid-button' style={{ minWidth: '75px' }}>Create {false && <ProgressSpinner\n                                style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />}</Button>\n                        </div>\n                    </div>\n                )}\n            ></Sidebar>\n            <ViewAttachements attachments={job?.attachments || []} show={show} setShow={setShow} />\n        </>\n    );\n}\n\nexport default ViewJob","import React, { forwardRef, useEffect, useRef, useState } from 'react'\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport style from './jobs.module.scss';\nimport { ChatText, Person, Repeat } from 'react-bootstrap-icons';\nimport { Chip } from 'primereact/chip';\nimport { Button } from 'primereact/button';\nimport NoDataFoundTemplate from '../../../../ui/no-data-template/no-data-found-template';\nimport JobDetails from '../../features/job-table-actions/job-details-dialog';\nimport { useNavigate } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport { getListOfJobs } from '../../../../APIs/jobs-api';\nimport ViewJob from '../../features/view-job/view-job';\n\nexport const formatDate = (timestamp) => {\n  const date = new Date(timestamp * 1000);\n  const day = date.getDate();\n  const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n    month: \"short\",\n  }).format(date);\n  const year = date.getFullYear();\n  return `${day} ${monthAbbreviation} ${year}`;\n};\n\nconst JobsTable = forwardRef(({ searchValue, setTotal, selected, setSelected, refetch, setRefetch }, ref) => {\n  const navigate = useNavigate();\n  const observerRef = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const [show, setShow] = useState({ visible: false, jobId: null });\n  const [jobDetails, setJobDetails] = useState({});\n  const [jobs, setJobs] = useState([]);\n  const [page, setPage] = useState(1);\n  const [sort, setSort] = useState({ sortField: 'id', sortOrder: -1 });\n  const [tempSort, setTempSort] = useState({ sortField: 'id', sortOrder: -1 });\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const limit = 25;\n\n  useEffect(() => {\n    setPage(1);  // Reset to page 1 whenever searchValue changes\n  }, [searchValue, refetch]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n\n      let order = \"\";\n      if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n      else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n      const data = await getListOfJobs(page, limit, searchValue, order);\n      setTotal(() => (data?.count || 0))\n      if (page === 1) setJobs(data.results);\n      else {\n        if (data?.results?.length > 0)\n          setJobs(prev => {\n            const existingIds = new Set(prev.map(data => data.id));\n            const newData = data.results.filter(data => !existingIds.has(data.id));\n            return [...prev, ...newData];\n          });\n      }\n      setSort(tempSort);\n      setHasMoreData(data.count !== jobs.length)\n      setLoading(false);\n    };\n\n    loadData();\n\n  }, [page, searchValue, tempSort, refetch]);\n\n  useEffect(() => {\n    if (jobs.length > 0 && hasMoreData) {\n      observerRef.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n      });\n\n      const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n      if (lastRow) observerRef.current.observe(lastRow);\n    }\n\n    return () => {\n      if (observerRef.current) observerRef.current.disconnect();\n    };\n  }, [jobs, hasMoreData]);\n\n  function openDeatils(data) {\n    setJobDetails(data);\n    setVisible(true);\n  }\n\n  const paymentBody = (rowData) => {\n    if (rowData.type_display === 'Hours')\n      return <div className='d-flex justify-content-center align-items-center' style={{ gap: '10px' }}>\n        <div className={`${style.payment} ${style.paymentHours}`}>{rowData.type_display}</div>\n        {rowData?.is_recurring && <Repeat color='#158ECC' />}\n      </div>\n    else\n      return <div className='d-flex justify-content-center align-items-center' style={{ gap: '10px' }}>\n        <div className={`${style.payment} ${style.paymentFix}`}>{rowData.type_display}</div>\n        {rowData?.is_recurring && <Repeat color='#158ECC' />}\n      </div>\n  }\n\n  const jobIDTemplate = (rowdata) => {\n    return <div className={`d-flex gap-2 align-items-center justify-content-center show-on-hover`}>\n      <span>{rowdata.number}</span>\n      <Button label=\"Open\" onClick={() => setShow({jobId: rowdata.id, visible: true }) } className='primary-text-button ms-3 show-on-hover-element' text />\n    </div>\n  }\n\n  const timeBody = (rowdata) => {\n    return <div className={`d-flex align-items-center justify-content-center show-on-hover`}>\n      <div className={`${style.time} ${rowdata.time_type === '1' ? style.frame : style.tracker}`}>\n        {rowdata.time_type_display}\n      </div>\n      <Button label=\"Open\" onClick={() => openDeatils(rowdata)} className='primary-text-button ms-3 show-on-hover-element' text />\n    </div>\n  }\n\n  const clientHeader = () => {\n    return <div className='d-flex align-items-center'>\n      Client\n      <small>A→Z</small>\n    </div>\n  }\n  const clientBody = (rowData) => {\n    return <div className='d-flex align-items-center'>\n      <div className={`d-flex justify-content-center align-items-center ${style.clientImg}`}>\n        {rowData?.client?.has_photo ? <img src={rowData?.client?.photo} /> : <Person color='#667085' />}\n      </div>\n      {rowData?.client?.name}\n    </div>\n  }\n\n  const nameBody = (rowData) => {\n    const name = `${rowData?.worker?.first_name} ${rowData?.worker?.last_name}`;\n    const initials = name.split(' ').map(word => word[0]).join('');\n    return <div className='d-flex align-items-center'>\n      <div className={`d-flex justify-content-center align-items-center ${style.clientName}`}>\n        {rowData?.worker?.photo ? <img src={rowData?.worker?.photo} style={{ width: '100%', height: '100%', borderRadius: '50%' }} /> : initials}\n      </div>\n      {name}\n    </div>\n  }\n\n  const statusBody = (rowData) => {\n    const status = rowData.status;\n    switch (status) {\n      case '1':\n        return <Chip className={`status ${style.open} font-14`} label={\"Open\"} />\n      case '2':\n        return <Chip className={`status ${style.ASSIGN} font-14`} label={\"Assign\"} />\n      case '3':\n        return <Chip className={`status ${style.NotConfirmed} font-14`} label={\"Not Confirmed\"} />\n      case '4':\n        return <Chip className={`status ${style.CONFIRMED} font-14`} label={\"Confirmed\"} />\n      case '5':\n        return <Chip className={`status ${style.COMPLETED} font-14`} label={\"Completed\"} />\n      case '6':\n        return <Chip className={`status ${style.MANAGER_DECLINED} font-14`} label={\"Canceled\"} />\n      case 'a':\n        return <Chip className={`status ${style.Accepted} font-14`} label={\"Accepted\"} />\n      case 'd':\n        return <div className='d-flex gap-2 align-items-center'>\n          <Chip className={`status ${style.DECLINED} font-14`} label={\"Declined\"} />\n          <ChatText size={16} />\n        </div>\n      default:\n        return <Chip className={`status ${style.defaultStatus} font-14`} label={status} />;\n    }\n  }\n\n  const startDateBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{formatDate(rowData.start_date)}</span>\n  }\n\n  const endDateBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{formatDate(rowData.end_date)}</span>\n  }\n\n  const assignedTimeBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{parseFloat(rowData.time_assigned).toFixed(2)}h</span>\n  }\n\n  const realTimeBody = (rowData) => {\n    const [hours, minutes, seconds] = rowData?.real_time?.split(':').map(Number);\n\n    return <span style={{ color: '#667085' }}>{parseFloat(hours + (minutes / 60) + (seconds / 3600)).toFixed(2)}h</span>\n  }\n\n  const bonusBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>${parseFloat(rowData.bonus || 0).toFixed(2)}</span>\n  }\n\n  const totalBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>${parseFloat(rowData.total || 0).toFixed(2)}</span>\n  }\n\n  const loadingIconTemplate = () => {\n    return <div style={{ position: 'fixed', top: '50%', left: '50%', background: 'white', width: '60px', height: '60px', borderRadius: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 10 }} className=\"shadow-lg\">\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n    </div>\n  }\n\n  const rowClassName = (data) => (data?.deleted ? style.deletedRow : '');\n\n  const onSort = (event) => {\n    const { sortField, sortOrder } = event;\n\n    setTempSort({ sortField, sortOrder })\n    setPage(1);  // Reset to page 1 whenever searchValue changes\n  };\n\n  return (\n    <>\n      <DataTable ref={ref} value={jobs} scrollable selectionMode={'checkbox'}\n        columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n        scrollHeight={\"calc(100vh - 175px)\"} className=\"border\" selection={selected}\n        onSelectionChange={(e) => setSelected(e.value)}\n        loading={loading}\n        loadingIcon={loadingIconTemplate}\n        emptyMessage={NoDataFoundTemplate}\n        sortField={sort?.sortField}\n        sortOrder={sort?.sortOrder}\n        onSort={onSort}\n        rowClassName={rowClassName}\n      >\n        <Column selectionMode=\"multiple\" headerClassName='ps-4 border-end-0' bodyClassName={'show-on-hover border-end-0 ps-4'} headerStyle={{ width: '3rem', textAlign: 'center' }} frozen></Column>\n        <Column field=\"number\" header=\"Job ID\" body={jobIDTemplate} style={{ minWidth: '100px' }} frozen sortable></Column>\n        <Column field=\"type_display\" header=\"Payment Type\" body={paymentBody} style={{ minWidth: '130px' }} frozen sortable></Column>\n        <Column field=\"time_type\" header=\"Time\" body={timeBody} style={{ minWidth: '118px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen sortable></Column>\n        <Column field=\"start_date\" header=\"Start\" body={startDateBody} style={{ minWidth: '122px' }} sortable></Column>\n        <Column field=\"end_date\" header=\"Finish\" body={endDateBody} style={{ minWidth: '122px' }} sortable></Column>\n        <Column field=\"client.name\" header={clientHeader} body={clientBody} style={{ minWidth: '162px' }}></Column>\n        <Column field=\"reference\" header=\"Job Reference\" style={{ minWidth: '270px' }}></Column>\n        <Column field=\"worker.firstname\" header=\"Name A→Z\" body={nameBody} style={{ minWidth: '205px' }}></Column>\n        <Column field=\"status\" header=\"Status\" body={statusBody} style={{ minWidth: '120px' }}></Column>\n        <Column field=\"time_assigned\" header=\"Time Assigned\" body={assignedTimeBody} style={{ minWidth: '117px' }} ></Column>\n        <Column field=\"real_time\" header=\"Real Time\" body={realTimeBody} bodyClassName={'text-end'} headerClassName='text-center' style={{ minWidth: '88px' }}></Column>\n        <Column field=\"bonus\" header=\"Bonus\" body={bonusBody} style={{ minWidth: '88px' }} sortable></Column>\n        <Column field=\"total\" header=\"Total\" body={totalBody} style={{ minWidth: '105px' }} sortable></Column>\n        <Column field=\"linkTo\" header=\"Linked To\" style={{ minWidth: '105px' }}></Column>\n      </DataTable>\n      <JobDetails visible={visible} setVisible={setVisible} jobDetails={jobDetails} />\n      <ViewJob visible={show?.visible} jobId={show?.jobId} setVisible={(bool) => setShow((others)=> ({...others, visible: bool }) )}/>\n    </>\n  )\n});\n\nexport default JobsTable;","// extracted by mini-css-extract-plugin\nexport default {\"floatButton\":\"job-chat_floatButton__eX1pR\"};","import React, { useRef } from 'react';\nimport { Chat } from 'react-bootstrap-icons';\n\nimport style from './job-chat.module.scss';\n\nconst JobChat = () => {\n    const op = useRef(null);\n\n    return (\n        <>\n            <button className={`${style.floatButton} border-0`}>\n                <Chat color='#344054' onClick={(e) => {}}/>\n            </button>\n            \n        </>\n\n    )\n}\n\nexport default JobChat","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import { Sidebar } from 'primereact/sidebar';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, FilePdf, FilePdfFill, Trash, X } from 'react-bootstrap-icons';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\n\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { Dropdown } from 'primereact/dropdown';\nimport clsx from 'clsx';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { getManagement } from '../../../../APIs/management-api';\nimport { Calendar } from 'primereact/calendar';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Button as PrimeButton } from 'primereact/button';\nimport { useDropzone } from 'react-dropzone';\nimport { createNewJob } from '../../../../APIs/jobs-api';\nimport { toast } from 'sonner';\nimport axios from 'axios';\n\nfunction getFileIcon(fileType) {\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\nconst CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};\n\nconst CreateJob = ({ visible, setVisible, setRefetch }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    // const [projectReference, setProjectReference] = useState(null);\n    // const [projectDescription, setProjectDescription] = useState(null);\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"1\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            console.log('acceptedFiles: ', acceptedFiles);\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...acceptedFiles.map((file) =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file),\n                        progress: 0,\n                    })\n                ),\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const [start, setStart] = useState(\"\");\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileuserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({\n        queryKey: [\"getManagement\"],\n        queryFn: getManagement,\n        staleTime: Infinity,\n    });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <img alt={option.label}\n                    src={option.image} style={{ width: '18px', borderRadius: '50%' }} />\n                <div>{option.label}</div>\n            </div>\n        );\n    }\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <img alt={option.label}\n                        src={option.image} style={{ width: '18px', borderRadius: '50%' }} />\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"1\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    }\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            setJobReference(getTemplateByIDQuery?.data?.title || \"\");\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    const uploadToS3 = async (file, url) => {\n        return axios.put(url, file, {\n            headers: {\n                \"Content-Type\": \"\",\n            },\n            onUploadProgress: (progressEvent) => {\n                const progress = Math.round(\n                    (progressEvent.loaded / progressEvent.total) * 100\n                );\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, { progress, url })\n                            : f\n                    );\n                });\n            },\n        }).catch((err) => {\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 0, url, error: true })\n                        : f\n                );\n            });\n        });\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            }\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    }\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.success(`Job id not found`);\n\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n\n                // Step 2: Upload the file to S3 using the signed URL\n                await uploadToS3(file, url);\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n                toast.error(`Failed to upload ${file.name}. Please try again.`);\n            }\n        }\n    }\n\n    const mutation = useMutation({\n        mutationFn: (data) => createNewJob(data),\n        onSuccess: async (response) => {\n            await fileUploadBySignedURL(response.id);\n            await attachmentsUpdateInJob(response.id);\n            toast.success(`Job created successfully`);\n            setVisible(false);\n            setRefetch((refetch) => !refetch);\n            reset();\n        },\n        onError: (error) => {\n            console.error('Error creating expense:', error);\n            toast.error('Failed to create job. Please try again.');\n        }\n    });\n\n    const onSubmit = () => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (!description) tempErrors.description = true;\n        else payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        if (!projectId) tempErrors.projectId = true;\n        else payload.project = projectId;\n\n        payload.project_photos = projectPhotoDeliver;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            <div style={{ position: 'relative', textAlign: 'start' }}>\n                                <Dropdown\n                                    options={\n                                        (templateQuery &&\n                                            templateQuery.data?.map((template) => ({\n                                                value: template.id,\n                                                label: `${template.name}`,\n                                            }))) ||\n                                        []\n                                    }\n                                    className={clsx(\n                                        style.dropdownSelect,\n                                        \"dropdown-height-fixed\",\n                                        \"outline-none\"\n                                    )}\n                                    style={{ height: \"44px\", width: '606px' }}\n                                    placeholder=\"Select template\"\n                                    onChange={(e) => {\n                                        setTemplatedId(e.value);\n                                    }}\n                                    value={templateId}\n                                    loading={templateQuery?.isFetching}\n                                    filter\n                                />\n                            </div>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>New Job</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setJobReference(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, jobReference: false }));\n                                                }}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.jobReference && (\n                                        <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to*</h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={\n                                                    (mobileuserQuery &&\n                                                        mobileuserQuery.data?.users?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo\n                                                        }))) ||\n                                                    []\n                                                }\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    let user = mobileuserQuery?.data?.users?.find(user => user.id === e.value)\n                                                    let paymentCycleObj = {\n                                                        \"7\": \"WEEK\",\n                                                        \"14\": \"TWO_WEEKS\",\n                                                        \"28\": \"FOUR_WEEKS\",\n                                                        \"1\": \"MONTH\"\n                                                    }\n                                                    if (user) {\n                                                        setSelectedUserInfo({\n                                                            hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                                                            paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                                                            image: user?.photo || \"\",\n                                                            name: `${user.first_name} ${user.last_name}`,\n                                                        })\n                                                    }\n\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }))\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileuserQuery?.isFetching}\n                                                filter\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                            <Col sm={2} className='p-0'>\n                                                <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden' }}>\n                                                    {selectedUserInfo?.image && <img src={selectedUserInfo?.image} style={{ width: '62px', height: '62px', borderRadius: '50%' }} />}\n                                                </div>\n                                            </Col>\n                                            <Col sm={5} className='pe-0 ps-0'>\n                                                <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                            </Col>\n                                            <Col sm={5} className=''>\n                                                <div className='d-flex align-items-center gap-2 mb-3'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                    <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                </div>\n                                                <div className='d-flex align-items-center gap-2'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                    <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment</label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time</label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value)\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts</label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value)\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End</label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.unique_id,\n                                                    label: `${project.reference} - ${project.number}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        filter\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>{parseFloat(file?.size / 1024).toFixed(2)} KB - {parseInt(file?.progress) || 0}% uploaded</p>\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            {/* <div className={style.deleteBox}>\n                                                                <Trash color='#F04438' size={16} />\n                                                            </div> */}\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false) }} className='outline-button'>Cancel</Button>\n                        {/*  onSubmit ()=>fileUploadBySignedURL(128) */}\n                        <Button type='button' onClick={onSubmit} className='solid-button' style={{ minWidth: '75px' }}>Create {mutation?.isPending && <ProgressSpinner\n                            style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                        />}</Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    )\n}\n\nexport default CreateJob","import React, { useRef, useState } from 'react';\nimport style from './jobs.module.scss';\nimport { Button } from 'react-bootstrap';\nimport { Download, Filter } from 'react-bootstrap-icons';\nimport JobsTable from './jobs-table';\nimport { useDebounce } from 'primereact/hooks';\nimport { PrimeReactProvider } from 'primereact/api';\nimport \"primereact/resources/themes/lara-light-cyan/theme.css\";\nimport JobChat from '../../features/job-chat';\nimport CreateJob from '../../features/create-job/create-job';\n\nconst JobsPage = () => {\n    const dt = useRef(null);\n    const menu = useRef(null);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [refetch, setRefetch] = useState(false);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n    const [selected, setSelected] = useState([]);\n\n    const exportCSV = (selectionOnly) => {\n        if (dt.current) {\n            dt.current.exportCSV({ selectionOnly });\n        } else {\n            console.error('DataTable ref is null');\n        }\n    };\n    return (\n        <PrimeReactProvider className='jobs-page'>\n            <div className={`topbar ${selected?.length ? style.active : ''}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    {\n                        selected?.length ? (\n                            <>\n                                <h6 className={style.selectedCount}>Selected: {selected?.length}</h6>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => exportCSV(true)}><Download /></button>\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={(e) => { }}><Filter /></button>\n                                </div>\n                                <div className=\"searchBox\" style={{ position: 'relative' }}>\n                                    <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                            <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                        </svg>\n                                    </div>\n                                    <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#98A2B3', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                                </div>\n                            </>\n                        )\n                    }\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '47%', top: '6px' }}>\n                    <h1 className=\"title p-0\" style={{ marginRight: '16px' }}>Jobs</h1>\n                    <Button className={`${style.newButton}`} onClick={() => setVisible(true)}>New</Button>\n                </div>\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    <h1 className={`${style.total} mb-0`}>Total</h1>\n                    <div className={`${style.totalCount}`}>{total} Jobs</div>\n                </div>\n            </div>\n            <JobsTable ref={dt} searchValue={debouncedValue} setTotal={setTotal} selected={selected} setSelected={setSelected} refetch={refetch}\n                setRefetch={setRefetch} />\n            <JobChat />\n            <CreateJob visible={visible} setVisible={setVisible} setRefetch={setRefetch}/>\n        </PrimeReactProvider>\n    )\n}\n\nexport default JobsPage","// extracted by mini-css-extract-plugin\nexport default {\"noDataBox\":\"no-data-found-template_noDataBox__HgeT1\",\"searchImg\":\"no-data-found-template_searchImg__MnYNA\",\"title\":\"no-data-found-template_title__P5uV2\",\"subTitle\":\"no-data-found-template_subTitle__zMBB-\",\"supportext\":\"no-data-found-template_supportext__pHg2P\"};","import React from 'react'\nimport clsx from 'clsx';\n\nimport style from './no-data-found-template.module.scss';\nimport NodataImg from \"../../assets/images/img/NodataImg.png\";\nimport SearchIcon from \"../../assets/images/icon/searchIcon.png\";\nimport { Button } from 'react-bootstrap';\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\n\nconst NoDataFoundTemplate = () => {\n    return (\n        <div className={clsx(style.noDataBox)}>\n            <div className='position-relative d-flex flex-column'>\n                <img src={NodataImg} alt='no-data' />\n                <img className={clsx(style.searchImg)} src={SearchIcon} alt='search' />\n            </div>\n            <h2 className={clsx(style.title)}>There is no results</h2>\n            <p className={clsx(style.subTitle)}>\n                The user you are looking for doesn't exist. <br />Here are some helpful links:\n            </p>\n            <Button className='outline-button' style={{ marginBottom: '32px' }}> <ChevronLeft /> Go back</Button>\n            <Link to={\"#\"}><span className={clsx(style.supportext)}>Support</span></Link>\n        </div>\n    )\n}\n\nexport default NoDataFoundTemplate"],"names":["API_BASE_URL","process","getJobTemplates","async","url","URL","fetchAPI","toString","method","getJobTemplate","id","createJobTemplate","options","body","data","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","endpoint","arguments","length","undefined","headers","requestOptions","localStorage","getItem","JSON","stringify","redirect","response","fetch","ok","Error","status","contentType","get","includes","json","message","text","error","console","updateProjectScheduleById","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","unique_id","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","getManagement","myHeaders","Headers","accessToken","append","ProjectCardApi","uniqueId","getTeamMobileUser","getTeamDesktopUser","JobConfirmation","_ref","visible","setVisible","headerElement","_jsxs","className","style","modalHeader","children","_jsx","src","warningIcon","alt","width","height","headerTitle","footerContent","Button","label","onClick","autoFocus","Dialog","modal","header","footer","onHide","fontSize","color","fontWeight","marginBottom","JobDetails","confirmation","setConfirmation","useState","iconJobstyle","InfoCircle","size","_Fragment","weekNames","Chip","weekName","show","setShow","attachments","borderRadius","map","attachment","xmlns","viewBox","fill","d","Link","to","link","target","name","statusBody","jobId","paymentCycleObj","jobQuery","useQuery","queryKey","queryFn","getJob","enabled","retry","job","Sidebar","position","dismissable","content","_ref2","_job$worker","_job$worker2","_job$worker3","_job$worker4","_job$worker5","_job$worker6","_job$project","_job$project2","_job$project3","closeIconRef","hide","borderBottom","padding","type","ref","e","X","overflow","clsx","Card","Header","short_description","long_description","Row","Col","sm","worker","has_photo","photo","alias","full_name","background","border","textAlign","display","alignItems","justifyContent","hourly_rate","Calendar3","payment_cycle","value","checked","htmlFor","cost","time_type","formatDate","start_date","end_date","duration","project","number","reference","description","overflowX","Image","preview","borderTop","stopPropagation","minWidth","ViewAttachements","timestamp","date","Date","getDate","Intl","DateTimeFormat","month","format","getFullYear","JobsTable","forwardRef","searchValue","setTotal","selected","setSelected","refetch","setRefetch","useNavigate","observerRef","useRef","jobDetails","setJobDetails","jobs","setJobs","page","setPage","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","loading","setLoading","useEffect","order","limit","isShowDeleted","offset","searchParams","getListOfJobs","_data$results","count","results","prev","existingIds","Set","newData","filter","has","loadData","current","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","DataTable","scrollable","selectionMode","columnResizeMode","resizableColumns","showGridlines","scrollHeight","selection","onSelectionChange","loadingIcon","loadingIconTemplate","top","left","zIndex","Spinner","animation","role","emptyMessage","NoDataFoundTemplate","onSort","event","rowClassName","deleted","deletedRow","Column","headerClassName","bodyClassName","headerStyle","frozen","field","rowdata","sortable","rowData","type_display","gap","payment","paymentHours","is_recurring","Repeat","paymentFix","time","frame","tracker","time_type_display","shadowRight","clientHeader","_rowData$client","_rowData$client2","_rowData$client3","clientImg","client","Person","_rowData$worker","_rowData$worker2","_rowData$worker3","_rowData$worker4","first_name","last_name","initials","split","word","join","clientName","open","ASSIGN","NotConfirmed","CONFIRMED","COMPLETED","MANAGER_DECLINED","Accepted","DECLINED","ChatText","defaultStatus","parseFloat","time_assigned","toFixed","_rowData$real_time","hours","minutes","seconds","real_time","Number","bonus","total","ViewJob","bool","others","JobChat","Chat","getFileIcon","fileType","fileData","imgBox","opacity","CircularProgressBar","percentage","strokeWidth","radius","circumference","Math","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition","templateId","setTemplatedId","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","log","prevFiles","file","Object","assign","createObjectURL","progress","setType","setCost","set_time_type","start","setStart","end","setEnd","setDuration","errors","setErrors","templateQuery","getTemplateByIDQuery","mobileuserQuery","projectQuery","staleTime","Infinity","itemTemplate","option","image","selectedItemTemplate","props","placeholder","_getTemplateByIDQuery","_getTemplateByIDQuery2","title","uploadToS3","axios","put","onUploadProgress","progressEvent","round","loaded","f","catch","err","mutation","useMutation","mutationFn","createNewJob","onSuccess","toast","success","post","filename","Authorization","fileUploadBySignedURL","_file$url","obj","push","attachmentsUpdateInJob","onError","onSubmit","tempErrors","payload","toISOString","project_photos","values","mutate","_ref3","_templateQuery$data","_mobileuserQuery$data","_mobileuserQuery$data2","_projectQuery$data","Dropdown","template","dropdownSelect","onChange","isFetching","Body","newJobTag","customLabel","IconField","InputIcon","ProgressSpinner","InputText","inputBox","InputTextarea","users","user","_mobileuserQuery$data3","_mobileuserQuery$data4","find","valueTemplate","chooseUserBox","paymentType","lable","paymentmain","RadioButton","customRadio","radioLabel","fix","timetracker","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","fillRule","clipRule","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","prevMonths","m","on","marginTop","CloudUpload","fileBox","fileNameBox","parseInt","isPending","JobsPage","dt","inputValue","debouncedValue","setInputValue","useDebounce","PrimeReactProvider","active","selectedCount","filterBox","exportCSV","selectionOnly","Download","Filter","marginRight","newButton","totalCount","CreateJob","NodataImg","SearchIcon","ChevronLeft"],"sourceRoot":""}