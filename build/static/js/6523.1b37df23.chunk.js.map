{"version":3,"file":"static/js/6523.1b37df23.chunk.js","mappings":"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","sources":["APIs/base-api.js","APIs/ProfileApi.js","APIs/service-api.js","components/layout/modals/accounting-contact.js","components/layout/modals/book-keeping-contact.js","components/layout/modals/insurance-contact.js","components/layout/modals/modal-sales-contact-finance.js","components/Home.js","APIs/HomeApi.js","pages/business/dashboard/dashboard.jsx","APIs/email-template.js"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import { nanoid } from \"nanoid\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const fetchProfile = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/profile/`, requestOptions);\n    if (response.status === 401) {\n      window.localStorage.clear();\n      window.sessionStorage.clear();\n      window.location.replace(\"/login\");\n    }\n\n    if (!response.ok) {\n      if (response.status === 404) throw new Error('Not found');\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.includes('application/json')) {\n      const data = await response.json();\n      localStorage.setItem('profileData', JSON.stringify(data));\n      return data;\n    } else {\n      const text = await response.text();\n      localStorage.setItem('profileData', text);\n      return text;\n    }\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n\n\nexport const updateProfile = async (data, photo) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => {\n    formData.append(key, data[key]);\n  });\n\n  if (photo?.croppedImageBlob) {\n    const photoHintId = nanoid(6);\n    formData.append('photo', photo?.croppedImageBlob, `${photoHintId}.png`);\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/profile/update/`, requestOptions);\n    const result = await response.text();\n    console.log('result>>>>>>>>>>: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createAdditionalService = async (data) => {\n    const endpoint = `/additional-service/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport ClockHistoryCircle from \"../../../assets/images/icon/clock-history-icon.png\";\nimport LockZapCircle from \"../../../assets/images/icon/lock-icon.png\";\nimport ZapCircle from \"../../../assets/images/icon/zap.png\";\nimport homeBoxImg04 from \"../../../assets/images/img/homeboxImg04.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel03.png\";\n\nconst AccountingContact = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'accounting_contact', // Updated to reflect accounting context\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeBoxImg04})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Accounting</h3>\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our Accountants team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Get the Best Australian Accountant.</h2>\n                  <p>We provide only the finest accountants who will look after your company's tax submissions and ATO communications on a personalized and consistent basis.</p>\n                  <ul>\n                    <li>\n                      <img src={ClockHistoryCircle} alt=\"ClockHistoryCircle\" />\n                      <span>\n                        <h5>Security and Compliance</h5>\n                        Ensure adherence to all regulatory requirements.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={LockZapCircle} alt=\"LockZapCircle\" />\n                      <span>\n                        <h5>Individualized Approach</h5>\n                        Tailored services to meet your unique needs.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={ZapCircle} alt=\"ZapCircle\" />\n                      <span>\n                        <h5>Transparent and Timely Communication</h5>\n                        Keep informed with clear and prompt updates.\n                      </span>\n                    </li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>“Thank you for providing the best accountant. This definitely removes any uncertainty and doubt when communicating with the taxation office”</p>\n                    <strong>Richard Karsay</strong>\n                    <span>Director - Precision Flooring</span>\n                  </div>\n                  <div className='centerimgTag'>\n                    <img src={LenderPanel} alt=\"LenderPanel\" />\n                  </div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default AccountingContact;","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport ClockHistoryCircle from \"../../../assets/images/icon/clock-history-icon.png\";\nimport LockZapCircle from \"../../../assets/images/icon/lock-icon.png\";\nimport ZapCircle from \"../../../assets/images/icon/zap.png\";\nimport homeboxImg02 from \"../../../assets/images/img/homeboxImg02.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel01.png\";\n\nconst BookkeepingContact = ({ onAdd }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'book_keeping_contact', // Updated to reflect bookkeeping context\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      if (onAdd) onAdd({ /* You can pass data here if needed */ });\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeboxImg02})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Book keeping</h3>\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our book keeping team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Need a Booking Service?</h2>\n                  <p>We partner with the top booking professionals in the country to ensure all your transactions are accurately recorded and properly allocated.</p>\n                  <ul>\n                    <li>\n                      <img src={ClockHistoryCircle} alt=\"ClockHistoryCircle\" />\n                      <span>\n                        <h5>Save Time</h5>\n                        Reduce the effort and attention needed for processing paperwork.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={LockZapCircle} alt=\"LockZapCircle\" />\n                      <span>\n                        <h5>Enhance Security and Accountability</h5>\n                        Ensure every transaction is properly allocated and accounted for.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={ZapCircle} alt=\"ZapCircle\" />\n                      <span>\n                        <h5>Ease Your Burdens</h5>\n                        Offload your book keeping and accounting tasks with cost-effective solutions.\n                      </span>\n                    </li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>“I believe the strength of their company lies in its book keeping, as it provides a clear and accountable way to manage daily operations, ensure compliance, and control every transaction.”</p>\n                    <strong>Robert Sanasi</strong>\n                    <span>Vice President ICMS</span>\n                  </div>\n                  <div className='centerimgTag'>\n                    <img src={LenderPanel} alt=\"LenderPanel\" />\n                  </div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default BookkeepingContact;","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport CalendarweekCircle from \"../../../assets/images/icon/calendar-week.png\";\nimport ClipboardCircle from \"../../../assets/images/icon/clipboard-ch.png\";\nimport PersonIconCircle from \"../../../assets/images/icon/personIcon.png\";\nimport homeboxImg03 from \"../../../assets/images/img/homeboxImg03.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel02.png\";\n\nconst InsuranceContact = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'insurance_contact', // Updated to reflect insurance context\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeboxImg03})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Insurance</h3>\n\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our Insurance team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Secure your business insurance today.</h2>\n                  <p>We offer comprehensive quotes tailored to your industry and specific business needs.</p>\n                  <ul>\n                    <li>\n                      <img src={ClipboardCircle} alt=\"ClipboardCircle\" />\n                      <span>\n                        <h5>Instant Quotes</h5>\n                        Receive the best quotes with just one click.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={CalendarweekCircle} alt=\"CalendarweekCircle\" />\n                      <span>\n                        <h5>Renewal Reminders</h5>\n                        Get timely reminders for insurance renewals.\n                      </span>\n                    </li>\n                    <li>\n                      <img src={PersonIconCircle} alt=\"PersonIconCircle\" />\n                      <span>\n                        <h5>Single Point of Contact</h5>\n                        Simplify your management with one dedicated contact.\n                      </span>\n                    </li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>“Thank you, guys! Having one point of contact really helps us manage everything in one place.”</p>\n                    <strong>Francis Malabanan</strong>\n                    <span>Art One</span>\n                  </div>\n                  <div className='centerimgTag'>\n                    <img src={LenderPanel} alt=\"LenderPanel\" />\n                  </div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default InsuranceContact;","import React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { NavLink } from \"react-router-dom\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport { useMutation } from '@tanstack/react-query';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport { createAdditionalService } from '../../../APIs/service-api';\nimport ChartBreakoutSquare from \"../../../assets/images/icon/chart-breakout-square.png\";\nimport MessageChatCircle from \"../../../assets/images/icon/message-chat-circle.png\";\nimport ZapCircle from \"../../../assets/images/icon/zap.png\";\nimport homeboxImg01 from \"../../../assets/images/img/homeboxImg01.png\";\nimport LenderPanel from \"../../../assets/images/img/lender-panel 1.png\";\n\nconst ModalSalesContactFinance = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      type: 'finance_contact',\n      first_name: '',\n      last_name: '',\n      email: '',\n      job_title: '',\n      phone: '',\n      text: ''\n    },\n    mode: 'onChange'\n  });\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: createAdditionalService,\n    onSuccess: () => {\n      reset();\n      handleClose();\n      toast.success('Your message has been sent successfully');\n    },\n    onError: (error) => {\n      console.error('Submission error:', error);\n      toast.error('An error occurred while submitting the form. Please try again.');\n    },\n  });\n\n  const onSubmit = (data) => {\n    mutate(data);\n  };\n\n  return (\n    <>\n      <div className=\"imageBoxHome\" onClick={handleOpen} style={{\n        backgroundImage: `url(${homeboxImg01})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        cursor: 'pointer'\n      }} >\n        <div className='textOverly'>\n          <h3>Finance</h3>\n          <Button variant=\"link\">\n            <div className={`styleGrey01 popupModalStyle`}>\n              Learn More\n            </div>\n          </Button>\n        </div>\n      </div>\n      \n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modelStyleBoxstatus contactFinanceWrap\" sx={{ width: 1408 }}>\n          <Typography id=\"modal-modal-title\" className={``} variant=\"h6\" component=\"h2\">\n            <>\n              <div className='modelHeader modelHeaderBillig'>\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon color=\"#667085\" size={24} />\n                </IconButton>\n              </div>\n              <Row className=\"justify-content-md-center\">\n                <Col sm={6}>\n                  <div className='leftFormWrap'>\n                    <h3>Contact our Finance team</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <Row>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>First Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.first_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"first_name\"\n                                control={control}\n                                rules={{ required: 'First name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter first name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.first_name && <p className=\"error-message\">{errors.first_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Last Name <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.last_name ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"last_name\"\n                                control={control}\n                                rules={{ required: 'Last name is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter last name'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.last_name && <p className=\"error-message\">{errors.last_name.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Work Email <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.email ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"email\"\n                                control={control}\n                                rules={{\n                                  required: 'Email is required',\n                                  pattern: {\n                                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                    message: 'Invalid email address'\n                                  }\n                                }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"email\"\n                                    placeholder='Enter work email'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={6}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Job Title <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.job_title ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"job_title\"\n                                control={control}\n                                rules={{ required: 'Job title is required' }}\n                                render={({ field }) => (\n                                  <input\n                                    {...field}\n                                    type=\"text\"\n                                    placeholder='Enter job title'\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.job_title && <p className=\"error-message\">{errors.job_title.message}</p>}\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>Phone (Optional)</label>\n                            <div className={``}>\n                              <Controller\n                                name=\"phone\"\n                                control={control}\n                                render={({ field: { onChange, value } }) => (\n                                  <PhoneInput\n                                    defaultCountry='au'\n                                    value={value}\n                                    onChange={onChange}\n                                    className={`phoneInput rounded ${errors.phone ? 'error-border' : ''}`}\n                                    placeholder='+1 (555) 000-0000'\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                        </Col>\n                        <Col sm={12}>\n                          <div className=\"formgroup mb-2\">\n                            <label>How can our team help you? <span className=\"required\">*</span></label>\n                            <div className={`inputInfo ${errors.text ? 'error-border' : ''}`}>\n                              <Controller\n                                name=\"text\"\n                                control={control}\n                                rules={{ required: 'This field is required' }}\n                                render={({ field }) => (\n                                  <textarea\n                                    {...field}\n                                    placeholder={`Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.`}\n                                  />\n                                )}\n                              />\n                            </div>\n                            {errors.text && <p className=\"error-message\">{errors.text.message}</p>}\n                          </div>\n                        </Col>\n                        <Row className='formBottom'>\n                          <Col sm={12}>\n                            <p>By clicking submit, I acknowledge memate.com</p>\n                            <NavLink className=\"\" to=\"#\"> Privacy Policy</NavLink>\n                            <button type=\"submit\" disabled={isPending}>\n                              {isPending ? 'Submitting...' : 'Submit'}\n                            </button>\n                          </Col>\n                        </Row>\n                      </Row>\n                    </form>\n                  </div>\n                </Col>\n                <Col sm={6} className='rightText'>\n                  <h2>Empowering Your Business Growth with Tailored Finance Solutions.</h2>\n                  <p>From asset financing to commercial loans, auto debt refinancing, and equipment finance.</p>\n                  <ul>\n                    <li><img src={MessageChatCircle} alt=\"MessageChatCircle\" /><span>We provide you with a personal manager who will offer a comprehensive individual solution and act as your personal finance broker.</span></li>\n                    <li><img src={ZapCircle} alt=\"ZapCircle\" /><span>We are also able to restructure loans, refinance, and provide you with a wide range of financial lending options, from major banks to private lenders and hedge funds across Australia.</span></li>\n                    <li><img src={ChartBreakoutSquare} alt=\"ChartBreakoutSquare\" /><span>We are proud to work with Australian businesses and have already helped thousands of Australian businesses save, expand, and restructure.</span></li>\n                  </ul>\n                  <div className='bgShade mt-4 mb-4'>\n                    <p>Working with MeMate Fiancn was a game-changer for our business. Their personalised approach and expert guidance helped us navigate complex financial challenges with ease. Thanks to their support\"</p>\n                    <strong>Daniel Vinkl </strong>\n                    <span>CEO Visual Advertising Solutions</span>\n                  </div>\n                  <div className='centerimgTag'><img src={LenderPanel} alt=\"LenderPanel\" /></div>\n                </Col>\n              </Row>\n            </>\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalSalesContactFinance;","import React, { useState, useEffect } from 'react';\nimport { CheckCircle, PlusLg, ChevronDoubleUp, ChevronDoubleDown, InfoCircle } from \"react-bootstrap-icons\";\nimport CountUp from 'react-countup';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport classNames from 'classnames';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { getOutgoingEmail } from '../APIs/email-template';\nimport { fetchHomePage } from \"../APIs/HomeApi\";\nimport { fetchProfile } from '../APIs/ProfileApi';\nimport AccountingContact from './layout/modals/accounting-contact';\nimport BookkeepingContact from './layout/modals/book-keeping-contact';\nimport InsuranceContact from './layout/modals/insurance-contact';\nimport ModalSalesContactFinance from './layout/modals/modal-sales-contact-finance';\n\nconst Home = () => {\n    const [isVisible, setIsVisible] = useState(false);\n    const [selectedOption, setSelectedOption] = useState('');\n    const [hasBankDetails, setHasBankDetails] = useState(true);\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const [homeData, setHomeData] = useState({\n        expense: {},\n        invoices_due: {},\n        quote_this_week: {},\n        active_quotes: {},\n        waiting_for_approval: {},\n        projects: {}\n    });\n\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail\n    });\n    const isConnectedEmail = outgoingEmailTemplateQuery?.data?.outgoing_email !== 'no-reply@memate.com.au';\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await fetchProfile();\n                setHasBankDetails(!!data?.bank_detail?.account_number);\n            } catch (error) {\n                console.error(\"Error fetching profile:\", error);\n            }\n        };\n\n        if (!profileData?.bank_details?.account_number) fetchData();\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await fetchHomePage();\n                setHomeData(result);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const handleOptionChange = (event) => {\n        setSelectedOption(event.target.value);\n    };\n\n    const formatCurrency = (value) => {\n        if (value !== undefined && value !== null) {\n            return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n        } else {\n            return 'N/A'; // Or any default value you prefer\n        }\n    };\n\n    const toggleVisibility = () => {\n        setIsVisible(!isVisible);\n    };\n\n    const getGreeting = () => {\n        const hour = new Date().getHours();\n        if (hour < 12) return 'Good morning';\n        if (hour < 17) return 'Good afternoon';\n        return 'Good evening';\n    };\n\n    return (\n        <div style={{ position: 'relative' }}>\n            <Helmet>\n                <title>MeMate - Dashboard</title>\n            </Helmet>\n            <div className='HomePageWrap'>\n                <div className=\"goodHeading\" >\n                    <h1 style={{ fontSize: '26px' }}>{getGreeting()}, {profileData?.first_name ? profileData.first_name : 'Guest'} 👋</h1>\n                </div>\n                <div className='d-flex justify-content-center px-5'>\n                    <Row className='d-flex flex-nowrap'>\n                        {\n                            !isConnectedEmail &&\n                            <Col style={{ minWidth: '306px' }}>\n                                <div className={classNames('grid-item', { 'active': selectedOption === 'option1' })}>\n                                    <label>\n                                        <input\n                                            type=\"radio\"\n                                            value=\"option1\"\n                                            checked={selectedOption === 'option1'}\n                                            onChange={handleOptionChange}\n                                        />\n                                        <div className='boxCheckNo'>\n                                            <div className='ckeckIcon'><CheckCircle size={16} color=\"#1AB2FF\" /></div>\n                                            <span>1</span>\n                                        </div>\n                                        <div className='boxItem'>\n                                            <h2>Link Your Email</h2>\n                                            <p>Connect your email to manage communications.</p>\n                                        </div>\n\n                                    </label>\n                                    <div className='boxItemBut'>\n                                        <Link to={\"/settings/integrations?openEmail=true\"}><Button variant=\"link\">Connect</Button></Link>\n                                    </div>\n                                </div>\n                            </Col>\n                        }\n\n                        {\n                            !hasBankDetails &&\n                            <Col style={{ minWidth: '306px' }}>\n                                <div className={classNames('grid-item', { 'active': selectedOption === 'option2' })}>\n                                    <label>\n                                        <input\n                                            type=\"radio\"\n                                            value=\"option2\"\n                                            checked={selectedOption === 'option2'}\n                                            onChange={handleOptionChange}\n                                        />\n                                        <div className='boxCheckNo'>\n                                            <div className='ckeckIcon'><CheckCircle size={16} color=\"#1AB2FF\" /></div>\n                                            <span>{isConnectedEmail ? 1 : 2}</span>\n                                        </div>\n                                        <div className='boxItem'>\n                                            <h2>Enter Bank Details</h2>\n                                            <p>Provide your bank details to secure transactions.</p>\n                                        </div>\n\n                                    </label>\n                                    <div className='boxItemBut'>\n                                        <Link to=\"/settings/generalinformation/bank-details\"><Button variant=\"link\">Add Details</Button></Link>\n                                    </div>\n                                </div>\n                            </Col>\n                        }\n\n                        {/* <Col style={{ minWidth: '306px' }}>\n                            <div className={classNames('grid-item', { 'active': selectedOption === 'option3' })}>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"option3\"\n                                        checked={selectedOption === 'option3'}\n                                        onChange={handleOptionChange}\n                                    />\n                                    <div className='boxCheckNo'>\n                                        <div className='ckeckIcon'><CheckCircle size={16} color=\"#1AB2FF\" /></div>\n                                        <span>3</span>\n                                    </div>\n                                    <div className='boxItem'>\n                                        <h2>Add Team Details</h2>\n                                        <p>Add team members and define roles for efficiency.</p>\n                                    </div>\n\n                                </label>\n                                <div className='boxItemBut'>\n                                    <Link to={\"/settings/users/desktop\"}><Button variant=\"link\">Add Members</Button></Link>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col style={{ minWidth: '306px' }}>\n                            <div className={classNames('grid-item', { 'active': selectedOption === 'option4' })}>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"option4\"\n                                        checked={selectedOption === 'option4'}\n                                        onChange={handleOptionChange}\n                                    />\n                                    <div className='boxCheckNo'>\n                                        <div className='ckeckIcon'>\n                                            <CheckCircle size={16} color=\"#1AB2FF\" />\n\n                                        </div>\n                                        <span>4</span>\n                                    </div>\n                                    <div className='boxItem'>\n                                        <h2>Your First Project</h2>\n                                        <p>Start your first project and begin tracking progress.</p>\n                                    </div>\n                                </label>\n                                <div className='boxItemBut'>\n                                    <Link to=\"/sales/newquote/selectyourclient\"><Button variant=\"link\">Create New Request</Button></Link>\n                                </div>\n                            </div>\n                        </Col> */}\n                    </Row>\n                </div>\n                <Container>\n\n                    <Row className='d-flex flex-nowrap'>\n                        <Col className='mt-4'>\n                            <Link to=\"/expenses?isShowUnpaid=true\">\n                                <div className=\"bigBoxHome tobePaidWrap\" >\n                                    <div className='TooltipWrapper'>\n                                        {['top'].map((placement) => (\n                                            <OverlayTrigger\n                                                key={placement}\n                                                placement={placement}\n                                                overlay={\n                                                    <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                        Number and Total value of all expenses to be paid\n                                                    </Tooltip>\n                                                }\n                                            >\n                                                <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                            </OverlayTrigger>\n                                        ))}\n                                    </div>\n                                    <h3>Expense to be paid</h3>\n                                    <div className='countNoBox tobePaidH'> <span><CountUp start={0} end={homeData?.expense?.cnt != null ? homeData?.expense?.cnt : 0} duration={10} /></span>\n                                    </div>\n                                    <h4>{formatCurrency(homeData?.expense?.sum || 0)}</h4>\n                                </div>\n                            </Link>\n                        </Col>\n                        <Col className='mt-4'>\n                            <Link to=\"/invoices?isShowUnpaid=true\">\n                                <div className=\"bigBoxHome invoiceDuewrap\" >\n                                    <div className='TooltipWrapper'>\n                                        {['top'].map((placement) => (\n                                            <OverlayTrigger\n                                                key={placement}\n                                                placement={placement}\n                                                overlay={\n                                                    <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                        Number and value of all Invoices which are due to be paid.\n                                                    </Tooltip>\n                                                }\n                                            >\n                                                <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                            </OverlayTrigger>\n                                        ))}\n                                    </div>\n                                    <h3>Invoices Due</h3>\n                                    <div className='countNoBox invoiceDueH'> <span> <CountUp start={0} end={homeData?.invoices_due?.cnt} duration={9} /></span></div>\n                                    <h4>{formatCurrency(homeData?.invoices_due?.sum)}</h4>\n                                </div>\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-5'>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Total Amount and Value of all quotes Won this week\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <h3>Jobs scheduled this week</h3>\n                                <div className='countNoBox jobScheduledH'>\n                                    <div className='pluslgIcon'><PlusLg size={20} color=\"#106B99\" /></div>\n                                    <span><CountUp start={0} end={homeData?.quote_this_week?.cnt} duration={2} /></span></div>\n                                <h4>{formatCurrency(homeData?.quote_this_week?.sum)}</h4>\n                            </div>\n                        </Col>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Summary of all Quotes in Sales excluding status Draft and Declined\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <h3>Active Quotes</h3>\n                                <div className='countNoBox activeQouteH'>\n                                    <Link to=\"/sales\">\n                                        <div className='pluslgIcon'> <PlusLg size={20} color=\"#106B99\" /></div></Link>\n                                    <span> <CountUp start={0} end={homeData?.active_quotes?.cnt} duration={5} /></span></div>\n                                <h4>{formatCurrency(homeData?.active_quotes?.sum)}</h4>\n                            </div>\n                        </Col>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Total Amount and Value of all Jobs and Timesheets waiting for approval by Employe and Contractors\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <h3>Job waiting for approval</h3>\n                                <div className='countNoBox jobWaitingH'> <span> <CountUp start={0} end={homeData?.waiting_for_approval?.count} duration={8} /></span></div>\n                                <h4>{formatCurrency(homeData?.waiting_for_approval?.sum)}</h4>\n                            </div>\n                        </Col>\n                        <Col className='mt-4'>\n                            <div className=\"bigBoxHome h-100\">\n                                <div className='TooltipWrapper'>\n                                    {['top'].map((placement) => (\n                                        <OverlayTrigger\n                                            key={placement}\n                                            placement={placement}\n                                            overlay={\n                                                <Tooltip className='TooltipOverlay' id={`tooltip-${placement}`}>\n                                                    Total of all projects in Management\n                                                </Tooltip>\n                                            }\n                                        >\n                                            <Button><InfoCircle size={16} color=\"#cdcfd2\" /> </Button>\n                                        </OverlayTrigger>\n                                    ))}\n                                </div>\n                                <h3>Active Projects</h3>\n                                <div className='countNoBox ActiveProjectH'> <span>\n                                    <CountUp start={0} end={homeData?.projects?.cnt} duration={4} />\n                                </span></div>\n                                <h4>{formatCurrency(homeData?.projects?.sum)}</h4>\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Container>\n            </div>\n\n            <div className={`my-component homeBottom ${isVisible ? 'show' : 'hide'}`}>\n                <button className='downArrowIcon' style={{ position: 'relative', top: '5px' }} onClick={toggleVisibility}>\n\n                    Additional Services {isVisible ? (\n                        <ChevronDoubleUp size={20} color=\"#6941C6\" />\n                    ) : (\n                        <ChevronDoubleDown size={20} color=\"#6941C6\" />\n                    )}\n                </button>\n                <div className='w-100 mx-auto'>\n                    <ul className='pt-4'>\n                        <li>\n                            <ModalSalesContactFinance />\n                        </li>\n                        <li>\n                            <BookkeepingContact />\n                        </li>\n                        <li>\n                            <InsuranceContact />\n                        </li>\n                        <li>\n                            <AccountingContact />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Home;"," const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n  export const fetchHomePage = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  \n    const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n  \n    try {\n      const response = await fetch(`${API_BASE_URL}/home/`, requestOptions);\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Profile fetch error:', error);\n      throw error;\n    }\n  };\n\n\n","import React from 'react';\nimport Home from '../../../components/Home';\n\nconst Dashboard = () => {\n  return (\n    <Home />\n  );\n};\n\nexport default Dashboard;","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","window","clear","sessionStorage","location","replace","Error","contentType","get","includes","json","message","text","error","console","API_BASE_URL","process","fetchProfile","myHeaders","Headers","append","data","setItem","updateProfile","photo","formData","Object","keys","forEach","key","croppedImageBlob","photoHintId","nanoid","result","log","createAdditionalService","toString","AccountingContact","open","setOpen","useState","handleClose","control","handleSubmit","formState","errors","reset","useForm","defaultValues","type","first_name","last_name","email","job_title","phone","mode","mutate","isPending","useMutation","mutationFn","onSuccess","toast","success","onError","_jsxs","_Fragment","children","_jsx","className","onClick","handleOpen","style","backgroundImage","homeBoxImg04","backgroundSize","backgroundRepeat","cursor","Button","variant","Modal","onClose","Box","sx","width","Typography","id","component","IconButton","edge","color","CloseIcon","size","Row","Col","sm","onSubmit","Controller","name","rules","required","render","_ref","field","placeholder","_ref2","pattern","value","_ref3","_ref4","_ref5","onChange","PhoneInput","defaultCountry","_ref6","NavLink","to","disabled","src","ClockHistoryCircle","alt","LockZapCircle","ZapCircle","LenderPanel","onAdd","homeboxImg02","_ref7","InsuranceContact","homeboxImg03","ModalSalesContactFinance","homeboxImg01","Home","_outgoingEmailTemplat","_homeData$expense","_homeData$expense2","_homeData$expense3","_homeData$invoices_du","_homeData$invoices_du2","_homeData$quote_this_","_homeData$quote_this_2","_homeData$active_quot","_homeData$active_quot2","_homeData$waiting_for","_homeData$waiting_for2","_homeData$projects","_homeData$projects2","isVisible","setIsVisible","selectedOption","setSelectedOption","hasBankDetails","setHasBankDetails","profileData","parse","homeData","setHomeData","expense","invoices_due","quote_this_week","active_quotes","waiting_for_approval","projects","outgoingEmailTemplateQuery","useQuery","queryKey","queryFn","getOutgoingEmail","isConnectedEmail","outgoing_email","useEffect","_profileData$bank_det","bank_details","account_number","_data$bank_detail","bank_detail","fetchData","fetchHomePage","handleOptionChange","event","target","formatCurrency","toLocaleString","currency","position","Helmet","fontSize","getGreeting","hour","Date","getHours","minWidth","classNames","checked","CheckCircle","Link","Container","map","placement","OverlayTrigger","overlay","Tooltip","InfoCircle","CountUp","start","end","cnt","duration","sum","PlusLg","count","top","toggleVisibility","ChevronDoubleUp","ChevronDoubleDown","BookkeepingContact","Dashboard","getJobTemplates","getJobTemplate","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates"],"sourceRoot":""}