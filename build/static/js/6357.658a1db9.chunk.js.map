{"version":3,"file":"static/js/6357.658a1db9.chunk.js","mappings":"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","sources":["APIs/expenses-api.js","webpack://memateapp/./src/components/Work/Pages/tasks/task.module.scss?447c","components/Work/features/task/create-task/create-task.js","components/Work/features/task/view-task/view-task.js","components/Work/Pages/tasks/task-table.js","components/Work/Pages/tasks/index.js","shared/lib/fetch-api-instance.js","webpack://memateapp/./src/shared/ui/support/support.module.scss?fdc5","shared/ui/support/support.jsx","entities/support/api/support-api.js","webpack://memateapp/./src/ui/no-data-template/no-data-found-template.module.scss?18de","ui/no-data-template/no-data-found-template.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfExpense = async (page, limit, search=\"\", order=\"\", isShowUnpaid) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/expenses/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowUnpaid) url.searchParams.append('status', 'not_paid');\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getXeroCodesList = async () => {\n  const endpoint = `/references/xero-codes/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProjectsList = async () => {\n  const endpoint = `/references/projects/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getExpense = async (id) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewExpense = async (data) => {\n  const endpoint = '/expenses/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateExpense = async (id, data) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const paidExpense = async (data) => {\n  const endpoint = '/expenses/paid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const unpaidExpense = async (data) => {\n  const endpoint = '/expenses/unpaid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendExpenseToXeroApi = async (data) => {\n  const endpoint = `/expenses/to-xero/`;\n  const options = {\n      method: 'PUT',\n      body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteExpense = async (uniqueId) => {\n  const endpoint = `/expenses/delete/${uniqueId}/`;\n  const options = {\n    method: 'DELETE'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"task_active__XHjXL\",\"selectedCount\":\"task_selectedCount__KCjbh\",\"filterBox\":\"task_filterBox__Vl8TJ\",\"newButton\":\"task_newButton__FgzVj\",\"total\":\"task_total__iv2al\",\"totalCount\":\"task_totalCount__g7jIX\",\"shadowRight\":\"task_shadowRight__POYJ0\",\"clientName\":\"task_clientName__bfmFM\",\"complete\":\"task_complete__zEIDq\",\"pending\":\"task_pending__4JfNO\",\"projectImg\":\"task_projectImg__SdMAS\",\"projectText\":\"task_projectText__2Lg5C\",\"projectNumber\":\"task_projectNumber__bQcj7\"};","import { useEffect, useRef, useState } from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { Person, QuestionCircle } from 'react-bootstrap-icons';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { Dropdown } from 'primereact/dropdown';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport { toast } from 'sonner';\nimport { getProjectsList } from '../../../../../APIs/expenses-api';\nimport { createNewTask, getUserList, updateTask } from '../../../../../APIs/task-api';\nimport { fetchTasksDelete } from '../../../../../APIs/TasksApi';\nimport taskEditIcon from '../../../../../assets/images/icon/taskEditIcon.svg';\nimport newTaskImg from '../../../../../assets/images/new-task.svg';\nimport { FallbackImage } from '../../../../../shared/ui/image-with-fallback/image-avatar';\nimport SelectDate from '../../../../Business/Pages/management/task/select-date';\n\n\n\nconst dateFormat = (dateInMiliSec) => {\n    if (!dateInMiliSec) return null;\n\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    const date = new Date(1000 * +dateInMiliSec);\n    return date;\n};\n\nconst CreateTask = ({ show, setShow, refetch, taskId, setTaskId, defaultValue }) => {\n    const dropdownRef = useRef(null);\n    const [submitted, setSubmitted] = useState(false);\n\n    const [taskTitle, setTaskTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [project, setProject] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [date, setDate] = useState(null);\n    const [errors, setErrors] = useState({\n        taskTitle: false,\n        description: false,\n        project: false,\n        user: false,\n        date: false,\n    });\n\n    useEffect(() => {\n        if (taskId && defaultValue) {\n            setTaskTitle(defaultValue?.title);\n            setDescription(defaultValue?.description);\n            setProject(defaultValue?.project?.id);\n            setUser(defaultValue?.user?.id);\n            setDate({ startDate: dateFormat(defaultValue?.from_date), endDate: dateFormat(defaultValue?.to_date) });\n        }\n    }, [taskId, defaultValue]);\n\n    const reset = () => {\n        setTaskTitle(\"\");\n        setDescription(\"\");\n        setProject(\"\");\n        setUser(null);\n        setDate(null);\n        setSubmitted(false);\n        setErrors({\n            taskTitle: false,\n            description: false,\n            project: false,\n            user: false,\n            date: false\n        });\n    };\n    const projectsList = useQuery({ queryKey: ['getProjectsList'], queryFn: getProjectsList });\n    const usersList = useQuery({ queryKey: ['getUserList'], queryFn: getUserList });\n\n    const mutation = useMutation({\n        mutationFn: (data) => taskId ? updateTask(taskId, data) : createNewTask(data),\n        onSuccess: () => {\n            refetch();\n            setShow(false);\n            reset();\n            if (taskId) setTaskId(null);\n            toast.success(`Task ${taskId ? \"updated\" : \"created\"} successfully`);\n        },\n        onError: (error) => {\n            console.error(`Error ${taskId ? \"updating\" : \"creating\"} task:`, error);\n            toast.error(`Failed to ${taskId ? \"update\" : \"create\"} client. Please try again.`);\n        }\n    });\n    useEffect(() => {\n        if (submitted) {\n            const newErrors = {\n                taskTitle: !taskTitle,\n                description: !description,\n                project: !project,\n                user: !user,\n                date: !date\n            };\n            setErrors(newErrors);\n        }\n    }, [taskTitle, description, project, user, date, submitted]);\n\n    const handleSubmit = () => {\n        setSubmitted(true);\n        const newErrors = {\n            taskTitle: !taskTitle,\n            description: !description,\n            project: !project,\n            user: !user,\n            date: !date\n        };\n        setErrors(newErrors);\n\n        if (!newErrors.taskTitle && !newErrors.description && !newErrors.user && !newErrors.date) {\n            mutation.mutate({\n                title: taskTitle,\n                description: description,\n                project: project,\n                user: user,\n                from_date: date.startDate,\n                to_date: date.endDate,\n            });\n        }\n    };\n\n    const deleteMutation = useMutation({\n        mutationFn: (data) => fetchTasksDelete(taskId),\n        onSuccess: () => {\n            console.log('Delete success');\n            setShow(false);\n            refetch();\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n        }\n    });\n\n    const handleDelete = () => {\n        deleteMutation.mutate();\n    };\n\n    const handleClose = () => setShow(false);\n    return (\n        <Modal show={show} centered onHide={handleClose} className='task-form'>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <img src={taskId ? taskEditIcon : newTaskImg} alt='task-details' style={{ width: '48px', height: '48px' }} />\n                    <span className='modal-task-title'>{taskId ? \"Edit\" : \"New\"} Task</span>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ background: '#f9fafb' }}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Task Title</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Enter task title\"\n                            value={taskTitle}\n                            onChange={(e) => setTaskTitle(e.target.value)}\n                        />\n                        <InputGroup.Text>\n                            <QuestionCircle />\n                        </InputGroup.Text>\n                    </InputGroup>\n                    {errors.taskTitle && <Form.Text className=\"text-danger\">Task title is required</Form.Text>}\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder='Enter a description...'\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                    />\n                    {errors.description && <Form.Text className=\"text-danger\">Description is required</Form.Text>}\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Project Task</Form.Label>\n                    <Dropdown\n                        options={projectsList?.data?.map((project) => ({\n                            value: project.id,\n                            label: `${project.number}: ${project.reference}`\n                        })) || []}\n                        onChange={(e) => {\n                            setProject(e.value);\n                            console.log('e.value: ', e.value);\n                        }}\n                        className='w-100 outline-none'\n                        style={{ height: '46px' }}\n                        value={project}\n                        loading={projectsList?.isFetching}\n                        placeholder=\"Select project\"\n                        filter\n                    />\n                    {errors.project && <Form.Text className=\"text-danger\">Project task is required</Form.Text>}\n                </Form.Group>\n            </Modal.Body>\n            <div className='d-flex align-items-center border-top px-3 py-2'>\n                <div className='d-flex align-items-center gap-4'>\n                    {!user && <Person\n                        color={dropdownRef.current?.panel?.element?.offsetParent ? \"#1AB2FF\" : \"#475467\"}\n                        size={22} style={{ position: 'relative', left: '10px', zIndex: 1 }}\n                        onClick={() => dropdownRef.current?.show()} className='me-3 cursor-pointer' />\n                    }\n                    <Dropdown\n                        ref={dropdownRef}\n                        options={usersList?.data?.map((user) => ({\n                            value: user?.id,\n                            label: user?.name || \"-\",\n                            photo: user?.photo || \"\",\n                            has_photo: user?.has_photo\n                        })) || []}\n                        onChange={(e) => {\n                            setUser(e.value);\n                        }}\n                        valueTemplate={(option) => {\n                            return <div className='d-flex gap-2 align-items-center'>\n                                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                    <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                </div>\n                                {option?.label}\n                            </div>;\n                        }}\n                        itemTemplate={(option) => {\n                            return (\n                                <div className='d-flex gap-2 align-items-center'>\n                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                        <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                    </div>\n                                    {option?.label}\n                                </div>\n                            );\n                        }}\n                        className='outline-none border-0 p-0'\n                        style={{\n                            width: !user ? '0px' : 'fit-content',\n                            height: !user ? '0px' : '46px',\n                            zIndex: !user ? '0' : '1',\n                            position: 'relative',\n                            left: !user ? '-60px' : '0px',\n                            top: !user ? '-15px' : '0px',\n                        }}\n                        value={user}\n                        dropdownIcon={<></>}\n                        placeholder=\"Select project\"\n                        filter\n                    />\n                </div>\n                <SelectDate dateRange={date} setDateRange={setDate} />\n            </div>\n            {\n                (errors.user || errors.date) && <div className='d-flex align-items-center' style={{ gap: '16px', padding: \"0 30px 8px 30px\" }}>\n                    {errors.user && <Form.Text className=\"text-danger\">User is required</Form.Text>}\n                    {errors.date && <Form.Text className=\"text-danger\">Date is required</Form.Text>}\n                </div>\n            }\n            <Modal.Footer className='d-flex justify-content-between'>\n                <Button type='button' className='delete-button' onClick={handleDelete}>{deleteMutation.isPending ? 'Loading...' : 'Delete Task'}</Button>\n                <Button type='button' className='save-button' onClick={handleSubmit}>{mutation.isPending ? 'Loading...' : `${taskId ? \"Update\" : \"Create\"} Task`}</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateTask;","import { useState } from 'react';\nimport { ArrowRight } from 'react-bootstrap-icons';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { getTask } from '../../../../../APIs/task-api';\nimport { TaskCompleteJob } from '../../../../../APIs/TasksApi';\nimport placeholderUser from '../../../../../assets/images/Avatar.svg';\nimport taskdetails from '../../../../../assets/images/task-details.svg';\nimport CreateTask from '../create-task/create-task';\n\nconst TaskLoadingView = () => {\n  return (\n    <>\n      <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n        <Placeholder xs={12} bg=\"secondary\" size='lg' />\n      </Placeholder>\n      <Placeholder as=\"p\" animation=\"wave\">\n        <Placeholder xs={12} bg=\"secondary\" style={{ height: '80px' }} size='lg' />\n      </Placeholder>\n      <table className='task-deatils-table w-100'>\n        <tbody>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n    </>\n  );\n};\n\nconst ViewTaskModal = ({ view, setView, taskId, setTaskId, reInitialize }) => {\n  const [showEditModal, setShowEditModal] = useState(false);\n  const { isFetching: isLoading, data } = useQuery({\n    queryKey: ['taskId', taskId],\n    queryFn: () => getTask(taskId),\n    enabled: !!taskId,\n    retry: 1,\n    cacheTime: 0\n  });\n  const mutation = useMutation({\n    mutationFn: (updateData) => TaskCompleteJob(taskId, updateData),\n    onSuccess: () => {\n      handleClose();\n      setTaskId(null);\n      reInitialize();\n    },\n    onError: (error) => {\n      console.error('Error updating task:', error);\n    }\n  });\n  const handleInComplete = () => mutation.mutate(false);\n  const handleComplete = () => mutation.mutate(true);\n  const handleClose = () => setView(false);\n  const dateFormat = (dateInMiliSec) => {\n    if (!dateInMiliSec) return \"-\";\n\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    const date = new Date(1000 * +dateInMiliSec);\n    const formattedDate = date.toLocaleDateString('en-US', options)?.replace(/,/g, '');\n    return formattedDate;\n  };\n\n  function handleEdit() {\n    handleClose();\n    setShowEditModal(true);\n  }\n\n  return (\n    <>\n      <Modal show={view} centered onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <img src={taskdetails} alt='task-details' style={{ width: '48px', height: '48px' }} />\n            <span className='modal-task-title'>Task Details</span>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {isLoading ? <TaskLoadingView />\n            : (\n              <>\n                <p className='task-title'>{data?.title || \"-\"}</p>\n                <p className='task-description'>{data?.description || \"-\"}</p>\n\n                <table className='task-deatils-table'>\n                  <tbody>\n                    <tr style={{ marginBottom: '12px' }}>\n                      <td style={{ width: '122px', paddingBottom: '12px' }}>Project Task</td>\n                      <td style={{ paddingBottom: '12px' }}>{data?.project && data.project.reference ? data.project.reference : '-'}</td>\n                    </tr>\n                    <tr>\n                      <td style={{ width: '122px', paddingBottom: '12px' }}>ID</td>\n                      <td style={{ paddingBottom: '12px' }}>{data?.number || \"-\"}</td>\n                    </tr>\n                    <tr>\n                      <td style={{ width: '122px', paddingBottom: '12px' }}>Assigned</td>\n                      <td style={{ paddingBottom: '12px', display: 'flex', alignItems: 'center', gap: '4px' }}>\n                        <img src={data?.user?.has_photo ? data?.user.photo : placeholderUser} alt='img-assigned' style={{ width: '24px', height: '24px', borderRadius: '50%' }} />\n                        <span>{data?.user?.full_name || \"-\"}</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={{ width: '122px', paddingBottom: '12px' }}>Date</td>\n                      <td style={{ paddingBottom: '12px', display: 'flex', alignItems: 'center', gap: '8px' }}>\n                        <span>{dateFormat(data?.from_date)}</span>\n                        <ArrowRight size={20} color=\"#475467\" />\n                        <span>{dateFormat(data?.to_date)}</span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </>\n            )\n          }\n        </Modal.Body>\n        {\n          isLoading ? <Modal.Footer>\n            <Placeholder as=\"p\" animation=\"wave\">\n              <Placeholder xs={12} bg=\"secondary\" style={{ height: '40px', width: '93px', borderRadius: '4px' }} size='lg' />\n            </Placeholder>\n            <Placeholder as=\"p\" animation=\"wave\">\n              <Placeholder xs={12} bg=\"secondary\" style={{ height: '40px', width: '93px', borderRadius: '4px' }} size='lg' />\n            </Placeholder>\n          </Modal.Footer>\n            : <Modal.Footer>\n              <Button className='edit-button' onClick={handleEdit}>Edit Task</Button>\n              {\n                data?.finished\n                  ?\n                  <Button className='incomplete-button' onClick={handleInComplete}>\n                    {\n                      mutation.isPending ? (\n                        <>\n                          Loading...\n                        </>\n                      ) : <>\n                        Incomplete\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\">\n                          <path d=\"M20 10.5C20 16.0228 15.5228 20.5 10 20.5C4.47715 20.5 0 16.0228 0 10.5C0 4.97715 4.47715 0.5 10 0.5C15.5228 0.5 20 4.97715 20 10.5ZM15.0379 6.71209C14.6718 6.34597 14.0782 6.34597 13.7121 6.71209C13.7032 6.72093 13.6949 6.73029 13.6872 6.74013L9.34674 12.2709L6.72985 9.65403C6.36373 9.28791 5.77014 9.28791 5.40402 9.65403C5.0379 10.0201 5.0379 10.6137 5.40402 10.9799L8.71208 14.2879C9.0782 14.654 9.67179 14.654 10.0379 14.2879C10.0461 14.2798 10.0538 14.2712 10.061 14.2622L15.0512 8.02434C15.404 7.65727 15.3995 7.07371 15.0379 6.71209Z\" fill=\"#F04438\" />\n                        </svg>\n                      </>\n                    }\n                  </Button>\n                  :\n                  <Button className='complete-button' onClick={handleComplete}>\n                    {\n                      mutation.isPending ? (\n                        <>\n                          Loading...\n                        </>\n                      ) : <>\n                        Complete\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\">\n                          <path d=\"M20 10.5C20 16.0228 15.5228 20.5 10 20.5C4.47715 20.5 0 16.0228 0 10.5C0 4.97715 4.47715 0.5 10 0.5C15.5228 0.5 20 4.97715 20 10.5ZM15.0379 6.71209C14.6718 6.34597 14.0782 6.34597 13.7121 6.71209C13.7032 6.72093 13.6949 6.73029 13.6872 6.74013L9.34674 12.2709L6.72985 9.65403C6.36373 9.28791 5.77014 9.28791 5.40402 9.65403C5.0379 10.0201 5.0379 10.6137 5.40402 10.9799L8.71208 14.2879C9.0782 14.654 9.67179 14.654 10.0379 14.2879C10.0461 14.2798 10.0538 14.2712 10.061 14.2622L15.0512 8.02434C15.404 7.65727 15.3995 7.07371 15.0379 6.71209Z\" fill=\"#17B26A\" />\n                        </svg>\n                      </>\n                    }\n                  </Button>\n              }\n            </Modal.Footer>\n        }\n      </Modal>\n      <CreateTask show={showEditModal} setShow={setShowEditModal} taskId={taskId} setTaskId={setTaskId} defaultValue={data} refetch={reInitialize}/>\n    </>\n  );\n};\n\nexport default ViewTaskModal;","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { FileText } from 'react-bootstrap-icons';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport style from './task.module.scss';\nimport { getListOfTasks } from '../../../../APIs/task-api';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\nimport Loader from '../../../../shared/ui/loader/loader';\nimport NoDataFoundTemplate from '../../../../ui/no-data-template/no-data-found-template';\nimport ViewTaskModal from '../../features/task/view-task/view-task';\n\n\n\n\nconst formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n        month: \"short\",\n    }).format(date);\n    const year = date.getFullYear();\n    return `${day} ${monthAbbreviation} ${year}`;\n};\n\nconst TaskTable = forwardRef(({ searchValue, setTotal, selected, setSelected, refetch, setRefetch }, ref) => {\n    const { trialHeight } = useTrialHeight();\n    const observerRef = useRef(null);\n    const [visible, setVisible] = useState(false);\n    const [taskId, setTaskId] = useState(null);\n\n    const [page, setPage] = useState(1);\n    const [tasks, setTasks] = useState([]);\n    const [sort, setSort] = useState({ sortField: 'id', sortOrder: -1 });\n    const [tempSort, setTempSort] = useState({ sortField: 'id', sortOrder: -1 });\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const limit = 25;\n\n    useEffect(() => {\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    }, [searchValue, refetch]);\n\n    useEffect(() => {\n        const loadData = async () => {\n            setLoading(true);\n\n            let order = \"\";\n            if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n            else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n            const data = await getListOfTasks(page, limit, searchValue, order);\n            setTotal(() => (data?.count || 0));\n            if (page === 1) setTasks(data.results);\n            else {\n                if (data?.results?.length > 0)\n                    setTasks(prev => {\n                        const existingIds = new Set(prev.map(data => data.id));\n                        const newData = data.results.filter(data => !existingIds.has(data.id));\n                        return [...prev, ...newData];\n                    });\n            }\n            setSort(tempSort);\n            setHasMoreData(data.count !== tasks.length);\n            setLoading(false);\n        };\n\n        loadData();\n\n    }, [page, searchValue, tempSort, refetch]);\n\n    useEffect(() => {\n        if (tasks.length > 0 && hasMoreData) {\n            observerRef.current = new IntersectionObserver(entries => {\n                if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n            });\n\n            const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n            if (lastRow) observerRef.current.observe(lastRow);\n        }\n\n        return () => {\n            if (observerRef.current) observerRef.current.disconnect();\n        };\n    }, [tasks, hasMoreData]);\n\n    const idBody = (rowData) => {\n        return <div className={`d-flex align-items-center justify-content-center show-on-hover`}>\n            <div>{rowData.number}</div>\n            <Button label=\"Open\" onClick={() => { setTaskId(rowData?.id); setVisible(true); }} className='primary-text-button ms-3 show-on-hover-element' text />\n        </div>;\n    };\n\n    const nameBody = (rowData) => {\n        const name = `${rowData?.user.full_name}`;\n        const initials = `${rowData?.user?.alias}`;\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientName}`}>\n                {rowData?.user?.has_photo\n                    ? <FallbackImage has_photo={rowData?.user?.has_photo} photo={rowData?.user?.photo} is_business={false}/>\n                    : initials\n                }\n            </div>\n            {name}\n        </div>;\n    };\n\n    const statusBody = (rowdata) => {\n        return <div className={`${style.time} ${rowdata.finished ? style.complete : style.pending}`}>\n            {rowdata.finished ? \"Complete\" : \"Not Complete\"}\n        </div>;\n    };\n\n    const projectBody = (rowData) => {\n        return <div className='d-flex align-items-center gap-2'>\n            <div className={clsx(style.projectImg, 'd-flex align-items-center justify-content-center')}>\n                <FileText color='#475467' size={13} />\n            </div>\n            <div>\n                <h1 className={clsx(style.projectText, 'mb-0')}>{rowData?.project?.reference}</h1>\n                <h6 className={clsx(style.projectNumber, 'mb-0')}>{rowData?.project?.number}</h6>\n            </div>\n        </div>;\n    };\n\n    const startBody = (rowData) => {\n        return formatDate(rowData.from_date);\n    };\n\n    const endBody = (rowData) => {\n        return formatDate(rowData.to_date);\n    };\n\n    const rowClassName = (data) => (data?.deleted ? style.deletedRow : '');\n\n    const onSort = (event) => {\n        const { sortField, sortOrder } = event;\n\n        setTempSort({ sortField, sortOrder });\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    };\n\n    return (\n        <>\n            <DataTable ref={ref} value={tasks} scrollable selectionMode={'checkbox'}\n                columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n                scrollHeight={`calc(100vh - 175px - ${trialHeight}px)`} className=\"border\" selection={selected}\n                onSelectionChange={(e) => setSelected(e.value)}\n                loading={loading}\n                loadingIcon={Loader}\n                emptyMessage={<NoDataFoundTemplate isDataExist={!!searchValue} />}\n                sortField={sort?.sortField}\n                sortOrder={sort?.sortOrder}\n                onSort={onSort}\n                rowClassName={rowClassName}\n            >\n                <Column selectionMode=\"multiple\" headerClassName='ps-4 border-end-0' bodyClassName={'show-on-hover border-end-0 ps-4'} headerStyle={{ width: '3rem', textAlign: 'center' }} frozen></Column>\n                <Column field=\"number\" header=\"Task ID\" body={idBody} style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"title\" header=\"Task Title\" style={{ minWidth: '150px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column field=\"user.full_name\" header=\"Assigne\" body={nameBody} style={{ minWidth: '208px' }}></Column>\n                <Column field=\"finished\" header=\"Status\" body={statusBody} style={{ minWidth: '120px' }}></Column>\n                <Column field=\"project.reference\" header=\"Project\" body={projectBody} style={{ minWidth: '460px' }}></Column>\n                <Column field=\"from_date\" header=\"Start Date\" body={startBody} style={{ minWidth: '100px' }} sortable></Column>\n                <Column field=\"to_date\" header=\"Due Date\" body={endBody} style={{ minWidth: '100px' }} sortable></Column>\n            </DataTable>\n            <ViewTaskModal view={visible} setView={setVisible} taskId={taskId} setTaskId={setTaskId} reInitialize={() => setRefetch((refetch) => !refetch)} />\n        </>\n    );\n});\n\nexport default TaskTable;","import React, { useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Download, Filter } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { useDebounce } from 'primereact/hooks';\nimport TaskTable from './task-table';\nimport style from './task.module.scss';\nimport CreateTask from '../../features/task/create-task/create-task';\n\nconst TaskPage = () => {\n    const dt = useRef(null);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n    const [selected, setSelected] = useState([]);\n    const [refetch, setRefetch] = useState(false);\n\n    const exportCSV = (selectionOnly) => {\n        if (dt.current) {\n            dt.current.exportCSV({ selectionOnly });\n        } else {\n            console.error('DataTable ref is null');\n        }\n    };\n    return (\n        <div className='jobs-page'>\n            <Helmet>\n                <title>MeMate - Tasks</title>\n            </Helmet>\n            <div className={`topbar ${selected?.length ? style.active : ''}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    {\n                        selected?.length ? (\n                            <>\n                                <h6 className={style.selectedCount}>Selected: {selected?.length}</h6>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => exportCSV(true)}><Download /></button>\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => {}}><Filter size={20}/></button>\n                                </div>\n                                <div className=\"searchBox\" style={{ position: 'relative' }}>\n                                    <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                            <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                        </svg>\n                                    </div>\n                                    <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                                </div>\n                            </>\n                        )\n                    }\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0\" style={{ marginRight: '16px' }}>Tasks</h1>\n                    <Button onClick={()=> setVisible(true)} className={`${style.newButton}`}>New</Button>\n                </div>\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    <h1 className={`${style.total} mb-0`}>Total</h1>\n                    <div className={`${style.totalCount}`}>{total} Jobs</div>\n                </div>\n            </div>\n            <TaskTable ref={dt} searchValue={debouncedValue} setTotal={setTotal} selected={selected} setSelected={setSelected} refetch={refetch} setRefetch={setRefetch}/>\n            <CreateTask show={visible} setShow={setVisible} refetch={() => setRefetch((refetch)=> !refetch)}/>\n        </div>\n    );\n};\n\nexport default TaskPage;","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function with timeout and error handling.\n * @param {string} endpoint - The API endpoint.\n * @param {object} [options={}] - Fetch options (method, headers, body).\n * @param {boolean} [isRequiredLoggedin=true] - Whether authentication is required.\n * @param {number} [timeout=30000] - Timeout duration in milliseconds (default: 30s).\n * @returns {Promise<any>} - The API response.\n */\nexport const fetchInstance = async (path, options = {}, isRequiredLoggedin = true, timeout = 30000) => {\n    const endpoint = new URL(`${API_BASE_URL}${path}`);\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    // Create an AbortController to handle timeouts\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    const defaultHeaders = new Headers({\n        ...(isFormData ? {} : { 'Content-Type': 'application/json' }),\n        ...headers\n    });\n\n    if (isRequiredLoggedin && accessToken) {\n        defaultHeaders.set('Authorization', `Bearer ${accessToken}`);\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : body ? JSON.stringify(body) : null,\n        redirect: 'follow',\n        signal: controller.signal // Attach AbortController\n    };\n\n    try {\n        const response = await fetch(endpoint, requestOptions);\n\n        if (!response.ok) {\n            const errorMessage = await response.text();\n            throw new Error(`HTTP error! Status: ${response.status} - ${errorMessage}`);\n        }\n\n        const contentType = response.headers.get('Content-Type') || '';\n        return contentType.includes('application/json') ? response.json() : response.text();\n    } catch (error) {\n        if (error.name === 'AbortError') {\n            console.error('Fetch request timed out.');\n            throw new Error('Request timeout. Please try again.');\n        }\n        console.error('Fetch API error:', error);\n        throw error;\n    } finally {\n        clearTimeout(timeoutId);\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"support_form__Uc3cv\",\"content\":\"support_content__zZg6p\",\"field\":\"support_field__hVjcM\",\"p-button\":\"support_p-button__gjGEe\",\"circleDesignStyle\":\"support_circleDesignStyle__rW1wm\",\"out\":\"support_out__4vM8Q\"};","import React, { useState } from 'react';\nimport { Info } from 'react-bootstrap-icons';\nimport { useMutation } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { toast } from 'sonner';\nimport styles from './support.module.scss';\nimport { reachOutForSupport } from '../../../entities/support/api/support-api';\n\nconst Support = ({ visible, setVisible }) => {\n    const [description, setDescription] = useState('');\n    const [error, setError] = useState(\"\");\n\n    const handleClose = () => {\n        setVisible(false);\n        setDescription('');\n        setError(\"\");\n    };\n    const mutation = useMutation({\n        mutationFn: (data) => reachOutForSupport(data),\n        onSuccess: () => {\n            setVisible(false);\n            setDescription('');\n            toast.success(`Your message has been sent successfully.`);\n        },\n        onError: (error) => {\n            console.error('Error sending message:', error);\n            toast.error(`Failed to sent your message. Please try again.`);\n        }\n    });\n\n    const handleSubmit = () => {\n        if (description.trim() === \"\") {\n            setError(\"Please enter message.\");\n            return;\n        }\n        setError(\"\");\n        mutation.mutate({\n            message: description,\n        });\n    };\n\n    const headerElement = (\n        <div className=\"d-flex flex-column\">\n            <div className=\"d-flex align-items-center gap-2\">\n                <div className={styles.circleDesignStyle}>\n                    <div className={styles.out}>\n                        <div className={styles.in}>\n                            <Info size={24} color=\"#17B26A\" />\n                        </div>\n                    </div>\n                </div>\n                <div className='d-flex flex-column'>\n                    <span style={{ color: '#344054', fontSize: '20px', fontWeight: 600 }}>How can we help?</span>\n                    {/* <small className='font-16' style={{ color: '#475467', fontWeight: 400 }}>Do you have a suggestion or found some bug? Let us know in the field below.</small> */}\n                </div>\n            </div>\n        </div>\n    );\n\n    const footerElement = (\n        <div className='d-flex justify-content-end gap-3 pt-3'>\n            <Button label=\"Cancel\" className='outline-button' onClick={handleClose} />\n            <Button label=\"Submit\" loading={mutation.isPending} disabled={mutation.isPending} className='solid-button' onClick={handleSubmit} />\n        </div>\n    );\n\n    return (\n        <Dialog header={headerElement} footer={footerElement} headerClassName='border-bottom py-3' contentClassName={clsx('px-0 border-bottom pb-4', styles.content)} visible={visible} onHide={handleClose}\n            style={{ width: '600px' }}>\n            <div className={styles.form}>\n                <div className={styles.field}>\n                    <label htmlFor=\"description\">Message <span className=\"required\">*</span></label>\n                    <InputTextarea id=\"description\" placeholder='Enter a message here...' value={description} onChange={(e) => setDescription(e.target.value)} rows={5} className='border outline-none' style={{ resize: 'none' }} />\n                    <small className=\"error-message\">{error}</small>\n                </div>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default Support;","import { fetchInstance } from \"../../../shared/lib/fetch-api-instance\";\n\nexport const reachOutForSupport = async (data) => {\n    const path = `/support/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    return fetchInstance(path, options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"noDataBox\":\"no-data-found-template_noDataBox__HgeT1\",\"searchImg\":\"no-data-found-template_searchImg__MnYNA\",\"title\":\"no-data-found-template_title__P5uV2\",\"subTitle\":\"no-data-found-template_subTitle__zMBB-\",\"supportext\":\"no-data-found-template_supportext__pHg2P\"};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport style from './no-data-found-template.module.scss';\nimport NodataImg from \"../../assets/images/img/NodataImg.png\";\nimport Support from '../../shared/ui/support/support';\n\n\nconst NoDataFoundTemplate = ({ isDataExist = true }) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <div className={clsx(style.noDataBox)}>\n            <div className='position-relative d-flex flex-column'>\n                <img src={NodataImg} alt='no-data' />\n            </div>\n            {\n                isDataExist ? (\n                    <>\n                        <h2 className={clsx(style.title)}>There is no results</h2>\n                        <p className={clsx(style.subTitle)}>\n                            The user you are looking for doesn't exist. <br />Here are some helpful links:\n                        </p>\n                        <Link to={\"/\"}><Button className='outline-button' style={{ marginBottom: '32px' }}> <ChevronLeft /> Go back</Button></Link>\n                        <Link onClick={() => setVisible(true)} to={\"#\"}><span className={clsx(style.supportext)}>Support</span></Link>\n                    </>\n                ) : (\n                    <>\n                        <h2 className={clsx(style.title)}>No historical records yet.</h2>\n                    </>\n                )\n            }\n            <Support setVisible={setVisible} visible={visible} />\n        </div>\n    );\n};\n\nexport default NoDataFoundTemplate;"],"names":["API_BASE_URL","process","getListOfExpense","async","page","limit","search","arguments","length","undefined","order","isShowUnpaid","offset","url","URL","searchParams","append","fetchAPI","toString","method","getXeroCodesList","getProjectsList","getExpense","id","createNewExpense","options","body","data","updateExpense","paidExpense","unpaidExpense","sendExpenseToXeroApi","deleteExpense","uniqueId","dateFormat","dateInMiliSec","Date","_ref","_projectsList$data","_dropdownRef$current","_dropdownRef$current$","_dropdownRef$current$2","_usersList$data","show","setShow","refetch","taskId","setTaskId","defaultValue","dropdownRef","useRef","submitted","setSubmitted","useState","taskTitle","setTaskTitle","description","setDescription","project","setProject","user","setUser","date","setDate","errors","setErrors","useEffect","_defaultValue$project","_defaultValue$user","title","startDate","from_date","endDate","to_date","projectsList","useQuery","queryKey","queryFn","usersList","getUserList","mutation","useMutation","mutationFn","updateTask","createNewTask","onSuccess","toast","success","onError","error","console","deleteMutation","fetchTasksDelete","log","_jsxs","Modal","centered","onHide","handleClose","className","children","_jsx","Header","closeButton","Title","src","taskEditIcon","newTaskImg","alt","style","width","height","Body","background","Form","Group","Label","InputGroup","Control","required","type","placeholder","value","onChange","e","target","Text","QuestionCircle","controlId","as","rows","Dropdown","map","label","number","reference","loading","isFetching","filter","Person","color","current","panel","element","offsetParent","size","position","left","zIndex","onClick","_dropdownRef$current2","ref","name","photo","has_photo","valueTemplate","option","borderRadius","overflow","border","FallbackImage","is_business","itemTemplate","top","dropdownIcon","_Fragment","SelectDate","dateRange","setDateRange","gap","padding","Footer","Button","handleDelete","mutate","isPending","handleSubmit","newErrors","TaskLoadingView","Placeholder","animation","marginBottom","xs","bg","paddingBottom","_data$user","_data$user2","view","setView","reInitialize","showEditModal","setShowEditModal","isLoading","getTask","enabled","retry","cacheTime","updateData","TaskCompleteJob","_date$toLocaleDateStr","toLocaleDateString","year","month","day","replace","taskdetails","display","alignItems","placeholderUser","full_name","ArrowRight","finished","handleInComplete","xmlns","viewBox","fill","d","handleComplete","CreateTask","formatDate","timestamp","getDate","Intl","DateTimeFormat","format","getFullYear","TaskTable","forwardRef","searchValue","setTotal","selected","setSelected","setRefetch","trialHeight","useTrialHeight","observerRef","visible","setVisible","setPage","tasks","setTasks","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","setLoading","getListOfTasks","_data$results","count","results","prev","existingIds","Set","newData","has","loadData","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","DataTable","scrollable","selectionMode","columnResizeMode","resizableColumns","showGridlines","scrollHeight","selection","onSelectionChange","loadingIcon","Loader","emptyMessage","NoDataFoundTemplate","isDataExist","onSort","event","rowClassName","deleted","deletedRow","Column","headerClassName","bodyClassName","headerStyle","textAlign","frozen","field","header","rowData","text","minWidth","sortable","shadowRight","_rowData$user","_rowData$user2","_rowData$user3","_rowData$user4","initials","alias","clientName","rowdata","time","complete","pending","_rowData$project","_rowData$project2","clsx","projectImg","FileText","projectText","projectNumber","ViewTaskModal","TaskPage","dt","total","inputValue","debouncedValue","setInputValue","useDebounce","Helmet","active","selectedCount","filterBox","exportCSV","selectionOnly","Download","Filter","paddingLeft","fontSize","transform","marginRight","newButton","totalCount","fetchInstance","path","isRequiredLoggedin","timeout","endpoint","headers","accessToken","localStorage","getItem","isFormData","FormData","controller","AbortController","timeoutId","setTimeout","abort","defaultHeaders","Headers","set","requestOptions","JSON","stringify","redirect","signal","response","fetch","ok","errorMessage","Error","status","get","includes","json","clearTimeout","setError","reachOutForSupport","headerElement","styles","circleDesignStyle","out","in","Info","fontWeight","footerElement","disabled","trim","message","Dialog","footer","contentClassName","content","form","htmlFor","InputTextarea","resize","NodataImg","Link","to","ChevronLeft","Support"],"sourceRoot":""}