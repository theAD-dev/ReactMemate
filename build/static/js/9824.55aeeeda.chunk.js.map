{"version":3,"file":"static/js/9824.55aeeeda.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/features/chat/ui/chat-layout/chat-layout.module.scss?cb55","webpack://memateapp/./src/features/chat/ui/chat-area/chat-area.module.scss?2352","features/chat/ui/chat-area/chat-emoji-picker.jsx","features/chat/ui/chat-area/empty-chat-area.jsx","webpack://memateapp/./src/features/chat/ui/chat-header/chat-header.module.scss?5e82","features/chat/ui/chat-header/chat-header.jsx","webpack://memateapp/./src/features/chat/ui/chat-info-sidebar/chat-info-sidebar.module.scss?da25","features/chat/ui/chat-info-sidebar/chat-info-sidebar.js","webpack://memateapp/./src/features/chat/ui/message-list/message-list.module.scss?999c","webpack://memateapp/./src/features/chat/ui/file-attachment/file-attachment.module.scss?d962","features/chat/ui/file-attachment/file-attachment.jsx","features/chat/ui/message-list/message-list.jsx","features/chat/ui/chat-area/chat-area.jsx","webpack://memateapp/./src/features/chat/ui/chat-sidebar/chat-sidebar.module.scss?8203","webpack://memateapp/./src/features/chat/ui/project-list/project-list.module.scss?5167","features/chat/ui/project-list/project-list.jsx","webpack://memateapp/./src/features/chat/ui/user-list/user-list.module.scss?7b1e","features/chat/ui/user-list/user-list.jsx","features/chat/ui/chat-sidebar/chat-sidebar.jsx","features/chat/ui/chat-layout/chat-layout.jsx","pages/chat/index.jsx","webpack://memateapp/./src/ui/image-with-fallback/image-avatar.module.scss?81d4","ui/image-with-fallback/image-avatar.jsx","features/chat/ui/chat-area/chat-attachment-popover.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatContainer\":\"chat-layout_chatContainer__qW3K4\"};","// extracted by mini-css-extract-plugin\nexport default {\"chatArea\":\"chat-area_chatArea__LcIUx\",\"chatSidebar\":\"chat-area_chatSidebar__YWktj\",\"slideIn\":\"chat-area_slideIn__YYoN5\",\"chatContent\":\"chat-area_chatContent__uf9lg\",\"chatBodyArea\":\"chat-area_chatBodyArea__pnfS9\",\"messagesContainer\":\"chat-area_messagesContainer__jP8AR\",\"dragOver\":\"chat-area_dragOver__zUubn\",\"loadingContainer\":\"chat-area_loadingContainer__GABMB\",\"messageInputContainer\":\"chat-area_messageInputContainer__utwWT\",\"messageInput\":\"chat-area_messageInput__IlSJP\",\"messageInputIcons\":\"chat-area_messageInputIcons__hW5ZW\",\"attachButton\":\"chat-area_attachButton__oHyZF\",\"emojiButton\":\"chat-area_emojiButton__DtKy-\",\"sendButton\":\"chat-area_sendButton__ZTAOh\",\"emptyChat\":\"chat-area_emptyChat__Kcq0J\",\"emptyChatIcon\":\"chat-area_emptyChatIcon__2jxD+\",\"emptyChatText\":\"chat-area_emptyChatText__bUdhG\",\"chatMenu\":\"chat-area_chatMenu__K57W1\",\"attachmentLabel\":\"chat-area_attachmentLabel__Zt7sR\"};","import React from 'react';\nimport clsx from 'clsx';\nimport EmojiPicker from 'emoji-picker-react';\nimport styles from './chat-area.module.scss';\n\nconst ChatEmojiPicker = ({ show, setShow, setMessage }) => {\n  const handleClickOutside = (event) => {\n    const emojiPicker = document.querySelector(`.emoji-picker`);\n    const emojiButton = document.querySelector(`.chat-emoji-button`);\n\n    if (emojiPicker && !emojiPicker.contains(event.target) && !emojiButton.contains(event.target)) {\n      setShow(false);\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  \n  return (\n    <div className='chat-emoji-picker'>\n      <button\n        type=\"button\"\n        className={clsx(styles.emojiButton, 'chat-emoji-button')}\n        onClick={() => setShow((v) => !v)}\n        tabIndex={-1}\n      >\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10 18.3333C14.6024 18.3333 18.3334 14.6024 18.3334 10C18.3334 5.39763 14.6024 1.66667 10 1.66667C5.39765 1.66667 1.66669 5.39763 1.66669 10C1.66669 14.6024 5.39765 18.3333 10 18.3333Z\" stroke=\"#667085\" strokeWidth=\"1.66667\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n          <path d=\"M6.66669 11.6667C6.66669 11.6667 7.91669 13.3333 10 13.3333C12.0834 13.3333 13.3334 11.6667 13.3334 11.6667\" stroke=\"#667085\" strokeWidth=\"1.66667\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n          <path d=\"M7.5 7.5H7.50833\" stroke=\"#667085\" strokeWidth=\"1.66667\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n          <path d=\"M12.5 7.5H12.5083\" stroke=\"#667085\" strokeWidth=\"1.66667\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n        </svg>\n      </button>\n      {show && (\n        <div className={\"emoji-picker\"} style={{ position: 'absolute', bottom: '40px', right: 0, zIndex: 10 }}>\n          <EmojiPicker\n            onEmojiClick={(emojiData) => {\n              setMessage((prev) => prev + (emojiData.emoji || ''));\n              setShow(false);\n            }}\n            theme=\"light\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatEmojiPicker;","import React from 'react';\nimport styles from './chat-area.module.scss'\n\nconst EmptyChatArea = () => {\n    return (\n        <div className={styles.emptyChat}>\n            <div className={styles.emptyChatIcon}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"220\" height=\"171\" viewBox=\"0 0 220 171\" fill=\"none\">\n                    <circle cx=\"110\" cy=\"80\" r=\"80\" fill=\"#EAECF0\" />\n                    <circle cx=\"18\" cy=\"12\" r=\"8\" fill=\"#F2F4F7\" />\n                    <circle cx=\"198\" cy=\"142\" r=\"6\" fill=\"#F2F4F7\" />\n                    <circle cx=\"25\" cy=\"138\" r=\"10\" fill=\"#F2F4F7\" />\n                    <circle cx=\"210\" cy=\"46\" r=\"10\" fill=\"#F2F4F7\" />\n                    <circle cx=\"191\" cy=\"11\" r=\"7\" fill=\"#F2F4F7\" />\n                    <path opacity=\"0.7\" d=\"M140.356 4H75.0524C72.3887 4.00774 69.8364 5.06932 67.9528 6.95284C66.0693 8.83635 65.0077 11.3887 65 14.0524V20.7589C65.0077 23.4226 66.0693 25.975 67.9528 27.8585C69.8364 29.742 72.3887 30.8036 75.0524 30.8113H140.356L150.409 36.7694V14.0231C150.391 11.3651 149.326 8.82132 147.444 6.94454C145.561 5.06776 143.014 4.00961 140.356 4Z\" fill=\"#667085\" />\n                    <path d=\"M138.537 13.605H76.8355V15.2779H138.537V13.605Z\" fill=\"white\" />\n                    <path d=\"M138.537 19.5339H88.7074V21.2069H138.537V19.5339Z\" fill=\"white\" />\n                    <path opacity=\"0.15\" d=\"M75.0156 48.6416H140.32C142.983 48.6493 145.536 49.7109 147.419 51.5944C149.303 53.478 150.364 56.0303 150.372 58.694V65.3932C150.364 68.0569 149.303 70.6092 147.419 72.4928C145.536 74.3763 142.983 75.4378 140.32 75.4456H75.0156L64.9631 81.4037V58.6573C64.9786 55.9994 66.0438 53.4553 67.9267 51.5793C69.8096 49.7033 72.3576 48.6474 75.0156 48.6416Z\" fill=\"#667085\" />\n                    <path opacity=\"0.5\" d=\"M138.537 58.239H76.8355V59.912H138.537V58.239Z\" fill=\"#667085\" />\n                    <path opacity=\"0.5\" d=\"M105.452 64.175H76.8355V65.848H105.452V64.175Z\" fill=\"#667085\" />\n                    <path opacity=\"0.5\" d=\"M121.558 64.175H109.92V65.848H121.558V64.175Z\" fill=\"#667085\" />\n                    <path opacity=\"0.7\" d=\"M140.356 93.2759H75.0524C72.3887 93.2836 69.8364 94.3452 67.9528 96.2287C66.0693 98.1123 65.0077 100.665 65 103.328V110.027C65.0058 112.692 66.0668 115.245 67.9507 117.129C69.8346 119.013 72.3881 120.074 75.0524 120.08H140.356L150.409 126.038V103.292C150.39 100.635 149.323 98.093 147.441 96.2178C145.559 94.3426 143.013 93.2855 140.356 93.2759Z\" fill=\"#667085\" />\n                    <path d=\"M138.537 102.873H76.8355V104.546H138.537V102.873Z\" fill=\"white\" />\n                    <path d=\"M138.537 108.809H88.7074V110.482H138.537V108.809Z\" fill=\"white\" />\n                    <path opacity=\"0.15\" d=\"M75.0156 137.91H100.425C103.089 137.92 105.64 138.982 107.523 140.865C109.406 142.748 110.468 145.299 110.478 147.963V154.669C110.468 157.332 109.406 159.883 107.523 161.767C105.64 163.65 103.089 164.712 100.425 164.721H75.0156L64.9631 170.672V147.963C64.9709 145.299 66.0325 142.747 67.916 140.863C69.7995 138.979 72.3519 137.918 75.0156 137.91Z\" fill=\"#667085\" />\n                    <path opacity=\"0.5\" d=\"M80.1079 151.316C80.1079 151.896 79.9357 152.464 79.6132 152.946C79.2907 153.429 78.8324 153.805 78.2961 154.027C77.7598 154.249 77.1696 154.308 76.6003 154.194C76.0309 154.081 75.508 153.801 75.0975 153.391C74.687 152.981 74.4075 152.458 74.2942 151.888C74.181 151.319 74.2391 150.729 74.4613 150.192C74.6834 149.656 75.0596 149.198 75.5423 148.875C76.0249 148.553 76.5924 148.381 77.1729 148.381C77.9483 148.39 78.6893 148.702 79.2377 149.251C79.7861 149.799 80.0984 150.54 80.1079 151.316Z\" fill=\"#667085\" />\n                    <path opacity=\"0.5\" d=\"M86.0441 151.91C87.6853 151.91 89.0157 150.579 89.0157 148.938C89.0157 147.297 87.6853 145.967 86.0441 145.967C84.4028 145.967 83.0724 147.297 83.0724 148.938C83.0724 150.579 84.4028 151.91 86.0441 151.91Z\" fill=\"#667085\" />\n                    <path opacity=\"0.5\" d=\"M97.9162 154.874C97.9162 155.455 97.744 156.022 97.4215 156.505C97.099 156.988 96.6406 157.364 96.1043 157.586C95.568 157.808 94.9779 157.866 94.4086 157.753C93.8392 157.64 93.3163 157.36 92.9058 156.95C92.4953 156.539 92.2158 156.016 92.1025 155.447C91.9893 154.878 92.0474 154.288 92.2696 153.751C92.4917 153.215 92.8679 152.757 93.3506 152.434C93.8332 152.112 94.4007 151.939 94.9812 151.939C95.7596 151.939 96.5061 152.249 97.0565 152.799C97.6069 153.35 97.9162 154.096 97.9162 154.874Z\" fill=\"#667085\" />\n                </svg>\n            </div>\n            <p className={styles.emptyChatText}>\n                No chat group selected. Please choose a chat to start messaging.\n            </p>\n        </div>\n    );\n};\n\nexport default EmptyChatArea;","// extracted by mini-css-extract-plugin\nexport default {\"chatHeader\":\"chat-header_chatHeader__NBNiP\",\"headerContent\":\"chat-header_headerContent__eonUD\",\"projectHeader\":\"chat-header_projectHeader__bh-f2\",\"projectReference\":\"chat-header_projectReference__MYCPr\",\"projectNumber\":\"chat-header_projectNumber__ow5Ee\",\"userContainer\":\"chat-header_userContainer__+afvT\",\"userAvatar\":\"chat-header_userAvatar__wKfvC\",\"userInfo\":\"chat-header_userInfo__LWRrj\",\"userName\":\"chat-header_userName__7Nea5\",\"statusContainer\":\"chat-header_statusContainer__HUydX\",\"statusIndicator\":\"chat-header_statusIndicator__mg5ai\",\"statusText\":\"chat-header_statusText__mcVoz\",\"headerActions\":\"chat-header_headerActions__ZniE4\",\"menuButton\":\"chat-header_menuButton__pcyHE\"};","import React, { useEffect, useState } from 'react';\nimport { ThreeDotsVertical } from 'react-bootstrap-icons';\nimport styles from './chat-header.module.scss';\n\nconst ChatHeader = ({ chat, userId, setParticipants, onlineUsers = [], setShowSidebar }) => {\n  const idWithName = React.useMemo(() => {\n    const participants = chat?.participants || [];\n    return participants?.reduce((acc, curr) => {\n      acc[curr.id] = curr.name;\n      return acc;\n    }, {});\n  }, [chat?.participants]);\n\n  useEffect(() => {\n    setParticipants(idWithName);\n  }, [idWithName, setParticipants]);\n\n  const isProject = chat.project_id || chat.job_number;\n  const getChatGroupName = (group) => {\n    const participant = group.participants.find((participant) => participant.id !== +userId);\n    if (!participant) return { name: \"Unknown User\", avatar: '', id: null, status: 'offline' };\n    return {\n      name: participant?.name || \"Unknown User\",\n      avatar: participant?.avatar && participant?.avatar !== 'no_photo.png' ? participant.avatar.startsWith('http')\n        ? participant.avatar\n        : `${process.env.REACT_APP_URL}/media/${participant.avatar}` : \"\",\n      id: participant.id,\n      status: onlineUsers?.includes(participant.id) ? 'online' : 'offline'\n    };\n  };\n  return (\n    <div className={styles.chatHeader}>\n      <div className={styles.headerContent}>\n        {isProject ? (\n          <div className='d-flex w-100 justify-content-between align-items-center'>\n            <div className={styles.projectHeader}>\n              <span className={styles.projectReference}>{chat?.name || \"Unknown\"}</span>\n              <span className={styles.projectNumber}>{chat?.project_id || chat.job_number || \"Unknown\"}</span>\n            </div>\n            <div className={styles.headerActions}>\n              <button\n                className={styles.menuButton}\n                onClick={() => setShowSidebar(prev => !prev)}\n              >\n                <ThreeDotsVertical size={20} color=\"#667085\" />\n              </button>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className={styles.userContainer}>\n              <div\n                className={styles.userAvatar}\n              >\n                {getChatGroupName(chat)?.avatar ? <img src={getChatGroupName(chat)?.avatar} alt={'avatar'} /> : getChatGroupName(chat)?.name?.split(' ').map(n => n[0]).join('').slice(0, 2)}\n              </div>\n              <div className={styles.userInfo}>\n                <h2 className={styles.userName}>{getChatGroupName(chat)?.name}</h2>\n                <div className={styles.statusContainer}>\n                  <span\n                    className={styles.statusIndicator}\n                    data-status={getChatGroupName(chat).status}\n                  ></span>\n                  <span className={styles.statusText}>{getChatGroupName(chat).status}</span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.headerActions}>\n              <button\n                className={styles.menuButton}\n                onClick={() => setShowSidebar(prev => !prev)}\n              >\n                <ThreeDotsVertical size={20} color=\"#667085\" />\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"chatInfoSidebar\":\"chat-info-sidebar_chatInfoSidebar__B2GSA\",\"chatInfoHeader\":\"chat-info-sidebar_chatInfoHeader__EJGoD\",\"closeButton\":\"chat-info-sidebar_closeButton__F11xC\",\"chatInfoContent\":\"chat-info-sidebar_chatInfoContent__LPT17\",\"groupInfoAvatar\":\"chat-info-sidebar_groupInfoAvatar__qwdU8\",\"scrollContainer\":\"chat-info-sidebar_scrollContainer__njhX1\",\"participantsList\":\"chat-info-sidebar_participantsList__nm8XP\",\"participantItem\":\"chat-info-sidebar_participantItem__dSQQf\",\"participantAvatar\":\"chat-info-sidebar_participantAvatar__Rxfmr\",\"participantName\":\"chat-info-sidebar_participantName__CQFtG\",\"addParticipantAvatar\":\"chat-info-sidebar_addParticipantAvatar__h01WK\",\"addParticipantButton\":\"chat-info-sidebar_addParticipantButton__oZGqt\",\"circledesignstyle\":\"chat-info-sidebar_circledesignstyle__MmFQR\",\"out\":\"chat-info-sidebar_out__+dukq\",\"modal\":\"chat-info-sidebar_modal__9He2B\",\"userContainer\":\"chat-info-sidebar_userContainer__1SFUL\",\"contactItem\":\"chat-info-sidebar_contactItem__nRCMw\",\"participantsFooter\":\"chat-info-sidebar_participantsFooter__B+Euk\"};","import React, { useEffect } from 'react';\nimport { Plus, PlusCircle, Search, Trash, X } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dialog } from 'primereact/dialog';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport styles from './chat-info-sidebar.module.scss';\nimport ImageAvatar from '../../../../shared/ui/image-with-fallback/image-avatar';\n\nconst ChatInfoSidebar = ({ chatId, userId, chatInfo, participants, closeSidebar, users, socket, refetchGroupChats }) => {\n    const navigate = useNavigate();\n    const [showAddMember, setShowAddMember] = React.useState(false);\n    const [searchText, setSearchText] = React.useState('');\n    const [filteredParticipants, setFilteredParticipants] = React.useState([]);\n    const [contacts, setContacts] = React.useState([]);\n    const [selectedParticipants, setSelectedParticipants] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [deleting, setDeleting] = React.useState(false);\n\n    const isGroup = chatInfo?.project_id || chatInfo?.job_number;\n    const members = chatInfo?.participants?.map(participant => ({\n        id: participant.id,\n        name: participant.name,\n        avatar: participant.avatar && participant.avatar !== 'no_photo.png' ? participant.avatar.startsWith('http')\n            ? participant.avatar\n            : `${process.env.REACT_APP_URL}/media/${participant.avatar}` : \"\"\n    })) || [];\n\n    const otherMember = members.find(member => member.id !== +userId);\n    const groupAvatar = !isGroup ? otherMember?.avatar : \"\";\n    const groupName = isGroup\n        ? (chatInfo?.name || \"Unknown Group\")\n        : (otherMember?.name || \"Unknown User\");\n\n\n    const handleCancelMember = () => {\n        setShowAddMember(false);\n        setSelectedParticipants([]);\n        setSearchText('');\n        setContacts(filteredParticipants);\n    };\n\n    const handleAddMembers = () => {\n        if (selectedParticipants.length === 0) {\n            return;\n        }\n        setLoading(true);\n        socket.emit('add_participant', {\n            group_id: +chatId,\n            user_id: +userId,\n            participant_id: selectedParticipants[0]\n        }, (res) => {\n            if (res.status === 'success') {\n                handleCancelMember();\n                refetchGroupChats();\n                toast.success('Member added successfully');\n            } else {\n                toast.error('Failed to add member');\n            }\n            setLoading(false);\n        });\n\n    };\n\n    const archiveGroup = () => {\n        setDeleting(true);\n        socket.emit('archive_chat_group', { group_id: chatId, user_id: userId }, (res) => {\n            if (res.status === 'success') {\n                closeSidebar();\n                refetchGroupChats();\n                navigate('/chat');\n                toast.success('Group archived successfully');\n            } else {\n                toast.error('Failed to archive group');\n            }\n            setDeleting(false);\n        });\n    };\n\n    const HeaderElement = () => (\n        <div className=\"d-flex align-items-center gap-2\">\n            <div className={styles.circledesignstyle}>\n                <div className={styles.out}>\n                    <PlusCircle size={24} color=\"#17B26A\" />\n                </div>\n            </div>\n            <span style={{ color: '344054', fontSize: '20px', fontWeight: 600 }}>Add Member</span>\n        </div>\n    );\n\n    const FooterElement = () => (\n        <div className='d-flex justify-content-end gap-3 pt-3'>\n            <Button label=\"Cancel\" className='outline-button' disabled={loading} onClick={handleCancelMember} />\n            <Button label=\"Add\" loading={loading} disabled={loading || selectedParticipants.length === 0} className='solid-button' onClick={handleAddMembers} />\n        </div>\n    );\n\n    useEffect(() => {\n        setSelectedParticipants([]);\n        setSearchText('');\n\n        // Reset filtered participants when chatId changes\n        const participantIds = Object.keys(participants);\n        const filtered = Object.values(users).filter(user => !participantIds.includes(String(user.id)));\n        setContacts(filtered || []);\n        setFilteredParticipants(filtered || []);\n    }, [chatId, participants, users]);\n\n    useEffect(() => {\n        if (searchText.trim() === '') {\n            setContacts(filteredParticipants);\n            return;\n        }\n        const lowerSearchText = searchText.toLowerCase();\n        const filtered = filteredParticipants.filter(filteredParticipant =>\n            filteredParticipant.first_name.toLowerCase().includes(lowerSearchText) ||\n            filteredParticipant.last_name.toLowerCase().includes(lowerSearchText) ||\n            filteredParticipant.email.toLowerCase().includes(lowerSearchText)\n        );\n        setContacts(filtered);\n    }, [searchText, filteredParticipants]);\n\n    return (\n        <>\n            <div className={styles.chatInfoSidebar}>\n                <div className={styles.chatInfoHeader}>\n                    <p className='font-18 mb-0' style={{ fontWeight: 600, color: '#344054' }}>{isGroup ? 'Group Info' : 'Contact Info'}</p>\n                    <button className={styles.closeButton} onClick={closeSidebar}>\n                        <X size={32} />\n                    </button>\n                </div>\n                <div className={styles.scrollContainer}>\n                    <div className={styles.chatInfoContent}>\n                        <div className={styles.groupInfoAvatar}>\n                            {groupAvatar ? (\n                                <img src={groupAvatar} alt={groupName} />\n                            ) : (\n                                <div className={styles.groupAvatarPlaceholder}>\n                                    {groupName.split(' ').map(n => n[0]).join('').slice(0, 2)}\n                                </div>\n                            )}\n                        </div>\n                        <p className='mb-0' style={{ fontSize: '20px' }}>{groupName}</p>\n                        <p className='font-14 mb-0'>{isGroup ? chatInfo?.project_id || chatInfo?.job_number : ''}</p>\n                    </div>\n                    <div className={styles.participantsList}>\n                        <h3 className='font-14 ms-2 mb-2' style={{ color: 'var(--Gray-600, #344952)' }}>{Object.keys(participants).length} members</h3>\n                        <ul className='w-100 mb-3'>\n                            {members.map(({ id, name, avatar }) => (\n                                <li key={id} className={styles.participantItem}>\n                                    <div className={styles.participantAvatar}>\n                                        {avatar ? (\n                                            <img src={avatar} alt={name} />\n                                        ) : (\n                                            name.split(' ').map(n => n[0]).join('').slice(0, 2)\n                                        )}\n                                    </div>\n                                    <span className={styles.participantName}>{name}</span>\n                                </li>\n                            ))}\n                            {isGroup && (\n                                <button className={styles.addParticipantButton} onClick={() => setShowAddMember(true)}>\n                                    <div className={styles.addParticipantAvatar}>\n                                        <Plus size={20} color=\"#1AB2FF\" />\n                                    </div>\n                                    <span className={styles.participantName}>Add Member</span>\n                                </button>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n                <div className={styles.participantsFooter}>\n                    <button className={\"danger-text-button\"} disabled={deleting} onClick={archiveGroup}>\n                        <Trash color='#b42318' size={16} className='me-1' /> Delete Group\n                        {deleting && <ProgressSpinner style={{ width: '16px', height: '16px' }} className='ms-2' />}\n                    </button>\n                </div>\n            </div>\n            <Dialog header={HeaderElement} footer={FooterElement} modal className={`${styles.modal} custom-modal`} visible={showAddMember} onHide={handleCancelMember}>\n                <div className=\"search-header w-100\">\n                    <div className='searchGroupFilter d-flex align-items-center' style={{ gap: '10px', minWidth: '100%', maxWidth: '100%' }}>\n                        <Search color=\"#98A2B3\" size={20} />\n                        <input\n                            id=\"search-box\"\n                            placeholder='Search'\n                            value={searchText}\n                            className='pl-2'\n                            onChange={(e) => setSearchText(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className={styles.userContainer}>\n                    {\n                        contacts.map(contact => (\n                            <div key={contact.id} className={clsx('d-flex align-items-center justify-content-start gap-2', styles.contactItem)}>\n                                <Checkbox inputId={`checkbox-${contact.id}`}\n                                    disabled={selectedParticipants.length}\n                                    checked={selectedParticipants.includes(contact.id)}\n                                    onChange={() => setSelectedParticipants(prev => {\n                                        if (prev.includes(contact.id)) {\n                                            return prev.filter(id => id !== contact.id);\n                                        }\n                                        return [...prev, contact.id];\n                                    })}\n                                />\n                                <label htmlFor={`checkbox-${contact.id}`} className={'d-flex align-items-center gap-1 cursor-pointer'}>\n                                    <ImageAvatar has_photo={contact.has_photo} photo={contact.photo} is_business={false} />\n                                    <div className='d-flex flex-column'>\n                                        <span className={'font-14'}>{contact.first_name} {contact.last_name}</span>\n                                        <span className={'font-12 text-muted'}>{contact.email}</span>\n                                    </div>\n                                </label>\n                            </div>\n                        ))\n                    }\n                </div>\n            </Dialog>\n        </>\n    );\n};\n\nexport default ChatInfoSidebar;","// extracted by mini-css-extract-plugin\nexport default {\"messageGroup\":\"message-list_messageGroup__ErZtK\",\"dateHeader\":\"message-list_dateHeader__eLUx6\",\"message\":\"message-list_message__3UO-2\",\"sent\":\"message-list_sent__lna8g\",\"messageContent\":\"message-list_messageContent__-bYu5\",\"messageTime\":\"message-list_messageTime__GG1x5\",\"received\":\"message-list_received__QjePJ\",\"messageAttachment\":\"message-list_messageAttachment__9Xcs9\",\"messageContentSent\":\"message-list_messageContentSent__uivln\",\"messageText\":\"message-list_messageText__JpeJm\",\"emptyMessages\":\"message-list_emptyMessages__Zcq-I\",\"typingIndicator\":\"message-list_typingIndicator__GbJ55\",\"typingDot\":\"message-list_typingDot__BlFvs\",\"typingAnimation\":\"message-list_typingAnimation__dG8ll\",\"userAvatar\":\"message-list_userAvatar__UkK5U\",\"messageSenderName\":\"message-list_messageSenderName__UmAeW\",\"messageTimeSent\":\"message-list_messageTimeSent__7OaoW\"};","// extracted by mini-css-extract-plugin\nexport default {\"fileName\":\"file-attachment_fileName__hKqo3\",\"fileSize\":\"file-attachment_fileSize__JE1wZ\",\"fileAttachment\":\"file-attachment_fileAttachment__po3Wp\",\"downloadButton\":\"file-attachment_downloadButton__CRO8A\"};","import { Download } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport styles from './file-attachment.module.scss';\nimport { getFileIcon } from '../../../../components/Work/features/create-job/create-job';\n\nconst FileAttachment = ({ file }) => {\n  if (!file) return null;\n  const { url, type } = file;\n  const baseUrl = url.split(\"?\")[0];\n  const fileName = baseUrl.substring(baseUrl.lastIndexOf(\"/\") + 1);\n  const extension = type.split('-')[0] || '';\n  const size = type.split('-')[1] || '';\n\n  return (\n    <div className={clsx(styles.fileAttachment)} style={{ display: 'flex', alignItems: 'center', marginBottom: 0, gap: 12, padding: 10, width: '508px', marginLeft: 'auto', position: 'relative' }}>\n      {getFileIcon(extension)}\n      <div style={{ width: '80%', textAlign: 'left' }}>\n        <div className={clsx(styles.fileName, 'ellipsis-width')}>{fileName}</div>\n        <div className={clsx(styles.fileSize)}>{size}</div>\n      </div>\n      <Link to={url} target='_blank' className={clsx(styles.downloadButton)}>\n        <Download size={16} color='var(--gray-600, #475467)'/>\n      </Link>\n    </div>\n  );\n};\n\nexport default FileAttachment;\n","import { useEffect, useRef, useMemo } from 'react';\nimport { CheckCircleFill, ExclamationCircleFill, Trash, X } from 'react-bootstrap-icons';\nimport clsx from 'clsx';\nimport { Divider } from 'primereact/divider';\nimport styles from './message-list.module.scss';\nimport { getFileIcon } from '../../../../components/Work/features/create-job/create-job';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImageWithInitials, InitialsAvatar } from '../../../../ui/image-with-fallback/image-avatar';\nimport { formatFileSize } from '../chat-area/chat-attachment-popover';\nimport FileAttachment from '../file-attachment/file-attachment';\n\nconst formatTime = (timestamp) => {\n  const date = new Date(timestamp * 1000);\n  const weekday = date.toLocaleString('en-US', { weekday: 'long' });\n  let hour = date.getHours();\n  const minute = date.getMinutes().toString().padStart(2, '0');\n  const ampm = hour >= 12 ? 'pm' : 'am';\n  hour = hour % 12 || 12;\n  return `${weekday} ${hour}:${minute}${ampm}`;\n};\n\nconst isSameDate = (date1, date2) =>\n  date1.getFullYear() === date2.getFullYear() &&\n  date1.getMonth() === date2.getMonth() &&\n  date1.getDate() === date2.getDate();\n\nconst MessageList = ({ messages = [], isTyping = {}, loading = true, currentUserId, participants, chatId, attachmentFile, setAttachmentFile }) => {\n  const messagesEndRef = useRef(null);\n\n  const normalizedMessages = useMemo(() => {\n    if (!Array.isArray(messages)) {\n      console.warn('Messages is not an array:', messages);\n      return [];\n    }\n    if (attachmentFile?.file) {\n      setAttachmentFile(null);\n    }\n\n    return messages\n      .filter(msg => msg?.sent_at)\n      .map((msg, index) => {\n        const timestamp = Number(msg.sent_at);\n        const date = new Date(timestamp * 1000);\n        const photo = msg.sender_photo && msg.sender_photo !== '/media/no_photo.png' ? msg.sender_photo.startsWith('http')\n          ? msg.sender_photo\n          : `${process.env.REACT_APP_URL}${msg.sender_photo}` : \"\";\n\n        return {\n          id: msg.id || `msg-${index}`,\n          text: msg.message || '',\n          sender: msg.sender || 'Unknown',\n          photo,\n          timestamp,\n          sendingTime: formatTime(timestamp),\n          isOwn: currentUserId === msg.sender,\n          attachment: msg.file_url ? { url: msg.file_url, type: msg.file_type } : undefined,\n          displayDate: date,\n          fullDate: date.toLocaleDateString('en-US', { dateStyle: 'medium' }),\n        };\n      })\n      .sort((a, b) => a.timestamp - b.timestamp); // ensure messages are chronologically sorted\n  }, [messages, currentUserId]);\n\n  const groupedMessages = useMemo(() => {\n    const groups = {};\n    const today = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(today.getDate() - 1);\n\n    normalizedMessages.forEach((msg) => {\n      let label = msg.fullDate;\n      if (isSameDate(msg.displayDate, today)) {\n        label = 'Today';\n      } else if (isSameDate(msg.displayDate, yesterday)) {\n        label = 'Yesterday';\n      }\n\n      if (!groups[label]) groups[label] = [];\n      groups[label].push(msg);\n    });\n\n    return groups;\n  }, [normalizedMessages]);\n\n  const sortedGroupKeys = useMemo(() => {\n    return Object.entries(groupedMessages)\n      .sort(([, msgsA], [, msgsB]) => msgsA[0].timestamp - msgsB[0].timestamp)\n      .map(([key]) => key);\n  }, [groupedMessages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'auto' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [normalizedMessages, attachmentFile]);\n\n  return (\n    <>\n      {sortedGroupKeys.map((date) => (\n        <div key={date} className={styles.messageGroup}>\n          <div className={clsx(styles.dateHeader, 'dividerContainer')}>\n            <Divider><span>{date}</span></Divider>\n          </div>\n\n          {groupedMessages[date].map((msg) => (\n            <div\n              key={msg.id}\n              className={clsx(styles.message, msg.isOwn ? styles.sent : styles.received)}\n            >\n              <div className={clsx('w-100 d-flex align-items-center gap-2 justify-content-between')}>\n                {msg.isOwn ? (\n                  <span className={styles.messageSenderName}>You</span>\n                ) : (\n                  <div className=\"d-flex gap-2\">\n                    <div className={styles.userAvatar}>\n                      <FallbackImageWithInitials has_photo={msg.photo} photo={msg.photo} name={participants?.[msg.sender] || 'Unknown'} />\n                    </div>\n                    <span className={styles.messageSenderName}>\n                      {participants?.[msg.sender] || 'Unknown'}\n                    </span>\n                  </div>\n                )}\n                <span className={clsx(styles.messageTime, {\n                  [styles.messageTimeSent]: !msg.isOwn\n                })}>\n                  {msg.sendingTime}\n                </span>\n              </div>\n\n              {msg.attachment ? (\n                <div className={clsx(styles.messageAttachment, { [styles.messageContentSent]: !msg.isOwn })}>\n                  <FileAttachment file={msg.attachment} />\n                </div>\n              ) : (\n                <div className={clsx(styles.messageContent, { [styles.messageContentSent]: !msg.isOwn })}>\n                  <p className={styles.messageText}>{msg.text}</p>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      ))}\n\n      {normalizedMessages.length === 0 && !loading && (\n        <div className={styles.emptyMessages}>\n          <p>No messages yet. Start the conversation!</p>\n        </div>\n      )}\n\n      {attachmentFile?.file && attachmentFile?.chatId === chatId && (\n        <div style={{ display: 'flex', alignItems: 'center', background: '#F9FAFB', borderRadius: 8, padding: 12, marginBottom: 0, gap: 12, border: '1px solid #EAECF0', width: '508px', marginLeft: 'auto', position: 'relative' }}>\n          {getFileIcon(attachmentFile.file.name.split(\".\").pop())}\n          <div style={{ flex: 1, textAlign: 'left' }}>\n            <div style={{ fontWeight: 600, color: '#101828', fontSize: 16, marginBottom: 2 }}>{attachmentFile.file.name}</div>\n            <div style={{ color: '#667085', fontSize: 14 }}>{formatFileSize(attachmentFile.file.size)}</div>\n          </div>\n          {\n            attachmentFile?.error ? (\n              <ExclamationCircleFill color='#F04438' size={20} />\n            ) : attachmentFile?.progress == 100 ? (\n              <CheckCircleFill color='#12B76A' size={20} />\n            ) : (\n              <CircularProgressBar percentage={parseInt(attachmentFile?.progress) || 0} size={30} color=\"#158ECC\" />\n            )\n          }\n          <div className='d-flex justify-content-center align-items-center' style={{ position: 'absolute', right: '-6px', top: '-8px', background: '#d4d5d7ff', borderRadius: '50%', padding: '2px', cursor: 'pointer' }} onClick={() => setAttachmentFile({})}>\n            <X size={18} color='#667085' />\n          </div>\n        </div>\n      )}\n\n      {isTyping.isTyping && (\n        <div className={clsx(styles.message, styles.received)}>\n          <div className={clsx('w-100 d-flex align-items-center gap-2 justify-content-between')}>\n            <div className=\"d-flex gap-2\">\n              <div className={styles.userAvatar}>\n                {isTyping?.user?.has_photo ? <FallbackImageWithInitials has_photo={isTyping?.user?.has_photo} photo={isTyping?.user?.photo} name={`${isTyping?.user?.first_name} ${isTyping?.user?.last_name}`} />\n                  : <InitialsAvatar name={`${isTyping?.user?.first_name} ${isTyping?.user?.last_name}`} />}\n              </div>\n              <span className={styles.messageSenderName}>\n                {isTyping?.user?.first_name} {isTyping?.user?.last_name}\n              </span>\n            </div>\n          </div>\n          <div className={styles.typingIndicator}>\n            <div className={styles.typingDot}></div>\n            <div className={styles.typingDot}></div>\n            <div className={styles.typingDot}></div>\n          </div>\n        </div>\n      )}\n\n      <div ref={messagesEndRef} />\n    </>\n  );\n};\n\nexport default MessageList;\n","import { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport throttle from \"lodash.throttle\";\nimport { Button } from 'primereact/button';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport styles from './chat-area.module.scss';\nimport ChatAttachmentPopover, { formatFileSize } from './chat-attachment-popover';\nimport ChatEmojiPicker from './chat-emoji-picker';\nimport EmptyChatArea from './empty-chat-area';\nimport ChatHeader from '../chat-header/chat-header';\nimport ChatInfoSidebar from '../chat-info-sidebar/chat-info-sidebar';\nimport MessageList from '../message-list/message-list';\n\nconst ChatArea = ({ currentChat, socket, userId, chatId, onlineUsers = [], setChatData, users, updatePrivateGroupChatId, refetchGroupChats }) => {\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(\"access_token\");\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const [isTyping, setIsTyping] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [participants, setParticipants] = useState({});\n  const [page, setPage] = useState(1);\n  const [pageSize] = useState(20);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [attachmentFile, setAttachmentFile] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const scrollHeightRef = useRef(0);\n  const inputRef = useRef(null);\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  const updateMessages = useCallback((newMessages, totalPages, currentPage) => {\n    setMessages((prev) => {\n      const filteredMessages = newMessages.filter((msg) => !prev.some((m) => m.id === msg.id));\n      return currentPage === 1 ? filteredMessages : [...filteredMessages, ...prev];\n    });\n    setHasMore(currentPage < (totalPages || 1));\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (!chatId || !userId || !socket || chatId?.startsWith(\"private_group\")) return;\n    setLoading(true);\n\n    if (messagesContainerRef.current && page > 1) {\n      scrollHeightRef.current = messagesContainerRef.current.scrollHeight;\n    }\n\n    socket.emit('get_group_messages', { user_id: userId, group_id: chatId, page, page_size: pageSize }, (res) => {\n      if (res && res.status === 'success' && res.messages) {\n        updateMessages(res.messages, res.total_pages, page);\n      }\n    });\n  }, [chatId, userId, socket, page, pageSize, updateMessages]);\n\n  useEffect(() => {\n    if (!socket || loading || !currentChat || !userId || Number(chatId)) return;\n\n    if (currentChat?.participants?.length && chatId?.startsWith(\"private_group\")) {\n      const participants = currentChat.participants.map((p) => p.id).filter((id) => id !== userId);\n      const group_name = `Private Chat`;\n\n      socket.emit('create_chat_group', { name: group_name, user_id: userId, participants, project_id: null, job_id: null }, (res) => {\n        if (res.status === 'success' && res.chat_group_id) {\n          setLoading(true);\n          updatePrivateGroupChatId(chatId, res.chat_group_id);\n        } else {\n          setLoading(false);\n          console.log(\"Error during creation chat group: \", res);\n          toast.error(\"Could not start chat. Please try again.\");\n        }\n      });\n    }\n  }, [chatId, userId, socket, currentChat, navigate, loading]);\n\n  const handleSendMessageResponse = (msg) => {\n    if (msg?.sent_message?.chat_group == chatId) {\n      setMessages((prev) => {\n        if (prev.some((m) => m.id === msg.message_id)) return prev;\n        return [msg.sent_message, ...prev];\n      });\n      setIsSending(false);\n      setMessage('');\n      scrollHeightRef.current = 0;\n      setTimeout(() => {\n        if (inputRef.current) inputRef.current.focus();\n      }, 500);\n\n      setChatData((prev) => {\n        const updatedChat = { ...prev[msg?.sent_message?.chat_group], last_message: msg?.sent_message };\n        return { ...prev, [msg?.sent_message?.chat_group]: updatedChat };\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!socket || !chatId || chatId?.startsWith(\"private_group\")) return;\n\n    const handleNewMessage = (msg) => {\n      if (msg.chat_group == chatId) {\n        setMessages((prev) => {\n          if (prev.some((m) => m.id == msg.id)) return prev;\n          return [msg, ...prev];\n        });\n      }\n      setChatData((prev) => {\n        const updatedChat = { ...prev[msg.chat_group], last_message: msg, unread_count: (prev[msg.chat_group]?.unread_count || 0) + 1 };\n        return { ...prev, [msg.chat_group]: updatedChat };\n      });\n    };\n\n    socket.on('new_message', handleNewMessage);\n    socket.on('typing', (data) => {\n      if (data?.group_id === chatId) {\n        setIsTyping({ isTyping: true, user: users[data.user_id] });\n      }\n    });\n    socket.on('stop_typing', (data) => {\n      if (data?.group_id === chatId) {\n        setIsTyping({});\n      }\n    });\n\n    return () => {\n      socket.off('new_message', handleNewMessage);\n    };\n  }, [socket, chatId]);\n\n  useEffect(() => {\n    if (!socket || !chatId || chatId?.startsWith(\"private_group\")) return;\n\n    socket.emit('join_group', { group_id: chatId }, (res) => {\n      if (res.status === 'success') {\n        console.log('Joined group successfully');\n      } else {\n        console.log('Failed to join group: ', res);\n      }\n    });\n\n    return () => {\n      socket.emit(\"leave_group\", { group_id: chatId });\n    };\n  }, [socket, chatId]);\n\n  useEffect(() => {\n    const container = messagesContainerRef.current;\n    if (!container) return;\n\n    if (page === 1 && messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\n      scrollHeightRef.current = 0;\n    } else if (page > 1 && scrollHeightRef.current) {\n      const newScrollHeight = container.scrollHeight;\n      container.scrollTop = newScrollHeight - scrollHeightRef.current;\n    }\n  }, [messages, page]);\n\n  const handleSendMessage = (file_url, file_type) => {\n    if ((message.trim() || file_url) && currentChat && socket && userId && !isSending) {\n      const msgPayload = {\n        user_id: userId,\n        chat_group_id: chatId,\n        message: message.trim(),\n        file_url,\n        file_type\n      };\n      setIsSending(true);\n      socket.emit('send_message', msgPayload, (res) => {\n        if (res.status === 'success') {\n          handleSendMessageResponse(res);\n        } else {\n          setIsSending(false);\n          toast.error('Failed to send message:');\n        }\n      });\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      handleSendMessage();\n    }\n  };\n\n  const typingDelay = 2000; // 2s of inactivity = stop_typing\n  let stopTypingTimeout;\n  const emitTyping = useMemo(() =>\n    throttle((chatId, userId) => {\n      if (socket && chatId && userId) {\n        socket.emit(\"typing\", { group_id: chatId, user_id: userId });\n      }\n    }, 2000), [socket]);\n\n  const handleChange = (e) => {\n    setMessage(e.target.value);\n    emitTyping(chatId, userId);\n\n    // reset stop_typing timer\n    clearTimeout(stopTypingTimeout);\n    stopTypingTimeout = setTimeout(() => {\n      if (socket && chatId && userId) {\n        socket.emit(\"stop_typing\", { group_id: chatId, user_id: userId });\n      }\n    }, typingDelay);\n  };\n\n  const uploadToS3 = async (file, url, extension, size) => {\n    return axios.put(url, file, {\n      headers: {\n        \"Content-Type\": \"\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = Math.round(\n          (progressEvent.loaded / progressEvent.total) * 100\n        );\n        setAttachmentFile((prev) => ({ ...prev, progress }));\n      }\n    }).then(() => {\n      setAttachmentFile((prev) => ({ ...prev, progress: 100, success: true }));\n      const fileURL = url.split(\"?\")[0] || \"\";\n      const type = `${extension}-${size}`;\n      handleSendMessage(fileURL, type);\n    }).catch((err) => {\n      console.log('Error uploading to S3: ', err);\n      setAttachmentFile((prev) => ({ ...prev, progress: 0, error: true }));\n    });\n  };\n\n  const fileUploadBySignedURL = async (file) => {\n    if (!file || !chatId) return;\n\n    try {\n      const name = file?.name?.split(\".\")[0];\n      const fileExtension = file?.name?.split(\".\")?.pop();\n      const fileName = `${name}-${Date.now()}.${fileExtension}`;\n      const size = formatFileSize(file.size);\n\n      const response = await axios.post(\n        `${process.env.REACT_APP_BACKEND_API_URL}/chat/upload/${chatId}/`,\n        { filename: fileName },\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }\n      );\n      const { url } = response.data;\n      if (!url) {\n        setAttachmentFile((prev) => ({ ...prev, progress: 0, error: true }));\n        toast.error(\"Failed to get upload URL. Please try again.\");\n        return;\n      }\n      await uploadToS3(file, url, fileExtension, size);\n    } catch (error) {\n      setAttachmentFile((prev) => ({ ...prev, progress: 0, error: true }));\n      console.error(\"Error uploading file:\", error);\n      toast.error(\"Failed to upload file. Please try again.\");\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setAttachmentFile({\n        file,\n        chatId,\n        error: false,\n        progress: 0,\n      });\n      fileUploadBySignedURL(file);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(true);\n  };\n\n  const handleDragEnter = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Only hide drag overlay if we're leaving the input area completely\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setIsDragOver(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n\n    const files = e.dataTransfer.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      setAttachmentFile({\n        file,\n        chatId,\n        error: false,\n        progress: 0,\n      });\n      fileUploadBySignedURL(file);\n    }\n  };\n\n  const handleScroll = useCallback(() => {\n    if (messagesContainerRef.current.scrollTop === 0 && hasMore && !loading) {\n      setPage((prev) => prev + 1);\n    }\n  }, [hasMore, loading]);\n\n  useEffect(() => {\n    const container = messagesContainerRef.current;\n    if (!container) return;\n    container.addEventListener('scroll', handleScroll);\n    return () => container.removeEventListener('scroll', handleScroll);\n  }, [handleScroll, messages]);\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n    scrollHeightRef.current = 0;\n    setPage(1);\n    setMessages([]);\n    setHasMore(true);\n    setLoading(false);\n  }, [chatId]);\n\n  return (\n    <div className='d-flex w-100 h-100'>\n      <div className={styles.chatArea}>\n        {currentChat ? (\n          <div className={styles.chatContent} style={{ position: 'relative' }}>\n            <ChatHeader\n              chat={currentChat}\n              userId={userId}\n              setParticipants={setParticipants}\n              onlineUsers={onlineUsers}\n              setShowSidebar={setShowSidebar}\n            />\n            <div\n              className={`${styles.chatBodyArea}  ${isDragOver ? styles.dragOver : ''}`}\n              onDragOver={handleDragOver}\n              onDragEnter={handleDragEnter}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n            >\n              <div\n                className={`${styles.messagesContainer}`}\n                ref={messagesContainerRef}\n              >\n                {loading && (\n                  <div className={styles.loadingContainer}>\n                    <ProgressSpinner style={{ width: '16px', height: '16px' }} />\n                  </div>\n                )}\n                <MessageList\n                  messages={messages}\n                  isTyping={isTyping}\n                  loading={loading}\n                  currentUserId={userId}\n                  chatId={chatId}\n                  participants={participants}\n                  attachmentFile={attachmentFile}\n                  setAttachmentFile={setAttachmentFile}\n                />\n                <div ref={messagesEndRef} />\n              </div>\n\n              <div className={`${styles.messageInputContainer}`}>\n                <div className=\"position-relative w-100\">\n                  <InputTextarea\n                    placeholder=\"Send a message...\"\n                    value={message}\n                    onChange={handleChange}\n                    autoFocus\n                    ref={inputRef}\n                    disabled={isSending || chatId?.startsWith(\"private_group\")}\n                    onKeyUp={handleKeyPress}\n                    className={styles.messageInput}\n                  />\n                  <div className={styles.messageInputIcons}>\n                    {isSending && <ProgressSpinner style={{ width: '20px', height: '20px' }} />}\n                    <div className={styles.attachWrapper} style={{ position: 'relative', display: 'inline-block' }}>\n                      <ChatAttachmentPopover\n                        onFileChange={handleFileChange}\n                        styles={styles}\n                        file={attachmentFile}\n                        onRemoveFile={() => setAttachmentFile(null)}\n                      />\n                    </div>\n                    {/* Emoji Picker Button and Picker moved to ChatEmojiPicker */}\n                    <ChatEmojiPicker\n                      show={showEmojiPicker}\n                      setShow={setShowEmojiPicker}\n                      setMessage={setMessage}\n                    />\n                    <Button\n                      className={styles.sendButton}\n                      onClick={() => handleSendMessage()}\n                      disabled={!message.trim() || isSending}\n                    >\n                      Send\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <EmptyChatArea />\n        )}\n      </div>\n      <div style={showSidebar ? { position: 'absolute', right: '16px' } : { display: 'none' }} className={styles.chatSidebar}>\n        {/* Sidebar content can be added here, e.g., participants list, chat settings, etc. */}\n        <ChatInfoSidebar\n          chatId={chatId}\n          userId={userId}\n          chatInfo={currentChat}\n          closeSidebar={() => setShowSidebar(false)}\n          participants={participants}\n          users={users}\n          socket={socket}\n          refetchGroupChats={refetchGroupChats}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatArea;\n","// extracted by mini-css-extract-plugin\nexport default {\"chatSidebar\":\"chat-sidebar_chatSidebar__zzpNg\",\"sidebarHeader\":\"chat-sidebar_sidebarHeader__R0eP2\",\"headerFirstRow\":\"chat-sidebar_headerFirstRow__QMmIk\",\"unreadCount\":\"chat-sidebar_unreadCount__83KNP\",\"sidebarTitle\":\"chat-sidebar_sidebarTitle__3Np6U\",\"archivedLabel\":\"chat-sidebar_archivedLabel__AGzqF\",\"headerSecondRow\":\"chat-sidebar_headerSecondRow__4diKO\",\"headerThirdRow\":\"chat-sidebar_headerThirdRow__9ynMU\",\"tabButton\":\"chat-sidebar_tabButton__gHzm6\",\"active\":\"chat-sidebar_active__vtn5W\",\"listContainer\":\"chat-sidebar_listContainer__A3eW3\"};","// extracted by mini-css-extract-plugin\nexport default {\"projectList\":\"project-list_projectList__9Df50\",\"projectItem\":\"project-list_projectItem__eBp-6\",\"active\":\"project-list_active__jFy-d\",\"projectHeader\":\"project-list_projectHeader__OU-Of\",\"projectInfo\":\"project-list_projectInfo__LoSIl\",\"projectTitleRow\":\"project-list_projectTitleRow__EhGqR\",\"projectName\":\"project-list_projectName__w7dZI\",\"projectRef\":\"project-list_projectRef__Fhg0N\",\"userInitials\":\"project-list_userInitials__S3iMj\",\"messagePreviewContainer\":\"project-list_messagePreviewContainer__uYIHz\",\"userInfo\":\"project-list_userInfo__2ZVWv\",\"messagePreview\":\"project-list_messagePreview__utMs2\",\"userName\":\"project-list_userName__rKSab\",\"userFullName\":\"project-list_userFullName__KSCau\",\"lastMessage\":\"project-list_lastMessage__iWohN\",\"lastMessageTime\":\"project-list_lastMessageTime__HD-aX\",\"archivedBadge\":\"project-list_archivedBadge__uJ+Vf\",\"unreadCount\":\"project-list_unreadCount__RJKbs\"};","import { Link, useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Avatar } from 'primereact/avatar';\nimport { AvatarGroup } from 'primereact/avatargroup';\nimport styles from './project-list.module.scss';\n\nconst ProjectList = ({ chatData, searchQuery, showArchived, userId }) => {\n  console.log('chatData: ', chatData);\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const chatId = params.get(\"id\");\n\n  // Filter and transform data to project-based view\n  const projectData = Object.entries(chatData).filter(([, group]) => group.project_id || group.job_number)\n    .sort((a, b) => {\n      const lastMessageA = a[1].last_message?.sent_at || 0;\n      const lastMessageB = b[1].last_message?.sent_at || 0;\n      return lastMessageB - lastMessageA; // Sort by last message time, most recent\n    })\n    .filter(([, group]) => {\n      const groupName = group?.name || \"Unknown Group\";\n      const matchesSearch = groupName.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesArchived = showArchived || !(group.archived_by?.length > 0);\n      return matchesSearch && matchesArchived;\n    });\n\n  // Helper to get last message and unread count\n  const getLastMessage = (group) => {\n    return group?.last_message?.message || null;\n  };\n\n  const getUnreadCount = (group) => {\n    return group?.unread_count || 0;\n  };\n\n  const getSenderName = (group) => {\n    const lastMessageDetails = group?.last_message;\n    if (!lastMessageDetails) return '';\n    const sender = group.participants.find((participant) => participant.id === lastMessageDetails.sender);\n    if (sender.id === userId) return 'You: ';\n    return `${sender?.name}: ` || \"Unknown Sender: `\";\n  };\n\n  const timeAgo = (unixTimestamp) => {\n    if (!unixTimestamp) return '';\n    const now = Date.now(); // Current time in milliseconds\n    const then = unixTimestamp * 1000; // Convert seconds to milliseconds\n    const diff = now - then;\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const weeks = Math.floor(diff / (1000 * 60 * 60 * 24 * 7));\n    const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30));\n    const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n\n    if (seconds < 60) return `${seconds} second${seconds !== 1 ? 's' : ''} ago`;\n    if (minutes < 60) return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n    if (hours < 24) return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\n    if (days < 7) return `${days} day${days !== 1 ? 's' : ''} ago`;\n    if (weeks < 4) return `${weeks} week${weeks !== 1 ? 's' : ''} ago`;\n    if (months < 12) return `${months} month${months !== 1 ? 's' : ''} ago`;\n    return `${years} year${years !== 1 ? 's' : ''} ago`;\n  };\n\n  return (\n    <div className={styles.projectList}>\n      {projectData.map(([id, group]) => {\n        const lastMessage = getLastMessage(group);\n        const lastMessageTimeAgo = timeAgo(group?.last_message?.sent_at);\n        const unreadCount = getUnreadCount(group);\n        const sender = getSenderName(group);\n        const reference = group?.name;\n        const number = group?.job_number || group?.project_id;\n        const members = group?.participants?.map(participant => ({\n          id: participant.id,\n          name: participant.name,\n          avatar: participant.photo && participant.photo !== 'no_photo.png' ? participant.photo.startsWith('http')\n          ? participant.photo\n          : `${process.env.REACT_APP_URL}${participant.photo}` : \"\"\n        })) || [];\n        console.log('members: ', group?.participants, members);\n        return (\n          <Link to={`?id=${id}`} key={id} className={clsx(styles.projectItem, { [styles.active]: chatId == id })}>\n            <div className={styles.projectHeader}>\n              <div className={styles.projectInfo}>\n                <div className={styles.projectTitleRow}>\n                  <span className={styles.projectName}>{reference}</span>\n                </div>\n                <span className={styles.projectRef}>{number}</span>\n              </div>\n              <div className='d-flex flex-column gap-2'>\n                <span className={styles.lastMessageTime}>{lastMessageTimeAgo}</span>\n                <div className='d-flex align-items-center justify-content-end gap-2'>\n                  {group.archived_by?.length ? <span className={styles.archivedBadge}>Archived</span> : null}\n                  {unreadCount > 0 && <span className={styles.unreadCount}>{unreadCount}</span>}\n                </div>\n              </div>\n            </div>\n\n            <div className={styles.messagePreviewContainer}>\n              <div className={styles.userInfo}>\n                {/* <span className={styles.userName}>{project.name.split(' ').map(n => n[0]).join('').slice(0, 2)}</span> */}\n                {/* <span className={styles.userFullName}>{project.name}</span> */}\n                <AvatarGroup>\n                  {members.map((member) => (\n                    <Avatar key={member.id} image={member.avatar} size=\"small\" shape=\"circle\" />\n                  ))}\n                </AvatarGroup>\n              </div>\n              <p className={clsx(styles.lastMessage, 'text-start')}>\n                {lastMessage\n                  ? `${sender} ${lastMessage ? lastMessage.substring(0, 30) : ''}`\n                  : 'No messages yet'}\n              </p>\n            </div>\n          </Link>\n        );\n      }\n      )}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","// extracted by mini-css-extract-plugin\nexport default {\"userList\":\"user-list_userList__Tj5r8\",\"userItem\":\"user-list_userItem__2vBej\",\"active\":\"user-list_active__ylmYf\",\"userItemContent\":\"user-list_userItemContent__a0bK2\",\"userAvatarWrapper\":\"user-list_userAvatarWrapper__+CzoZ\",\"onlineIndicator\":\"user-list_onlineIndicator__kRi92\",\"userAvatar\":\"user-list_userAvatar__EhrPu\",\"userInfo\":\"user-list_userInfo__tRZdB\",\"userName\":\"user-list_userName__pjTE0\",\"lastMessage\":\"user-list_lastMessage__LFBTg\",\"lastMessageTime\":\"user-list_lastMessageTime__+6gj+\",\"unreadCount\":\"user-list_unreadCount__2vYTB\"};","import { Link, useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport styles from './user-list.module.scss';\n\nconst UserList = ({ chatData, searchQuery, showArchived, userId, onlineUsers }) => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const chatId = params.get(\"id\");\n\n  // Filter users based on search query\n  const filteredUsers = Object.entries(chatData)\n    .filter(([, group]) => !group.project_id && !group.job_number)\n    .sort((a, b) => {\n      const lastMessageA = a[1].last_message?.sent_at || 0;\n      const lastMessageB = b[1].last_message?.sent_at || 0;\n      return lastMessageB - lastMessageA; // Sort by last message time, most recent\n    })\n    .filter(([, group]) => {\n      const participant = group.participants.find((participant) => participant.id !== +userId);\n      const groupName = participant?.name || group?.name || \"Unknown User\";\n      const matchesSearch = groupName.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesArchived = showArchived ? true : !group.archived;\n      return matchesSearch && matchesArchived;\n    });\n\n  // Helper to get last message and unread count\n  const getLastMessage = (group) => {\n    return group?.last_message || null;\n  };\n\n  const getUnreadCount = (group) => {\n    return group?.unread_count || 0;\n  };\n\n  const getChatGroupName = (group) => {\n    const participant = group.participants.find((participant) => participant.id !== +userId);\n    return participant?.name || group?.name || \"Unknown User\";\n  };\n\n  const getSenderName = (group) => {\n    const lastMessageDetails = group?.last_message;\n    if (!lastMessageDetails) return '';\n    const sender = group.participants.find((participant) => participant.id === lastMessageDetails.sender);\n    if (sender?.id === userId) return 'You: ';\n    return sender?.name ? `${sender?.name}: ` : \"\";\n  };\n\n  const getSenderAvatar = (group) => {\n    const participant = group.participants.find((participant) => participant.id !== +userId);\n    return participant?.avatar && participant?.avatar !== 'no_photo.png'\n      ? participant.avatar.startsWith('http')\n        ? participant.avatar\n        : `${process.env.REACT_APP_URL}/media/${participant.avatar}`\n      : '';\n  };\n\n  const getSenderStatus = (group) => {\n    const participant = group.participants.find((participant) => participant.id !== +userId);\n    if (!participant) return 'offline';\n    return onlineUsers?.includes(participant.id) ? 'online' : 'offline';\n  };\n\n  const timeAgo = (unixTimestamp) => {\n    if (!unixTimestamp) return '';\n    const now = Date.now(); // Current time in milliseconds\n    const then = unixTimestamp * 1000; // Convert seconds to milliseconds\n    const diff = now - then;\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const weeks = Math.floor(diff / (1000 * 60 * 60 * 24 * 7));\n    const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30));\n    const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n\n    if (seconds < 60) return `${seconds} second${seconds !== 1 ? 's' : ''} ago`;\n    if (minutes < 60) return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n    if (hours < 24) return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\n    if (days < 7) return `${days} day${days !== 1 ? 's' : ''} ago`;\n    if (weeks < 4) return `${weeks} week${weeks !== 1 ? 's' : ''} ago`;\n    if (months < 12) return `${months} month${months !== 1 ? 's' : ''} ago`;\n    return `${years} year${years !== 1 ? 's' : ''} ago`;\n  };\n\n  return (\n    <div className={styles.userList}>\n      {filteredUsers.map(([id, group]) => {\n        const lastMessage = getLastMessage(group);\n        const lastMessageTimeAgo = timeAgo(group?.last_message?.sent_at);\n        const unreadCount = getUnreadCount(group);\n        const sender = getSenderName(group);\n        const senderAvatar = getSenderAvatar(group);\n        const groupName = getChatGroupName(group);\n        const senderStatus = getSenderStatus(group);\n        return (\n          <Link to={`?id=${id}`} key={id} className={clsx(styles.userItem, { [styles.active]: chatId == id })}>\n            <div className={styles.userItemContent}>\n              <div className={styles.userAvatarWrapper}>\n                {\n                  senderStatus === 'online' && <div className={styles.onlineIndicator}></div>\n                }\n                <div className={styles.userAvatar}>\n                  {senderAvatar ? (\n                    <img src={senderAvatar} alt={groupName} />\n                  ) : (\n                    <span className={styles.avatarPlaceholder}>\n                      {groupName?.split(' ').map(n => n[0]).join('').slice(0, 2)}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className={styles.userInfo}>\n                <span className={styles.userName}>{groupName}</span>\n              </div>\n              <div className='d-flex flex-column align-items-end gap-1'>\n                <span className={styles.lastMessageTime}>\n                  {lastMessageTimeAgo\n                    ? lastMessageTimeAgo\n                    : ''}\n                </span>\n                {unreadCount > 0 && (\n                  <span className={styles.unreadCount}>{unreadCount > 9 ? '9+' : unreadCount}</span>\n                )}\n              </div>\n            </div>\n            <p className={styles.lastMessage}>\n              {lastMessage?.message\n                ? `${sender} ${lastMessage?.message ? lastMessage?.message?.substring(0, 30) : ''}`\n                : 'No messages yet'}\n            </p>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputSwitch } from 'primereact/inputswitch';\nimport { InputText } from 'primereact/inputtext';\nimport styles from './chat-sidebar.module.scss';\nimport ProjectList from '../project-list/project-list';\nimport UserList from '../user-list/user-list';\n\nconst ChatSidebar = ({\n  activeTab,\n  setActiveTab,\n  archivedVisible,\n  setArchivedVisible,\n  chatData,\n  userId,\n  onlineUsers\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const totalUserGroup = Object.entries(chatData).filter(([, group]) => !group.project_id && !group.job_number);\n  const projectGroup = Object.entries(chatData).filter(([, group]) => group.project_id || group.job_number)\n    .filter(([, group]) => {\n      const groupName = group?.name || \"Unknown Group\";\n      const matchesSearch = groupName.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesArchived = archivedVisible || !(group.archived_by?.length > 0);\n      return matchesSearch && matchesArchived;\n    });\n\n  return (\n    <div className={styles.chatSidebar}>\n      <div className={styles.sidebarHeader}>\n        <div className={styles.headerFirstRow}>\n          <div className=\"d-flex align-items-center gap-2\">\n            <h1 className={styles.sidebarTitle}>Messages</h1>\n            <div className={styles.unreadCount}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"9\" viewBox=\"0 0 8 9\" fill=\"none\">\n                <circle cx=\"4\" cy=\"4.5\" r=\"3\" fill=\"#17B26A\" />\n              </svg>\n              <span>0</span>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center gap-2\">\n            <InputSwitch\n              checked={archivedVisible}\n              onChange={(e) => setArchivedVisible(e.value)}\n            />\n            <h1 className={styles.archivedLabel}>Archived</h1>\n          </div>\n        </div>\n\n        <div className={styles.headerSecondRow}>\n          <IconField iconPosition=\"left\" className=\"border w-100 rounded text-start\">\n            <InputIcon style={{ position: 'relative' }}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n              </svg>\n            </InputIcon>\n            <InputText\n              placeholder=\"Search\"\n              style={{ padding: '10px 10px 10px 20px' }}\n              value={searchQuery}\n              onChange={handleSearchChange}\n            />\n          </IconField>\n        </div>\n\n        <div className={styles.headerThirdRow}>\n          <div\n            className={clsx(styles.tabButton, { [styles.active]: activeTab === 'users' })}\n            onClick={() => setActiveTab('users')}\n          >\n            <span>Users</span>\n            <div>{totalUserGroup?.length || 0}</div>\n          </div>\n          <div\n            className={clsx(styles.tabButton, { [styles.active]: activeTab === 'projects' })}\n            onClick={() => setActiveTab('projects')}\n          >\n            <span>Projects</span>\n            <div>{projectGroup?.length || 0}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.listContainer}>\n        {activeTab === 'users' ? (\n          <UserList\n            chatData={chatData}\n            searchQuery={searchQuery}\n            showArchived={archivedVisible}\n            userId={userId}\n            onlineUsers={onlineUsers}\n          />\n        ) : (\n          <ProjectList\n            chatData={chatData}\n            searchQuery={searchQuery}\n            showArchived={archivedVisible}\n            userId={userId}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatSidebar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { toast } from 'sonner';\nimport styles from './chat-layout.module.scss';\nimport { getTeamDesktopUser, getTeamMobileUser } from '../../../../APIs/team-api';\nimport { useAuth } from '../../../../app/providers/auth-provider';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport Loader from '../../../../shared/ui/loader/loader';\nimport ChatArea from '../chat-area/chat-area';\nimport ChatSidebar from '../chat-sidebar/chat-sidebar';\n\nconst ChatLayout = () => {\n  const { session } = useAuth();\n  const user_id = session?.desktop_user_id;\n  const organization_id = session?.organization?.id;\n  const { trialHeight } = useTrialHeight();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const params = new URLSearchParams(location.search);\n  const chatId = params.get(\"id\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('users');\n  const [archivedVisible, setArchivedVisible] = useState(false);\n  const [chatData, setChatData] = useState({});\n  const [currentChat, setCurrentChat] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [users, setUsers] = useState({});\n  const socketRef = useRef(null);\n\n  const formatPrivateGroup = (users) => {\n    const chatGroups = {};\n    let counter = 1;\n    users.forEach(group => {\n      let modifiedGroup = {\n        id: group?.group_id,\n        archived_by: [],\n        unread_count: group?.unread_count || 0,\n        participants: [\n          {\n            id: group.id,\n            name: `${group.full_name}`,\n            avatar: group.avatar || '',\n          },\n          {\n            id: user_id,\n            name: session?.full_name || 'You',\n            avatar: session?.has_photo ? session?.photo : ''\n          }\n        ],\n        last_message: group?.last_message\n      };\n      if (modifiedGroup.id) chatGroups[modifiedGroup.id] = modifiedGroup;\n      else {\n        chatGroups[`private_group_${counter++}`] = modifiedGroup;\n      }\n    });\n    return chatGroups;\n  };\n\n  const updatePrivateGroupChatId = (oldKey, newKey) => {\n    setChatData((prevChatData) => {\n      const updatedChatData = { ...prevChatData };\n      if (oldKey && newKey && updatedChatData[oldKey]) {\n        updatedChatData[newKey] = updatedChatData[oldKey]; // copy value to new key\n        delete updatedChatData[oldKey]; // remove old key\n      }\n      return updatedChatData;\n    });\n    navigate(`/chat?id=${newKey}`, { replace: true });\n  };\n\n  const refetchGroupChats = () => {\n    if (!socketRef.current) return;\n\n    const socket = socketRef.current;\n    socket.emit('get_user_chat_groups', { user_id }, (res) => {\n      if (res.status === 'success' && res.chat_groups) {\n        const chatGroups = {};\n        res.chat_groups.forEach(group => {\n          chatGroups[group.id] = group;\n        });\n        console.log('groups chat groups : ', chatGroups);\n        setChatData(prevChatData => ({ ...prevChatData, ...chatGroups }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    // Connect to socket.io server\n    const socket = io(process.env.REACT_APP_CHAT_API_URL, {\n      transports: ['websocket'],\n      autoConnect: true,\n    });\n    socketRef.current = socket;\n\n    if (!user_id) return toast.error('User ID is not available');\n    if (!organization_id) return toast.error('Organization ID is not available');\n\n    socket.emit('register_user', { user_id, org_id: organization_id }, (res) => {\n      if (res.status === 'success') {\n        console.log('User registered successfully');\n      } else {\n        toast.error('Failed to connect to chat server');\n      }\n    });\n\n    // Fetch chat groups for user\n    socket.emit('get_user_chat_groups', { user_id }, (res) => {\n      if (res.status === 'success' && res.chat_groups) {\n        const chatGroups = {};\n        res.chat_groups.forEach(group => {\n          chatGroups[group.id] = group;\n        });\n        console.log('groups chat groups : ', chatGroups);\n        setChatData(prevChatData => ({ ...prevChatData, ...chatGroups }));\n        setIsLoading(false);\n      }\n    });\n\n    socket.on('get_user_chat_groups', (res) => {\n      if (res.status === 'success' && res.chat_groups) {\n        const chatGroups = {};\n        res.chat_groups.forEach(group => {\n          chatGroups[group.id] = group;\n        });\n        console.log('groups chat groups : ', chatGroups);\n        setChatData(prevChatData => ({ ...prevChatData, ...chatGroups }));\n      }\n    });\n\n    // Fetch private chat groups\n    socket.emit('get_organization_users', { user_id, organization_id: organization_id }, (res) => {\n      if (res.status === 'success' && res?.users?.length) {\n        const chatGroups = formatPrivateGroup(res.users);\n        console.log('private chatGroups: ', chatGroups);\n        setChatData((prevChatData) => ({ ...prevChatData, ...chatGroups }));\n      }\n    });\n\n    socket.on('get_organization_users', (res) => {\n      if (res.status === 'success' && res?.users?.length) {\n        const chatGroups = formatPrivateGroup(res.users);\n        console.log('private chatGroups: ', chatGroups);\n        setChatData((prevChatData) => ({ ...prevChatData, ...chatGroups }));\n      }\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, [user_id, organization_id, session]);\n\n  useEffect(() => {\n    if (!socketRef.current) return;\n    const socket = socketRef.current;\n    socket.on('presence_list', (res) => {\n      if (res.online) setOnlineUsers(res.online);\n    });\n\n    socket.on('presence_update', (res) => {\n      if (res.user_id && res.status === 'offline') {\n        setOnlineUsers((prev) => {\n          return prev.filter(user => user !== res.user_id);\n        });\n      } else if (res.user_id && res.status === 'online') {\n        setOnlineUsers((prev) => {\n          return [...new Set([...prev, res.user_id])];\n        });\n      }\n    });\n\n    socket.on('chat_group_updated', (res) => {\n      if (res.id) {\n        setChatData((prevChatData) => ({\n          ...prevChatData,\n          [res.id]: res,\n        }));\n      }\n    });\n\n    return () => {\n      socket.off('presence_list');\n      socket.off('presence_update');\n      socket.off('chat_group_updated');\n    };\n  }, [socketRef]);\n\n  useEffect(() => {\n    if (chatId && chatData[chatId]) {\n      const isProject = chatData[chatId].project_id || chatData[chatId].job_number;\n      if (isProject) setActiveTab('projects');\n      else setActiveTab('users');\n      setCurrentChat(chatData[chatId]);\n    } else {\n      setCurrentChat(null);\n    }\n  }, [chatId, chatData]);\n\n  useEffect(() => {\n    const getDesktopUser = async () => {\n      try {\n        const desktop_users = await getTeamDesktopUser();\n        let activeUsers = desktop_users?.users?.filter((user) => user.is_active);\n        const userMap = {};\n        activeUsers.forEach(user => {\n          userMap[user.id] = user;\n        });\n        setUsers(prevUsers => ({ ...prevUsers, ...userMap }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const getMobileUser = async () => {\n      try {\n        const mobile_users = await getTeamMobileUser();\n        const activeUsers = mobile_users?.users.filter((user) => user.status !== 'disconnected');\n        const userMap = {};\n        activeUsers.forEach(user => {\n          userMap[user.id] = user;\n        });\n        setUsers(prevUsers => ({ ...prevUsers, ...userMap }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getDesktopUser();\n    getMobileUser();\n  }, []);\n\n  return (\n    <div className=\"container-fluid px-0\">\n      <div className={styles.chatContainer} style={{ height: `calc(100vh - 73px - ${trialHeight}px)` }}>\n        <ChatSidebar\n          activeTab={activeTab}\n          setActiveTab={setActiveTab}\n          archivedVisible={archivedVisible}\n          setArchivedVisible={setArchivedVisible}\n          chatData={chatData}\n          userId={user_id}\n          onlineUsers={onlineUsers}\n        />\n        <ChatArea\n          currentChat={currentChat}\n          setCurrentChat={setCurrentChat}\n          socket={socketRef.current}\n          userId={user_id}\n          chatId={chatId}\n          onlineUsers={onlineUsers}\n          setChatData={setChatData}\n          users={users}\n          updatePrivateGroupChatId={updatePrivateGroupChatId}\n          refetchGroupChats={refetchGroupChats}\n        />\n      </div>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default ChatLayout;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { ChatLayout } from '../../features/chat';\n\nconst Chat = () => {\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Chat</title>\n            </Helmet>\n            <ChatLayout />\n        </>\n    );\n};\n\nexport default Chat;","// extracted by mini-css-extract-plugin\nexport default {\"clientImg\":\"image-avatar_clientImg__-nnRU\"};","import React, { useState } from 'react';\nimport { Building, Person } from 'react-bootstrap-icons';\nimport style from './image-avatar.module.scss';\n\nconst ImageAvatar = ({ has_photo, photo, is_business }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return (\n        <div className={`d-flex justify-content-center align-items-center ${style.clientImg} ${is_business ? \"\" : \"rounded-circle\"}`} style={{ overflow: 'hidden' }}>\n            {has_photo && photo && !imgError ? (\n                <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n            ) : (\n                <Icon color=\"#667085\" />\n            )}\n        </div>\n    );\n};\n\nexport const FallbackImage = ({ has_photo, photo, is_business, size }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return <>\n        {has_photo && photo && !imgError ? (\n            <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n        ) : (\n            <Icon color=\"#667085\" size={size} />\n        )}\n    </>;\n};\n\nexport const FallbackImageWithInitials = ({ has_photo, photo, name }) => {\n    const [imgError, setImgError] = useState(false);\n    const initials = name && name?.split(' ')?.map(n => n[0])?.join('')?.toUpperCase() || \"\";\n\n    return <>\n        {has_photo && photo && !imgError ? (\n            <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n        ) : initials}\n    </>;\n};\n\nexport const InitialsAvatar = ({ name, size = 14 }) => {\n    const initials = name.split(' ').map(n => n[0]).join('').toUpperCase();\n\n    return (\n        <span style={{ fontSize: `${size}px` }}>\n            {initials}\n        </span>\n    );\n};\n\nexport default ImageAvatar;\n","import React, { useState, useRef } from 'react';\nimport { FileText, Image } from 'react-bootstrap-icons';\n\nexport function formatFileSize(size) {\n  if (size >= 1024 * 1024) return (size / (1024 * 1024)).toFixed(1) + ' MB';\n  if (size >= 1024) return (size / 1024).toFixed(1) + ' KB';\n  return size + ' B';\n}\n\nconst ChatAttachmentPopover = ({ onFileChange, styles }) => {\n  const [open, setOpen] = useState(false);\n  const buttonRef = useRef();\n  const popoverRef = useRef();\n\n  const handleClickOutside = (event) => {\n    const btn = buttonRef.current;\n    const pop = popoverRef.current;\n    if (!btn || !pop) return;\n    const clickedInsideTrigger = btn.contains(event.target);\n    const clickedInsidePopover = pop.contains(event.target);\n    if (!clickedInsideTrigger && !clickedInsidePopover) setOpen(false);\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', display: 'inline-block' }}>\n      <button\n        className={styles.attachButton}\n        type=\"button\"\n        aria-label=\"Attach file\"\n        ref={buttonRef}\n        onClick={() => setOpen((v) => !v)}\n        style={{ padding: '6px 6px 6px 8px' }}\n      >\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M18.0833 8.33333L9.16667 17.25C8.17221 18.2444 6.82407 18.8042 5.41667 18.8042C4.00926 18.8042 2.66112 18.2444 1.66667 17.25C0.672214 16.2556 0.112446 14.9074 0.112446 13.5C0.112446 12.0926 0.672214 10.7444 1.66667 9.75L10.5833 0.833329C11.2486 0.167998 12.1514 -0.149151 13.0833 0.0666624C14.0153 0.282476 14.8056 0.947998 15.25 1.83333C15.6944 2.71866 15.7361 3.75 15.3333 4.66666C14.9306 5.58333 14.1389 6.29166 13.1667 6.5L5.08333 14.5833C4.75 14.9167 4.31944 15.0833 3.83333 15.0833C3.34722 15.0833 2.91667 14.9167 2.58333 14.5833C2.25 14.25 2.08333 13.8194 2.08333 13.3333C2.08333 12.8472 2.25 12.4167 2.58333 12.0833L9.16667 5.5\" stroke=\"#667085\" strokeWidth=\"1.66667\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n        </svg>\n      </button>\n      {open && (\n        <div ref={popoverRef} className={styles.attachmentPopover} style={{ position: 'absolute', bottom: '40px', left: -200, zIndex: 20, minWidth: 220, background: '#fff', borderRadius: 8, boxShadow: '0 4px 24px rgba(16,24,40,0.18)', padding: 10 }}>\n          <label className={styles.attachmentLabel} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer', gap: 8, padding: '10px 6px' }}>\n            <input\n              type=\"file\"\n              style={{ display: 'none' }}\n              onChange={(e) => {\n                onFileChange(e);\n                setOpen(false);\n              }}\n              accept='.pdf, .doc, .docx, .txt'\n            />\n            <FileText size={16} color=\"#667085\" />\n            <span className=\"font-16\">Document</span>\n          </label>\n          <label className={styles.attachmentLabel} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer', gap: 8, padding: '10px 6px' }}>\n            <input\n              type=\"file\"\n              style={{ display: 'none' }}\n              onChange={(e) => {\n                onFileChange(e);\n                setOpen(false);\n              }}\n              accept='image/*'\n            />\n            <Image size={16} color=\"#667085\" />\n            <span className=\"font-16\">Photo </span>\n          </label>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatAttachmentPopover;\n"],"names":["_ref","show","setShow","setMessage","handleClickOutside","event","emojiPicker","document","querySelector","emojiButton","contains","target","React","addEventListener","removeEventListener","_jsxs","className","children","_jsx","type","clsx","styles","onClick","v","tabIndex","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","style","position","bottom","right","zIndex","EmojiPicker","onEmojiClick","emojiData","prev","emoji","theme","EmptyChatArea","emptyChat","emptyChatIcon","cx","cy","r","opacity","emptyChatText","_getChatGroupName","_getChatGroupName2","_getChatGroupName3","_getChatGroupName3$na","_getChatGroupName4","chat","userId","setParticipants","onlineUsers","setShowSidebar","idWithName","participants","reduce","acc","curr","id","name","useEffect","isProject","project_id","job_number","getChatGroupName","group","participant","find","avatar","startsWith","status","includes","ThreeDotsVertical","size","color","_Fragment","src","alt","split","map","n","join","slice","_chatInfo$participant","chatId","chatInfo","closeSidebar","users","socket","refetchGroupChats","navigate","useNavigate","showAddMember","setShowAddMember","searchText","setSearchText","filteredParticipants","setFilteredParticipants","contacts","setContacts","selectedParticipants","setSelectedParticipants","loading","setLoading","deleting","setDeleting","isGroup","members","otherMember","member","groupAvatar","groupName","handleCancelMember","handleAddMembers","length","emit","group_id","user_id","participant_id","res","toast","success","error","participantIds","Object","keys","filtered","values","filter","user","String","trim","lowerSearchText","toLowerCase","filteredParticipant","first_name","last_name","email","chatInfoSidebar","chatInfoHeader","fontWeight","closeButton","X","scrollContainer","chatInfoContent","groupInfoAvatar","groupAvatarPlaceholder","fontSize","participantsList","_ref2","participantItem","participantAvatar","participantName","addParticipantButton","addParticipantAvatar","Plus","participantsFooter","disabled","archiveGroup","Trash","ProgressSpinner","Dialog","header","HeaderElement","circledesignstyle","out","PlusCircle","footer","FooterElement","Button","label","modal","visible","onHide","gap","minWidth","maxWidth","Search","placeholder","value","onChange","e","userContainer","contact","contactItem","Checkbox","inputId","checked","htmlFor","ImageAvatar","has_photo","photo","is_business","file","url","baseUrl","fileName","substring","lastIndexOf","extension","display","alignItems","marginBottom","padding","marginLeft","getFileIcon","textAlign","Link","to","Download","formatTime","timestamp","date","Date","weekday","toLocaleString","hour","getHours","ampm","getMinutes","toString","padStart","isSameDate","date1","date2","getFullYear","getMonth","getDate","_isTyping$user","_isTyping$user2","_isTyping$user3","_isTyping$user4","_isTyping$user5","_isTyping$user6","_isTyping$user7","_isTyping$user8","_isTyping$user9","messages","isTyping","currentUserId","attachmentFile","setAttachmentFile","messagesEndRef","useRef","normalizedMessages","useMemo","Array","isArray","msg","sent_at","index","Number","sender_photo","text","message","sender","sendingTime","isOwn","attachment","file_url","file_type","undefined","displayDate","fullDate","toLocaleDateString","dateStyle","sort","a","b","console","warn","groupedMessages","groups","today","yesterday","setDate","forEach","push","sortedGroupKeys","entries","_ref3","msgsA","msgsB","_ref4","key","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","Divider","FallbackImageWithInitials","FileAttachment","background","borderRadius","border","pop","flex","formatFileSize","ExclamationCircleFill","progress","CheckCircleFill","CircularProgressBar","percentage","parseInt","top","cursor","InitialsAvatar","ref","currentChat","setChatData","updatePrivateGroupChatId","accessToken","localStorage","getItem","useState","isSending","setIsSending","setIsTyping","setMessages","page","setPage","pageSize","hasMore","setHasMore","showEmojiPicker","setShowEmojiPicker","isDragOver","setIsDragOver","messagesContainerRef","scrollHeightRef","inputRef","showSidebar","updateMessages","useCallback","newMessages","totalPages","currentPage","filteredMessages","some","m","scrollHeight","page_size","total_pages","_currentChat$particip","p","group_name","job_id","chat_group_id","log","handleNewMessage","chat_group","_prev$msg$chat_group","updatedChat","last_message","unread_count","on","data","off","container","newScrollHeight","scrollTop","handleSendMessage","msgPayload","_msg$sent_message","sent_message","message_id","setTimeout","focus","_msg$sent_message2","_msg$sent_message3","handleSendMessageResponse","stopTypingTimeout","emitTyping","throttle","fileUploadBySignedURL","async","_file$name","_file$name2","_file$name2$split","fileExtension","now","response","axios","post","filename","headers","Authorization","put","onUploadProgress","progressEvent","Math","round","loaded","total","then","fileURL","catch","err","uploadToS3","handleScroll","chatArea","chatContent","ChatHeader","chatBodyArea","dragOver","onDragOver","preventDefault","stopPropagation","onDragEnter","onDragLeave","currentTarget","relatedTarget","onDrop","files","dataTransfer","messagesContainer","loadingContainer","MessageList","messageInputContainer","InputTextarea","clearTimeout","autoFocus","onKeyUp","shiftKey","messageInput","messageInputIcons","attachWrapper","ChatAttachmentPopover","onFileChange","onRemoveFile","ChatEmojiPicker","sendButton","chatSidebar","ChatInfoSidebar","chatData","searchQuery","showArchived","location","useLocation","URLSearchParams","search","get","projectData","_a$1$last_message","_b$1$last_message","lastMessageA","_group$archived_by","matchesSearch","matchesArchived","archived_by","_group$last_message2","_group$participants","_group$archived_by2","lastMessage","_group$last_message","getLastMessage","lastMessageTimeAgo","unixTimestamp","diff","seconds","floor","minutes","hours","days","weeks","months","years","timeAgo","unreadCount","getUnreadCount","lastMessageDetails","getSenderName","reference","number","AvatarGroup","Avatar","image","shape","filteredUsers","archived","userList","_lastMessage$message","senderAvatar","getSenderAvatar","senderStatus","getSenderStatus","userItem","active","userItemContent","userAvatarWrapper","onlineIndicator","userAvatar","avatarPlaceholder","userInfo","userName","lastMessageTime","activeTab","setActiveTab","archivedVisible","setArchivedVisible","setSearchQuery","totalUserGroup","projectGroup","InputSwitch","IconField","iconPosition","InputIcon","InputText","UserList","ProjectList","ChatLayout","_session$organization","session","useAuth","desktop_user_id","organization_id","organization","trialHeight","useTrialHeight","isLoading","setIsLoading","setCurrentChat","setOnlineUsers","setUsers","socketRef","formatPrivateGroup","chatGroups","counter","modifiedGroup","full_name","io","process","transports","autoConnect","org_id","chat_groups","prevChatData","_res$users","_res$users2","disconnect","online","Set","_desktop_users$users","desktop_users","getTeamDesktopUser","activeUsers","is_active","userMap","prevUsers","getDesktopUser","mobile_users","getTeamMobileUser","getMobileUser","ChatSidebar","ChatArea","oldKey","newKey","updatedChatData","replace","Loader","Chat","Helmet","FallbackImage","imgError","setImgError","Icon","Building","Person","onError","_name$split","_name$split$map","_name$split$map$join","initials","toUpperCase","overflow","toFixed","open","setOpen","buttonRef","popoverRef","btn","clickedInsideTrigger","clickedInsidePopover","attachButton","attachmentPopover","left","boxShadow","attachmentLabel","accept","FileText","Image"],"sourceRoot":""}