{"version":3,"file":"static/js/5549.59a0f91a.chunk.js","mappings":"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","sources":["components/layout/settings/templates/edit-template.js","../node_modules/primereact/inputtextarea/inputtextarea.esm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from '../Sidebar';\nimport style from './job-template.module.scss';\nimport BreadCrumbPage from './bread-crumb';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { PencilSquare } from \"react-bootstrap-icons\";\nimport { Button, Col, Row } from 'react-bootstrap';\nimport clsx from 'clsx';\nimport { IconField } from \"primereact/iconfield\";\nimport { InputIcon } from \"primereact/inputicon\";\nimport { InputText } from \"primereact/inputtext\";\nimport { useForm } from 'react-hook-form';\nimport exclamationCircle from \"../../../../assets/images/icon/exclamation-circle.svg\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { InputTextarea } from \"primereact/inputtextarea\"\n\n\n\nconst EditTemplates = () => {\n    const [activeTab, setActiveTab] = useState('job-templates');\n    const location = useLocation();\n    const [ingredient, setIngredient] = useState('');\n\n    const { departments } = location.state || {};\n    const [cardData, setCardData] = useState(null);\n    const [isDepartments, setisDepartments] = useState(false);\n    const [editedDepartments, seteditedDepartments] = useState('');\n\n\n    const onSubmit = data => {\n        console.log(data);\n    };\n\n    const schema = yup.object().shape({\n        username: yup.string().required('Username is required'),\n    });\n\n\n    const { control, register, handleSubmit, setValue, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n\n    const handleEditDepartments = () => {\n        setisDepartments(true);\n        seteditedDepartments(departments || '');\n    };\n    const handleDepartmentsChange = (e) => {\n        seteditedDepartments(e.target.value);\n    };\n    const handleSaveDepartment = () => {\n        setCardData(prevData => ({\n            ...prevData,\n            reference: editedDepartments\n        }));\n        setisDepartments(false);\n    };\n\n\n    const navigate = useNavigate();\n    const backHandle = () => {\n        navigate(\"/settings/templates/job-templates/\");\n    };\n\n    return (\n        <>\n            <div className='content_wrap_main'>\n\n                <div className='settings-wrap'>\n                    <div className=\"settings-wrapper\">\n                        <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                        <div className='settings-content'>\n                            <div className={` ${style.templateBoxWrap}`}>\n                                <BreadCrumbPage backHandle={backHandle} templateName='Job Templates' departmentsName={departments || 'No Departments'} />\n\n                                <div className={style.templateHeadBorder}>\n                                    <h1>\n                                        {isDepartments ? (\n                                            <input\n                                                type=\"text\"\n                                                value={editedDepartments}\n                                                onChange={handleDepartmentsChange}\n                                                onBlur={handleSaveDepartment}\n                                                autoFocus\n                                            />\n                                        ) : (\n                                            <>\n                                                {departments}\n                                                <span> <PencilSquare size={16} color='#106B99' onClick={handleEditDepartments} style={{ cursor: 'pointer' }} /></span>\n                                            </>\n                                        )}\n                                    </h1>\n                                </div>\n                                <div className={style.formTemplateGroup}>\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n\n                                        <Row>\n                                            <Col sm={12}>\n                                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                                    <label className={clsx(style.lable)}>Subject</label>\n                                                    <IconField>\n                                                        <InputIcon>{errors.name && <img src={exclamationCircle} className='mb-3' alt='error-icon' />}</InputIcon>\n                                                        <InputText {...register(\"name\")} className={clsx(style.inputText, { [style.error]: errors.name })} placeholder='Type Subject' />\n                                                    </IconField>\n                                                    {errors.name && <p className=\"error-message\">{errors.name.message}</p>}\n                                                </div>\n                                            </Col>\n\n                                            <Col sm={12}>\n                                                <div className=\"d-flex flex-column gap-1\">\n                                                    <label className={clsx(style.lable)}>Message </label>\n                                                    <IconField>\n                                                        <InputIcon style={{ top: '80%' }}>{errors.description && <img src={exclamationCircle} />}</InputIcon>\n                                                        <InputTextarea {...register(\"description\")} rows={5} cols={30} className={clsx(style.inputText, { [style.error]: errors.description })} style={{ resize: 'none' }} placeholder='Enter a description...' />\n                                                    </IconField>\n                                                    {errors.description && <p className=\"error-message\">{errors.description.message}</p>}\n                                                </div>\n                                            </Col>\n                                            <Col sm={12}>\n                                                <div className=\"card flex justify-content-center\">\n                                                    <label className={clsx(style.lable1)}>Time / Money </label>\n                                                    <div className={style.paymentType}>\n                                                        <label className={clsx(style.lable)}>Payment Type</label>\n                                                        <div className={style.paymentmain}>\n                                                            <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                                <input\n                                                                    type=\"radio\"\n                                                                    id=\"fix\"\n                                                                    name=\"paymentype\"\n                                                                    value=\"fix\"\n                                                                    onChange={(e) => setIngredient(e.target.value)}\n                                                                    checked={ingredient === 'fix'}\n                                                                    className={style.customRadio}\n                                                                />\n                                                                <label htmlFor=\"fix\" className={style.radioLabel}>Fix</label>\n                                                            </div>\n                                                            <span>or</span>\n                                                            <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                                <input\n                                                                    type=\"radio\"\n                                                                    id=\"hours\"\n                                                                    name=\"paymentype\"\n                                                                    value=\"hours\"\n                                                                    onChange={(e) => setIngredient(e.target.value)}\n                                                                    checked={ingredient === 'hours'}\n                                                                    className={style.customRadio}\n                                                                />\n                                                                <label htmlFor=\"hours\" className={style.radioLabel}>Hours</label>\n                                                            </div>\n                                                            <span>or</span>\n                                                            <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                                <input\n                                                                    type=\"radio\"\n                                                                    id=\"timetracker\"\n                                                                    name=\"paymentype\"\n                                                                    value=\"timetracker\"\n                                                                    onChange={(e) => setIngredient(e.target.value)}\n                                                                    checked={ingredient === 'timetracker'}\n                                                                    className={style.customRadio}\n                                                                />\n                                                                <label htmlFor=\"timetracker\" className={style.radioLabel}>Time Tracker</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className={`${style.typeBorder} ${style.paymentType}`}>\n                                                        <label className={clsx(style.lable)}>Time</label>\n                                                        <div className={style.paymentmain}>\n                                                            <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                                <input\n                                                                    type=\"radio\"\n                                                                    id=\"shift\"\n                                                                    name=\"paymentype\"\n                                                                    value=\"shift\"\n                                                                    onChange={(e) => setIngredient(e.target.value)}\n                                                                    checked={ingredient === 'shift'}\n                                                                    className={style.customRadio}\n                                                                />\n                                                                <label htmlFor=\"shift\" className={style.radioLabel}>Shift</label>\n                                                            </div>\n                                                            <span>or</span>\n                                                            <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                                <input\n                                                                    type=\"radio\"\n                                                                    id=\"timeframe\"\n                                                                    name=\"paymentype\"\n                                                                    value=\"timeframe\"\n                                                                    onChange={(e) => setIngredient(e.target.value)}\n                                                                    checked={ingredient === 'timeframe'}\n                                                                    className={style.customRadio}\n                                                                />\n                                                                <label htmlFor=\"timeframe\" className={style.radioLabel}>Time Frame</label>\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n\n\n                                    </form>\n                                </div>\n\n                            </div>\n                            <Row className='bg-white mt-4 pt-4 pb-4'>\n                                <Col>\n                                    <Button type=\"button\" className='danger-outline-button' >Delete Template</Button>\n                                </Col>\n\n                                <Col className='d-flex justify-content-end align-items-center'>\n                                    <Button type='button' className='me-2 outline-button'>Cancel</Button>\n                                    <Button type='button' className='solid-button'>Save Template</Button>\n                                </Col>\n                            </Row>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default EditTemplates;\n","'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { KeyFilter } from 'primereact/keyfilter';\nimport { Tooltip } from 'primereact/tooltip';\nimport { classNames, ObjectUtils, DomHandler } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar classes = {\n  root: function root(_ref) {\n    var props = _ref.props,\n      context = _ref.context,\n      isFilled = _ref.isFilled;\n    return classNames('p-inputtextarea p-inputtext p-component', {\n      'p-disabled': props.disabled,\n      'p-filled': isFilled,\n      'p-inputtextarea-resizable': props.autoResize,\n      'p-invalid': props.invalid,\n      'p-variant-filled': props.variant ? props.variant === 'filled' : context && context.inputStyle === 'filled'\n    });\n  }\n};\nvar styles = \"\\n@layer primereact {\\n    .p-inputtextarea-resizable {\\n        overflow: hidden;\\n        resize: none;\\n    }\\n    \\n    .p-fluid .p-inputtextarea {\\n        width: 100%;\\n    }\\n}\\n\";\nvar InputTextareaBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'InputTextarea',\n    __parentMetadata: null,\n    autoResize: false,\n    invalid: false,\n    variant: null,\n    keyfilter: null,\n    onBlur: null,\n    onFocus: null,\n    onBeforeInput: null,\n    onInput: null,\n    onKeyDown: null,\n    onKeyUp: null,\n    onPaste: null,\n    tooltip: null,\n    tooltipOptions: null,\n    validateOnly: false,\n    children: undefined\n  },\n  css: {\n    classes: classes,\n    styles: styles\n  }\n});\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar InputTextarea = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = InputTextareaBase.getProps(inProps, context);\n  var elementRef = React.useRef(ref);\n  var cachedScrollHeight = React.useRef(0);\n  var _InputTextareaBase$se = InputTextareaBase.setMetaData(_objectSpread(_objectSpread({\n      props: props\n    }, props.__parentMetadata), {}, {\n      context: {\n        disabled: props.disabled\n      }\n    })),\n    ptm = _InputTextareaBase$se.ptm,\n    cx = _InputTextareaBase$se.cx,\n    isUnstyled = _InputTextareaBase$se.isUnstyled;\n  useHandleStyle(InputTextareaBase.css.styles, isUnstyled, {\n    name: 'inputtextarea'\n  });\n  var onFocus = function onFocus(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onFocus && props.onFocus(event);\n  };\n  var onBlur = function onBlur(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onBlur && props.onBlur(event);\n  };\n  var onKeyUp = function onKeyUp(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onKeyUp && props.onKeyUp(event);\n  };\n  var onKeyDown = function onKeyDown(event) {\n    props.onKeyDown && props.onKeyDown(event);\n    if (props.keyfilter) {\n      KeyFilter.onKeyPress(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onBeforeInput = function onBeforeInput(event) {\n    props.onBeforeInput && props.onBeforeInput(event);\n    if (props.keyfilter) {\n      KeyFilter.onBeforeInput(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onPaste = function onPaste(event) {\n    props.onPaste && props.onPaste(event);\n    if (props.keyfilter) {\n      KeyFilter.onPaste(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onInput = function onInput(event) {\n    var target = event.target;\n    if (props.autoResize) {\n      resize(ObjectUtils.isEmpty(target.value));\n    }\n    props.onInput && props.onInput(event);\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n  var resize = function resize(initial) {\n    var inputEl = elementRef.current;\n    if (inputEl && DomHandler.isVisible(inputEl)) {\n      if (!cachedScrollHeight.current) {\n        cachedScrollHeight.current = inputEl.scrollHeight;\n        inputEl.style.overflow = 'hidden';\n      }\n      if (cachedScrollHeight.current !== inputEl.scrollHeight || initial) {\n        inputEl.style.height = '';\n        inputEl.style.height = inputEl.scrollHeight + 'px';\n        if (parseFloat(inputEl.style.height) >= parseFloat(inputEl.style.maxHeight)) {\n          inputEl.style.overflowY = 'scroll';\n          inputEl.style.height = inputEl.style.maxHeight;\n        } else {\n          inputEl.style.overflow = 'hidden';\n        }\n        cachedScrollHeight.current = inputEl.scrollHeight;\n      }\n    }\n  };\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  React.useEffect(function () {\n    if (props.autoResize) {\n      resize(true);\n    }\n  }, [props.autoResize]);\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue);\n  }, [props.value, props.defaultValue]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: classNames(props.className, cx('root', {\n      context: context,\n      isFilled: isFilled\n    })),\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onBeforeInput: onBeforeInput,\n    onInput: onInput,\n    onPaste: onPaste\n  }, InputTextareaBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", rootProps), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip,\n    pt: ptm('tooltip')\n  }, props.tooltipOptions)));\n}));\nInputTextarea.displayName = 'InputTextarea';\n\nexport { InputTextarea };\n"],"names":["EditTemplates","activeTab","setActiveTab","useState","location","useLocation","ingredient","setIngredient","departments","state","cardData","setCardData","isDepartments","setisDepartments","editedDepartments","seteditedDepartments","schema","yup","shape","username","required","control","register","handleSubmit","setValue","formState","errors","useForm","resolver","yupResolver","navigate","useNavigate","_jsx","_Fragment","children","className","_jsxs","Sidebar","style","templateBoxWrap","BreadCrumbPage","backHandle","templateName","departmentsName","templateHeadBorder","type","value","onChange","e","target","onBlur","handleSaveDepartment","prevData","reference","autoFocus","PencilSquare","size","color","onClick","handleEditDepartments","cursor","formTemplateGroup","onSubmit","data","console","log","Row","Col","sm","clsx","lable","IconField","InputIcon","name","src","exclamationCircle","alt","InputText","inputText","error","placeholder","message","top","description","InputTextarea","rows","cols","resize","lable1","paymentType","paymentmain","RadioButton","id","checked","customRadio","htmlFor","radioLabel","typeBorder","Button","_extends","Object","assign","bind","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_typeof","o","Symbol","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","classes","root","_ref","props","context","isFilled","classNames","disabled","autoResize","invalid","variant","inputStyle","InputTextareaBase","ComponentBase","extend","defaultProps","__TYPE","__parentMetadata","keyfilter","onFocus","onBeforeInput","onInput","onKeyDown","onKeyUp","onPaste","tooltip","tooltipOptions","validateOnly","css","styles","ownKeys","r","t","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","obj","defineProperty","configurable","writable","getOwnPropertyDescriptors","defineProperties","React","inProps","ref","mergeProps","useMergeProps","PrimeReactContext","getProps","elementRef","cachedScrollHeight","_InputTextareaBase$se","setMetaData","ptm","cx","isUnstyled","useHandleStyle","initial","inputEl","current","DomHandler","isVisible","scrollHeight","overflow","height","parseFloat","maxHeight","overflowY","ObjectUtils","combinedRefs","isNotEmpty","defaultValue","hasTooltip","rootProps","event","KeyFilter","onKeyPress","isEmpty","addClass","removeClass","getOtherProps","Tooltip","content","pt","displayName"],"sourceRoot":""}