{"version":3,"file":"static/js/9422.694d4b91.chunk.js","mappings":"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","sources":["shared/lib/format-aud.js","webpack://memateapp/./src/ui/image-with-fallback/image-avatar.module.scss?81d4","ui/image-with-fallback/image-avatar.jsx","APIs/ClientsApi.js","webpack://memateapp/./src/components/Business/Pages/statistics/profitability/profitability.module.scss?2c87","components/Business/Pages/statistics/profitability/profitability-table.js","APIs/OrdersApi.js","webpack://memateapp/./src/components/Business/features/statistics-features/profitability-filters/profitability-dropdown.module.scss?b472","components/Business/features/statistics-features/profitability-filters/profitability-dropdown.js","components/Business/features/statistics-features/profitability-filters/profitability-filters.js","components/Business/Pages/statistics/ui/statistics-header.js","components/Business/Pages/statistics/profitability/index.js","webpack://memateapp/./src/components/Business/Pages/statistics/statistics.module.scss?e36e","webpack://memateapp/./src/ui/no-data-template/no-data-found-template.module.scss?18de","ui/no-data-template/no-data-found-template.js"],"sourcesContent":["export function formatAUD(amount, shorten = false) {\n    const num = parseFloat(amount);\n\n    if (isNaN(num)) {\n        return \"0.00\";\n    }\n\n    if (shorten && Math.abs(num) >= 1000.00) {\n        return new Intl.NumberFormat('en-AU', {\n            notation: \"compact\",\n            compactDisplay: \"short\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(num);\n    }\n\n    return new Intl.NumberFormat('en-AU', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(num);\n}","// extracted by mini-css-extract-plugin\nexport default {\"clientImg\":\"image-avatar_clientImg__-nnRU\"};","import React, { useState } from 'react';\nimport { Building, Person } from 'react-bootstrap-icons';\nimport style from './image-avatar.module.scss';\n\nconst ImageAvatar = ({ has_photo, photo, is_business }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return (\n        <div className={`d-flex justify-content-center align-items-center ${style.clientImg} ${is_business ? \"\" : \"rounded-circle\"}`} style={{ overflow: 'hidden' }}>\n            {has_photo && photo && !imgError ? (\n                <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n            ) : (\n                <Icon color=\"#667085\" />\n            )}\n        </div>\n    );\n};\n\nexport const FallbackImage = ({ has_photo, photo, is_business, size }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return <>\n        {has_photo && photo && !imgError ? (\n            <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n        ) : (\n            <Icon color=\"#667085\" size={size} />\n        )}\n    </>;\n};\n\nexport const FallbackImageWithInitials = ({ has_photo, photo, name }) => {\n    const [imgError, setImgError] = useState(false);\n    const initials = name && name?.split(' ')?.map(n => n[0])?.join('')?.toUpperCase() || \"\";\n\n    return <>\n        {has_photo && photo && !imgError ? (\n            <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n        ) : initials}\n    </>;\n};\n\nexport const InitialsAvatar = ({ name, size = 14 }) => {\n    const initials = name.split(' ').map(n => n[0]).join('').toUpperCase();\n\n    return (\n        <span style={{ fontSize: `${size}px` }}>\n            {initials}\n        </span>\n    );\n};\n\nexport default ImageAvatar;\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createNewIndividualClient = async (data) => {\n  const endpoint = '/clients/individual/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewBusinessClient = async (data) => {\n  const endpoint = '/clients/business/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const restoreClient = async (id) => {\n  const endpoint = `/clients/restore/${id}/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientById = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientCategories = async () => {\n  const endpoint = `/references/clients/categories/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientIndustries = async () => {\n  const endpoint = `/references/clients/industries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getCountries = async () => {\n  const endpoint = `/references/countries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  const response = await fetchAPI(url.toString(), options, false);\n  const allowedCountries = [1];\n  return response?.filter(country => allowedCountries.includes(country.id)) || [];\n};\n\nexport const getStates = async (country) => {\n  const endpoint = `/references/states/${country}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getCities = async (state) => {\n  const endpoint = `/references/cities/${state}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getProjectManager = async () => {\n  const endpoint = `/references/desktop-users/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientEditApi = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getListOfClients = async (page, limit, search = \"\", order = \"\", isShowDeleted) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientOrderHistory = async (id, page, limit, search = \"\", order = \"\",) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/${id}/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"number\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  \n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainContact = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteClient = async (id) => {\n  const endpoint = `/clients/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteContactPerson = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchClients = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/clients`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Clients fetch error:', error);\n    throw error;\n  }\n};\n\nexport const bringBack = async (id) => {\n  const endpoint = `/projects/back/`;\n  const options = {\n    method: 'PUT',\n    body: { unique_id: id }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"profitability_active__Xbh+R\",\"selectedCount\":\"profitability_selectedCount__5lf5h\",\"filterBox\":\"profitability_filterBox__CAZdU\",\"newButton\":\"profitability_newButton__UN4i4\",\"orderImg\":\"profitability_orderImg__mNdKO\",\"inProgress\":\"profitability_inProgress__vTU2w\",\"complete\":\"profitability_complete__tygri\",\"lost\":\"profitability_lost__aNqWR\",\"completeProfit\":\"profitability_completeProfit__T7ED+\",\"lostProfit\":\"profitability_lostProfit__7M+g+\",\"piCircleStyle\":\"profitability_piCircleStyle__QEG6v\",\"RealCostCircleStyle\":\"profitability_RealCostCircleStyle__JQYGi\",\"budgetStyle\":\"profitability_budgetStyle__y5RJ2\",\"labourCostCircleStyle\":\"profitability_labourCostCircleStyle__TSnAw\",\"saleCircleStyle\":\"profitability_saleCircleStyle__tpNAz\",\"operCircleStyle\":\"profitability_operCircleStyle__ceNe2\",\"profitdata\":\"profitability_profitdata__137CR\",\"inProgressProfit\":\"profitability_inProgressProfit__ytfga\",\"statusComplete\":\"profitability_statusComplete__qYliK\",\"modal\":\"profitability_modal__punLr\",\"exploreModel\":\"profitability_exploreModel__gtQ0c\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { InfoCircle } from 'react-bootstrap-icons';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Dialog } from \"primereact/dialog\";\nimport { Tag } from 'primereact/tag';\nimport style from './profitability.module.scss';\nimport { getListOfOrder } from '../../../../../APIs/OrdersApi';\nimport { useTrialHeight } from '../../../../../app/providers/trial-height-provider';\nimport exploreOperatingimg from \"../../../../../assets/images/icon/exploreOperatingimg.png\";\nimport { formatDate } from '../../../../../shared/lib/date-format';\nimport { formatAUD } from '../../../../../shared/lib/format-aud';\nimport Loader from '../../../../../shared/ui/loader/loader';\nimport ImageAvatar from '../../../../../ui/image-with-fallback/image-avatar';\nimport NoDataFoundTemplate from '../../../../../ui/no-data-template/no-data-found-template';\n\nconst OrdersTable = forwardRef(({ searchValue, selectedOrder, setSelectedOrder, isShowDeleted, filter }, ref) => {\n  const observerRef = useRef(null);\n  const { trialHeight } = useTrialHeight();\n  const [visible, setVisible] = useState(false);\n  const [orders, setOrders] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const [sort, setSort] = useState({ sortField: 'number', sortOrder: -1 });\n  const [tempSort, setTempSort] = useState({ sortField: 'number', sortOrder: -1 });\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const limit = 25;\n\n  useEffect(() => {\n    setPage(1);\n  }, [searchValue, isShowDeleted, filter]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n\n      let order = \"\";\n      if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n      else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n      // Build filter parameters\n      const filterParams = {};\n      \n      if (filter?.status?.length > 0) {\n        filterParams.status = filter.status.map(s => s.value).join(',');\n      }\n      \n      if (filter?.clients?.length > 0) {\n        filterParams.clients = filter.clients.map(c => c.id).join(',');\n      }\n      \n      if (filter?.date?.length > 0 && filter.date[0].value) {\n        const [startDate, endDate] = filter.date[0].value;\n        if (startDate) {\n          filterParams.create_date_after = formatDateForAPI(startDate);\n        }\n        if (endDate) {\n          filterParams.create_date_before = formatDateForAPI(endDate);\n        }\n      }\n\n      const data = await getListOfOrder(page, limit, searchValue, order, isShowDeleted, filterParams);\n\n      if (page === 1) setOrders(data.results);\n      else {\n        if (data?.results?.length > 0)\n          setOrders(prev => {\n            const existingOrderIds = new Set(prev.map(order => order.unique_id));\n            const newOrder = data.results.filter(order => !existingOrderIds.has(order.unique_id));\n            return [...prev, ...newOrder];\n          });\n      }\n      setSort(tempSort);\n      setHasMoreData(data.count !== orders.length);\n      setLoading(false);\n    };\n\n    loadData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, searchValue, tempSort, isShowDeleted, filter]);\n\n  function formatDateForAPI(date) {\n    if (!date) return '';\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n\n  useEffect(() => {\n    if (orders.length > 0 && hasMoreData) {\n      observerRef.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n      });\n\n      const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n      if (lastRow) observerRef.current.observe(lastRow);\n    }\n\n    return () => {\n      if (observerRef.current) observerRef.current.disconnect();\n    };\n  }, [orders, hasMoreData]);\n\n  const getPercentage = (value, total) => {\n    if (total === 0) return 0;\n    const percentage = Math.round((value / total) * 100);\n    return percentage > 100 ? -(percentage - 100) : percentage;\n  };\n\n  const orderBody = (rowData) => {\n    return <div className={`d-flex align-items-center justify-content-between show-on-hover`}>\n      <div className={`d-flex flex-column`} style={{ lineHeight: '1.385' }}>\n        {rowData.number}\n        <span style={{ color: '#98A2B3' }} className='font-12'>{formatDate(rowData.created)}</span>\n      </div>\n      {/* <Button label=\"Open\" onClick={() => { }} className='primary-text-button ms-3 show-on-hover-element' text /> */}\n    </div>;\n  };\n\n  const customerBody = (rowData) => {\n    return <div className='d-flex align-items-center'>\n      <ImageAvatar has_photo={rowData?.client?.has_photo} photo={rowData?.client?.photo} is_business={rowData?.client?.is_business} />\n      <div className='d-flex flex-column gap-1'>\n        <div className={`${style.ellipsis}`}>{rowData.client.name}</div>\n        {rowData.deleted ?\n          <Tag value=\"Deleted\" style={{ height: '22px', width: '59px', borderRadius: '16px', border: '1px solid #FECDCA', background: '#FEF3F2', color: '#912018', fontSize: '12px', fontWeight: 500 }}></Tag> : ''}\n      </div>\n    </div>;\n  };\n\n  const statusBody = (rowData) => {\n    return (\n      <div className='d-flex align-items-center'>\n        <div className={`d-flex justify-content-center align-items-center`}>\n          {rowData.status === \"In progress\" ? (\n            <span className={style.lostProfit}>{rowData.status}</span>\n          ) : (\n            <span className={style.statusComplete}>{rowData.status}<span className=\"dots\"></span></span>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const redCircularProgressbar = (percentage) => {\n    return <CircularProgressbar\n      value={percentage}\n      text={`${percentage}%`}\n      strokeWidth={11}\n      styles={buildStyles({\n        pathColor: '#F04438',\n        trailColor: '#EAECF0',\n        textColor: '#667085',\n        textSize: '25px',\n        pathTransitionDuration: 0.5,\n      })}\n    />;\n  };\n\n  const yellowCircularProgressbar = (percentage) => {\n    return <CircularProgressbar\n      value={percentage}\n      text={`${percentage}%`}\n      strokeWidth={11}\n      styles={buildStyles({\n        pathColor: '#F79009',\n        trailColor: '#EAECF0',\n        textColor: '#667085',\n        textSize: '25px',\n        pathTransitionDuration: 0.5,\n      })}\n    />;\n  };\n\n  const greenCircularProgressbar = (percentage) => {\n    return <CircularProgressbar\n      value={percentage}\n      text={`${percentage}%`}\n      strokeWidth={11}\n      styles={buildStyles({\n        pathColor: '#17B26A',\n        trailColor: '#EAECF0',\n        textColor: '#667085',\n        textSize: '25px',\n        pathTransitionDuration: 0.5,\n      })}\n    />;\n  };\n\n  const costOfSaleBody = (rowData) => {\n    const real_cost = rowData.labor_expenses + rowData.cost_of_sale + rowData.operating_expense;\n    const cost_of_sale_percentage = getPercentage(rowData.cost_of_sale, real_cost);\n\n    return <div\n      className={`d-flex align-items-center ${style.piCircleStyle} ${style.saleCircleStyle}`}\n      style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n    >\n      <div style={{ width: 32, height: 32 }}>\n        {redCircularProgressbar(cost_of_sale_percentage)}\n      </div>\n      <span>${formatAUD(rowData.cost_of_sale)}</span>\n    </div>;\n  };\n\n  const labourBody = (rowData) => {\n    const real_cost = rowData.labor_expenses + rowData.cost_of_sale + rowData.operating_expense;\n    const labor_expenses_percentage = getPercentage(rowData.labor_expenses, real_cost);\n\n    return <div\n      className={`d-flex align-items-center ${style.piCircleStyle} ${style.labourCostCircleStyle}`}\n      style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n    >\n      <div style={{ width: 32, height: 32 }}>\n        {yellowCircularProgressbar(labor_expenses_percentage)}\n      </div>\n      <span>${formatAUD(rowData.labor_expenses)}</span>\n    </div>;\n  };\n\n  const OperatingExpenseBody = (rowData) => {\n    const real_cost = rowData.labor_expenses + rowData.cost_of_sale + rowData.operating_expense;\n    const operating_expense_percentage = getPercentage(rowData.operating_expense, real_cost);\n\n    return <div\n      className={`d-flex align-items-center ${style.piCircleStyle} ${style.operCircleStyle}`}\n      style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n    >\n      <div style={{ width: 32, height: 32 }}>\n        <CircularProgressbar\n          value={operating_expense_percentage}\n          text={`${operating_expense_percentage}%`}\n          strokeWidth={11}\n          styles={buildStyles({\n            pathColor: '#1AB2FF',\n            trailColor: '#EAECF0',\n            textColor: '#667085',\n            textSize: '25px',\n            pathTransitionDuration: 0.5,\n          })}\n        />\n      </div>\n      <span>${formatAUD(rowData.operating_expense)}</span>\n    </div>;\n  };\n\n  const realCost = (rowData) => {\n    const real_cost = rowData.labor_expenses + rowData.cost_of_sale + rowData.operating_expense;\n\n    return <div\n      className={`d-flex align-items-center ${style.piCircleStyle} ${style.RealCostCircleStyle}`}\n      style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n    >\n      <span>${formatAUD(real_cost)}</span>\n    </div>;\n  };\n\n  const budget = (rowData) => {\n    return <div\n      className={`d-flex align-items-center ${style.piCircleStyle} ${style.budgetStyle}`}\n      style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n    >\n      <span>${formatAUD(rowData.budget)}</span>\n    </div>;\n  };\n\n  const totalInvoice = (rowData) => {\n    return <div className='d-flex align-items-center'>\n      <div className={`d-flex justify-content-center align-items-center`}>\n        ${formatAUD(rowData.total)}\n      </div>\n    </div>;\n  };\n\n\n  const profitBodyTemplate = (rowData) => {\n    const real_cost = rowData.labor_expenses + rowData.cost_of_sale + rowData.operating_expense;\n    const profit = rowData.total - real_cost;\n    const profitPercentage = getPercentage(profit, rowData.total);\n\n\n    return <div className={`d-flex align-items-center gap-2`}>\n      <div style={{ width: 32, height: 32 }}>\n        {profitPercentage < 0 ? redCircularProgressbar(profitPercentage)\n          : profitPercentage < 10 ? yellowCircularProgressbar(profitPercentage)\n            : greenCircularProgressbar(profitPercentage)}\n      </div>\n      {profitPercentage < 0 ? <Tag className={`profit ${style.lostProfit} rounded`} value={`$ ${formatAUD(rowData.profit)}`} />\n        : profitPercentage < 10 ? <Tag className={`profit ${style.completeProfit} rounded`} value={`$ ${formatAUD(rowData.profit)}`} />\n          : <Tag className={`profit ${style.inProgressProfit} rounded`} value={`$ ${formatAUD(rowData.profit)}`} />}\n    </div>;\n  };\n\n  const rowClassName = (data) => (data?.deleted ? style.deletedRow : '');\n\n  const onSort = (event) => {\n    const { sortField, sortOrder } = event;\n\n    setTempSort({ sortField, sortOrder });\n    setPage(1);  // Reset to page 1 whenever searchValue changes\n  };\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  const headerElementg = (\n    <div className={`${style.modalHeader}`}>\n      <div className=\"d-flex align-items-center gap-2\">\n        <img src={exploreOperatingimg} alt={exploreOperatingimg} />\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <DataTable ref={ref} value={orders} scrollable selectionMode={'checkbox'}\n        columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n        scrollHeight={`calc(100vh - 175px - 48px - ${trialHeight}px)`} className=\"border\" selection={selectedOrder}\n        onSelectionChange={(e) => setSelectedOrder(e.value)}\n        loading={loading}\n        loadingIcon={Loader}\n        emptyMessage={<NoDataFoundTemplate isDataExist={!!searchValue} />}\n        sortField={sort?.sortField}\n        sortOrder={sort?.sortOrder}\n        onSort={onSort}\n        rowClassName={rowClassName}\n      >\n        <Column selectionMode=\"multiple\" bodyClassName={'show-on-hover border-end-0'} headerClassName='border-end-0' headerStyle={{ width: '3rem', zIndex: 1 }} frozen></Column>\n        <Column field=\"number\" header=\"Project #\" body={orderBody} style={{ minWidth: '155px' }} headerClassName='shadowRight' bodyClassName='shadowRight' frozen sortable></Column>\n        <Column field=\"client.name\" header=\"Customer\" body={customerBody} style={{ minWidth: '224px' }} sortable></Column>\n        <Column field=\"reference\" header=\"Project Reference\" body={(rowData) => <div className='ellipsis-width' title={rowData.reference} style={{ maxWidth: '400px' }}>{rowData.reference}</div>} style={{ minWidth: '400px' }} ></Column>\n        <Column header=\"Info\" body={<InfoCircle color='#667085' size={16} />} bodyClassName={\"text-center\"} style={{ minWidth: '68px' }}></Column>\n        <Column field=\"status\" header=\"Status\" body={statusBody} style={{ minWidth: '113px' }} sortable></Column>\n\n        <Column field=\"cost_of_sale\" header=\"Cost of Sale\" body={costOfSaleBody} style={{ minWidth: '146x', textAlign: 'center' }} sortable></Column>\n        <Column field=\"labor_expenses\" header=\"Labour\" body={labourBody} style={{ minWidth: '149px', textAlign: 'right' }} sortable></Column>\n        <Column field=\"operating_expense\" header=\"Operating Expense\" body={OperatingExpenseBody} style={{ minWidth: '152x', textAlign: 'center' }} sortable></Column>\n\n        <Column field=\"realcost\" header=\"Real Cost\" body={realCost} style={{ minWidth: '113px', textAlign: 'right' }} sortable></Column>\n        <Column field=\"budget\" header=\"Budget\" body={budget} style={{ minWidth: '110px' }} className='text-end' sortable></Column>\n\n        <Column field=\"total\" body={totalInvoice} header=\"Total Invoice\" style={{ minWidth: '101x', textAlign: 'center' }} sortable></Column>\n        <Column field='profit' header=\"Operational Profit\" body={profitBodyTemplate} bodyClassName={\"text-end\"} style={{ minWidth: '150px' }} sortable></Column>\n      </DataTable>\n\n      <Dialog\n        visible={visible}\n        modal={true}\n        header={headerElementg}\n        className={`${style.modal} ${style.exploreModel} custom-modal custom-scroll-integration `}\n        onHide={handleClose}>\n        <div className=\"d-flex flex-column\">\n          <h2>Explore Operating Expense</h2>\n          <ul>\n            <li>\n              <h3>Yearly based expenses total amount: <strong>$51894.66</strong></h3>\n            </li>\n            <li>\n              <h3>Monthly based expenses total amount:  <strong>$6893.32</strong></h3>\n            </li>\n            <li>\n              <h3>Number of invoices:  <strong>6</strong></h3>\n            </li>\n            <li>\n              <h3>One month:  <strong>$51894.66 / 12 + $6893.32 = 11217.88;$11217.88 / 6 = $1869.65</strong></h3>\n            </li>\n          </ul>\n        </div>\n      </Dialog>\n    </>\n  );\n});\nexport default OrdersTable;","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfOrder = async (page, limit, search=\"\", order=\"\", isShowDeleted, filters = {}) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n  \n  // Add filter parameters\n  if (filters.status) url.searchParams.append(\"status\", filters.status);\n  if (filters.clients) url.searchParams.append(\"clients\", filters.clients);\n  if (filters.create_date_after) url.searchParams.append(\"create_date_after\", filters.create_date_after);\n  if (filters.create_date_before) url.searchParams.append(\"create_date_before\", filters.create_date_before);\n\n  return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"profitability-dropdown_filterBox__RBikh\",\"dropdownSelect\":\"profitability-dropdown_dropdownSelect__PNb-v\",\"searchBox\":\"profitability-dropdown_searchBox__7Ry9U\",\"clientDropdownItem\":\"profitability-dropdown_clientDropdownItem__6hhO+\",\"mainTagsWrapper\":\"profitability-dropdown_mainTagsWrapper__A6WX6\",\"tagsInputContainer\":\"profitability-dropdown_tagsInputContainer__RFVkZ\",\"tagItemsWrap\":\"profitability-dropdown_tagItemsWrap__V8wmd\",\"tagItemWrap\":\"profitability-dropdown_tagItemWrap__zOm09\"};","import React, { useEffect, useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { CalendarWeek, CurrencyDollar, Filter, People } from 'react-bootstrap-icons';\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport clsx from 'clsx';\nimport { Checkbox } from 'primereact/checkbox';\nimport { useDebounce } from \"primereact/hooks\";\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport style from './profitability-dropdown.module.scss';\nimport { getListOfClients } from '../../../../../APIs/ClientsApi';\nimport { FallbackImage } from '../../../../../shared/ui/image-with-fallback/image-avatar';\n\nconst ProfitabilityDropdown = ({ setFilters, filter }) => {\n    const observerRef = useRef(null);\n    const dropdownRef = useRef(null);\n    const [showFilter, setShowFilter] = useState(false);\n    const [key, setKey] = useState('status');\n    const [statusValue, setStatusValue] = useState([]);\n    const [dateRange, setDateRange] = useState([null, null]);\n    const [clients, setClients] = useState([]);\n    const [clientPage, setClientPage] = useState(1);\n    const [selectedClients, setSelectedClients] = useState(null);\n    const [hasMoreClients, setHasMoreClients] = useState(true);\n    const [clientInputValue, clientDebouncedValue, setClientInputValue] = useDebounce('', 400);\n    const [clientLoading, setClientLoading] = useState(false);\n    const limit = 25;\n\n    useEffect(() => {\n        setClientPage(1);\n        setHasMoreClients(true);\n    }, [clientDebouncedValue]);\n\n    useEffect(() => {\n        const loadClients = async () => {\n            setClientLoading(true);\n            try {\n                const data = await getListOfClients(clientPage, limit, clientDebouncedValue);\n                \n                if (clientPage === 1) {\n                    setClients(data?.results || []);\n                } else {\n                    if (data?.results?.length > 0) {\n                        setClients(prev => {\n                            const existingIds = new Set(prev.map(c => c.id));\n                            const newClients = data.results.filter(c => !existingIds.has(c.id));\n                            return [...prev, ...newClients];\n                        });\n                    }\n                }\n                const hasMore = data?.count ? (clientPage * limit) < data.count : (data?.results?.length || 0) >= limit;\n                setHasMoreClients(hasMore);\n            } catch (error) {\n                console.error('Error loading clients:', error);\n                setClients([]);\n                setHasMoreClients(false);\n            }\n            setClientLoading(false);\n        };\n\n        loadClients();\n    }, [clientPage, clientDebouncedValue]);\n\n    useEffect(() => {\n        if (clients?.length > 0 && hasMoreClients && key === 'clients' && !clientLoading) {\n            const timeout = setTimeout(() => {\n                const lastRow = document.querySelector('.client-dropdown .client-dropdown-item:last-child');\n                if (lastRow && observerRef.current) {\n                    observerRef.current.disconnect();\n                }\n                if (lastRow) {\n                    observerRef.current = new IntersectionObserver(\n                        (entries) => {\n                            if (entries[0].isIntersecting && hasMoreClients && !clientLoading) {\n                                setClientPage(prev => prev + 1);\n                            }\n                        },\n                        { threshold: 0.8 }\n                    );\n                    observerRef.current.observe(lastRow);\n                }\n            }, 500);\n\n            return () => {\n                clearTimeout(timeout);\n                if (observerRef.current) observerRef.current.disconnect();\n            };\n        }\n    }, [clients, hasMoreClients, showFilter, key, clientLoading]);\n\n    function formatDateToYMD(date) {\n        if (!date) return '';\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${day}-${month}-${year}`;\n    }\n\n    const handleStatusChange = (status) => {\n        setStatusValue((prev) => {\n            if (prev.includes(status)) {\n                return prev.filter((s) => s !== status);\n            }\n            return [...prev, status];\n        });\n    };\n\n    const handleCancel = () => {\n        setShowFilter(false);\n        setKey('status');\n    };\n\n    const handleApply = () => {\n        setShowFilter(false);\n\n        if (selectedClients?.length) {\n            setFilters((prev) => ({ ...prev, clients: [...selectedClients] }));\n        }\n\n        const formattedStatus = statusValue.map((status) => {\n            return { name: status, value: status };\n        });\n        \n        setFilters((prev) => ({ ...prev, status: [...formattedStatus] }));\n\n        if (dateRange && dateRange[0] && dateRange[1]) {\n            let dateName = `${formatDateToYMD(dateRange[0])} - ${formatDateToYMD(dateRange[1])}`;\n            setFilters((prev) => ({ ...prev, date: [{ name: dateName, value: dateRange }] }));\n        }\n    };\n\n    useEffect(() => {\n        if (!filter?.clients) {\n            setSelectedClients(null);\n        } else if (filter?.clients) {\n            setSelectedClients(filter.clients);\n        }\n\n        if (!filter?.status) {\n            setStatusValue([]);\n        } else if (filter?.status) {\n            setStatusValue(filter.status.map((status) => status.value));\n        }\n\n        if (!filter?.date) {\n            setDateRange([null, null]);\n        } else if (filter?.date) {\n            setDateRange(filter.date[0].value);\n        }\n    }, [filter]);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setShowFilter(false);\n            }\n        };\n\n        if (showFilter) {\n            document.addEventListener('mousedown', handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [showFilter]);\n\n    return (\n        <div className='profitability-filters' ref={dropdownRef}>\n            <button className={`${style.filterBox}`} onClick={() => setShowFilter(!showFilter)}>\n                <Filter />\n            </button>\n            {showFilter &&\n                <Tabs\n                    id=\"profitability-filter-tabs\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"filtterBoxWrapper\"\n                    style={{ marginLeft: '5px', marginTop: '5px' }}\n                >\n                    <Tab\n                        eventKey=\"status\"\n                        title={\n                            <>\n                                <CurrencyDollar color=\"#667085\" size={16} /> Status\n                            </>\n                        }\n                    >\n                        <div className='d-flex align-items-center gap-3 p-2 mb-2'>\n                            <Checkbox inputId=\"in-progress\" checked={statusValue?.includes(\"in-progress\")} onChange={() => handleStatusChange(\"in-progress\")} />\n                            <label htmlFor=\"in-progress\" className='mb-0'>In progress</label>\n                        </div>\n                        <div className='d-flex align-items-center gap-3 p-2 mb-2'>\n                            <Checkbox inputId=\"completed\" checked={statusValue?.includes(\"completed\")} onChange={() => handleStatusChange(\"completed\")} />\n                            <label htmlFor=\"completed\" className='mb-0'>Completed</label>\n                        </div>\n                        <div className='d-flex align-items-center gap-3 p-2 mb-2'>\n                            <Checkbox inputId=\"lost\" checked={statusValue?.includes(\"lost\")} onChange={() => handleStatusChange(\"lost\")} />\n                            <label htmlFor=\"lost\" className='mb-0'>Lost</label>\n                        </div>\n\n                        <div className='d-flex justify-content-end gap-2 p-3 border-top'>\n                            <Button className='outline-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleCancel}>Cancel</Button>\n                            <Button className='solid-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleApply}>Apply</Button>\n                        </div>\n                    </Tab>\n\n                    <Tab\n                        eventKey=\"clients\"\n                        title={\n                            <>\n                                <People color=\"#667085\" size={16} />Clients\n                            </>\n                        }\n                    >\n                        <div className={style.searchBox}>\n                            <div style={{ position: 'absolute', top: '7px', left: '18px' }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                    <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                </svg>\n                            </div>\n                            <input \n                                type=\"text\" \n                                placeholder=\"Search clients\" \n                                value={clientInputValue} \n                                onChange={(e) => setClientInputValue(e.target.value)} \n                                className=\"border search-resource\" \n                                style={{ borderRadius: '4px', width: '260px', border: '1px solid #D0D5DD', color: '#424242', padding: '10px 10px 10px 36px', fontSize: '14px', height: '40px' }} \n                            />\n                        </div>\n                        <div className='client-dropdown' style={{ height: '350px', overflow: 'auto', marginLeft: '0px' }}>\n                            {\n                                clients?.map(option =>\n                                    <div key={option.id} className={clsx(style.clientDropdownItem, 'client-dropdown-item')} onClick={() => setSelectedClients(prev => {\n                                        if (prev?.some(client => client.id === option.id)) {\n                                            return prev.filter(client => client.id !== option.id);\n                                        }\n                                        if (!prev) return [option];\n                                        return [...prev, option];\n                                    })}>\n                                        <div className='d-flex gap-2 align-items-center w-100'>\n                                            <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '4px', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={option?.is_business} size={17} />\n                                            </div>\n                                            <div className='ellipsis-width' style={{ maxWidth: '200px' }}>{option?.name}</div>\n                                        </div>\n                                        {\n                                            selectedClients?.some(client => client.id === option.id) ? (\n                                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                                    <path d=\"M16.25 5.625L7.5 14.375L3.75 10.625\" stroke=\"#1AB2FF\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                                                </svg>\n                                            ) : null\n                                        }\n                                    </div>\n                                )\n                            }\n                            {clientLoading && (\n                                <div className='d-flex justify-content-center p-2'>\n                                    <ProgressSpinner style={{ width: \"20px\", height: \"20px\", color: \"#1AB2FF\" }} />\n                                </div>\n                            )}\n                            {!clientLoading && !hasMoreClients && clients?.length > 0 && (\n                                <div className='d-flex justify-content-center p-2 text-muted' style={{ fontSize: '12px' }}>\n                                    No more clients to load\n                                </div>\n                            )}\n                        </div>\n                        <div className='d-flex justify-content-end gap-2 p-3 border-top'>\n                            <Button className='outline-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleCancel}>Cancel</Button>\n                            <Button className='solid-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleApply}>Apply</Button>\n                        </div>\n                    </Tab>\n\n                    <Tab\n                        eventKey='date'\n                        title={<><CalendarWeek color=\"#667085\" size={16} /> Date</>}\n                    >\n                        <div className='px-3 pt-2'>\n                            <Flatpickr\n                                value={dateRange}\n                                onChange={setDateRange}\n                                options={{\n                                    dateFormat: \"Y-m-d\",\n                                    mode: \"range\",\n                                    inline: true,\n                                }}\n                            />\n                        </div>\n                        <div className='d-flex justify-content-end gap-2 p-3 border-top'>\n                            <Button className='outline-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleCancel}>Cancel</Button>\n                            <Button className='solid-button' style={{ width: '115px', padding: '8px 14px' }} onClick={handleApply}>Apply</Button>\n                        </div>\n                    </Tab>\n                </Tabs>\n            }\n        </div>\n    );\n};\n\nexport default ProfitabilityDropdown;\n","import React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport { X } from 'react-bootstrap-icons';\nimport style from './profitability-dropdown.module.scss';\n\nconst ProfitabilityFilters = ({ filter, setFilter }) => {\n    const currentFilter = filter || {};\n\n    const handleRemoveTag = (group, itemName) => {\n        const newFilters = { ...currentFilter };\n        const newItems = newFilters[group].filter((item) => item !== itemName);\n        if (newItems.length === 0) {\n            delete newFilters[group];\n        } else {\n            newFilters[group] = newItems;\n        }\n        setFilter(newFilters);\n    };\n\n    const handleRemoveGroup = (groupName) => {\n        const newFilters = { ...currentFilter };\n        delete newFilters[groupName];\n        setFilter(newFilters);\n    };\n\n    return (\n        <>\n            {Object.keys(currentFilter)?.length > 0 && (\n                <div className={style.mainTagsWrapper}>\n                    {Object.entries(currentFilter)?.map(([group, items]) => (\n                        <div key={group}>\n                            {items?.length > 0 && (\n                                <div className={style.tagsInputContainer}>\n                                    <ul className={style.tagItemsWrap}>\n                                        {items.map((item, index) => (\n                                            <li className={style.tagItemWrap} key={index}>\n                                                {item?.name}\n                                                {items?.length > 1 && (\n                                                    <Button\n                                                        variant=\"link\"\n                                                        size=\"sm\"\n                                                        style={{ marginLeft: \"5px\", padding: 0 }}\n                                                        onClick={() => handleRemoveTag(group, item)}\n                                                    >\n                                                        <X color=\"#F96969\" size={15} />\n                                                    </Button>\n                                                )}\n                                            </li>\n                                        ))}\n                                        <Button\n                                            variant=\"link\"\n                                            size=\"sm\"\n                                            style={{ marginLeft: \"0px\", padding: 0 }}\n                                            onClick={() => handleRemoveGroup(group)}\n                                        >\n                                            <X color=\"#F96969\" size={20} />\n                                        </Button>\n                                    </ul>\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default ProfitabilityFilters;\n","import React from 'react';\nimport { ClipboardData, Google, PieChart, ShopWindow, Speedometer2, TextParagraph, WindowDesktop } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport style from '../statistics.module.scss';\n\nconst StatisticsHeader = ({ page }) => {\n  return (\n    <div className={`topbar ${style.borderTopbar}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n      <Link to={\"/statistics/executive\"} className={clsx('d-flex align-items-center px-2 py-1')}>\n        <PieChart color='#9E77ED' size={16} className='me-2' />\n        <span className={style.topbartext}>Executive</span>\n      </Link>\n      <Link to={\"/statistics/sales-conversion\"} className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n        <Speedometer2 color='#17B26A' size={16} className='me-2' />\n        <span className={style.topbartext}>Conversion</span>\n      </Link>\n      <Link to={\"/statistics/overview\"} className={clsx('d-flex align-items-center px-2 py-1')}>\n        <TextParagraph color='#F04438' size={16} className='me-2' />\n        <span className={style.topbartext}>Overview</span>\n      </Link>\n      <Link to={\"/statistics/key-results\"} className='d-flex align-items-center px-2 py-1'>\n        <WindowDesktop color='#667085' size={16} className='me-2' />\n        <span className={style.topbartext}>Key Results</span>\n      </Link>\n      <Link className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n        <ClipboardData color='#084095' size={16} className='me-2' />\n        <span className={style.topbartext}>Reports</span>\n      </Link>\n      <Link className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n        <Google color='#F79009' size={16} className='me-2' />\n        <span className={style.topbartext}>GA Widgets</span>\n      </Link>\n      <Link to={\"/statistics/profitability\"} style={ page === \"profitability\" ? { background: \"#ECFDF3\", color: \"#26786C\" } : {}} className={clsx( page === \"profitability\" ? style.activeTab : '', 'd-flex align-items-center px-2 py-1')}>\n        <ShopWindow color='#15B79E' size={16} className='me-2' />\n        <span className={style.topbartext} style={ page === \"profitability\" ? { color: \"#26786C\" } : {}}>Profitability</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default StatisticsHeader;","import React, { useRef, useState } from 'react';\nimport { Download } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { useDebounce } from 'primereact/hooks';\nimport ProjectsTable from './profitability-table';\nimport style from './profitability.module.scss';\nimport ProfitabilityDropdown from '../../../features/statistics-features/profitability-filters/profitability-dropdown';\nimport ProfitabilityFilters from '../../../features/statistics-features/profitability-filters/profitability-filters';\nimport StatisticsHeader from '../ui/statistics-header';\n\nconst Profitability = () => {\n    const dt = useRef(null);\n    const [isShowDeleted,] = useState(false);\n    const [selectedOrder, setSelectedOrder] = useState(null);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n    const [filter, setFilter] = useState({});\n\n    const exportCSV = (selectionOnly) => {\n        if (dt.current) {\n            dt.current.exportCSV({ selectionOnly });\n        } else {\n            console.error('DataTable ref is null');\n        }\n    };\n\n    return (\n        <div className='peoples-page'>\n            <Helmet>\n                <title>MeMate - Profitability</title>\n            </Helmet>\n            <StatisticsHeader page=\"profitability\"/>\n            <div className={`topbar ${selectedOrder?.length ? style.active : ''}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    {\n                        selectedOrder?.length ? (\n                            <>\n                                <h6 className={style.selectedCount}>Selected: {selectedOrder?.length}</h6>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => exportCSV(true)}><Download /></button>\n                                </div>\n                            </>\n                        )\n                            : (\n                                <>\n                                    <div className='filtered-box'>\n                                        <ProfitabilityDropdown setFilters={setFilter} filter={filter} />\n                                    </div>\n\n                                    <div className=\"searchBox\" style={{ position: 'relative' }}>\n                                        <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                                <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                            </svg>\n                                        </div>\n                                        <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                                    </div>\n                                </>\n                            )\n                    }\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0\" style={{ marginRight: '16px' }}>Profitability</h1>\n                </div>\n            </div>\n            <ProfitabilityFilters filter={filter} setFilter={setFilter} />\n            <ProjectsTable ref={dt} searchValue={debouncedValue} selectedOrder={selectedOrder} setSelectedOrder={setSelectedOrder} isShowDeleted={isShowDeleted} filter={filter} />\n        </div>\n    );\n};\n\nexport default Profitability;","// extracted by mini-css-extract-plugin\nexport default {\"borderTopbar\":\"statistics_borderTopbar__ljqaY\",\"topbartext\":\"statistics_topbartext__HchJJ\",\"box\":\"statistics_box__DcXrH\",\"executiveBox\":\"statistics_executiveBox__ObZsN\",\"executiveBox2\":\"statistics_executiveBox2__SboXU\",\"executiveBox3\":\"statistics_executiveBox3__E-b3x\",\"executiveBox4\":\"statistics_executiveBox4__4Nkgv\",\"executiveBox5\":\"statistics_executiveBox5__opcH1\",\"executiveBox6\":\"statistics_executiveBox6__+Ewe4\",\"boxTitle\":\"statistics_boxTitle__NOx9r\",\"boxSubtitle\":\"statistics_boxSubtitle__sP+Le\",\"activeTab\":\"statistics_activeTab__lcBPp\",\"disabledLink\":\"statistics_disabledLink__cVJyk\",\"keyResults\":\"statistics_keyResults__Z6mVH\",\"keyResultsTitle\":\"statistics_keyResultsTitle__FGClX\",\"button\":\"statistics_button__yOhzt\",\"monthName\":\"statistics_monthName__VNpP0\",\"activeButton\":\"statistics_activeButton__a9d6t\",\"chartBox\":\"statistics_chartBox__Ge0H+\",\"rightBox\":\"statistics_rightBox__QVbDu\",\"firstBox\":\"statistics_firstBox__NX8+s\",\"secondBox\":\"statistics_secondBox__4-TxO\",\"divider\":\"statistics_divider__Q+7Li\",\"chartTextBox\":\"statistics_chartTextBox__vhgGM\",\"chartTextLabel\":\"statistics_chartTextLabel__RSz82\",\"boxlable\":\"statistics_boxlable__IDKF0\",\"uptoDate\":\"statistics_uptoDate__yB-dd\",\"target\":\"statistics_target__AkTXB\",\"daysComplete\":\"statistics_daysComplete__TO81g\",\"daysTotal\":\"statistics_daysTotal__hVKuy\",\"circularProgressDiv\":\"statistics_circularProgressDiv__4qwlG\",\"chartProgressText\":\"statistics_chartProgressText__IJ6Eo\",\"text1\":\"statistics_text1__l19kj\",\"ProgressBar\":\"statistics_ProgressBar__c-oQT\",\"progressDefaultClass\":\"statistics_progressDefaultClass__-FFkg\",\"ProgressBarInner\":\"statistics_ProgressBarInner__FYOyj\",\"ProgressBarInner2\":\"statistics_ProgressBarInner2__Fll52\",\"ProgressBarInner3\":\"statistics_ProgressBarInner3__HvY8O\",\"ProgressBarInner4\":\"statistics_ProgressBarInner4__ngmi9\",\"ProgressInnerBar\":\"statistics_ProgressInnerBar__yxRlG\",\"ProgressInnerBarPercentage\":\"statistics_ProgressInnerBarPercentage__JRRCl\",\"rightBoxDiv\":\"statistics_rightBoxDiv__M-E12\",\"title\":\"statistics_title__PE0MJ\",\"money\":\"statistics_money__i+Zbv\",\"dateRangeSelector\":\"statistics_dateRangeSelector__9FaSI\",\"dateRangeDropdown\":\"statistics_dateRangeDropdown__5DtSu\",\"graphHeader\":\"statistics_graphHeader__IuB-s\",\"graphHeaderLeft\":\"statistics_graphHeaderLeft__ZgmxU\",\"graphHeaderLeftText\":\"statistics_graphHeaderLeftText__W44Ps\",\"changePositive\":\"statistics_changePositive__M3RP9\",\"changeNeutral\":\"statistics_changeNeutral__x8XEe\",\"dateLabel\":\"statistics_dateLabel__xbQES\",\"value\":\"statistics_value__qJhHh\",\"bottomText\":\"statistics_bottomText__40PQh\",\"calendar\":\"statistics_calendar__eDJFd\",\"borderRadiusRightZero\":\"statistics_borderRadiusRightZero__4dtcG\"};","// extracted by mini-css-extract-plugin\nexport default {\"noDataBox\":\"no-data-found-template_noDataBox__HgeT1\",\"searchImg\":\"no-data-found-template_searchImg__MnYNA\",\"title\":\"no-data-found-template_title__P5uV2\",\"subTitle\":\"no-data-found-template_subTitle__zMBB-\",\"supportext\":\"no-data-found-template_supportext__pHg2P\"};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport style from './no-data-found-template.module.scss';\nimport NodataImg from \"../../assets/images/img/NodataImg.png\";\nimport Support from '../../shared/ui/support/support';\n\n\nconst NoDataFoundTemplate = ({ isDataExist = true }) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <div className={clsx(style.noDataBox)}>\n            <div className='position-relative d-flex flex-column'>\n                <img src={NodataImg} alt='no-data' />\n            </div>\n            {\n                isDataExist ? (\n                    <>\n                        <h2 className={clsx(style.title)}>There is no results</h2>\n                        <p className={clsx(style.subTitle)}>\n                            The user you are looking for doesn't exist. <br />Here are some helpful links:\n                        </p>\n                        <Link to={\"/\"}><Button className='outline-button' style={{ marginBottom: '32px' }}> <ChevronLeft /> Go back</Button></Link>\n                        <Link onClick={() => setVisible(true)} to={\"#\"}><span className={clsx(style.supportext)}>Support</span></Link>\n                    </>\n                ) : (\n                    <>\n                        <h2 className={clsx(style.title)}>No historical records yet.</h2>\n                    </>\n                )\n            }\n            <Support setVisible={setVisible} visible={visible} />\n        </div>\n    );\n};\n\nexport default NoDataFoundTemplate;"],"names":["formatAUD","amount","shorten","arguments","length","undefined","num","parseFloat","isNaN","Math","abs","Intl","NumberFormat","notation","compactDisplay","minimumFractionDigits","maximumFractionDigits","format","FallbackImage","_ref2","has_photo","photo","is_business","size","imgError","setImgError","useState","Icon","Building","Person","_jsx","_Fragment","children","src","alt","className","onError","color","FallbackImageWithInitials","_ref3","_name$split","_name$split$map","_name$split$map$join","name","initials","split","map","n","join","toUpperCase","InitialsAvatar","_ref4","style","fontSize","_ref","overflow","API_BASE_URL","process","restoreClient","async","url","URL","id","fetchAPI","toString","method","getClientById","getClientCategories","getClientIndustries","getCountries","response","allowedCountries","filter","country","includes","getStates","getCities","state","getProjectManager","getListOfClients","page","limit","search","order","isShowDeleted","offset","searchParams","append","clientOrderHistory","markeMainAddress","markeMainContact","deleteClient","deleteContactPerson","deleteAddress","bringBack","options","body","unique_id","forwardRef","ref","searchValue","selectedOrder","setSelectedOrder","observerRef","useRef","trialHeight","useTrialHeight","visible","setVisible","orders","setOrders","setPage","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","loading","setLoading","formatDateForAPI","date","d","Date","getFullYear","String","getMonth","padStart","getDate","useEffect","_filter$status","_filter$clients","_filter$date","filterParams","status","s","value","clients","c","startDate","endDate","create_date_after","create_date_before","data","filters","getListOfOrder","_data$results","results","prev","existingOrderIds","Set","newOrder","has","count","loadData","current","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","getPercentage","total","percentage","round","redCircularProgressbar","CircularProgressbar","text","strokeWidth","styles","buildStyles","pathColor","trailColor","textColor","textSize","pathTransitionDuration","yellowCircularProgressbar","headerElementg","modalHeader","exploreOperatingimg","_jsxs","DataTable","scrollable","selectionMode","columnResizeMode","resizableColumns","showGridlines","scrollHeight","selection","onSelectionChange","e","loadingIcon","Loader","emptyMessage","NoDataFoundTemplate","isDataExist","onSort","event","rowClassName","deleted","deletedRow","Column","bodyClassName","headerClassName","headerStyle","width","zIndex","frozen","field","header","rowData","lineHeight","number","formatDate","created","minWidth","sortable","_rowData$client","_rowData$client2","_rowData$client3","ImageAvatar","client","ellipsis","Tag","height","borderRadius","border","background","fontWeight","title","reference","maxWidth","InfoCircle","lostProfit","statusComplete","real_cost","labor_expenses","cost_of_sale","operating_expense","cost_of_sale_percentage","piCircleStyle","saleCircleStyle","whiteSpace","textAlign","labor_expenses_percentage","labourCostCircleStyle","operating_expense_percentage","operCircleStyle","RealCostCircleStyle","budgetStyle","budget","profit","profitPercentage","completeProfit","inProgressProfit","Dialog","modal","exploreModel","onHide","handleClose","setFilters","dropdownRef","showFilter","setShowFilter","key","setKey","statusValue","setStatusValue","dateRange","setDateRange","setClients","clientPage","setClientPage","selectedClients","setSelectedClients","hasMoreClients","setHasMoreClients","clientInputValue","clientDebouncedValue","setClientInputValue","useDebounce","clientLoading","setClientLoading","formatDateToYMD","year","month","_data$results2","existingIds","newClients","hasMore","error","console","loadClients","timeout","setTimeout","threshold","clearTimeout","handleStatusChange","handleCancel","handleApply","formattedStatus","dateName","handleClickOutside","contains","target","addEventListener","removeEventListener","onClick","Filter","Tabs","activeKey","onSelect","k","marginLeft","marginTop","Tab","eventKey","CurrencyDollar","Checkbox","inputId","checked","onChange","htmlFor","Button","padding","People","position","top","left","xmlns","viewBox","fill","type","placeholder","option","clsx","some","stroke","strokeLinecap","strokeLinejoin","ProgressSpinner","CalendarWeek","Flatpickr","dateFormat","mode","inline","_Object$keys","_Object$entries","setFilter","currentFilter","Object","keys","group","items","item","index","variant","handleRemoveTag","itemName","newFilters","newItems","X","groupName","handleRemoveGroup","borderTopbar","Link","to","PieChart","topbartext","disabledLink","Speedometer2","TextParagraph","WindowDesktop","ClipboardData","Google","activeTab","ShopWindow","Profitability","dt","inputValue","debouncedValue","setInputValue","Helmet","StatisticsHeader","active","gap","selectedCount","filterBox","exportCSV","selectionOnly","Download","ProfitabilityDropdown","paddingLeft","transform","marginRight","ProfitabilityFilters","ProjectsTable","NodataImg","marginBottom","ChevronLeft","Support"],"sourceRoot":""}