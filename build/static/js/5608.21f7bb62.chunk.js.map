{"version":3,"file":"static/js/5608.21f7bb62.chunk.js","mappings":"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","sources":["APIs/SalesApi.js","APIs/email-template.js","APIs/management-api.js","webpack://memateapp/./src/ui/send-email-2/send-email.module.scss?3bd9","ui/send-email-2/send-email.jsx","webpack://memateapp/./src/ui/send-invoice/send-invoice.module.scss?f866","ui/send-invoice/send-invoice.jsx"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// Sale Table Api\nexport const fetchSales = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n// Sales Note Api\nexport const fetchSalesNotes = async (saleUniqueId, updatedNote) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ sales_note: updatedNote }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/notes/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales notes update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales notes update error:', error);\n    throw error;\n  }\n};\n\nexport const markWon = async (ids) => {\n  const endpoint = `/sales/status/won/`;\n  const options = {\n    method: 'PUT',\n    body: {ids: ids}\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const markLost = async (ids) => {\n  const endpoint = `/sales/status/lost/`;\n  const options = {\n    method: 'PUT',\n    body: {ids: ids}\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\n// Sale Won Api\nexport const fetchWon = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify({\n    \"ids\": [saleUniqueId]\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  const response = await fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n}\n\n\n// Sale Contact Api\nexport const fetchContacts = async (saleUniqueId, formData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(formData),\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/contacts/`, requestOptions);\n    if (response.ok) {\n      return response;\n    } else {\n      console.log('Error:', response.status);\n      return null;\n    }\n  } catch (error) {\n    console.log('Error:', error);\n    return null;\n  }\n};\n\n\n// Sale Lead Api\nexport const fetchSaleslead = async (saleUniqueId, updatedLead) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ lead: updatedLead, unique_id: saleUniqueId }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/lead/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales lead update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales lead update error:', error);\n    throw error;\n  }\n};\n\n\n\n\n// Sale Multi Won Api\nexport const fetchMultipleData = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  try {\n    const responses = await Promise.all([\n      fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions), // Pass requestOptions directly\n    ]);\n\n    const data = await Promise.all(responses.map(response => response.json()));\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Sale DUPLICATE Api\nexport const fetchduplicateData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/duplicate/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n}\n\n\n\n\n// Sale history Api\nexport const fetchhistoryData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/history/`, requestOptions);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n\n\n\n// Sale Multi Lost Api\nexport const fetchMultipleLost = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  try {\n    const responses = await Promise.all([\n      fetch(`${API_BASE_URL}/sales/status/lost/`, requestOptions), // Pass requestOptions directly\n    ]);\n\n    const data = await Promise.all(responses.map(response => response.json()));\n    return data; // Return data to handleMoveToManagementWon function\n  } catch (error) {\n    throw error; // Rethrow error to handleMoveToManagementWon function\n  }\n};\n\n\n\n\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n}\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n}\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"send-email_headerTitle__50KUB\",\"customLabel\":\"send-email_customLabel__r5xED\",\"bag\":\"send-email_bag__wtdwK\",\"lable\":\"send-email_lable__+kNCa\",\"dropdownSelect\":\"send-email_dropdownSelect__RY5w8\",\"autoCompleteBox\":\"send-email_autoCompleteBox__fWZ7C\",\"AutoComplete\":\"send-email_AutoComplete__m9YI5\",\"bcc\":\"send-email_bcc__BwFzl\",\"box\":\"send-email_box__Zlmer\",\"active\":\"send-email_active__vEx4h\",\"inputBox\":\"send-email_inputBox__NpU2b\"};","import React, { useEffect, useRef, useState } from 'react'\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Editor } from \"primereact/editor\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { InputText } from \"primereact/inputtext\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\n\nimport style from \"./send-email.module.scss\";\nimport { getEmail, getEmailTemplates, getOutgoingEmail } from '../../APIs/email-template';\nimport clsx from 'clsx';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { toast } from 'sonner';\nimport { createAndSendInvoiceById } from '../../APIs/management-api';\n\nconst renderHeader = () => (\n    <span className=\"ql-formats\">\n        <button className=\"ql-bold\" aria-label=\"Bold\"></button>\n        <button className=\"ql-italic\" aria-label=\"Italic\"></button>\n        <button className=\"ql-underline\" aria-label=\"Underline\"></button>\n        <button className=\"ql-strike\" aria-label=\"Strikethrough\"></button>\n        <button className=\"ql-blockquote\" aria-label=\"Blockquote\"></button>\n        <button\n            className=\"ql-list\"\n            value=\"ordered\"\n            aria-label=\"Ordered List\"\n        ></button>\n        <button\n            className=\"ql-list\"\n            value=\"bullet\"\n            aria-label=\"Bullet List\"\n        ></button>\n        <button className=\"ql-align\" value=\"\" aria-label=\"Align Left\"></button>\n        <button\n            className=\"ql-align\"\n            value=\"center\"\n            aria-label=\"Align Center\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"right\"\n            aria-label=\"Align Right\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"justify\"\n            aria-label=\"Justify\"\n        ></button>\n        <button className=\"ql-link\" aria-label=\"Insert Link\"></button>\n        <button className=\"ql-image\" aria-label=\"Insert Image\"></button>\n        <button className=\"ql-code-block\" aria-label=\"Code Block\"></button>\n    </span>\n);\nconst header = renderHeader();\n\nconst SendDynamicEmailForm = ({ show, setShow, mutation, contactPersons, setPayload, defaultTemplateId }) => {\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState([]);\n    const [cc, setCC] = useState([]);\n    const [bcc, setBCC] = useState([]);\n    const [subject, setSubject] = useState(null);\n    const [text, setText] = useState(null);\n\n    const [errors, setErrors] = useState({});\n    const [filteredEmails, setFilteredEmails] = useState([]);\n    const autoCompleteRef = useRef(null);\n    const autoCompleteRef2 = useRef(null);\n    const autoCompleteRef3 = useRef(null);\n    const [showCC, setShowCC] = useState(false);\n    const [showBCC, setShowBCC] = useState(false);\n\n    const [emailTemplateId, setEmailTemplatedId] = useState(null);\n    const reset = () => {\n        setFrom([]);\n        setTo([]);\n        setCC([]);\n        setBCC([]);\n        setSubject([]);\n        setText([]);\n        setEmailTemplatedId(null);\n    }\n    \n    const handleClose = () => {\n        setShow(false);\n        if (!defaultTemplateId) reset();\n    }\n   \n    const emailTemplateQuery = useQuery({\n        queryKey: [\"emailTemplate\"],\n        queryFn: getEmailTemplates,\n        enabled: !!show,\n    });\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail,\n        enabled: !!show,\n    });\n    const emailQuery = useQuery({\n        queryKey: [\"emailQuery\", emailTemplateId],\n        queryFn: () => getEmail(emailTemplateId),\n        enabled: !!emailTemplateId,\n        retry: 1,\n    });\n\n    useEffect(() => {\n        if (outgoingEmailTemplateQuery?.data) {\n            if (outgoingEmailTemplateQuery?.data?.outgoing_email)\n                setFrom(outgoingEmailTemplateQuery?.data?.outgoing_email);\n        }\n\n        if (!emailTemplateId && emailTemplateQuery?.data && defaultTemplateId) {\n            setEmailTemplatedId(defaultTemplateId);\n        }\n\n    }, [emailQuery, outgoingEmailTemplateQuery]);\n\n\n    const onSubmit = async () => {\n        let errorCount = 0;\n        setErrors({});\n\n        if (!from) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, from: true }));\n        }\n\n        if (to?.length === 0) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, to: true }));\n        }\n\n        if (!subject) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, subject: true }));\n        }\n\n        if (!text) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, text: true }));\n        }\n\n        if (errorCount) return;\n\n        mutation.mutate({\n            subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() })\n        })\n    }\n\n    const search = (event) => {\n        const query = event?.query?.toLowerCase() || '';\n        let emails = contactPersons.map((data) => (data.email));\n        emails = emails.filter((email) => !to.includes(email));\n        emails = emails.filter((email) => !cc.includes(email));\n        emails = emails.filter((email) => !bcc.includes(email));\n\n        emails = emails.filter((email) =>\n            email.toLowerCase().includes(query)\n        );\n\n        setFilteredEmails(emails);\n    };\n\n    const onInputChange = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setTo((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange2 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange3 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setBCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onFocus = () => {\n        search();\n        if (autoCompleteRef.current) autoCompleteRef.current.show();\n    };\n\n    const onFocus2 = () => {\n        search();\n        if (autoCompleteRef2.current) autoCompleteRef2.current.show();\n    };\n\n    const onFocus3 = () => {\n        search();\n        if (autoCompleteRef3.current) autoCompleteRef3.current.show();\n    };\n\n    useEffect(() => {\n        if (contactPersons?.length) {\n            let emails = contactPersons.map((data) => (data.email))\n            setFilteredEmails(emails);\n        }\n    }, [contactPersons])\n\n    useEffect(() => {\n        setPayload((prev) => ({\n            ...prev,\n            subject: subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() })\n        }))\n    }, [subject, text, from, to, cc, bcc]);\n\n    useEffect(() => {\n        setText(emailQuery?.data?.body || \"\");\n        setSubject(emailQuery?.data?.subject);\n        setErrors((others) => ({ ...others, subject: false }));\n        setErrors((others) => ({ ...others, text: false }));\n    }, [emailQuery?.data?.body]);\n    return (\n        <Modal\n            show={show}\n            centered\n            onHide={handleClose}\n            className='invoice-form'\n            size='lg'\n        >\n            <Modal.Header closeButton>\n                <div className={`${style.modalHeader}`}>\n                    <div className=\"w-100 d-flex align-items-center gap-2\">\n                        <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                            Send email\n                        </span>\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>FROM</label>\n                            <Dropdown\n                                options={\n                                    (outgoingEmailTemplateQuery && outgoingEmailTemplateQuery?.data && ([{\n                                        value: outgoingEmailTemplateQuery?.data?.outgoing_email,\n                                        label: `${outgoingEmailTemplateQuery?.data?.outgoing_email}`,\n                                    }])) ||\n                                    []\n                                }\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '60px' }}\n                                placeholder=\"Select from email\"\n                                onChange={(e) => {\n                                    setFrom(e.value);\n                                    setErrors((others) => ({ ...others, from: false }));\n                                }}\n                                value={from}\n                            />\n                        </div>\n                        {errors?.from && (\n                            <p className=\"error-message mb-0\">{\"From email is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>Templates</label>\n                            <Dropdown\n                                options={\n                                    (emailTemplateQuery &&\n                                        emailTemplateQuery.data?.map((emailTemplate) => ({\n                                            value: emailTemplate.id,\n                                            label: `${emailTemplate.name}`,\n                                        }))) ||\n                                    []\n                                }\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '88px' }}\n                                placeholder=\"Select template\"\n                                onChange={(e) => {\n                                    setEmailTemplatedId(e.value);\n                                }}\n                                value={emailTemplateId}\n                                loading={emailTemplateQuery?.isFetching}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12} className='mb-3'>\n                        <div className=\"d-flex gap-3 w-100\">\n                            <div style={{ position: 'relative' }} className={style.autoCompleteBox}>\n                                <div style={{ width: '50px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>TO</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef}\n                                    value={to}\n                                    completeMethod={search}\n                                    onChange={(e) => {\n                                        setTo(e.value);\n                                        setErrors((others) => ({ ...others, to: false }));\n                                    }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus}\n                                    onFocus={onFocus}\n                                    onKeyUp={onInputChange}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setTo((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, \"w-100\")}\n                                    placeholder=\"TO\"\n                                />\n                            </div>\n                            <Button\n                                className={clsx(style.box, { [style.active]: showCC })}\n                                onClick={() => { setShowCC(!showCC); setCC([]) }}\n                            >\n                                CC\n                            </Button>\n                            <Button\n                                className={clsx(style.box, { [style.active]: showBCC })}\n                                onClick={() => { setShowBCC(!showBCC); setBCC([]) }}\n                            >\n                                BCC\n                            </Button>\n                        </div>\n                        {errors?.to && (\n                            <p className=\"error-message mb-0\">{\"To email is required\"}</p>\n                        )}\n                    </Col>\n                    {\n                        showCC &&\n                        <Col sm={6} className='mb-3'>\n                            <div style={{ position: 'relative' }}>\n                                <div style={{ width: '50px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>CC</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef2}\n                                    value={cc}\n                                    completeMethod={search}\n                                    onChange={(e) => { setCC(e.value) }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus2}\n                                    onFocus={onFocus2}\n                                    onKeyUp={onInputChange2}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setCC((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, \"w-100\")}\n                                    placeholder=\"CC\"\n                                />\n                            </div>\n                        </Col>\n                    }\n\n                    {\n                        showBCC && <Col sm={6} className='mb-3'>\n                            <div style={{ position: 'relative' }}>\n                                <div style={{ width: '60px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>BCC</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef3}\n                                    value={bcc}\n                                    completeMethod={search}\n                                    onChange={(e) => { setBCC(e.value) }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus3}\n                                    onFocus={onFocus3}\n                                    onKeyUp={onInputChange3}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setBCC((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, style.bcc, \"w-100\")}\n                                    placeholder=\"BCC\"\n                                />\n                            </div>\n                        </Col>\n                    }\n                    <Col sm={12} className='mb-2'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '60px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>SUBJECT</label>\n                            <IconField>\n                                <InputIcon>\n                                    {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                </InputIcon>\n                                <InputText\n                                    value={subject}\n                                    className={clsx(style.inputBox, 'w-100')}\n                                    style={{ paddingLeft: '100px' }}\n                                    onChange={(e) => {\n                                        setSubject(e.target.value);\n                                        setErrors((others) => ({ ...others, subject: false }));\n                                    }}\n                                    placeholder=\"{Organization} | Quotation: {number} | {reference}\"\n                                />\n                            </IconField>\n                        </div>\n                        {errors?.subject && (\n                            <p className=\"error-message mb-0\">{\"Subject is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={12}>\n                        <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                            <label className={clsx(style.lable)}>Message</label>\n                            <InputIcon style={{ position: 'absolute', right: '15px', top: '40px', zIndex: 1 }}>\n                                {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                            </InputIcon>\n                            <Editor\n                                style={{ minHeight: \"150px\" }}\n                                headerTemplate={header}\n                                value={text}\n                                placeholder='Enter a description...'\n                                onTextChange={(e) => {\n                                    setText(e.htmlValue);\n                                    setErrors((others) => ({ ...others, text: false }));\n                                }}\n                            />\n                        </div>\n                        {errors?.text && (\n                            <p className=\"error-message mb-0\">{\"Message is required\"}</p>\n                        )}\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer className='d-flex justify-content-between'>\n                <span></span>\n                <div className=\"d-flex justify-content-end gap-2\">\n                    <Button className=\"outline-button\" onClick={handleClose}>\n                        Cancel{\" \"}\n                    </Button>\n                    <Button className=\"solid-button\" onClick={onSubmit}>\n                        Send{\" \"}\n                        {mutation?.isPending && (\n                            <ProgressSpinner\n                                style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SendDynamicEmailForm","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"send-invoice_headerTitle__YBmdt\",\"customLabel\":\"send-invoice_customLabel__0D26B\",\"bag\":\"send-invoice_bag__VXoPF\",\"lable\":\"send-invoice_lable__hDm-2\",\"dropdownSelect\":\"send-invoice_dropdownSelect__y4YWM\",\"autoCompleteBox\":\"send-invoice_autoCompleteBox__sVyzX\",\"AutoComplete\":\"send-invoice_AutoComplete__cCiBx\",\"bcc\":\"send-invoice_bcc__KYSsZ\",\"box\":\"send-invoice_box__pOjbC\",\"active\":\"send-invoice_active__hBlO9\",\"inputBox\":\"send-invoice_inputBox__gIZLk\"};","import React, { useEffect, useRef, useState } from 'react'\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Editor } from \"primereact/editor\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { InputText } from \"primereact/inputtext\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\n\nimport style from \"./send-invoice.module.scss\";\nimport { getEmail, getEmailTemplates, getOutgoingEmail } from '../../APIs/email-template';\nimport clsx from 'clsx';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { toast } from 'sonner';\nimport { createAndSendInvoiceById } from '../../APIs/management-api';\nimport { resendInvoiceEmail } from '../../APIs/invoice-api';\n\nconst renderHeader = () => (\n    <span className=\"ql-formats\">\n        <button className=\"ql-bold\" aria-label=\"Bold\"></button>\n        <button className=\"ql-italic\" aria-label=\"Italic\"></button>\n        <button className=\"ql-underline\" aria-label=\"Underline\"></button>\n        <button className=\"ql-strike\" aria-label=\"Strikethrough\"></button>\n        <button className=\"ql-blockquote\" aria-label=\"Blockquote\"></button>\n        <button\n            className=\"ql-list\"\n            value=\"ordered\"\n            aria-label=\"Ordered List\"\n        ></button>\n        <button\n            className=\"ql-list\"\n            value=\"bullet\"\n            aria-label=\"Bullet List\"\n        ></button>\n        <button className=\"ql-align\" value=\"\" aria-label=\"Align Left\"></button>\n        <button\n            className=\"ql-align\"\n            value=\"center\"\n            aria-label=\"Align Center\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"right\"\n            aria-label=\"Align Right\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"justify\"\n            aria-label=\"Justify\"\n        ></button>\n        <button className=\"ql-link\" aria-label=\"Insert Link\"></button>\n        <button className=\"ql-image\" aria-label=\"Insert Image\"></button>\n        <button className=\"ql-code-block\" aria-label=\"Code Block\"></button>\n    </span>\n);\nconst header = renderHeader();\n\nconst SendInvoiceEmailForm = ({ show, setShow, contactPersons, setPayload, save, isLoading, create, projectId, projectCardData, isCreated }) => {\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState([]);\n    const [cc, setCC] = useState([]);\n    const [bcc, setBCC] = useState([]);\n    const [subject, setSubject] = useState(null);\n    const [text, setText] = useState(null);\n\n    const [errors, setErrors] = useState({});\n    const [filteredEmails, setFilteredEmails] = useState([]);\n    const autoCompleteRef = useRef(null);\n    const autoCompleteRef2 = useRef(null);\n    const autoCompleteRef3 = useRef(null);\n    const [showCC, setShowCC] = useState(false);\n    const [showBCC, setShowBCC] = useState(false);\n    const handleClose = () => setShow(false);\n    const [emailTemplateId, setEmailTemplatedId] = useState(18);\n\n    useEffect(() => {\n        if (isCreated) setEmailTemplatedId(19);\n    }, [isCreated, emailTemplateId])\n\n    const emailTemplateQuery = useQuery({\n        queryKey: [\"emailTemplate\"],\n        queryFn: getEmailTemplates,\n    });\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail,\n    });\n    const emailQuery = useQuery({\n        queryKey: [\"emailQuery\", emailTemplateId],\n        queryFn: () => getEmail(emailTemplateId),\n        enabled: !!emailTemplateId,\n        retry: 1,\n    });\n\n    useEffect(() => {\n        if (outgoingEmailTemplateQuery?.data) {\n            if (outgoingEmailTemplateQuery?.data?.outgoing_email)\n                setFrom(outgoingEmailTemplateQuery?.data?.outgoing_email);\n        }\n    }, [emailQuery, outgoingEmailTemplateQuery]);\n\n    const mutation = useMutation({\n        mutationFn: (data) => isCreated ? resendInvoiceEmail(projectId, data) : createAndSendInvoiceById(projectId, data),\n        onSuccess: (response) => {\n            handleClose();\n            projectCardData();\n            toast.success(`Invoice created and send successfully.`);\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n            toast.error(`Failed to create and send invoice. Please try again.`);\n        }\n    });\n\n    const onSubmit = async () => {\n        let errorCount = 0;\n        setErrors({});\n\n        if (!from) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, from: true }));\n        }\n\n        if (to?.length === 0) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, to: true }));\n        }\n\n        if (!subject) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, subject: true }));\n        }\n\n        if (!text) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, text: true }));\n        }\n\n        if (errorCount) return;\n\n        mutation.mutate({\n            subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() })\n        })\n    }\n\n    const search = (event) => {\n        const query = event?.query?.toLowerCase() || '';\n        let emails = contactPersons.map((data) => (data.email));\n        emails = emails.filter((email) => !to.includes(email));\n        emails = emails.filter((email) => !cc.includes(email));\n        emails = emails.filter((email) => !bcc.includes(email));\n\n        emails = emails.filter((email) =>\n            email.toLowerCase().includes(query)\n        );\n\n        setFilteredEmails(emails);\n    };\n\n    const onInputChange = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setTo((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange2 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange3 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setBCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onFocus = () => {\n        search();\n        if (autoCompleteRef.current) autoCompleteRef.current.show();\n    };\n\n    const onFocus2 = () => {\n        search();\n        if (autoCompleteRef2.current) autoCompleteRef2.current.show();\n    };\n\n    const onFocus3 = () => {\n        search();\n        if (autoCompleteRef3.current) autoCompleteRef3.current.show();\n    };\n\n    useEffect(() => {\n        if (contactPersons?.length) {\n            let emails = contactPersons.map((data) => (data.email))\n            setFilteredEmails(emails);\n        }\n    }, [contactPersons])\n\n    useEffect(() => {\n        setPayload((prev) => ({\n            ...prev,\n            subject: subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() })\n        }))\n    }, [subject, text, from, to, cc, bcc]);\n\n    useEffect(() => {\n        setText(emailQuery?.data?.body || \"\");\n        setSubject(emailQuery?.data?.subject);\n        setErrors((others) => ({ ...others, subject: false }));\n        setErrors((others) => ({ ...others, text: false }));\n    }, [emailQuery?.data?.body]);\n    return (\n        <Modal\n            show={show}\n            centered\n            onHide={handleClose}\n            className='invoice-form'\n            size='lg'\n        >\n            <Modal.Header closeButton>\n                <div className={`${style.modalHeader}`}>\n                    <div className=\"w-100 d-flex align-items-center gap-2\">\n                        <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                            {isCreated ? \"Resend\" : \"Send\"} a Invoice\n                        </span>\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>FROM</label>\n                            <Dropdown\n                                options={\n                                    (outgoingEmailTemplateQuery && outgoingEmailTemplateQuery?.data && ([{\n                                        value: outgoingEmailTemplateQuery?.data?.outgoing_email,\n                                        label: `${outgoingEmailTemplateQuery?.data?.outgoing_email}`,\n                                    }])) ||\n                                    []\n                                }\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '60px' }}\n                                placeholder=\"Select from email\"\n                                onChange={(e) => {\n                                    setFrom(e.value);\n                                    setErrors((others) => ({ ...others, from: false }));\n                                }}\n                                value={from}\n                            />\n                        </div>\n                        {errors?.from && (\n                            <p className=\"error-message mb-0\">{\"From email is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>Templates</label>\n                            <Dropdown\n                                options={\n                                    (emailTemplateQuery &&\n                                        emailTemplateQuery.data?.map((emailTemplate) => ({\n                                            value: emailTemplate.id,\n                                            label: `${emailTemplate.name}`,\n                                        }))) ||\n                                    []\n                                }\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '88px' }}\n                                placeholder=\"Select template\"\n                                onChange={(e) => {\n                                    setEmailTemplatedId(e.value);\n                                }}\n                                value={emailTemplateId}\n                                loading={emailTemplateQuery?.isFetching}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12} className='mb-3'>\n                        <div className=\"d-flex gap-3 w-100\">\n                            <div style={{ position: 'relative' }} className={style.autoCompleteBox}>\n                                <div style={{ width: '50px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>TO</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef}\n                                    value={to}\n                                    completeMethod={search}\n                                    onChange={(e) => {\n                                        setTo(e.value);\n                                        setErrors((others) => ({ ...others, to: false }));\n                                    }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus}\n                                    onFocus={onFocus}\n                                    onKeyUp={onInputChange}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setTo((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, \"w-100\")}\n                                    placeholder=\"TO\"\n                                />\n                            </div>\n                            <Button\n                                className={clsx(style.box, { [style.active]: showCC })}\n                                onClick={() => { setShowCC(!showCC); setCC([]) }}\n                            >\n                                CC\n                            </Button>\n                            <Button\n                                className={clsx(style.box, { [style.active]: showBCC })}\n                                onClick={() => { setShowBCC(!showBCC); setBCC([]) }}\n                            >\n                                BCC\n                            </Button>\n                        </div>\n                        {errors?.to && (\n                            <p className=\"error-message mb-0\">{\"To email is required\"}</p>\n                        )}\n                    </Col>\n                    {\n                        showCC &&\n                        <Col sm={6} className='mb-3'>\n                            <div style={{ position: 'relative' }}>\n                                <div style={{ width: '50px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>CC</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef2}\n                                    value={cc}\n                                    completeMethod={search}\n                                    onChange={(e) => { setCC(e.value) }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus2}\n                                    onFocus={onFocus2}\n                                    onKeyUp={onInputChange2}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setCC((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, \"w-100\")}\n                                    placeholder=\"CC\"\n                                />\n                            </div>\n                        </Col>\n                    }\n\n                    {\n                        showBCC && <Col sm={6} className='mb-3'>\n                            <div style={{ position: 'relative' }}>\n                                <div style={{ width: '60px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>BCC</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef3}\n                                    value={bcc}\n                                    completeMethod={search}\n                                    onChange={(e) => { setBCC(e.value) }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus3}\n                                    onFocus={onFocus3}\n                                    onKeyUp={onInputChange3}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setBCC((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, style.bcc, \"w-100\")}\n                                    placeholder=\"BCC\"\n                                />\n                            </div>\n                        </Col>\n                    }\n                    <Col sm={12} className='mb-2'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '60px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>SUBJECT</label>\n                            <IconField>\n                                <InputIcon>\n                                    {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                </InputIcon>\n                                <InputText\n                                    value={subject}\n                                    className={clsx(style.inputBox, 'w-100')}\n                                    style={{ paddingLeft: '100px' }}\n                                    onChange={(e) => {\n                                        setSubject(e.target.value);\n                                        setErrors((others) => ({ ...others, subject: false }));\n                                    }}\n                                    placeholder=\"{Organization} | Quotation: {number} | {reference}\"\n                                />\n                            </IconField>\n                        </div>\n                        {errors?.subject && (\n                            <p className=\"error-message mb-0\">{\"Subject is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={12}>\n                        <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                            <label className={clsx(style.lable)}>Message</label>\n                            <InputIcon style={{ position: 'absolute', right: '15px', top: '40px', zIndex: 1 }}>\n                                {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                            </InputIcon>\n                            <Editor\n                                style={{ minHeight: \"150px\" }}\n                                headerTemplate={header}\n                                value={text}\n                                placeholder='Enter a description...'\n                                onTextChange={(e) => {\n                                    setText(e.htmlValue);\n                                    setErrors((others) => ({ ...others, text: false }));\n                                }}\n                            />\n                        </div>\n                        {errors?.text && (\n                            <p className=\"error-message mb-0\">{\"Message is required\"}</p>\n                        )}\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer className='d-flex justify-content-between'>\n                <Button onClick={handleClose} className='text-button text-danger'>Cancel</Button>\n                <div className=\"d-flex justify-content-end gap-2\">\n                    {\n                        !isCreated && (\n                            <Button className=\"outline-button\" onClick={create}>\n                                Create{\" \"}\n                                {isLoading && (\n                                    <ProgressSpinner\n                                        style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                                    />\n                                )}\n                            </Button>\n                        )\n                    }\n\n                    <Button className=\"solid-button\" onClick={onSubmit}>\n                        {isCreated ? \"Resend\" : \"Create and Send\"}{\" \"}\n                        {\n                            mutation?.isPending && (\n                                <ProgressSpinner\n                                    style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                                />\n                            )\n                        }\n                    </Button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SendInvoiceEmailForm"],"names":["API_BASE_URL","process","fetchSales","async","myHeaders","Headers","accessToken","localStorage","getItem","append","requestOptions","method","headers","redirect","response","fetch","text","error","console","fetchSalesNotes","saleUniqueId","updatedNote","body","JSON","stringify","sales_note","ok","errorText","Error","status","result","trim","parse","markWon","options","ids","url","URL","fetchAPI","toString","markLost","fetchContacts","formData","log","fetchSaleslead","updatedLead","lead","unique_id","fetchMultipleData","selectedUniqueIds","responses","Promise","all","map","json","fetchduplicateData","fetchMultipleLost","getJobTemplates","getJobTemplate","id","createJobTemplate","data","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","endpoint","arguments","length","undefined","contentType","get","includes","message","updateProjectScheduleById","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","getManagement","ProjectCardApi","uniqueId","header","_jsxs","className","children","_jsx","value","_ref","_emailQuery$data3","_outgoingEmailTemplat3","_outgoingEmailTemplat4","_emailTemplateQuery$d","show","setShow","mutation","contactPersons","setPayload","defaultTemplateId","from","setFrom","useState","to","setTo","cc","setCC","bcc","setBCC","subject","setSubject","setText","errors","setErrors","filteredEmails","setFilteredEmails","autoCompleteRef","useRef","autoCompleteRef2","autoCompleteRef3","showCC","setShowCC","showBCC","setShowBCC","emailTemplateId","setEmailTemplatedId","handleClose","emailTemplateQuery","useQuery","queryKey","queryFn","enabled","outgoingEmailTemplateQuery","emailQuery","retry","useEffect","_outgoingEmailTemplat","_outgoingEmailTemplat2","outgoing_email","search","event","_event$query","query","toLowerCase","emails","email","filter","onFocus","current","onFocus2","onFocus3","prev","email_body","from_email","_emailQuery$data","_emailQuery$data2","others","Modal","centered","onHide","size","Header","closeButton","style","modalHeader","headerTitle","Body","Row","Col","sm","position","clsx","customLabel","Dropdown","label","dropdownSelect","height","paddingLeft","placeholder","onChange","e","emailTemplate","name","loading","isFetching","autoCompleteBox","width","bag","AutoComplete","ref","completeMethod","multiple","suggestions","onClick","onKeyUp","currentValue","target","key","split","Set","onBlur","Button","box","active","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","lable","right","zIndex","Editor","minHeight","headerTemplate","onTextChange","htmlValue","Footer","errorCount","mutate","isPending","color","save","isLoading","create","projectId","projectCardData","isCreated","useMutation","mutationFn","resendInvoiceEmail","onSuccess","toast","success","onError"],"sourceRoot":""}