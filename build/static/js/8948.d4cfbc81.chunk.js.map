{"version":3,"file":"static/js/8948.d4cfbc81.chunk.js","mappings":"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","sources":["components/layout/onboarding/Discovermemate.js","APIs/OnboardingApi.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Check } from \"react-bootstrap-icons\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { OnboardingCreateSubscription } from \"../../../APIs/OnboardingApi\";\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport LinepatternBottom from \"../../../assets/images/icon/Linepattern.png\";\nimport Linepatterntop from \"../../../assets/images/icon/Linepatterntop.png\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISH_KEY);\n\nconst SVGContent = () => {\n  return (\n    <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12.6777 25.1831C19.6261 25.1831 25.2586 19.5506 25.2586 12.6021C25.2586 5.65362 19.6261 0.0211182 12.6777 0.0211182C5.72919 0.0211182 0.0966797 5.65362 0.0966797 12.6021C0.0966797 19.5506 5.72919 25.1831 12.6777 25.1831Z\" fill=\"#F7F9FC\" />\n      <path d=\"M6.98438 13.4155L10.2378 16.6689L18.3715 8.53528\" stroke=\"url(#paint0_linear_10_91758)\" strokeWidth=\"1.93554\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <defs>\n        <linearGradient id=\"paint0_linear_10_91758\" x1=\"12.6779\" y1=\"8.53528\" x2=\"12.6779\" y2=\"16.6689\" gradientUnits=\"userSpaceOnUse\">\n          <stop stopColor=\"#21B3FA\" />\n          <stop offset=\"1\" stopColor=\"#FFB258\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nconst Discovermemate = () => {\n  const navigate = useNavigate();\n  const { uuid } = useParams();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isChecked, setIsChecked] = useState(true);\n\n  if (!uuid) navigate('/onboarding');\n\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n    });\n\n    if (error) {\n      console.error(error.message);\n      setError(error.message);\n    } else {\n      console.log(\"PaymentMethod:\", paymentMethod);\n      setLoading(true);\n      OnboardingCreateSubscription(uuid, { payment_method: paymentMethod.id })\n        .then(() => navigate(`/create-password/${uuid}`))\n        .catch((err) => {\n          console.error(\"Error submitting form:\", err);\n          setError(err.message);\n        }).finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"requestDemoWrap\">\n      <div className=\"logohead\" style={{ zIndex: 10 }}>\n        <Link to={`${process.env.REACT_APP_STATIC_WEBSITE_URL}`}><img src={LoinLogo} alt=\"Logo\" /></Link>\n      </div>\n      <div className=\"OnboardingStep1\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"loginPage\">\n            <div className=\"boxinfo d-flex flex-column py-4\" style={{ overflow: 'auto' }}>\n              <div className=\"boxLogin\">\n                <h2 className=\"mb-3\">\n                  10-Day <span>Free Trial</span> Discover <span>Memate</span>\n                </h2>\n                <p style={{ color: '#475467', fontSize: '16px' }}>Your card won’t be charged unless you choose to continue after the trial period. You can cancel anytime before the trial ends — no questions asked. </p>\n                <div className=\"step-progress\">\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step active\"></div>\n                </div>\n                <label style={{ fontWeight: '600', color: '#1D2939', fontSize: '16px' }}>Payment Details</label>\n                <div className=\"formBoxDiscover mb-2\">\n                  <div className=\"formgroup mb-3\">\n                    <label>Name on card<span style={{ color: \"#f04438\" }}>*</span></label>\n                    <div className={`inputInfo ${error ? \"error-border\" : name ? \"successBorder\" : \"\"}`}>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Full name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                      />\n                      <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Error\" />\n                    </div>\n                  </div>\n                  <label>Card<span style={{ color: \"#f04438\" }}>*</span></label>\n                  <div className=\"border rounded\" style={{ padding: '13px 15px' }}>\n                    <CardElement\n                      options={{\n                        hidePostalCode: true\n                      }}\n                    />\n                  </div>\n\n                  {error && <p className=\"error-message\">{error}</p>}\n                </div>\n\n                <div style={{ borderRadius: '8px', border: '1px solid #BAE8FF', background: '#F2FAFF', color: '#0A4766', padding: '16px', fontSize: '14px' }}>You’re signing up for a free trial — no charge today.</div>\n\n                <div className=\"d-flex gap-2 mt-1\">\n                  <label className=\"customCheckBox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={isChecked}\n                      onChange={(e) => setIsChecked(e.target.checked)}\n                    />\n                    <span className=\"checkmark\">\n                      <Check color=\"#1ab2ff\" size={20} />\n                    </span>\n                  </label>\n                  <p className=\"mt-3 mb-0 termconditionP\">\n                    By selecting \"Start Free Trial\", I authorise meMate to charge my payment method on {new Date(Date.now() + 10 * 864e5).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' })} and monthly after that at the then-current price plus tax. I can cancel / change  anytime by going to the Subscription page in Account Settings. I agree to the <span style={{ color: '#158ECC', fontWeight: '600' }}>terms</span> and have read and acknowledged <span style={{ color: '#158ECC', fontWeight: '600' }}>privacy statement</span>\n                  </p>\n                </div>\n                <button\n                  type=\"submit\"\n                  disabled={loading || !isChecked}\n                  className=\"fillbtn flexcenterbox\"\n                >\n                  {loading ? \"Processing...\" : \"Next Step\"}\n                  {!loading && <img src={arrowRight} alt=\"Arrow Right\" />}\n                </button>\n              </div>\n\n              <div className=\"copywrite-n text-left w-100 mt-3 ps-4\">© Memate {new Date().getFullYear()}</div>\n            </div>\n            <div\n              className=\"sliderRight BusinessPlanwrap\"\n              style={{\n                backgroundImage: `url(${LinepatternBottom}), url(${Linepatterntop})`,\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"left bottom, right top\",\n              }}\n            >\n              <div className=\"BusinessPlanBox\" style={{ position: \"relative\" }}>\n                <div className=\"badgePlan\" style={{ position: \"absolute\", top: \"-15px\", left: \"40%\", fontSize: \"12px\", color: \"#344054\", fontWeight: '500' }}>\n                  Cancel Anytime\n                </div>\n                <div className=\"headPlan\">\n                  <h1>Business + Work</h1>\n                  <p>Everything in Business + Employee and Contractor Management.</p>\n                  <div className=\"d-flex align-items-center\"><h3>$162.17</h3> <span>/monthly</span></div>\n                </div>\n                <div className=\"listPlan\">\n                  <ul>\n                    <li><SVGContent />&nbsp;Client Management</li>\n                    <li><SVGContent />&nbsp;Supplier Management</li>\n                    <li><SVGContent />&nbsp;Sales Pipeline</li>\n                    <li><SVGContent />&nbsp;Project Management</li>\n                    <li><SVGContent />&nbsp;Internal Chat</li>\n                    <li><SVGContent />&nbsp;Invoicing</li>\n                    <li><SVGContent />&nbsp;Statistic Reports</li>\n                    <li><SVGContent />&nbsp;Profitability and Budgeting</li>\n                    <li><SVGContent />&nbsp;Expenses</li>\n                  </ul>\n                  <ul>\n                    <li><SVGContent />&nbsp;Employee Management</li>\n                    <li><SVGContent />&nbsp;Time Sheets & Tracker</li>\n                    <li><SVGContent />&nbsp;Contractor Management</li>\n                    <li><SVGContent />&nbsp;Job Scheduling</li>\n                    <li><SVGContent />&nbsp;Company News</li>\n                    <li><SVGContent />&nbsp;Task Management</li>\n                    <li><SVGContent />&nbsp;Company Calendar</li>\n                  </ul>\n                </div>\n                <p>\n                  Get started with no upfront cost. Your{\" \"}\n                  <strong>subscription begins in 10 days</strong>, allowing you to explore our services\n                  without immediate charges.\n                </p>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst DiscovermemateWrapper = () => (\n  <Elements stripe={stripePromise}>\n    <Discovermemate />\n  </Elements>\n);\n\nexport default DiscovermemateWrapper;\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// Onboarding API endpoints\nexport const OnboardingCreateApi = async (data) => {\n  const endpoint = `/onboarding/create/user/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const onboardingNextStep = async (uuid) => {\n  const endpoint = `/onboarding/next-step/${uuid}/`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCode = async (otpCode, uuid) => {\n  const endpoint = `/onboarding/verify/user/${uuid}/`;\n  const options = {\n    method: \"PUT\",\n    body: { code: otpCode },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateOrganisation = async (uuid, data) => {\n  const endpoint = `/onboarding/create/organization/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateSubscription = async (uuid, data) => {\n  const endpoint = `/onboarding/create/subscription/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreatePassword = async (uuid, data) => {\n  const endpoint = `/onboarding/create/password/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\n\nexport const requestDemoCreate = async (mainData) => {\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify(mainData);\n  console.log('raw: ', raw);\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/onboarding/request_demo/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n\n  } catch (error) {\n    console.error('Error:', error);\n    return error.text().then(errorMessage => {\n      console.error('Error Message:', errorMessage);\n      throw new Error(errorMessage);\n    });\n  }\n};\n\n\n\n\n"],"names":["stripePromise","loadStripe","process","SVGContent","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","Discovermemate","navigate","useNavigate","uuid","useParams","stripe","useStripe","elements","useElements","isChecked","setIsChecked","useState","name","setName","error","setError","loading","setLoading","className","style","zIndex","Link","to","src","LoinLogo","alt","onSubmit","async","event","preventDefault","cardElement","getElement","CardElement","paymentMethod","createPaymentMethod","type","card","console","message","log","OnboardingCreateSubscription","payment_method","then","catch","err","finally","overflow","color","fontSize","fontWeight","placeholder","value","onChange","e","target","exclamationCircle","padding","options","hidePostalCode","borderRadius","border","background","checked","Check","size","Date","now","toLocaleDateString","day","month","year","disabled","arrowRight","getFullYear","backgroundImage","Linepatterntop","backgroundRepeat","backgroundPosition","position","top","left","DiscovermemateWrapper","Elements","API_BASE_URL","onboardingNextStep","endpoint","fetchAPI","method","headers","OnboardingCode","otpCode","body","code","OnboardingCreateOrganisation","data","OnboardingCreatePassword","requestDemoCreate","myHeaders","Headers","append","raw","JSON","stringify","mainData","requestOptions","redirect","response","fetch","result","text","errorMessage","Error"],"sourceRoot":""}