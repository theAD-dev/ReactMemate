{"version":3,"file":"static/js/9927.9de6fafc.chunk.js","mappings":"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","sources":["APIs/ClientsApi.js","APIs/SalesApi.js","webpack://memateapp/./src/ui/send-email-2/send-email.module.scss?3bd9","ui/send-email-2/send-email.jsx"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createNewIndividualClient = async (data) => {\n  const endpoint = '/clients/individual/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewBusinessClient = async (data) => {\n  const endpoint = '/clients/business/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const restoreClient = async (id) => {\n  const endpoint = `/clients/restore/${id}/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientById = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientCategories = async () => {\n  const endpoint = `/references/clients/categories/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientIndustries = async () => {\n  const endpoint = `/references/clients/industries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getCountries = async () => {\n  const endpoint = `/references/countries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  const response = await fetchAPI(url.toString(), options, false);\n  const allowedCountries = [1];\n  return response?.filter(country => allowedCountries.includes(country.id)) || [];\n};\n\nexport const getStates = async (country) => {\n  const endpoint = `/references/states/${country}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getCities = async (state) => {\n  const endpoint = `/references/cities/${state}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getProjectManager = async () => {\n  const endpoint = `/references/desktop-users/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientEditApi = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getListOfClients = async (page, limit, search = \"\", order = \"\", isShowDeleted) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientOrderHistory = async (id, page, limit, search = \"\", order = \"\",) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/${id}/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"number\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  \n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainContact = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteClient = async (id) => {\n  const endpoint = `/clients/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteContactPerson = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchClients = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/clients`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Clients fetch error:', error);\n    throw error;\n  }\n};\n\nexport const bringBack = async (id) => {\n  const endpoint = `/projects/back/`;\n  const options = {\n    method: 'PUT',\n    body: { unique_id: id }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const draftSalesRequest = async (data) => {\n  const endpoint = `/sales/new-request/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n// Sale Table Api\nexport const fetchSales = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n// Sales Note Api\nexport const fetchSalesNotes = async (saleUniqueId, updatedNote) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ sales_note: updatedNote }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/notes/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales notes update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales notes update error:', error);\n    throw error;\n  }\n};\n\nexport const markWon = async (ids) => {\n  const endpoint = `/sales/status/won/`;\n  const options = {\n    method: 'PUT',\n    body: { ids: ids }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markLost = async (ids) => {\n  const endpoint = `/sales/status/lost/`;\n  const options = {\n    method: 'PUT',\n    body: { ids: ids }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n// Sale Won Api\nexport const fetchWon = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify({\n    \"ids\": [saleUniqueId]\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  const response = await fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n};\n\n\n// Sale Contact Api\nexport const fetchContacts = async (saleUniqueId, formData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(formData),\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/contacts/`, requestOptions);\n    if (response.ok) {\n      return response;\n    } else {\n      console.log('Error:', response.status);\n      return null;\n    }\n  } catch (error) {\n    console.log('Error:', error);\n    return null;\n  }\n};\n\n\n// Sale Lead Api\nexport const fetchSaleslead = async (saleUniqueId, updatedLead) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ lead: updatedLead, unique_id: saleUniqueId }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/lead/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales lead update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales lead update error:', error);\n    throw error;\n  }\n};\n\n\n\n\n// Sale Multi Won Api\nexport const fetchMultipleData = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  const responses = await Promise.all([\n    fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions), // Pass requestOptions directly\n  ]);\n\n  const data = await Promise.all(responses.map(response => response.json()));\n  return data;\n};\n\n\n// Sale DUPLICATE Api\nexport const fetchduplicateData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/duplicate/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n};\n\n\n\n\n// Sale history Api\nexport const fetchhistoryData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/history/`, requestOptions);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\n\n\n\n// Sale Multi Lost Api\nexport const fetchMultipleLost = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n\n  const responses = await Promise.all([\n    fetch(`${API_BASE_URL}/sales/status/lost/`, requestOptions), // Pass requestOptions directly\n  ]);\n\n  const data = await Promise.all(responses.map(response => response.json()));\n  return data; // Return data to handleMoveToManagementWon function\n};\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"send-email_headerTitle__50KUB\",\"customLabel\":\"send-email_customLabel__r5xED\",\"bag\":\"send-email_bag__wtdwK\",\"lable\":\"send-email_lable__+kNCa\",\"dropdownSelect\":\"send-email_dropdownSelect__RY5w8\",\"autoCompleteBox\":\"send-email_autoCompleteBox__fWZ7C\",\"AutoComplete\":\"send-email_AutoComplete__m9YI5\",\"bcc\":\"send-email_bcc__BwFzl\",\"box\":\"send-email_box__Zlmer\",\"active\":\"send-email_active__vEx4h\",\"inputBox\":\"send-email_inputBox__NpU2b\"};","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Editor } from \"primereact/editor\";\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport style from \"./send-email.module.scss\";\nimport { getEmail, getEmailTemplates, getOutgoingEmail, getSignatureTemplates } from '../../APIs/email-template';\n\nconst renderHeader = () => (\n    <span className=\"ql-formats\">\n        <button className=\"ql-bold\" aria-label=\"Bold\"></button>\n        <button className=\"ql-italic\" aria-label=\"Italic\"></button>\n        <button className=\"ql-underline\" aria-label=\"Underline\"></button>\n        <button className=\"ql-strike\" aria-label=\"Strikethrough\"></button>\n        <button className=\"ql-blockquote\" aria-label=\"Blockquote\"></button>\n        <button\n            className=\"ql-list\"\n            value=\"ordered\"\n            aria-label=\"Ordered List\"\n        ></button>\n        <button\n            className=\"ql-list\"\n            value=\"bullet\"\n            aria-label=\"Bullet List\"\n        ></button>\n        <button className=\"ql-align\" value=\"\" aria-label=\"Align Left\"></button>\n        <button\n            className=\"ql-align\"\n            value=\"center\"\n            aria-label=\"Align Center\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"right\"\n            aria-label=\"Align Right\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"justify\"\n            aria-label=\"Justify\"\n        ></button>\n        <button className=\"ql-link\" aria-label=\"Insert Link\"></button>\n        <button className=\"ql-image\" aria-label=\"Insert Image\"></button>\n        <button className=\"ql-code-block\" aria-label=\"Code Block\"></button>\n    </span>\n);\nconst header = renderHeader();\n\nconst SendDynamicEmailForm = ({ show, setShow, mutation, contactPersons, setPayload, defaultTemplateId }) => {\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState([]);\n    const [cc, setCC] = useState([]);\n    const [bcc, setBCC] = useState([]);\n    const [subject, setSubject] = useState(null);\n    const [text, setText] = useState(null);\n    const [signature, setSignature] = useState(null);\n\n    const [errors, setErrors] = useState({});\n    const [filteredEmails, setFilteredEmails] = useState([]);\n    const autoCompleteRef = useRef(null);\n    const autoCompleteRef2 = useRef(null);\n    const autoCompleteRef3 = useRef(null);\n    const [showCC, setShowCC] = useState(false);\n    const [showBCC, setShowBCC] = useState(false);\n\n    const [emailTemplateId, setEmailTemplatedId] = useState(null);\n    const reset = () => {\n        setFrom([]);\n        setTo([]);\n        setCC([]);\n        setBCC([]);\n        setSubject([]);\n        setText([]);\n        setEmailTemplatedId(null);\n    };\n\n    const handleClose = () => {\n        setShow(false);\n        if (!defaultTemplateId) reset();\n    };\n\n    const emailTemplateQuery = useQuery({\n        queryKey: [\"emailTemplate\"],\n        queryFn: getEmailTemplates,\n        enabled: !!show,\n    });\n\n    const signatureQuery = useQuery({\n        queryKey: [\"getSignatureTemplates\"],\n        queryFn: getSignatureTemplates,\n        enabled: !!show,\n    });\n\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail,\n        enabled: !!show,\n    });\n\n    const emailQuery = useQuery({\n        queryKey: [\"emailQuery\", emailTemplateId],\n        queryFn: () => getEmail(emailTemplateId),\n        enabled: !!emailTemplateId,\n        retry: 1,\n    });\n\n    useEffect(() => {\n        if (outgoingEmailTemplateQuery?.data) {\n            if (outgoingEmailTemplateQuery?.data?.outgoing_email && outgoingEmailTemplateQuery?.data?.outgoing_email_verified)\n                setFrom(outgoingEmailTemplateQuery?.data?.outgoing_email);\n            else\n                setFrom('no-reply@memate.com.au');\n        }\n\n        if (!emailTemplateId && emailTemplateQuery?.data && defaultTemplateId) {\n            const activeTemplateId = emailTemplateQuery?.data?.find((template) => template.type === defaultTemplateId);\n            if (activeTemplateId) setEmailTemplatedId(activeTemplateId?.id);\n        }\n\n    }, [emailTemplateQuery, outgoingEmailTemplateQuery]);\n\n    const onSubmit = async () => {\n        let errorCount = 0;\n        setErrors({});\n\n        if (!from) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, from: true }));\n        }\n\n        if (to?.length === 0) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, to: true }));\n        }\n\n        if (!subject) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, subject: true }));\n        }\n\n        if (!text) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, text: true }));\n        }\n\n        if (errorCount) return;\n\n        mutation.mutate({\n            subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() }),\n            ...(signature && { signature: signature })\n        });\n    };\n\n    const search = (event) => {\n        const query = event?.query?.toLowerCase() || '';\n        let emails = contactPersons.map((data) => (data.email));\n        emails = emails.filter((email) => !to.includes(email));\n        emails = emails.filter((email) => !cc.includes(email));\n        emails = emails.filter((email) => !bcc.includes(email));\n\n        emails = emails.filter((email) =>\n            email.toLowerCase().includes(query)\n        );\n\n        setFilteredEmails(emails);\n    };\n\n    const onInputChange = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setTo((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange2 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange3 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setBCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onFocus = () => {\n        search();\n        if (autoCompleteRef.current) autoCompleteRef.current.show();\n    };\n\n    const onFocus2 = () => {\n        search();\n        if (autoCompleteRef2.current) autoCompleteRef2.current.show();\n    };\n\n    const onFocus3 = () => {\n        search();\n        if (autoCompleteRef3.current) autoCompleteRef3.current.show();\n    };\n\n    useEffect(() => {\n        if (contactPersons?.length) {\n            let emails = contactPersons.map((data) => (data.email));\n            setFilteredEmails(emails);\n        }\n    }, [contactPersons]);\n\n    useEffect(() => {\n        setPayload((prev) => ({\n            ...prev,\n            subject: subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() }),\n            ...(signature && { signature: signature })\n        }));\n    }, [subject, text, from, to, cc, bcc, signature, setPayload]);\n\n    useEffect(() => {\n        if (signatureQuery?.data) {\n            setSignature(signatureQuery?.data?.find((template) => template.id === profileData.email_signature)?.id);\n        }\n    }, [signatureQuery?.data, profileData.email_signature]);\n\n    useEffect(() => {\n        setText(emailQuery?.data?.body || \"\");\n        setSubject(emailQuery?.data?.subject);\n        setErrors((others) => ({ ...others, subject: false }));\n        setErrors((others) => ({ ...others, text: false }));\n    }, [emailQuery?.data]);\n\n    return (\n        <Modal\n            show={show}\n            centered\n            onHide={handleClose}\n            className='invoice-form'\n            size='lg'\n        >\n            <Modal.Header closeButton>\n                <div className={`${style.modalHeader}`}>\n                    <div className=\"w-100 d-flex align-items-center gap-2\">\n                        <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                            Send email\n                        </span>\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>FROM</label>\n                            <Dropdown\n                                options={\n                                    (outgoingEmailTemplateQuery && outgoingEmailTemplateQuery?.data && ([{\n                                        value: outgoingEmailTemplateQuery?.data?.outgoing_email,\n                                        label: `${outgoingEmailTemplateQuery?.data?.outgoing_email}`,\n                                    }])) ||\n                                    []\n                                }\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '60px' }}\n                                placeholder=\"Select from email\"\n                                onChange={(e) => {\n                                    setFrom(e.value);\n                                    setErrors((others) => ({ ...others, from: false }));\n                                }}\n                                value={from}\n                                filterInputAutoFocus={true}\n                            />\n                        </div>\n                        {errors?.from && (\n                            <p className=\"error-message mb-0\">{\"From email is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>Templates</label>\n                            <Dropdown\n                                options={\n                                    (emailTemplateQuery &&\n                                        emailTemplateQuery.data?.map((emailTemplate) => ({\n                                            value: emailTemplate.id,\n                                            label: `${emailTemplate.name}`,\n                                        }))) ||\n                                    []\n                                }\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '88px' }}\n                                placeholder=\"Select template\"\n                                onChange={(e) => {\n                                    setEmailTemplatedId(e.value);\n                                }}\n                                value={emailTemplateId}\n                                loading={emailTemplateQuery?.isFetching}\n                                filterInputAutoFocus={true}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12} className='mb-3'>\n                        <div className=\"d-flex gap-3 w-100\">\n                            <div style={{ position: 'relative' }} className={style.autoCompleteBox}>\n                                <div style={{ width: '50px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>TO</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef}\n                                    value={to}\n                                    completeMethod={search}\n                                    onChange={(e) => {\n                                        setTo(e.value);\n                                        setErrors((others) => ({ ...others, to: false }));\n                                    }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus}\n                                    onFocus={onFocus}\n                                    onKeyUp={onInputChange}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setTo((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, \"w-100\")}\n                                    placeholder=\"TO\"\n                                />\n                            </div>\n                            <Button\n                                className={clsx(style.box, { [style.active]: showCC })}\n                                onClick={() => { setShowCC(!showCC); setCC([]); }}\n                            >\n                                CC\n                            </Button>\n                            <Button\n                                className={clsx(style.box, { [style.active]: showBCC })}\n                                onClick={() => { setShowBCC(!showBCC); setBCC([]); }}\n                            >\n                                BCC\n                            </Button>\n                        </div>\n                        {errors?.to && (\n                            <p className=\"error-message mb-0\">{\"To email is required\"}</p>\n                        )}\n                    </Col>\n                    {\n                        showCC &&\n                        <Col sm={6} className='mb-3'>\n                            <div style={{ position: 'relative' }}>\n                                <div style={{ width: '50px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>CC</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef2}\n                                    value={cc}\n                                    completeMethod={search}\n                                    onChange={(e) => { setCC(e.value); }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus2}\n                                    onFocus={onFocus2}\n                                    onKeyUp={onInputChange2}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setCC((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, \"w-100\")}\n                                    placeholder=\"CC\"\n                                />\n                            </div>\n                        </Col>\n                    }\n\n                    {\n                        showBCC && <Col sm={6} className='mb-3'>\n                            <div style={{ position: 'relative' }}>\n                                <div style={{ width: '60px' }} className={style.bag}></div>\n                                <label className={clsx(style.customLabel)}>BCC</label>\n                                <AutoComplete\n                                    ref={autoCompleteRef3}\n                                    value={bcc}\n                                    completeMethod={search}\n                                    onChange={(e) => { setBCC(e.value); }}\n                                    multiple\n                                    suggestions={filteredEmails}\n                                    onClick={onFocus3}\n                                    onFocus={onFocus3}\n                                    onKeyUp={onInputChange3}\n                                    onBlur={(e) => {\n                                        const currentValue = e.target.value.trim();\n                                        if (currentValue) {\n                                            setBCC((prev) => [...new Set([...prev, currentValue])]);\n                                            e.target.value = '';\n                                        }\n                                    }}\n                                    className={clsx(style.AutoComplete, style.bcc, \"w-100\")}\n                                    placeholder=\"BCC\"\n                                />\n                            </div>\n                        </Col>\n                    }\n                    <Col sm={12} className='mb-2'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '60px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>SUBJECT</label>\n                            <IconField>\n                                <InputIcon>\n                                    {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                </InputIcon>\n                                <InputText\n                                    value={subject}\n                                    className={clsx(style.inputBox, 'w-100')}\n                                    style={{ paddingLeft: '100px' }}\n                                    onChange={(e) => {\n                                        setSubject(e.target.value);\n                                        setErrors((others) => ({ ...others, subject: false }));\n                                    }}\n                                    placeholder=\"{Organization} | Quotation: {number} | {reference}\"\n                                />\n                            </IconField>\n                        </div>\n                        {errors?.subject && (\n                            <p className=\"error-message mb-0\">{\"Subject is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={12} className='mb-3'>\n                        <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                            <label className={clsx(style.lable)}>Message</label>\n                            <InputIcon style={{ position: 'absolute', right: '15px', top: '40px', zIndex: 1 }}>\n                                {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                            </InputIcon>\n                            <Editor\n                                style={{ minHeight: \"150px\" }}\n                                headerTemplate={header}\n                                value={text}\n                                placeholder='Enter a description...'\n                                onTextChange={(e) => {\n                                    setText(e.htmlValue);\n                                    setErrors((others) => ({ ...others, text: false }));\n                                }}\n                            />\n                        </div>\n                        {errors?.text && (\n                            <p className=\"error-message mb-0\">{\"Message is required\"}</p>\n                        )}\n                    </Col>\n                    <Col sm={12}>\n                        <div style={{ position: 'relative' }}>\n                            <label className={clsx(style.customLabel)}>Signature</label>\n                            <Dropdown\n                                options={\n                                    (signatureQuery &&\n                                        signatureQuery.data?.map((template) => ({\n                                            value: template.id,\n                                            label: `${template.name}`,\n                                        }))) ||\n                                    []\n                                }\n                                panelClassName='px880-dropdown-item'\n                                className={clsx(\n                                    style.dropdownSelect,\n                                    \"dropdown-height-fixed w-100\"\n                                )}\n                                style={{ height: \"46px\", paddingLeft: '88px' }}\n                                placeholder=\"Select signature\"\n                                onChange={(e) => {\n                                    setSignature(e.value);\n                                }}\n                                value={signature}\n                                loading={signatureQuery?.isFetching}\n                                filterInputAutoFocus={true}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer className='d-flex justify-content-between'>\n                <span></span>\n                <div className=\"d-flex justify-content-end gap-2\">\n                    <Button className=\"outline-button\" onClick={handleClose}>\n                        Cancel{\" \"}\n                    </Button>\n                    <Button disabled={mutation?.isPending} className=\"solid-button\" onClick={onSubmit}>\n                        Send{\" \"}\n                        {mutation?.isPending && (\n                            <ProgressSpinner\n                                style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default SendDynamicEmailForm;"],"names":["API_BASE_URL","process","restoreClient","async","url","URL","id","fetchAPI","toString","method","getClientById","getClientCategories","getClientIndustries","getCountries","response","allowedCountries","filter","country","includes","getStates","getCities","state","getProjectManager","getListOfClients","page","limit","search","arguments","length","undefined","order","isShowDeleted","offset","searchParams","append","clientOrderHistory","markeMainAddress","markeMainContact","deleteClient","deleteContactPerson","deleteAddress","bringBack","options","body","unique_id","draftSalesRequest","data","fetchSales","myHeaders","Headers","accessToken","localStorage","getItem","requestOptions","headers","redirect","fetch","text","error","console","fetchSalesNotes","saleUniqueId","updatedNote","JSON","stringify","sales_note","ok","errorText","Error","status","result","trim","parse","markWon","ids","markLost","fetchContacts","formData","log","fetchSaleslead","updatedLead","lead","fetchMultipleData","selectedUniqueIds","responses","Promise","all","map","json","fetchduplicateData","fetchMultipleLost","header","_jsxs","className","children","_jsx","value","_ref","_outgoingEmailTemplat4","_outgoingEmailTemplat5","_emailTemplateQuery$d2","_signatureQuery$data2","show","setShow","mutation","contactPersons","setPayload","defaultTemplateId","profileData","window","from","setFrom","useState","to","setTo","cc","setCC","bcc","setBCC","subject","setSubject","setText","signature","setSignature","errors","setErrors","filteredEmails","setFilteredEmails","autoCompleteRef","useRef","autoCompleteRef2","autoCompleteRef3","showCC","setShowCC","showBCC","setShowBCC","emailTemplateId","setEmailTemplatedId","handleClose","emailTemplateQuery","useQuery","queryKey","queryFn","getEmailTemplates","enabled","signatureQuery","getSignatureTemplates","outgoingEmailTemplateQuery","getOutgoingEmail","emailQuery","getEmail","retry","useEffect","_outgoingEmailTemplat","_outgoingEmailTemplat2","_outgoingEmailTemplat3","outgoing_email","outgoing_email_verified","_emailTemplateQuery$d","activeTemplateId","find","template","type","event","_event$query","query","toLowerCase","emails","email","onFocus","current","onFocus2","onFocus3","prev","email_body","from_email","_signatureQuery$data","_signatureQuery$data$","email_signature","_emailQuery$data","_emailQuery$data2","others","Modal","centered","onHide","size","Header","closeButton","style","modalHeader","headerTitle","Body","Row","Col","sm","position","clsx","customLabel","Dropdown","label","dropdownSelect","height","paddingLeft","placeholder","onChange","e","filterInputAutoFocus","emailTemplate","name","loading","isFetching","autoCompleteBox","width","bag","AutoComplete","ref","completeMethod","multiple","suggestions","onClick","onKeyUp","currentValue","target","key","split","Set","onBlur","Button","box","active","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","lable","right","zIndex","Editor","minHeight","headerTemplate","onTextChange","htmlValue","panelClassName","Footer","disabled","isPending","errorCount","mutate","color"],"sourceRoot":""}