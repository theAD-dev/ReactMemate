{"version":3,"file":"static/js/3274.f6ea8b83.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/ui/send-email/send-email.module.scss?c792","ui/send-email/send-email-form.jsx","APIs/base-api.js","APIs/email-template.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"send-email_headerTitle__cXbQd\",\"customLabel\":\"send-email_customLabel__ulebR\",\"bag\":\"send-email_bag__+1Isj\",\"lable\":\"send-email_lable__pfv8S\",\"dropdownSelect\":\"send-email_dropdownSelect__yuxmj\",\"autoCompleteBox\":\"send-email_autoCompleteBox__zqO6y\",\"AutoComplete\":\"send-email_AutoComplete__peyFk\",\"bcc\":\"send-email_bcc__vHuNY\",\"box\":\"send-email_box__KRxo7\",\"active\":\"send-email_active__sUnBO\",\"inputBox\":\"send-email_inputBox__cV-UR\"};","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Editor } from \"primereact/editor\";\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport style from \"./send-email.module.scss\";\nimport { getEmail, getEmailTemplates, getOutgoingEmail, getSignatureTemplates } from '../../APIs/email-template';\n\nconst headerElement = (\n    <div className={`${style.modalHeader}`}>\n        <div className=\"w-100 d-flex align-items-center gap-2\">\n            <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                Send a Quote\n            </span>\n        </div>\n    </div>\n);\n\nconst renderHeader = () => (\n    <span className=\"ql-formats\">\n        <button className=\"ql-bold\" aria-label=\"Bold\"></button>\n        <button className=\"ql-italic\" aria-label=\"Italic\"></button>\n        <button className=\"ql-underline\" aria-label=\"Underline\"></button>\n        <button className=\"ql-strike\" aria-label=\"Strikethrough\"></button>\n        <button className=\"ql-blockquote\" aria-label=\"Blockquote\"></button>\n        <button\n            className=\"ql-list\"\n            value=\"ordered\"\n            aria-label=\"Ordered List\"\n        ></button>\n        <button\n            className=\"ql-list\"\n            value=\"bullet\"\n            aria-label=\"Bullet List\"\n        ></button>\n        <button className=\"ql-align\" value=\"\" aria-label=\"Align Left\"></button>\n        <button\n            className=\"ql-align\"\n            value=\"center\"\n            aria-label=\"Align Center\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"right\"\n            aria-label=\"Align Right\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"justify\"\n            aria-label=\"Justify\"\n        ></button>\n        <button className=\"ql-link\" aria-label=\"Insert Link\"></button>\n        <button className=\"ql-image\" aria-label=\"Insert Image\"></button>\n        <button className=\"ql-code-block\" aria-label=\"Code Block\"></button>\n    </span>\n);\nconst header = renderHeader();\n\nconst SendEmailForm = ({ show, setShow, contactPersons, setPayload, save, defaultTemplate = 'Quote'}) => {\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState([]);\n    const [cc, setCC] = useState([]);\n    const [bcc, setBCC] = useState([]);\n    const [subject, setSubject] = useState(null);\n    const [text, setText] = useState(null);\n    const [signature, setSignature] = useState(null);\n    const [errors, setErrors] = useState({});\n    const [filteredEmails, setFilteredEmails] = useState([]);\n    const autoCompleteRef = useRef(null);\n    const autoCompleteRef2 = useRef(null);\n    const autoCompleteRef3 = useRef(null);\n    const [showCC, setShowCC] = useState(false);\n    const [showBCC, setShowBCC] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const handleClose = () => setShow(false);\n    const [emailTemplateId, setEmailTemplatedId] = useState(null);\n    const emailTemplateQuery = useQuery({\n        queryKey: [\"emailTemplate\"],\n        queryFn: getEmailTemplates,\n    });\n    const signatureQuery = useQuery({\n        queryKey: [\"getSignatureTemplates\"],\n        queryFn: getSignatureTemplates,\n    });\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail,\n    });\n    const emailQuery = useQuery({\n        queryKey: [\"emailQuery\", emailTemplateId],\n        queryFn: () => getEmail(emailTemplateId),\n        enabled: !!emailTemplateId,\n        retry: 1,\n    });\n\n    useEffect(() => {\n        if (outgoingEmailTemplateQuery?.data) {\n            if (outgoingEmailTemplateQuery?.data?.outgoing_email && outgoingEmailTemplateQuery?.data?.outgoing_email_verified)\n                setFrom(outgoingEmailTemplateQuery?.data?.outgoing_email);\n            else\n                setFrom('no-reply@memate.com.au');\n        }\n\n        if (emailTemplateQuery?.data) {\n            const activeTemplateId = emailTemplateQuery?.data?.find((template) => template.type === defaultTemplate);\n            if (activeTemplateId?.id) setEmailTemplatedId(activeTemplateId?.id);\n        }\n\n    }, [emailTemplateQuery, outgoingEmailTemplateQuery]);\n\n    const onSubmit = async () => {\n        let errorCount = 0;\n        setErrors({});\n\n        if (!from) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, from: true }));\n        }\n\n        if (to?.length === 0) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, to: true }));\n        }\n\n        if (!subject) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, subject: true }));\n        }\n\n        if (!text) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, text: true }));\n        }\n\n        if (errorCount) return;\n        setIsLoading(true);\n        await save();\n        setIsLoading(false);\n    };\n\n    const footerContent = (\n        <div className=\"d-flex justify-content-end gap-2\">\n            <Button className=\"outline-button\" onClick={() => setShow(false)}>\n                Cancel\n            </Button>\n            <Button disabled={isLoading} className=\"solid-button\" onClick={onSubmit}>\n                Send{\" \"}\n                {isLoading && (\n                    <ProgressSpinner\n                        style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                    />\n                )}\n            </Button>\n        </div>\n    );\n\n    const search = (event) => {\n        const query = event?.query?.toLowerCase() || '';\n        let emails = contactPersons.map((data) => (data.email));\n        emails = emails.filter((email) => !to.includes(email));\n        emails = emails.filter((email) => !cc.includes(email));\n        emails = emails.filter((email) => !bcc.includes(email));\n\n        emails = emails.filter((email) =>\n            email.toLowerCase().includes(query)\n        );\n        console.log('emails: ', emails);\n\n        setFilteredEmails(emails);\n    };\n\n    const onInputChange = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setTo((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange2 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange3 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            setBCC((prev) => [...new Set([...prev, ...emails])]);\n            e.target.value = '';\n        }\n    };\n\n    const onFocus = () => {\n        search();\n        if (autoCompleteRef.current) autoCompleteRef.current.show();\n    };\n\n    const onFocus2 = () => {\n        search();\n        if (autoCompleteRef2.current) autoCompleteRef2.current.show();\n    };\n\n    const onFocus3 = () => {\n        search();\n        if (autoCompleteRef3.current) autoCompleteRef3.current.show();\n    };\n\n    useEffect(() => {\n        if (contactPersons?.length) {\n            let emails = contactPersons.map((data) => (data.email));\n            setFilteredEmails(emails);\n        }\n    }, [contactPersons]);\n\n    useEffect(() => {\n        setPayload((prev) => ({\n            ...prev,\n            subject: subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() }),\n            ...(signature && { signature: signature })\n        }));\n    }, [subject, text, from, to, cc, bcc, signature, setPayload]);\n\n    useEffect(() => {\n        if (signatureQuery?.data) {\n            setSignature(signatureQuery?.data?.find((template) => template.id === profileData.email_signature)?.id);\n        }\n    }, [signatureQuery?.data, profileData.email_signature]);\n\n    useEffect(() => {\n        setText(emailQuery?.data?.body || \"\");\n        setSubject(emailQuery?.data?.subject);\n        setErrors((others) => ({ ...others, subject: false }));\n        setErrors((others) => ({ ...others, text: false }));\n    }, [emailQuery?.data]);\n    return (\n        <Dialog\n            visible={show}\n            modal={true}\n            header={headerElement}\n            footer={footerContent}\n            className={`${style.modal} custom-modal`}\n            style={{ width: \"896px\" }}\n            onHide={handleClose}\n        >\n            <Row>\n                <Col sm={6} className='mb-3'>\n                    <div style={{ position: 'relative' }}>\n                        <label className={clsx(style.customLabel)}>FROM</label>\n                        <Dropdown\n                            options={\n                                (outgoingEmailTemplateQuery && outgoingEmailTemplateQuery?.data && ([{\n                                    value: outgoingEmailTemplateQuery?.data?.outgoing_email,\n                                    label: `${outgoingEmailTemplateQuery?.data?.outgoing_email}`,\n                                }])) ||\n                                []\n                            }\n                            className={clsx(\n                                style.dropdownSelect,\n                                \"dropdown-height-fixed w-100\"\n                            )}\n                            style={{ height: \"46px\", paddingLeft: '60px' }}\n                            placeholder=\"Select from email\"\n                            onChange={(e) => {\n                                setFrom(e.value);\n                                setErrors((others) => ({ ...others, from: false }));\n                            }}\n                            value={from}\n                            filterInputAutoFocus={true}\n                        />\n                    </div>\n                    {errors?.from && (\n                        <p className=\"error-message mb-0\">{\"From email is required\"}</p>\n                    )}\n                </Col>\n                <Col sm={6} className='mb-3'>\n                    <div style={{ position: 'relative' }}>\n                        <label className={clsx(style.customLabel)}>Templates</label>\n                        <Dropdown\n                            options={\n                                (emailTemplateQuery &&\n                                    emailTemplateQuery.data?.map((emailTemplate) => ({\n                                        value: emailTemplate.id,\n                                        label: `${emailTemplate.name}`,\n                                    }))) ||\n                                []\n                            }\n                            className={clsx(\n                                style.dropdownSelect,\n                                \"dropdown-height-fixed w-100\"\n                            )}\n                            style={{ height: \"46px\", paddingLeft: '88px' }}\n                            placeholder=\"Select template\"\n                            onChange={(e) => {\n                                setEmailTemplatedId(e.value);\n                            }}\n                            value={emailTemplateId}\n                            loading={emailTemplateQuery?.isFetching}\n                            filterInputAutoFocus={true}\n                        />\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12} className='mb-3'>\n                    <div className=\"d-flex gap-3 w-100\">\n                        <div style={{ position: 'relative' }} className={style.autoCompleteBox}>\n                            <div style={{ width: '50px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>TO</label>\n                            <AutoComplete\n                                ref={autoCompleteRef}\n                                value={to}\n                                completeMethod={search}\n                                onChange={(e) => {\n                                    setTo(e.value);\n                                    setErrors((others) => ({ ...others, to: false }));\n                                }}\n                                multiple\n                                suggestions={filteredEmails}\n                                onClick={onFocus}\n                                onFocus={onFocus}\n                                onKeyUp={onInputChange}\n                                onBlur={(e) => {\n                                    const currentValue = e.target.value.trim();\n                                    if (currentValue) {\n                                        setTo((prev) => [...new Set([...prev, currentValue])]);\n                                        e.target.value = '';\n                                    }\n                                }}\n                                className={clsx(style.AutoComplete, \"w-100\")}\n                                placeholder=\"TO\"\n                            />\n                        </div>\n                        <Button\n                            className={clsx(style.box, { [style.active]: showCC })}\n                            onClick={() => { setShowCC(!showCC); setCC([]); }}\n                        >\n                            CC\n                        </Button>\n                        <Button\n                            className={clsx(style.box, { [style.active]: showBCC })}\n                            onClick={() => { setShowBCC(!showBCC); setBCC([]); }}\n                        >\n                            BCC\n                        </Button>\n                    </div>\n                    {errors?.to && (\n                        <p className=\"error-message mb-0\">{\"To email is required\"}</p>\n                    )}\n                </Col>\n                {\n                    showCC &&\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '50px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>CC</label>\n                            <AutoComplete\n                                ref={autoCompleteRef2}\n                                value={cc}\n                                completeMethod={search}\n                                onChange={(e) => { setCC(e.value); }}\n                                multiple\n                                suggestions={filteredEmails}\n                                onClick={onFocus2}\n                                onFocus={onFocus2}\n                                onKeyUp={onInputChange2}\n                                onBlur={(e) => {\n                                    const currentValue = e.target.value.trim();\n                                    if (currentValue) {\n                                        setCC((prev) => [...new Set([...prev, currentValue])]);\n                                        e.target.value = '';\n                                    }\n                                }}\n                                className={clsx(style.AutoComplete, \"w-100\")}\n                                placeholder=\"CC\"\n                            />\n                        </div>\n                    </Col>\n                }\n\n                {\n                    showBCC && <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '60px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>BCC</label>\n                            <AutoComplete\n                                ref={autoCompleteRef3}\n                                value={bcc}\n                                completeMethod={search}\n                                onChange={(e) => { setBCC(e.value); }}\n                                multiple\n                                suggestions={filteredEmails}\n                                onClick={onFocus3}\n                                onFocus={onFocus3}\n                                onKeyUp={onInputChange3}\n                                onBlur={(e) => {\n                                    const currentValue = e.target.value.trim();\n                                    if (currentValue) {\n                                        setBCC((prev) => [...new Set([...prev, currentValue])]);\n                                        e.target.value = '';\n                                    }\n                                }}\n                                className={clsx(style.AutoComplete, style.bcc, \"w-100\")}\n                                placeholder=\"BCC\"\n                            />\n                        </div>\n                    </Col>\n                }\n                <Col sm={12} className='mb-2'>\n                    <div style={{ position: 'relative' }}>\n                        <div style={{ width: '60px' }} className={style.bag}></div>\n                        <label className={clsx(style.customLabel)}>SUBJECT</label>\n                        <IconField>\n                            <InputIcon>\n                                {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                            </InputIcon>\n                            <InputText\n                                value={subject}\n                                className={clsx(style.inputBox, 'w-100')}\n                                style={{ paddingLeft: '100px' }}\n                                onChange={(e) => {\n                                    setSubject(e.target.value);\n                                    setErrors((others) => ({ ...others, subject: false }));\n                                }}\n                                placeholder=\"{Organization} | Quotation: {number} | {reference}\"\n                            />\n                        </IconField>\n                    </div>\n                    {errors?.subject && (\n                        <p className=\"error-message mb-0\">{\"Subject is required\"}</p>\n                    )}\n                </Col>\n                <Col sm={12} className='mb-3'>\n                    <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                        <label className={clsx(style.lable)}>Message</label>\n                        <InputIcon style={{ position: 'absolute', right: '15px', top: '40px', zIndex: 1 }}>\n                            {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                        </InputIcon>\n                        <Editor\n                            style={{ minHeight: \"150px\" }}\n                            headerTemplate={header}\n                            value={text}\n                            placeholder='Enter a description...'\n                            onTextChange={(e) => {\n                                setText(e.htmlValue);\n                                setErrors((others) => ({ ...others, text: false }));\n                            }}\n                        />\n                    </div>\n                    {errors?.text && (\n                        <p className=\"error-message mb-0\">{\"Message is required\"}</p>\n                    )}\n                </Col>\n                <Col sm={12}>\n                    <div style={{ position: 'relative' }}>\n                        <label className={clsx(style.customLabel)}>Signature</label>\n                        <Dropdown\n                            options={\n                                (signatureQuery &&\n                                    signatureQuery.data?.map((template) => ({\n                                        value: template.id,\n                                        label: `${template.name}`,\n                                    }))) ||\n                                []\n                            }\n                            panelClassName='px880-dropdown-item'\n                            className={clsx(\n                                style.dropdownSelect,\n                                \"dropdown-height-fixed w-100\"\n                            )}\n                            style={{ height: \"46px\", paddingLeft: '88px' }}\n                            placeholder=\"Select signature\"\n                            onChange={(e) => {\n                                setSignature(e.value);\n                            }}\n                            value={signature}\n                            loading={signatureQuery?.isFetching}\n                            filterInputAutoFocus={true}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Dialog>\n    );\n};\n\nexport default SendEmailForm;","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};"],"names":["headerElement","_jsx","className","style","modalHeader","children","headerTitle","header","_jsxs","value","_ref","_outgoingEmailTemplat4","_outgoingEmailTemplat5","_emailTemplateQuery$d2","_signatureQuery$data2","show","setShow","contactPersons","setPayload","save","defaultTemplate","profileData","JSON","parse","window","localStorage","getItem","from","setFrom","useState","to","setTo","cc","setCC","bcc","setBCC","subject","setSubject","text","setText","signature","setSignature","errors","setErrors","filteredEmails","setFilteredEmails","autoCompleteRef","useRef","autoCompleteRef2","autoCompleteRef3","showCC","setShowCC","showBCC","setShowBCC","isLoading","setIsLoading","emailTemplateId","setEmailTemplatedId","emailTemplateQuery","useQuery","queryKey","queryFn","getEmailTemplates","signatureQuery","getSignatureTemplates","outgoingEmailTemplateQuery","getOutgoingEmail","emailQuery","getEmail","enabled","retry","useEffect","_outgoingEmailTemplat","_outgoingEmailTemplat2","_outgoingEmailTemplat3","data","outgoing_email","outgoing_email_verified","_emailTemplateQuery$d","activeTemplateId","find","template","type","id","footerContent","Button","onClick","disabled","async","errorCount","others","length","ProgressSpinner","width","height","color","search","event","_event$query","query","toLowerCase","emails","map","email","filter","includes","console","log","onFocus","current","onFocus2","onFocus3","prev","email_body","from_email","toString","_signatureQuery$data","_signatureQuery$data$","email_signature","_emailQuery$data","_emailQuery$data2","body","Dialog","visible","modal","footer","onHide","handleClose","Row","Col","sm","position","clsx","customLabel","Dropdown","options","label","dropdownSelect","paddingLeft","placeholder","onChange","e","filterInputAutoFocus","emailTemplate","name","loading","isFetching","autoCompleteBox","bag","AutoComplete","ref","completeMethod","multiple","suggestions","onKeyUp","currentValue","target","key","split","Set","onBlur","trim","box","active","IconField","InputIcon","top","InputText","inputBox","lable","right","zIndex","Editor","minHeight","headerTemplate","onTextChange","htmlValue","panelClassName","fetchAPI","endpoint","arguments","undefined","isRequiredLoggedin","method","headers","accessToken","isFormData","FormData","defaultHeaders","requestOptions","stringify","redirect","url","URL","response","fetch","contentType","get","ok","_errorData","errorData","json","status","clear","sessionStorage","location","replace","error","Error","message","API_BASE_URL","process","getJobTemplates","getJobTemplate","createJobTemplate","updateJobTemplate","deleteJobTemplate","createEmailTemplate","updateEmailTemplate","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates"],"sourceRoot":""}