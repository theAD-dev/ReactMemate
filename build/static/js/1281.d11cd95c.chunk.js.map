{"version":3,"file":"static/js/1281.d11cd95c.chunk.js","mappings":"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","sources":["APIs/base-api.js","APIs/email-template.js","APIs/jobs-api.js","APIs/management-api.js","APIs/team-api.js","webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","shared/ui/circular-progressbar/index.js"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateJob = async (id, data) => {\n    const endpoint = `/jobs/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const resendQuoteEmail = async (id, data) => {\n    let endpoint = `/resend/quote/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\n\n\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { createNewJob, updateJob } from '../../../../APIs/jobs-api';\nimport { getManagement } from '../../../../APIs/management-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\n\nexport function getFileIcon(fileType) {\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\n\nconst CreateJob = ({ visible, setVisible, setRefetch = () => { }, workerId, isEditMode = false, jobData = null, jobId = null, refetch = () => { } }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            const newFiles = acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file),\n                progress: 0,\n            }));\n\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...newFiles,\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const [start, setStart] = useState(\"\");\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileUserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({\n        queryKey: [\"getManagement\"],\n        queryFn: getManagement,\n        staleTime: Infinity,\n    });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    {option?.image === \"openJob\"\n                        ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                            <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                        </svg>\n                        : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    }\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        {option?.image === \"openJob\"\n                            ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                                <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                            </svg>\n                            : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                        }\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            // Limit job reference to 50 characters when loading from template\n            const templateTitle = getTemplateByIDQuery?.data?.title || \"\";\n            setJobReference(templateTitle.substring(0, 50));\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    const uploadToS3 = async (file, url) => {\n        try {\n            const response = await axios.put(url, file, {\n                headers: {\n                    \"Content-Type\": \"\",\n                },\n                onUploadProgress: (progressEvent) => {\n                    const progress = Math.round(\n                        (progressEvent.loaded / progressEvent.total) * 100\n                    );\n                    setFiles((prevFiles) => {\n                        return prevFiles.map((f) =>\n                            f.name === file.name\n                                ? Object.assign(f, { progress, url })\n                                : f\n                        );\n                    });\n                },\n            });\n\n            // Mark as successfully uploaded\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 100, uploaded: true })\n                        : f\n                );\n            });\n\n            return response;\n        } catch (err) {\n            // Handle specific error types\n            let errorMessage = \"Upload failed\";\n\n            if (err.response) {\n                if (err.response.status === 403) {\n                    errorMessage = \"Permission denied (403 Forbidden)\";\n                } else {\n                    errorMessage = `Server error: ${err.response.status}`;\n                }\n            } else if (err.request) {\n                errorMessage = \"No response from server\";\n            } else {\n                errorMessage = err.message;\n            }\n\n            console.error(`Error uploading ${file.name}:`, errorMessage);\n\n            // Update file with error status but don't stop other uploads\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, {\n                            progress: 0,\n                            error: true,\n                            errorMessage,\n                            uploadFailed: true\n                        })\n                        : f\n                );\n            });\n\n            // Return error object instead of throwing\n            return { error: true, message: errorMessage };\n        }\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            if (file.error || !file.url) continue;\n\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        let successCount = 0;\n        let errorCount = 0;\n\n        // Process each file independently\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n                if (!url) {\n                    console.error(`No URL returned for file: ${file.name}`);\n                    errorCount++;\n                    continue;\n                }\n\n                // Step 2: Upload the file to S3 using the signed URL\n                const result = await uploadToS3(file, url);\n\n                // Check if upload was successful\n                if (result && !result.error) {\n                    successCount++;\n                } else {\n                    errorCount++;\n                }\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n\n                // Update file with error status\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, {\n                                progress: 0,\n                                error: true,\n                                errorMessage: error.message || \"Failed to get upload URL\",\n                                uploadFailed: true\n                            })\n                            : f\n                    );\n                });\n\n                errorCount++;\n                // Continue with next file instead of stopping\n            }\n        }\n\n        // Show summary toasts\n        if (successCount > 0) {\n            toast.success(`Successfully uploaded ${successCount} file(s)`);\n        }\n        if (errorCount > 0) {\n            toast.error(`Failed to upload ${errorCount} file(s)`);\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => {\n            if (isEditMode && jobId) {\n                return updateJob(jobId, data);\n            } else {\n                return createNewJob(data);\n            }\n        },\n        onSuccess: async (response) => {\n            const id = isEditMode ? jobId : response.id;\n\n            if (files.length > 0) {\n                await fileUploadBySignedURL(id);\n                await attachmentsUpdateInJob(id);\n            }\n\n            // Call setRefetch to trigger a refresh in the parent component\n            if (jobData) refetch();\n            setRefetch((prev) => !prev);\n\n            toast.success(`Job ${isEditMode ? 'updated' : 'created'} successfully`);\n            setVisible(false);\n            reset();\n        },\n        onError: (error) => {\n            console.error(`Error ${isEditMode ? 'updating' : 'creating'} job:`, error);\n            toast.error(`Failed to ${isEditMode ? 'update' : 'create'} job. Please try again.`);\n        }\n    });\n\n    const onSubmit = () => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else if (userId && userId != \"0\") payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        // if (!projectId) tempErrors.projectId = true;\n        if (projectId) payload.project = projectId;\n\n        if (projectPhotoDeliver)\n            payload.project_photos = projectPhotoDeliver;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = useCallback((id) => {\n        let user = mobileUserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        }\n    }, [mobileUserQuery?.data?.users]);\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId || \"0\");\n            workerDetailsSet(+workerId || \"\");\n        }\n    }, [workerId, workerDetailsSet]);\n\n    // Populate form with job data when in edit mode\n    useEffect(() => {\n        if (isEditMode && jobData) {\n            // Set job reference and description\n            setJobReference(jobData.short_description || \"\");\n            setDescription(jobData.long_description || \"\");\n\n            // Set worker details\n            if (jobData.worker) {\n                setUserId(jobData.worker.id);\n                workerDetailsSet(jobData.worker.id);\n            } else {\n                setUserId(\"0\");\n            }\n\n            // Set project\n            if (jobData.project) {\n                setProjectId(jobData.project.id);\n            }\n\n            // Set payment type and cost\n            setType(jobData.type || \"2\");\n            setCost(jobData.cost || 0.00);\n\n            // Set time type and duration\n            set_time_type(jobData.time_type || \"\");\n            setDuration(jobData.duration || \"\");\n\n            // Set dates\n            if (jobData.start_date) {\n                const startDate = new Date(+jobData.start_date * 1000);\n                setStart(startDate);\n            }\n            if (jobData.end_date) {\n                const endDate = new Date(+jobData.end_date * 1000);\n                setEnd(endDate);\n            }\n\n            // Set project photos\n            setProjectPhotoDeliver(jobData.project_photos || \"3\");\n\n            // Set attachments if available\n            if (jobData.attachments && jobData.attachments.length > 0) {\n                setFiles(jobData.attachments.map(attachment => ({\n                    name: attachment.name,\n                    size: attachment.size,\n                    url: attachment.link,\n                    progress: 100,\n                    isExisting: true\n                })));\n            }\n        }\n    }, [isEditMode, jobData, workerDetailsSet]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            {!isEditMode && (\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <Dropdown\n                                        options={\n                                            (templateQuery &&\n                                                templateQuery.data?.map((template) => ({\n                                                    value: template.id,\n                                                    label: `${template.name}`,\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\"\n                                        )}\n                                        style={{ height: \"44px\", width: '606px' }}\n                                        placeholder=\"Select template\"\n                                        onChange={(e) => {\n                                            setTemplatedId(e.value);\n                                        }}\n                                        value={templateId}\n                                        loading={templateQuery?.isFetching}\n                                        filter\n                                    />\n                                </div>\n                            )}\n                            {isEditMode && (\n                                <h2 className=\"mb-0\" style={{ fontSize: '18px', fontWeight: '500' }}>Edit Job #{jobId}</h2>\n                            )}\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>{isEditMode ? 'Edit Job' : 'New Job'}</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference<span className=\"required\">*</span></label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    const value = e.target.value;\n                                                    if (value.length <= 50) {\n                                                        setJobReference(value);\n                                                        if (value)\n                                                            setErrors((others) => ({ ...others, jobReference: false }));\n                                                    }\n                                                }}\n                                                maxLength={50}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        {errors?.jobReference && (\n                                            <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                        )}\n                                        <small className=\"text-muted ms-auto\">{jobReference.length}/50</small>\n                                    </div>\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to<span className=\"required\">*</span></h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={[\n                                                    { value: \"0\", label: \"Open job\", image: \"openJob\", has_photo: false },\n                                                    ...(mobileUserQuery?.data?.users\n                                                        ?.filter((user) => user.status !== 'disconnected')\n                                                        ?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        })) || [])\n                                                ]}\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileUserQuery?.isFetching}\n                                                filter\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        {userId && userId != \"0\" &&\n                                            <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                                <Col sm={2} className='p-0'>\n                                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                        <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                    </div>\n                                                </Col>\n                                                <Col sm={5} className='pe-0 ps-0'>\n                                                    <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                    <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                                </Col>\n                                                <Col sm={5} className=''>\n                                                    <div className='d-flex align-items-center gap-2 mb-3'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                        <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                    </div>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                        <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment<span className=\"required\">*</span></label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time<span className=\"required\">*</span></label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts<span className=\"required\">*</span></label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End<span className=\"required\">*</span></label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.unique_id,\n                                                    label: `${project.reference} - ${project.number}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        filter\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"None\" name=\"projectPhotoDeliver\" value=\"\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == ''} />\n                                            <label htmlFor=\"None\" className=\"ms-2 cursor-pointer\">None</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>\n                                                                {parseFloat(file?.size / 1024).toFixed(2)} KB\n                                                                {file.error ?\n                                                                    <span style={{ color: \"#F04438\" }}> - Upload failed</span> :\n                                                                    ` - ${parseInt(file?.progress) || 0}% uploaded`\n                                                                }\n                                                            </p>\n                                                            {file.errorMessage &&\n                                                                <p className='mb-0' style={{ color: \"#F04438\", fontSize: \"12px\" }}>{file.errorMessage}</p>\n                                                            }\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            {file.error ?\n                                                                <div style={{ color: \"#F04438\", width: \"30px\", height: \"30px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>!</div> :\n                                                                <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        <Button type='button' onClick={onSubmit} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending}>\n                            {isEditMode ? 'Update' : 'Create'} {mutation?.isPending && <ProgressSpinner\n                                style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />}\n                        </Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","window","clear","sessionStorage","location","replace","Error","contentType","get","includes","json","message","text","error","console","API_BASE_URL","process","getJobTemplates","toString","getJobTemplate","id","createJobTemplate","data","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getListOfJobs","page","limit","name","order","isShowDeleted","offset","searchParams","append","createNewJob","getJob","getJobDashboardData","updateJob","updateProjectScheduleById","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","unique_id","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","resendQuoteEmail","getManagement","myHeaders","Headers","ProjectCardApi","uniqueId","getTeamMobileUser","getTeamDesktopUser","getFileIcon","fileType","fileData","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","_ref","_mobileUserQuery$data3","visible","setVisible","setRefetch","workerId","isEditMode","jobData","jobId","refetch","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","newFiles","map","file","Object","assign","preview","createObjectURL","progress","prevFiles","type","setType","cost","setCost","time_type","set_time_type","start","setStart","end","setEnd","duration","setDuration","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getTemplateByIDQuery","enabled","retry","mobileUserQuery","projectQuery","staleTime","Infinity","itemTemplate","option","borderRadius","overflow","border","image","fillRule","clipRule","FallbackImage","photo","has_photo","is_business","size","label","selectedItemTemplate","props","placeholder","useEffect","_getTemplateByIDQuery","_getTemplateByIDQuery2","templateTitle","title","substring","others","uploadToS3","axios","put","onUploadProgress","progressEvent","Math","round","loaded","total","f","uploaded","err","errorMessage","request","uploadFailed","mutation","useMutation","mutationFn","onSuccess","toast","successCount","errorCount","post","filename","Authorization","result","success","fileUploadBySignedURL","attachments","_file$url","obj","split","push","log","attachmentsUpdateInJob","prev","onError","onSubmit","tempErrors","payload","short_description","long_description","worker","start_date","Date","toISOString","end_date","project","project_photos","values","mutate","workerDetailsSet","useCallback","_mobileUserQuery$data","_mobileUserQuery$data2","user","users","find","paymentCycleObj","parseFloat","hourly_rate","toFixed","payment_cycle","first_name","last_name","startDate","endDate","attachment","link","isExisting","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileUserQuery$data4","_mobileUserQuery$data5","_mobileUserQuery$data6","_projectQuery$data","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","filter","fontSize","fontWeight","Button","ref","onClick","X","Card","Body","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","maxLength","InputTextarea","Row","Col","sm","valueTemplate","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","reference","number","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","minWidth","disabled","isPending","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition"],"sourceRoot":""}