{"version":3,"file":"static/js/8385.c53a94f4.chunk.js","mappings":"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","sources":["components/Work/Pages/tasks/old-development/DateRangePicker.js","APIs/TasksApi.js","APIs/task-api.js","webpack://memateapp/./src/components/Work/features/task/create-task/create-task.module.scss?cbbe","components/Business/Pages/management/task/select-date.js","components/Work/features/task/create-task/create-task.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport Flatpickr from \"react-flatpickr\";\n\nconst DateRangePicker = ({ onDataApply, dateRange, onClose }) => {\n  const [selectedDates, setSelectedDates] = useState([]);\n  const calendarRef = useRef(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [isApplying, setIsApplying] = useState(false);\n  const [formattedCurrentDate, setFormattedCurrentDate] = useState(\"\");\n\n  useEffect(() => {\n    if (dateRange) {\n      setSelectedDates([dateRange?.startDate, dateRange?.endDate]);\n      setStartDate(dateRange?.startDate);\n      setEndDate(dateRange?.endDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    const currentDate = new Date();\n    const formattedDate = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`;\n    setFormattedCurrentDate(formattedDate);\n  }, []);\n\n  const handleChange = (selectedDates) => {\n    setSelectedDates(selectedDates);\n  };\n\n  useEffect(() => {\n    if (selectedDates.length === 2) {\n      const startDate = selectedDates[0];\n      const endDate = selectedDates[1];\n      setStartDate(startDate);\n      setEndDate(endDate);\n    } else if (selectedDates.length === 1) {\n      const startDate = selectedDates[0];\n      setStartDate(startDate);\n    }\n  }, [selectedDates]);\n\n  const handleApply = () => {\n    setIsApplying(true);\n    onDataApply({ startDate, endDate });\n    const taggingElement = document.querySelector(\".tags-input-container .rangedatepicker .mainWrapperTags\");\n    if (taggingElement) {\n      taggingElement.textContent = `${startDate.toISOString().split('T')[0]} - ${endDate.toISOString().split('T')[0]}`;\n    }\n  };\n\n  const handleCancel = () => {\n    setSelectedDates([]);\n    setStartDate(null);\n    setEndDate(null);\n    setIsApplying(false);\n    if (onClose) onClose();\n\n    const existingCustomDiv = document.querySelector(\".custom-div p\");\n    if (existingCustomDiv) {\n      existingCustomDiv.textContent = `${formattedCurrentDate}`;\n    }\n  };\n\n  const flatpickrOptions = {\n    dateFormat: \"Y-m-d\",\n    mode: \"range\",\n    locale: {\n      firstDayOfWeek: 1\n    },\n    inline: true,\n    // onDayCreate: function (dObj, dStr, fp, dayElem) {\n    //   if (Math.random() < 0.15)\n    //     dayElem.innerHTML += \"<span class='event'></span>\";\n    //   else if (Math.random() > 0.85)\n    //     dayElem.innerHTML += \"<span class='event busy'></span>\";\n    // }\n  };\n\n  useEffect(() => {\n    if (isApplying) {\n      // Custom logic when applying\n    }\n  }, [isApplying]);\n\n  const handleTodayClick = () => {\n    const currentDate = new Date();\n    setSelectedDates([currentDate, currentDate]);\n  };\n\n  useEffect(() => {\n    if (!startDate && !endDate) {\n      const currentDate = new Date();\n      setStartDate(currentDate);\n      setEndDate(currentDate);\n    } else if (startDate && endDate) {\n      const options = { year: 'numeric', month: 'short', day: 'numeric' };\n      const start = new Date(startDate);\n      const formattedStartDate = start.toLocaleDateString('en-US', options);\n      const end = new Date(endDate);\n      const formattedEndDate = end.toLocaleDateString('en-US', options);\n\n      const textContent = `${formattedStartDate} - ${formattedEndDate}`;\n      const newContent = `<p>${textContent}</p><span class=\"today-span\" style=\"cursor: pointer\">Today</span>`;\n      const monthsElement = document.querySelector(\".flatpickr-months\");\n      if (monthsElement) {\n        const existingCustomDiv = document.querySelector(\".custom-div\");\n        if (existingCustomDiv) {\n          existingCustomDiv.innerHTML = newContent;\n        } else {\n          const customDiv = document.createElement('div');\n          customDiv.className = \"custom-div\";\n          customDiv.innerHTML = newContent;\n          monthsElement.parentNode.insertBefore(customDiv, monthsElement.nextSibling);\n        }\n      }\n    }\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    const todaySpan = document.querySelector(\".today-span\");\n    if (todaySpan) {\n      todaySpan.addEventListener(\"click\", handleTodayClick);\n    }\n\n    return () => {\n      if (todaySpan) {\n        todaySpan.removeEventListener(\"click\", handleTodayClick);\n      }\n    };\n  }, [startDate, endDate]);\n\n  return (\n    <div>\n      <Flatpickr\n        options={flatpickrOptions}\n        value={selectedDates}\n        onChange={handleChange}\n        ref={calendarRef}\n      />\n      <div className=\"calenderBut\">\n        <button className=\"tabCancel\" onClick={handleCancel}>Cancel</button>\n        <button className=\"tabApply\" onClick={handleApply}>Apply</button>\n      </div>\n    </div>\n  );\n};\n\nexport default DateRangePicker;\n","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Fetch API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasks = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> View Task API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksRead = async (taskId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/${taskId}/`);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Task Update API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksUpdate= async (mainData,taskId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify(mainData)\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/update/${taskId}/`);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Task partials Update API  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const partialsTasksUpdate= async (taskId, data) => {\n  console.log('taskId: ', taskId);\n  console.log('data: ', data);\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'PATCH',\n    headers: myHeaders,\n    body: JSON.stringify(data),\n  };\n\n  try {\n    const url = new URL(`${API_BASE_URL}/tasks/update/${taskId}/`);\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Partials update error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Task Create API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksNew = async (formData) => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: JSON.stringify(formData), // Serialize formData directly here\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/tasks/new/`, requestOptions);\n    const result = await response.text();\n    return result; // Return the result if needed\n  } catch (error) {\n    console.error(error);\n    throw error; // Rethrow the error if needed\n  }\n};\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Fetch Task Project API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksProject = async () => {\n \n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/references/projects/`, requestOptions);\n    const result = await response.json();\n    return result; // Return the result if needed\n  } catch (error) {\n    console.error(error);\n    throw error; // Rethrow the error if needed\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Fetch Task Uses API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksUsers = async () => {\n \n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/references/all-users/`, requestOptions);\n    const result = await response.json();\n    return result; // Return the result if needed\n  } catch (error) {\n    console.error(error);\n    throw error; // Rethrow the error if needed\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DELETE Task  API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksDelete = async (taskId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'DELETE',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/delete/${taskId}/`);\n\n    const response = await fetch(url, requestOptions);\n    if (response.ok) \n    return { message: 'Task deleted successfully' };\n    else\n    throw new Error(\"Error during deleting\"); \n    \n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Complete Task  API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const TaskCompleteJob = async (taskId, finished) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const raw = JSON.stringify({\n    \"finished\": finished\n  });\n\n  const requestOptions = {\n    method: \"PATCH\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const url = new URL(`${API_BASE_URL}/tasks/complete/${taskId}/`);\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfTasks = async (page, limit, search = \"\", order = \"\", isShowDeleted = false, showNotCompleted = false, userId) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/tasks/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (search) url.searchParams.append(\"search\", search);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n    if (showNotCompleted === true) url.searchParams.append('finished', false);\n    if (showNotCompleted === false) url.searchParams.append('finished', true);\n    if (userId) url.searchParams.append('users', userId);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTask = async (id) => {\n    const endpoint = `/tasks/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewTask = async (data) => {\n    const endpoint = '/tasks/new/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateTask = async (id, data) => {\n    const endpoint = `/tasks/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getUserList = async () => {\n    const endpoint = `/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getMobileUserList = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"circleDesignStyle\":\"create-task_circleDesignStyle__vtKho\",\"out\":\"create-task_out__LG-iY\",\"taskTitleInput\":\"create-task_taskTitleInput__s+lNu\",\"formLabel\":\"create-task_formLabel__04J0h\",\"taskDescriptionInput\":\"create-task_taskDescriptionInput__RZWSI\",\"projectDropdown\":\"create-task_projectDropdown__qXb5+\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { Calendar2Event } from \"react-bootstrap-icons\";\nimport DateRangePicker from '../../../../Work/Pages/tasks/old-development/DateRangePicker';\n\nconst formatDateRange = (startDate, endDate) => {\n    const options = { month: 'short', day: 'numeric' };\n    const start = new Date(startDate).toLocaleDateString('en-US', options);\n    const end = new Date(endDate).toLocaleDateString('en-US', options);\n    return `${start} - ${end}`;\n};\n\nconst DateRangeComponent = ({ startDate, endDate }) => (\n    <div className='dateSelectdTaskBar'>\n        {formatDateRange(startDate, endDate)}\n    </div>\n);\n\nconst SelectDate = ({ setDateRange, dateRange }) => {\n    console.log('dateRange: ', dateRange);\n    const [isPickerVisible, setIsPickerVisible] = useState(false);\n    const selectDateRef = useRef(null);\n\n    const togglePicker = () => setIsPickerVisible(prev => !prev);\n\n    const handleDataApply = (data) => {\n        setDateRange(data);\n        setIsPickerVisible(false);\n    };\n\n    const handleClickOutside = (event) => {\n        if (selectDateRef.current && !selectDateRef.current.contains(event.target)) {\n            setIsPickerVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        if (isPickerVisible) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isPickerVisible]);\n\n    return (\n        <div className='select-date' style={{ position: 'relative' }} ref={selectDateRef}>\n            <div onClick={togglePicker} style={{ cursor: 'pointer' }}>\n                {dateRange?.startDate && dateRange?.endDate ? (\n                    <DateRangeComponent startDate={dateRange.startDate} endDate={dateRange.endDate} />\n                ) : (\n                    <div style={{ border: '1px dashed #98A2B3', width: '24px', height: '24px', borderRadius: '50%'}} className={`iconStyleCircle d-flex justify-content-center align-items-center iconStyleCircleRight ${isPickerVisible ? 'active' : ''}`}>\n                        <Calendar2Event color={isPickerVisible ? \"#1AB2FF\" : \"#475467\"} size={14} />\n                    </div>\n                )}\n            </div>\n            {isPickerVisible && (\n                <div className='select-date-range' style={{ position: 'absolute', top: '-100px', background: '#fff', zIndex: 1000 }}>\n                    <DateRangePicker onDataApply={handleDataApply} dateRange={dateRange} onClose={() => setIsPickerVisible(false)} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SelectDate;\n","import { useEffect, useRef, useState } from 'react';\nimport { Person, PlusCircle, X } from 'react-bootstrap-icons';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Dropdown } from 'primereact/dropdown';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Sidebar } from 'primereact/sidebar';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport styles from './create-task.module.scss';\nimport { getProjectsList } from '../../../../../APIs/expenses-api';\nimport { createNewTask, getMobileUserList, getUserList, updateTask } from '../../../../../APIs/task-api';\nimport { fetchTasksDelete } from '../../../../../APIs/TasksApi';\nimport { useAuth } from '../../../../../app/providers/auth-provider';\nimport { FallbackImage } from '../../../../../shared/ui/image-with-fallback/image-avatar';\nimport SelectDate from '../../../../Business/Pages/management/task/select-date';\n\nexport const dateFormat = (dateInMiliSec) => {\n    if (!dateInMiliSec) return null;\n\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    const date = new Date(1000 * +dateInMiliSec);\n    return date;\n};\n\nconst CreateTask = ({ show, setShow, refetch, taskId, setTaskId, defaultValue, projectId }) => {\n    const dropdownRef = useRef(null);\n    const textareaRef = useRef(null);\n    const { session } = useAuth();\n    const [submitted, setSubmitted] = useState(false);\n\n    const [taskTitle, setTaskTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [project, setProject] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [date, setDate] = useState(null);\n    const [errors, setErrors] = useState({\n        taskTitle: false,\n        description: false,\n        project: false,\n        user: false,\n        date: false,\n    });\n\n    useEffect(() => {\n        if (taskId && defaultValue) {\n            setTaskTitle(defaultValue?.title);\n            setDescription(defaultValue?.description);\n            setProject(defaultValue?.project?.id);\n            setUser(defaultValue?.user?.id);\n            setDate({ startDate: dateFormat(defaultValue?.from_date), endDate: dateFormat(defaultValue?.to_date) });\n        }\n    }, [taskId, defaultValue]);\n\n    const reset = () => {\n        setTaskTitle(\"\");\n        setDescription(\"\");\n        setProject(\"\");\n        setUser(null);\n        setDate(null);\n        setSubmitted(false);\n        setErrors({\n            taskTitle: false,\n            description: false,\n            project: false,\n            user: false,\n            date: false\n        });\n    };\n    const projectsList = useQuery({ queryKey: ['getProjectsList'], queryFn: getProjectsList });\n    const usersList = useQuery({ queryKey: ['getUserList'], queryFn: getUserList });\n    const mobileUsersList = useQuery({ queryKey: ['getMobileUserList'], queryFn: getMobileUserList });\n\n    useEffect(() => {\n        if (!show) reset();\n    }, [show]);\n\n    const mutation = useMutation({\n        mutationFn: (data) => taskId ? updateTask(taskId, data) : createNewTask(data),\n        onSuccess: () => {\n            refetch();\n            setShow(false);\n            reset();\n            if (taskId) setTaskId(null);\n            toast.success(`Task ${taskId ? \"updated\" : \"created\"} successfully`);\n        },\n        onError: (error) => {\n            console.error(`Error ${taskId ? \"updating\" : \"creating\"} task:`, error);\n            toast.error(`Failed to ${taskId ? \"update\" : \"create\"} client. Please try again.`);\n        }\n    });\n\n    useEffect(() => {\n        if (submitted) {\n            const newErrors = {\n                taskTitle: !taskTitle,\n                description: !description,\n                project: !project,\n                user: !user,\n                date: !date\n            };\n            setErrors(newErrors);\n        }\n    }, [taskTitle, description, project, user, date, submitted]);\n\n    const handleSubmit = () => {\n        setSubmitted(true);\n        const newErrors = {\n            taskTitle: !taskTitle,\n            description: !description,\n            project: !project,\n            user: !user,\n            date: !date\n        };\n        setErrors(newErrors);\n\n        if (!newErrors.taskTitle && !newErrors.description && !newErrors.user && !newErrors.date && !newErrors.project) {\n            mutation.mutate({\n                title: taskTitle,\n                description: description,\n                project: project,\n                user: user,\n                from_date: date.startDate,\n                to_date: date.endDate,\n            });\n        }\n    };\n\n    const deleteMutation = useMutation({\n        mutationFn: (data) => fetchTasksDelete(taskId),\n        onSuccess: () => {\n            console.log('Delete success');\n            setShow(false);\n            refetch();\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n        }\n    });\n\n    const handleDelete = () => {\n        deleteMutation.mutate();\n    };\n\n    const handleClose = () => {\n        setShow(false);\n        reset();\n    };\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (textareaRef.current) {\n                textareaRef.current.style.height = \"auto\";\n                textareaRef.current.style.height = textareaRef.current.scrollHeight + \"px\";\n            }\n        }, 200);\n    }, [description, taskId]);\n\n    useEffect(() => {\n        if (projectId) {\n            setProject(+projectId);\n        }\n    }, [projectId]);\n\n    return (\n        <Sidebar visible={show} position=\"right\" onHide={() => { setShow(false); }} modal={false} dismissable={false} style={{ width: '591px', height: '97vh', borderRadius: '10px', marginRight: '10px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '24px' }}>\n                        <div className=\"d-flex align-items-center gap-2\">\n                            <div className={styles.circleDesignStyle}>\n                                <div className={styles.out}>\n                                    <PlusCircle size={24} color=\"#17B26A\" />\n                                </div>\n                            </div>\n                            <span style={{ color: '344054', fontSize: '20px', fontWeight: 600 }}>{taskId ? \"Update\" : \"Create New\"} Task</span>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n                    <div className='modal-body' style={{ padding: '24px 24px', height: 'calc(97vh - 98px - 80px)', overflow: 'auto' }}>\n                        <Form.Control\n                            type=\"text\"\n                            name='taskTitle'\n                            id='taskTitle'\n                            placeholder=\"Enter task title\"\n                            value={taskTitle}\n                            onChange={(e) => setTaskTitle(e.target.value)}\n                            className={styles.taskTitleInput}\n                        />\n                        {errors.taskTitle && <Form.Text className=\"error-message\">Task title is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4} className='d-flex flex-column justify-content-center pt-2'>\n                                <Form.Label className={styles.formLabel}>Assignee</Form.Label>\n                            </Col>\n                            <Col sm={8} className='d-flex flex-column justify-content-center'>\n                                {!user && <div className='d-flex align-items-center justify-content-center' onClick={() => dropdownRef.current?.show()} style={{ border: '1px dashed #98A2B3', width: '24px', height: '24px', borderRadius: '50%' }}><Person\n                                    color={dropdownRef.current?.panel?.element?.offsetParent ? \"#1AB2FF\" : \"#475467\"}\n                                    size={18}\n                                    className='cursor-pointer' />\n                                </div>}\n                                <Dropdown\n                                    ref={dropdownRef}\n                                    options={[\n                                        {\n                                            label: 'Desktop User',\n                                            items: usersList?.data?.users?.filter((user) => user?.is_active)?.map((user) => ({\n                                                value: user?.id,\n                                                label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                                photo: user?.photo || \"\",\n                                                has_photo: user?.has_photo\n                                            })) || []\n                                        },\n                                        ...(session?.has_work_subscription\n                                            ? [\n                                                {\n                                                    label: 'Mobile User',\n                                                    items:\n                                                        mobileUsersList?.data?.users\n                                                            ?.filter((user) => user?.status !== 'disconnected')\n                                                            ?.map((user) => ({\n                                                                value: user?.id,\n                                                                label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                                                photo: user?.photo || \"\",\n                                                                has_photo: user?.has_photo,\n                                                            })) || [],\n                                                },\n                                            ]\n                                            : []),\n                                    ]}\n                                    onChange={(e) => {\n                                        setUser(e.value);\n                                    }}\n                                    valueTemplate={(option) => {\n                                        if (!option) return null;\n\n                                        return <div className='d-flex gap-2 align-items-center' style={{ position: 'relative', left: '-10px' }}>\n                                            <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                            </div>\n                                            {option?.label}\n                                        </div>;\n                                    }}\n                                    itemTemplate={(option) => {\n                                        return (\n                                            <div className='d-flex gap-2 align-items-center'>\n                                                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                    <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                                </div>\n                                                {option?.label}\n                                            </div>\n                                        );\n                                    }}\n                                    className='outline-none border-0 p-0'\n                                    style={{\n                                        width: !user ? '0px' : 'fit-content',\n                                        height: !user ? '0px' : '46px',\n                                        zIndex: !user ? '0' : '1',\n                                        position: 'relative',\n                                        left: !user ? '-60px' : '-4px',\n                                        top: !user ? '-15px' : '0px',\n                                    }}\n                                    value={user}\n                                    dropdownIcon={<></>}\n                                    collapseIcon={<></>}\n                                    placeholder=\"Select project\"\n                                    filter\n                                    filterInputAutoFocus={true}\n                                    optionGroupLabel=\"label\"\n                                    optionGroupChildren=\"items\"\n                                    scrollHeight=\"400px\"\n                                />\n                            </Col>\n                        </Row>\n                        {errors.user && <Form.Text className=\"error-message\">User is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4} className='d-flex flex-column justify-content-center'>\n                                <Form.Label className={styles.formLabel}>Due Date</Form.Label>\n                            </Col>\n                            <Col sm={8} className='d-flex flex-column justify-content-center'>\n                                <SelectDate dateRange={date} setDateRange={setDate} />\n                            </Col>\n                        </Row>\n                        {errors.date && <Form.Text className=\"error-message\">Date is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4} className='d-flex flex-column justify-content-center pt-3'>\n                                <Form.Label className={styles.formLabel}>Link to Project</Form.Label>\n                            </Col>\n                            <Col sm={8} className='d-flex flex-column justify-content-center'>\n                                <Dropdown\n                                    options={projectsList?.data?.map((project) => ({\n                                        value: project.id,\n                                        label: `${project.number}: ${project.reference}`\n                                    })) || []}\n                                    onChange={(e) => {\n                                        setProject(e.value);\n                                    }}\n                                    className={clsx('outline-none', styles.projectDropdown)}\n                                    style={{ height: '46px', maxWidth: '100%', width: 'fit-content' }}\n                                    value={project}\n                                    loading={projectsList?.isFetching}\n                                    placeholder=\"Select project\"\n                                    filter\n                                    filterInputAutoFocus={true}\n                                />\n                            </Col>\n                        </Row>\n                        {errors.project && <Form.Text className=\"error-message\">Project task is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4}>\n                                <Form.Label className={styles.formLabel}>Description</Form.Label>\n                            </Col>\n                            <Col sm={12}>\n                                <Form.Control\n                                    name='taskDescription'\n                                    id='taskDescription'\n                                    as=\"textarea\"\n                                    placeholder='Enter a description...'\n                                    value={description}\n                                    rows={6}\n                                    ref={textareaRef}\n                                    onChange={(e) => {\n                                        setDescription(e.target.value);\n                                    }}\n                                    className={styles.taskDescriptionInput}\n                                    onInput={(e) => {\n                                        e.target.style.height = \"auto\"; // reset\n                                        e.target.style.height = e.target.scrollHeight + \"px\"; // grow\n                                    }}\n                                    onFocus={() => {\n                                        if (textareaRef.current) {\n                                            textareaRef.current.style.height = \"auto\";\n                                            textareaRef.current.style.height = textareaRef.current.scrollHeight + \"px\";\n                                        }\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        {errors.description && <Form.Text className=\"error-message\">Description is required</Form.Text>}\n\n                    </div>\n                    <div className='modal-footer d-flex align-items-center justify-content-between gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '80px' }}>\n                        <div>\n                            {taskId && (\n                                <Button className='danger-text-button gap-2' onClick={handleDelete}>\n                                    Delete\n                                    {deleteMutation.isPending && <ProgressSpinner style={{ width: '18px', height: '18px' }} />}\n                                </Button>\n                            )}\n                        </div>\n                        <div className='d-flex align-items-center gap-3'>\n                            <Button type='button' onClick={handleClose} className='outline-button'>Cancel</Button>\n                            <Button type='button' onClick={handleSubmit} className='solid-button' style={{ minWidth: '70px' }} disabled={mutation.isPending}>{taskId ? \"Update Task\" : \"Create Task\"} {mutation.isPending && <ProgressSpinner style={{ width: '18px', height: '18px' }} />}</Button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateTask;\n\n{/* <Modal show={show} centered onHide={handleClose} className='task-form'>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <img src={taskId ? taskEditIcon : newTaskImg} alt='task-details' style={{ width: '48px', height: '48px' }} />\n                    <span className='modal-task-title'>{taskId ? \"Edit\" : \"New\"} Task</span>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ background: '#f9fafb' }}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Task Title</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Enter task title\"\n                            value={taskTitle}\n                            onChange={(e) => setTaskTitle(e.target.value)}\n                        />\n                        <InputGroup.Text>\n                            <QuestionCircle />\n                        </InputGroup.Text>\n                    </InputGroup>\n                    {errors.taskTitle && <Form.Text className=\"error-message\">Task title is required</Form.Text>}\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder='Enter a description...'\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                    />\n                    {errors.description && <Form.Text className=\"error-message\">Description is required</Form.Text>}\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Project Task</Form.Label>\n                    <Dropdown\n                        options={projectsList?.data?.map((project) => ({\n                            value: project.id,\n                            label: `${project.number}: ${project.reference}`\n                        })) || []}\n                        onChange={(e) => {\n                            setProject(e.value);\n                            console.log('e.value: ', e.value);\n                        }}\n                        className='w-100 outline-none'\n                        style={{ height: '46px' }}\n                        value={project}\n                        loading={projectsList?.isFetching}\n                        placeholder=\"Select project\"\n                        filter\n                        filterInputAutoFocus={true}\n                    />\n                    {errors.project && <Form.Text className=\"error-message\">Project task is required</Form.Text>}\n                </Form.Group>\n            </Modal.Body>\n            <div className='d-flex align-items-center border-top px-3 py-2 gap-2'>\n                <div className='d-flex align-items-center gap-4' style={{ minWidth: '200px' }}>\n                    {!user && <Person\n                        color={dropdownRef.current?.panel?.element?.offsetParent ? \"#1AB2FF\" : \"#475467\"}\n                        size={22} style={{ position: 'relative', left: '10px', zIndex: 1 }}\n                        onClick={() => dropdownRef.current?.show()} className='me-3 cursor-pointer' />\n                    }\n                    <Dropdown\n                        ref={dropdownRef}\n                        options={[\n                            {\n                                label: 'Desktop User',\n                                items: usersList?.data?.users?.filter((user) => user?.is_active)?.map((user) => ({\n                                    value: user?.id,\n                                    label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                    photo: user?.photo || \"\",\n                                    has_photo: user?.has_photo\n                                })) || []\n                            },\n                            ...(session?.has_work_subscription\n                                ? [\n                                    {\n                                        label: 'Mobile User',\n                                        items:\n                                            mobileUsersList?.data?.users\n                                                ?.filter((user) => user?.status !== 'disconnected')\n                                                ?.map((user) => ({\n                                                    value: user?.id,\n                                                    label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                                    photo: user?.photo || \"\",\n                                                    has_photo: user?.has_photo,\n                                                })) || [],\n                                    },\n                                ]\n                                : []),\n                        ]}\n                        onChange={(e) => {\n                            setUser(e.value);\n                        }}\n                        valueTemplate={(option) => {\n                            return <div className='d-flex gap-2 align-items-center'>\n                                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '0px solid #dedede' }}>\n                                    <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                </div>\n                                {option?.label}\n                            </div>;\n                        }}\n                        itemTemplate={(option) => {\n                            return (\n                                <div className='d-flex gap-2 align-items-center'>\n                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                        <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                    </div>\n                                    {option?.label}\n                                </div>\n                            );\n                        }}\n                        className='outline-none border-0 p-0'\n                        style={{\n                            width: !user ? '0px' : 'fit-content',\n                            height: !user ? '0px' : '46px',\n                            zIndex: !user ? '0' : '1',\n                            position: 'relative',\n                            left: !user ? '-60px' : '0px',\n                            top: !user ? '-15px' : '0px',\n                        }}\n                        value={user}\n                        dropdownIcon={<></>}\n                        collapseIcon={<></>}\n                        placeholder=\"Select project\"\n                        filter\n                        filterInputAutoFocus={true}\n                        optionGroupLabel=\"label\"\n                        optionGroupChildren=\"items\"\n                    />\n                </div>\n                <SelectDate dateRange={date} setDateRange={setDate} />\n            </div>\n            {\n                (errors.user || errors.date) && <div className='d-flex align-items-center gap-2' style={{ gap: '16px', padding: \"5px 15px\" }}>\n                    <div style={{ minWidth: '200px' }}>\n                        {errors.user && <Form.Text className=\"error-message\">User is required</Form.Text>}\n                    </div>\n                    {errors.date && <Form.Text className=\"error-message\">Date is required</Form.Text>}\n                </div>\n            }\n            <Modal.Footer className='d-flex justify-content-between'>\n                <Button type='button' className='delete-button' onClick={handleDelete}>{deleteMutation.isPending ? 'Loading...' : 'Delete Task'}</Button>\n                <Button type='button' className='save-button' onClick={handleSubmit}>{mutation.isPending ? 'Loading...' : `${taskId ? \"Update\" : \"Create\"} Task`}</Button>\n            </Modal.Footer>\n        </Modal> */}"],"names":["_ref","onDataApply","dateRange","onClose","selectedDates","setSelectedDates","useState","calendarRef","useRef","startDate","setStartDate","endDate","setEndDate","isApplying","setIsApplying","formattedCurrentDate","setFormattedCurrentDate","useEffect","currentDate","Date","formattedDate","getFullYear","getMonth","toString","padStart","getDate","length","handleTodayClick","options","year","month","day","newContent","toLocaleDateString","monthsElement","document","querySelector","existingCustomDiv","innerHTML","customDiv","createElement","className","parentNode","insertBefore","nextSibling","todaySpan","addEventListener","removeEventListener","_jsxs","children","_jsx","Flatpickr","dateFormat","mode","locale","firstDayOfWeek","inline","value","onChange","ref","onClick","handleCancel","textContent","handleApply","taggingElement","toISOString","split","API_BASE_URL","process","fetchTasksRead","async","myHeaders","Headers","accessToken","localStorage","getItem","append","requestOptions","method","headers","url","URL","taskId","response","fetch","json","error","console","fetchTasksDelete","redirect","ok","message","Error","TaskCompleteJob","finished","body","JSON","stringify","getListOfTasks","page","limit","search","arguments","undefined","order","isShowDeleted","showNotCompleted","userId","offset","searchParams","fetchAPI","getTask","id","createNewTask","data","updateTask","getUserList","getMobileUserList","formatDateRange","DateRangeComponent","_ref2","setDateRange","log","isPickerVisible","setIsPickerVisible","selectDateRef","handleClickOutside","event","current","contains","target","style","position","togglePicker","prev","cursor","border","width","height","borderRadius","Calendar2Event","color","size","top","background","zIndex","DateRangePicker","dateInMiliSec","show","setShow","refetch","setTaskId","defaultValue","projectId","dropdownRef","textareaRef","session","useAuth","submitted","setSubmitted","taskTitle","setTaskTitle","description","setDescription","project","setProject","user","setUser","date","setDate","errors","setErrors","_defaultValue$project","_defaultValue$user","title","from_date","to_date","reset","projectsList","useQuery","queryKey","queryFn","getProjectsList","usersList","mobileUsersList","mutation","useMutation","mutationFn","onSuccess","toast","success","onError","handleSubmit","newErrors","mutate","deleteMutation","handleDelete","handleClose","setTimeout","scrollHeight","Sidebar","visible","onHide","modal","dismissable","marginRight","content","_dropdownRef$current2","_dropdownRef$current3","_dropdownRef$current4","_usersList$data","_usersList$data$users","_usersList$data$users2","_mobileUsersList$data","_mobileUsersList$data2","_mobileUsersList$data3","_projectsList$data","closeIconRef","hide","borderBottom","padding","styles","PlusCircle","fontSize","fontWeight","Button","type","e","X","overflow","Form","Control","name","placeholder","Text","Row","Col","sm","Label","_dropdownRef$current","Person","panel","element","offsetParent","Dropdown","label","items","users","filter","is_active","map","first_name","last_name","photo","has_photo","has_work_subscription","status","valueTemplate","option","left","FallbackImage","is_business","itemTemplate","dropdownIcon","_Fragment","collapseIcon","filterInputAutoFocus","optionGroupLabel","optionGroupChildren","SelectDate","number","reference","clsx","maxWidth","loading","isFetching","as","rows","onInput","onFocus","borderTop","isPending","ProgressSpinner","minWidth","disabled"],"sourceRoot":""}