{"version":3,"file":"static/js/1424.64dfcfc1.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["usePrevious","value","ref","useRef","useEffect","current","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","dataProp","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","propTypes","PropTypes","onClick","variant","CloseButton","React","_ref","className","ariaLabel","props","_jsx","type","classNames","displayName","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","arguments","length","undefined","this","modals","getScrollbarWidth","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","Object","assign","add","modal","modalIdx","indexOf","push","state","splice","isTopModal","_excluded","manager","useModalManager","provided","useWindow","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","r","t","n","hasOwnProperty","_objectWithoutPropertiesLoose","ownerWindow","useWaitForDOMRef","isMounted","useMounted","prevShow","exited","setExited","useState","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","target","currentTarget","isEscKey","defaultPrevented","dialogProps","tabIndex","renderTransition","unmountOnExit","mountOnEnter","appear","in","backdropElement","_Fragment","ReactDOM","_jsxs","Manager","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","addClass","marginProp","el","removeClass","sharedManager","ModalBody","bsPrefix","as","Component","useBootstrapPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}