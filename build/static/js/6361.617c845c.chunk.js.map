{"version":3,"file":"static/js/6361.617c845c.chunk.js","mappings":"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","sources":["../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","arguments","length","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","_ref","ratio","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","d","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","_ref7","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref8","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","s","n","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","unpacked","tkeys","ok","nk","parseInt","unpack","RGB_RE","modHSL","tmp","clone","fromObject","functionParse","rgbParse","Color","hexParse","_rgb","_valid","rgbString","hslString","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","deg","toString","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","part","_splitKey","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","rounded","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","setRenderOpts","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","toFontString","inputs","info","cacheable","minmax","keepZero","parentContext","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","getPropertyValue","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer"],"sourceRoot":""}