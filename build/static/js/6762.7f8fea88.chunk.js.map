{"version":3,"file":"static/js/6762.7f8fea88.chunk.js","mappings":"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","sources":["entities/setting/accounting/department-turnover-plan/api/department-turnover-plan.api.jsx","shared/lib/format-aud.js","entities/setting/accounting/department-turnover-plan/models/update-accounting-target.mutation.jsx","webpack://memateapp/./src/components/layout/settings/accounting/accounting.module.scss?0d3c","entities/setting/accounting/department-turnover-plan/models/get-accounting-list.query.jsx","../node_modules/react-bootstrap-icons/dist/icons/pencil-square.js","components/layout/settings/accounting/DepartmentTurnoverPlan.js"],"sourcesContent":["import { fetchInstance } from \"../../../../../shared/lib/fetch-api-instance\";\n\nexport const getAccountingList = async () => {\n    const path = `/settings/accounting/`;\n    const options = {\n        method: 'GET',\n    };\n    return fetchInstance(path, options);\n};\n\nexport const updateAccountingTarget = async (id, data) => {\n    const path = `/settings/accounting/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    return fetchInstance(path, options);\n};\n\nexport const getIndustryServiceList = async () => {\n    const path = `/suppliers/industries/`;\n    const options = {\n        method: 'GET',\n    };\n    return fetchInstance(path, options);\n};\n\nexport const updateIndustryServiceCode = async (id, data) => {\n    const path = `/suppliers/industries/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    return fetchInstance(path, options);\n};\n\nexport const getXeroCodesList = async () => {\n    const path = `/references/xero-codes/`;\n    const options = {\n        method: 'GET',\n    };\n    return fetchInstance(path, options);\n};","export function formatAUD(amount, shorten = false) {\n    const num = parseFloat(amount);\n\n    if (isNaN(num)) {\n        return \"0.00\";\n    }\n\n    if (shorten && Math.abs(num) >= 1000.00) {\n        return new Intl.NumberFormat('en-AU', {\n            notation: \"compact\",\n            compactDisplay: \"short\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(num);\n    }\n\n    return new Intl.NumberFormat('en-AU', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(num);\n}","import { useMutation } from \"@tanstack/react-query\";\nimport { toast } from \"sonner\";\nimport { updateAccountingTarget, updateIndustryServiceCode } from \"../api/department-turnover-plan.api\";\n\nexport const useAccountingTargetUpdateMutations = () => {\n    return useMutation({\n        mutationFn: ({ id, data }) => updateAccountingTarget(id, data),\n        onSuccess: () => {\n            toast.success(`Accounting target updated successfully`);\n        },\n        onError: (error) => {\n            console.error('Error updating accounting target:', error);\n            toast.error('Failed to update accounting target. Please try again.');\n        }\n    });\n};\n\nexport const useIndustryServiceUpdateMutations = () => {\n    return useMutation({\n        mutationFn: ({ id, data }) => updateIndustryServiceCode(id, data),\n        onSuccess: () => {\n            toast.success(`Industry service code updated successfully`);\n        },\n        onError: (error) => {\n            console.error('Error updating industry service code:', error);\n            toast.error('Failed to update industry service code. Please try again.');\n        }\n    });\n};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"accounting_modal__NAThj\",\"modalHeader\":\"accounting_modalHeader__hyBfM\",\"headerTitle\":\"accounting_headerTitle__9luE3\",\"circledesignstyle\":\"accounting_circledesignstyle__WBgzI\",\"out\":\"accounting_out__kcA0q\",\"inputBox\":\"accounting_inputBox__9qwkR\",\"tablePrimeBar\":\"accounting_tablePrimeBar__MkG2R\"};","import { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { getAccountingList, getIndustryServiceList, getXeroCodesList } from \"../api/department-turnover-plan.api\";\n\nexport const useAccountingGetQuery = () => {\n    return useQuery({\n        queryKey: ['accounting-list'],\n        queryFn: getAccountingList\n    });\n};\n\nexport const useIndustryServiceGetQuery = () => {\n    return useQuery({\n        queryKey: ['industry-service-list'],\n        queryFn: getIndustryServiceList\n    });\n};\n\nexport const useXeroCodesGetQuery = () => {\n    return useQuery({\n        queryKey: ['xero-codes-list'],\n        queryFn: getXeroCodesList\n    });\n};\n","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PencilSquare = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '1em' : _ref$size,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? null : _ref$title,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-pencil-square', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z\"\n  }));\n});\nPencilSquare.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nexport default PencilSquare;","import React, { useState } from 'react';\nimport { PencilSquare } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as yup from 'yup';\nimport style from './accounting.module.scss';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { useAccountingGetQuery } from '../../../../entities/setting/accounting/department-turnover-plan/models/get-accounting-list.query';\nimport { useAccountingTargetUpdateMutations } from '../../../../entities/setting/accounting/department-turnover-plan/models/update-accounting-target.mutation';\nimport { formatAUD } from '../../../../shared/lib/format-aud';\n\nconst schema = yup.object().shape({\n    target: yup.number().typeError('Target must be a number').required('Target is required').positive('Target must be positive'),\n});\n\nconst DepartmentTurnoverPlan = () => {\n    const { trialHeight } = useTrialHeight();\n    const [selectedData, setSelectedData] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const accountingListQuery = useAccountingGetQuery();\n\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n\n    const onEdit = (rowData) => {\n        setSelectedData(rowData);\n        setValue('target', rowData.target);\n        setVisible(true);\n    };\n\n    const onCancel = () => {\n        setVisible(false);\n        setValue('target', '');\n        setSelectedData(null);\n    };\n\n    const { mutate: updateTarget, isPending } = useAccountingTargetUpdateMutations();\n\n    const onSubmit = (data) => {\n        updateTarget({ id: selectedData?.id, data: { target: data.target } }, {\n            onSuccess: () => {\n                onCancel();\n                accountingListQuery.refetch();\n            }\n        });\n    };\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <div className=\"d-flex align-items-center gap-2\">\n                <div className={style.circledesignstyle}>\n                    <div className={style.out}>\n                        <PencilSquare size={24} color=\"#17B26A\" className='mb-3' />\n                    </div>\n                </div>\n                <span className={`white-space-nowrap ${style.headerTitle}`}>\n                    Edit Target\n                </span>\n            </div>\n        </div>\n    );\n\n    const categoryBodyTemplate = (rowData) => {\n        return <div className={\"d-flex align-items-center justify-content-between show-on-hover\"}>\n            <span>{rowData.name}</span>\n            <Button label=\"Edit\" onClick={() => onEdit(rowData)} className='primary-text-button ms-3 show-on-hover-element not-show-checked' text />\n        </div>;\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Department Turnover Plan</title>\n            </Helmet>\n            <div className='headSticky'>\n                <h1>Accounting</h1>\n                <div className='contentMenuTab'>\n                    <ul>\n                        <li className='menuActive'><Link to=\"/settings/accounting/department-turnover-plan\">Department Turnover Plan</Link></li>\n                        <li><Link to=\"/settings/accounting/industry-service\">Industry Service</Link></li>\n                        <li><Link to=\"/settings/accounting/expenses\">Expenses</Link></li>\n                    </ul>\n                </div>\n            </div>\n            <div className={`content_wrap_main w-100 ${style.tablePrimeBar}`} style={{ paddingBottom: `${trialHeight}px` }}>\n                <div className='content_wrapper w-100'>\n                    <div className=\"listwrapper\">\n                        <div className=\"topHeadStyle pb-4\">\n                            <h2>Department Turnover Plan</h2>\n                        </div>\n\n                        <DataTable className='w-100' value={accountingListQuery.data || []} tableStyle={{ minWidth: '100%', border: '1px solid #f2f2f2' }}>\n                            <Column field=\"name\" header=\"Category Name\" body={categoryBodyTemplate} style={{ width: '100%' }}></Column>\n                            <Column field=\"target\" header=\"Target\" body={(rowData) => `$${formatAUD(rowData.target)}`} style={{ width: '56px' }} className='text-end'></Column>\n                        </DataTable>\n                        <Dialog visible={visible} modal={true} header={headerElement} className={`${style.modal} custom-modal`} onHide={() => setVisible(false)}>\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"d-flex flex-column mb-4\">\n                                    <h6 className='mb-3' style={{ fontSize: '16px', color: '#1D2939', fontWeight: 600 }}>{selectedData?.name}</h6>\n                                    <p className=\"font-14 mb-1\" style={{ color: '#475467', fontWeight: 500 }}>Target</p>\n                                    <InputText {...register('target')} className={style.inputBox} />\n                                    {errors.target && <small className=\"p-error\">{errors.target.message}</small>}\n                                </div>\n                                <hr />\n                                <div className='d-flex justify-content-end gap-2 mt-3'>\n                                    <Button className='outline-button' onClick={onCancel}>Cancel</Button>\n                                    <Button className='solid-button' style={{ minWidth: '132px' }} type=\"submit\" loading={isPending}>Save Details</Button>\n                                </div>\n                            </form>\n                        </Dialog>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default DepartmentTurnoverPlan;"],"names":["getAccountingList","async","fetchInstance","method","updateAccountingTarget","id","data","path","options","body","getIndustryServiceList","updateIndustryServiceCode","getXeroCodesList","formatAUD","amount","shorten","arguments","length","undefined","num","parseFloat","isNaN","Math","abs","Intl","NumberFormat","notation","compactDisplay","minimumFractionDigits","maximumFractionDigits","format","useAccountingTargetUpdateMutations","useMutation","mutationFn","_ref","onSuccess","toast","success","onError","error","console","useIndustryServiceUpdateMutations","_ref2","useAccountingGetQuery","useQuery","queryKey","queryFn","useIndustryServiceGetQuery","useXeroCodesGetQuery","_excluded","_extends","Object","assign","bind","n","e","t","r","hasOwnProperty","call","apply","PencilSquare","forwardRef","ref","_ref$color","color","_ref$size","size","_ref$title","title","_ref$className","className","rest","o","i","includes","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","React","xmlns","viewBox","width","height","fill","filter","Boolean","join","d","fillRule","propTypes","PropTypes","schema","yup","shape","target","typeError","required","positive","DepartmentTurnoverPlan","trialHeight","useTrialHeight","selectedData","setSelectedData","useState","visible","setVisible","accountingListQuery","register","handleSubmit","setValue","formState","errors","useForm","resolver","yupResolver","onCancel","mutate","updateTarget","isPending","headerElement","_jsx","style","modalHeader","children","_jsxs","circledesignstyle","out","headerTitle","_Fragment","Helmet","Link","to","tablePrimeBar","paddingBottom","DataTable","value","tableStyle","minWidth","border","Column","field","header","rowData","name","Button","label","onClick","onEdit","text","Dialog","modal","onHide","onSubmit","refetch","fontSize","fontWeight","InputText","inputBox","message","type","loading"],"sourceRoot":""}