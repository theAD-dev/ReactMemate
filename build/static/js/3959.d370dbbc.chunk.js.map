{"version":3,"file":"static/js/3959.d370dbbc.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/ui/send-email/send-email.module.scss?c792","ui/send-email/send-email-form.jsx","APIs/base-api.js","APIs/ClientsApi.js","APIs/email-template.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"send-email_headerTitle__cXbQd\",\"customLabel\":\"send-email_customLabel__ulebR\",\"templateInfo\":\"send-email_templateInfo__ewMNA\",\"bag\":\"send-email_bag__+1Isj\",\"lable\":\"send-email_lable__pfv8S\",\"dropdownSelect\":\"send-email_dropdownSelect__yuxmj\",\"autoCompleteBox\":\"send-email_autoCompleteBox__zqO6y\",\"AutoComplete\":\"send-email_AutoComplete__peyFk\",\"bcc\":\"send-email_bcc__vHuNY\",\"box\":\"send-email_box__KRxo7\",\"active\":\"send-email_active__sUnBO\",\"inputBox\":\"send-email_inputBox__cV-UR\"};","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { InfoCircle } from 'react-bootstrap-icons';\nimport { useQuery } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Editor } from \"primereact/editor\";\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { OverlayPanel } from 'primereact/overlaypanel';\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport style from \"./send-email.module.scss\";\nimport { getEmail, getEmailTemplates, getOutgoingEmail, getSignatureTemplates } from '../../APIs/email-template';\n\nconst headerElement = (\n    <div className={`${style.modalHeader}`}>\n        <div className=\"w-100 d-flex align-items-center gap-2\">\n            <span className={`white-space-nowrap mt-2 mb-2 ${style.headerTitle}`}>\n                Send email\n            </span>\n        </div>\n    </div>\n);\n\nconst renderHeader = () => (\n    <span className=\"ql-formats\">\n        <button className=\"ql-bold\" aria-label=\"Bold\"></button>\n        <button className=\"ql-italic\" aria-label=\"Italic\"></button>\n        <button className=\"ql-underline\" aria-label=\"Underline\"></button>\n        <button className=\"ql-strike\" aria-label=\"Strikethrough\"></button>\n        <button className=\"ql-blockquote\" aria-label=\"Blockquote\"></button>\n        <button\n            className=\"ql-list\"\n            value=\"ordered\"\n            aria-label=\"Ordered List\"\n        ></button>\n        <button\n            className=\"ql-list\"\n            value=\"bullet\"\n            aria-label=\"Bullet List\"\n        ></button>\n        <button className=\"ql-align\" value=\"\" aria-label=\"Align Left\"></button>\n        <button\n            className=\"ql-align\"\n            value=\"center\"\n            aria-label=\"Align Center\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"right\"\n            aria-label=\"Align Right\"\n        ></button>\n        <button\n            className=\"ql-align\"\n            value=\"justify\"\n            aria-label=\"Justify\"\n        ></button>\n        <button className=\"ql-link\" aria-label=\"Insert Link\"></button>\n        <button className=\"ql-image\" aria-label=\"Insert Image\"></button>\n        <button className=\"ql-code-block\" aria-label=\"Code Block\"></button>\n    </span>\n);\nconst header = renderHeader();\n\nconst SendEmailForm = ({ show, setShow, contactPersons, setPayload, save, defaultTemplate = 'Quote' }) => {\n    const op = useRef(null);\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState([]);\n    const [cc, setCC] = useState([]);\n    const [bcc, setBCC] = useState([]);\n    const [subject, setSubject] = useState(null);\n    const [text, setText] = useState(null);\n    const [signature, setSignature] = useState(null);\n    const [errors, setErrors] = useState({});\n    const [filteredEmails, setFilteredEmails] = useState([]);\n    const autoCompleteRef = useRef(null);\n    const autoCompleteRef2 = useRef(null);\n    const autoCompleteRef3 = useRef(null);\n    const [showCC, setShowCC] = useState(false);\n    const [showBCC, setShowBCC] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const handleClose = () => setShow(false);\n\n    // Email validation function\n    const isValidEmail = useCallback((email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email.trim());\n    }, []);\n\n    // Validate array of emails\n    const validateEmailArray = useCallback((emailArray) => {\n        if (!emailArray || emailArray.length === 0) return true; // Empty array is valid\n        return emailArray.every(email => isValidEmail(email));\n    }, [isValidEmail]);\n\n    // Get invalid emails from array\n    const getInvalidEmails = useCallback((emailArray) => {\n        if (!emailArray || emailArray.length === 0) return [];\n        return emailArray.filter(email => !isValidEmail(email));\n    }, [isValidEmail]);\n\n    // Clean email array by removing invalid emails\n    const cleanEmailArray = useCallback((emailArray) => {\n        if (!emailArray || emailArray.length === 0) return [];\n        return emailArray.filter(email => isValidEmail(email));\n    }, [isValidEmail]);\n\n    // Validate and clean all email fields\n    const validateAndCleanAllEmails = useCallback(() => {\n        let hasErrors = false;\n        \n        // Check TO emails\n        if (to.length > 0) {\n            const invalidToEmails = getInvalidEmails(to);\n            if (invalidToEmails.length > 0) {\n                console.log('Found invalid TO emails:', invalidToEmails);\n                setTo(cleanEmailArray(to));\n                hasErrors = true;\n            }\n        }\n        \n        // Check CC emails\n        if (cc.length > 0) {\n            const invalidCcEmails = getInvalidEmails(cc);\n            if (invalidCcEmails.length > 0) {\n                console.log('Found invalid CC emails:', invalidCcEmails);\n                setCC(cleanEmailArray(cc));\n                hasErrors = true;\n            }\n        }\n        \n        // Check BCC emails\n        if (bcc.length > 0) {\n            const invalidBccEmails = getInvalidEmails(bcc);\n            if (invalidBccEmails.length > 0) {\n                console.log('Found invalid BCC emails:', invalidBccEmails);\n                setBCC(cleanEmailArray(bcc));\n                hasErrors = true;\n            }\n        }\n        \n        return !hasErrors; // Return true if no errors found\n    }, [to, cc, bcc, getInvalidEmails, cleanEmailArray]);\n\n    const [emailTemplateId, setEmailTemplatedId] = useState(null);\n    const emailTemplateQuery = useQuery({\n        queryKey: [\"emailTemplate\"],\n        queryFn: getEmailTemplates,\n    });\n    const signatureQuery = useQuery({\n        queryKey: [\"getSignatureTemplates\"],\n        queryFn: getSignatureTemplates,\n    });\n    const outgoingEmailTemplateQuery = useQuery({\n        queryKey: [\"getOutgoingEmail\"],\n        queryFn: getOutgoingEmail,\n    });\n    const emailQuery = useQuery({\n        queryKey: [\"emailQuery\", emailTemplateId],\n        queryFn: () => getEmail(emailTemplateId),\n        enabled: !!emailTemplateId,\n        retry: 1,\n    });\n\n    useEffect(() => {\n        if (outgoingEmailTemplateQuery?.data) {\n            if (outgoingEmailTemplateQuery?.data?.outgoing_email && outgoingEmailTemplateQuery?.data?.outgoing_email_verified)\n                setFrom(outgoingEmailTemplateQuery?.data?.outgoing_email);\n            else\n                setFrom('no-reply@memate.com.au');\n        }\n\n        if (emailTemplateQuery?.data) {\n            const activeTemplateId = emailTemplateQuery?.data?.find((template) => template.type === defaultTemplate);\n            if (activeTemplateId?.id) setEmailTemplatedId(activeTemplateId?.id);\n        }\n\n    }, [emailTemplateQuery, outgoingEmailTemplateQuery, defaultTemplate]);\n\n    const onSubmit = async () => {\n        let errorCount = 0;\n        setErrors({});\n\n        // First, validate and clean all email arrays\n        const allEmailsValid = validateAndCleanAllEmails();\n        if (!allEmailsValid) {\n            console.log('Some emails were invalid and have been cleaned');\n        }\n\n        if (!from) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, from: true }));\n        }\n\n        if (to?.length === 0) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, to: true }));\n        } else if (!validateEmailArray(to)) {\n            ++errorCount;\n            const invalidEmails = getInvalidEmails(to);\n            console.log('Invalid TO emails:', invalidEmails);\n            setErrors((others) => ({ ...others, to: true, toInvalid: true, invalidToEmails: invalidEmails }));\n        }\n\n        if (cc.length > 0 && !validateEmailArray(cc)) {\n            ++errorCount;\n            const invalidEmails = getInvalidEmails(cc);\n            console.log('Invalid CC emails:', invalidEmails);\n            setErrors((others) => ({ ...others, cc: true, invalidCcEmails: invalidEmails }));\n        }\n\n        if (bcc.length > 0 && !validateEmailArray(bcc)) {\n            ++errorCount;\n            const invalidEmails = getInvalidEmails(bcc);\n            console.log('Invalid BCC emails:', invalidEmails);\n            setErrors((others) => ({ ...others, bcc: true, invalidBccEmails: invalidEmails }));\n        }\n\n        if (!subject) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, subject: true }));\n        }\n\n        if (!text) {\n            ++errorCount;\n            setErrors((others) => ({ ...others, text: true }));\n        }\n\n        if (errorCount) return;\n        setIsLoading(true);\n        await save();\n        setIsLoading(false);\n    };\n\n    const footerContent = (\n        <div className=\"d-flex justify-content-end gap-2\">\n            <Button className=\"outline-button\" onClick={() => setShow(false)}>\n                Cancel\n            </Button>\n            <Button disabled={isLoading} className=\"solid-button\" onClick={onSubmit}>\n                Send{\" \"}\n                {isLoading && (\n                    <ProgressSpinner\n                        style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                    />\n                )}\n            </Button>\n        </div>\n    );\n\n    const search = (event) => {\n        const query = event?.query?.toLowerCase() || '';\n        let emails = contactPersons.map((data) => (data.email)).filter(email => email);\n        emails = emails.filter((email) => !to.includes(email));\n        emails = emails.filter((email) => !cc.includes(email));\n        emails = emails.filter((email) => !bcc.includes(email));\n\n        emails = emails.filter((email) =>\n            email.toLowerCase().includes(query)\n        );\n        console.log('emails: ', emails);\n\n        setFilteredEmails(emails);\n    };\n\n    const onInputChange = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            // Validate emails before adding\n            const validEmails = emails.filter(email => isValidEmail(email));\n            setTo((prev) => [...new Set([...prev, ...validEmails])]);\n            // Clear error if emails are valid\n            if (validEmails.length === emails.length && validEmails.length > 0) {\n                setErrors((others) => ({ ...others, to: false, toInvalid: false }));\n            }\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange2 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            // Validate emails before adding\n            const validEmails = emails.filter(email => isValidEmail(email));\n            setCC((prev) => [...new Set([...prev, ...validEmails])]);\n            // Clear error if emails are valid\n            if (validEmails.length === emails.length) {\n                setErrors((others) => ({ ...others, cc: false }));\n            }\n            e.target.value = '';\n        }\n    };\n\n    const onInputChange3 = (e) => {\n        const currentValue = e.target.value;\n        if (currentValue.includes(',') || e.key === 'Enter') {\n            const emails = currentValue.split(/[\\s,]+/).filter((email) => email);\n            // Validate emails before adding\n            const validEmails = emails.filter(email => isValidEmail(email));\n            setBCC((prev) => [...new Set([...prev, ...validEmails])]);\n            // Clear error if emails are valid\n            if (validEmails.length === emails.length) {\n                setErrors((others) => ({ ...others, bcc: false }));\n            }\n            e.target.value = '';\n        }\n    };\n\n    const onFocus = () => {\n        search();\n        if (autoCompleteRef.current) autoCompleteRef.current.show();\n    };\n\n    const onFocus2 = () => {\n        search();\n        if (autoCompleteRef2.current) autoCompleteRef2.current.show();\n    };\n\n    const onFocus3 = () => {\n        search();\n        if (autoCompleteRef3.current) autoCompleteRef3.current.show();\n    };\n\n    useEffect(() => {\n        if (contactPersons?.length) {\n            let emails = contactPersons.map((data) => (data.email)).filter(email => email);\n            setFilteredEmails(emails);\n        }\n    }, [contactPersons]);\n\n    useEffect(() => {\n        setPayload((prev) => ({\n            ...prev,\n            subject: subject,\n            email_body: text,\n            from_email: from,\n            to: to?.toString(),\n            ...(cc.length > 0 && { cc: cc.toString() }),\n            ...(bcc.length > 0 && { bcc: bcc.toString() }),\n            ...(signature && { signature: signature })\n        }));\n    }, [subject, text, from, to, cc, bcc, signature, setPayload]);\n\n    useEffect(() => {\n        if (signatureQuery?.data) {\n            setSignature(signatureQuery?.data?.find((template) => template.id === profileData.email_signature)?.id);\n        }\n    }, [signatureQuery?.data, profileData.email_signature]);\n\n    useEffect(() => {\n        setText(emailQuery?.data?.body || \"\");\n        setSubject(emailQuery?.data?.subject);\n        setErrors((others) => ({ ...others, subject: false }));\n        setErrors((others) => ({ ...others, text: false }));\n    }, [emailQuery?.data]);\n\n    // Auto-clean invalid emails from arrays\n    useEffect(() => {\n        if (to.length > 0) {\n            const invalidToEmails = getInvalidEmails(to);\n            if (invalidToEmails.length > 0) {\n                console.log('Auto-cleaning invalid TO emails:', invalidToEmails);\n                const validEmails = cleanEmailArray(to);\n                setTo(validEmails);\n            }\n        }\n    }, [to, getInvalidEmails, cleanEmailArray]);\n\n    useEffect(() => {\n        if (cc.length > 0) {\n            const invalidCcEmails = getInvalidEmails(cc);\n            if (invalidCcEmails.length > 0) {\n                console.log('Auto-cleaning invalid CC emails:', invalidCcEmails);\n                const validEmails = cleanEmailArray(cc);\n                setCC(validEmails);\n            }\n        }\n    }, [cc, getInvalidEmails, cleanEmailArray]);\n\n    useEffect(() => {\n        if (bcc.length > 0) {\n            const invalidBccEmails = getInvalidEmails(bcc);\n            if (invalidBccEmails.length > 0) {\n                console.log('Auto-cleaning invalid BCC emails:', invalidBccEmails);\n                const validEmails = cleanEmailArray(bcc);\n                setBCC(validEmails);\n            }\n        }\n    }, [bcc, getInvalidEmails, cleanEmailArray]);\n    return (\n        <Dialog\n            visible={show}\n            modal={true}\n            header={headerElement}\n            footer={footerContent}\n            className={`${style.modal} custom-modal`}\n            style={{ width: \"896px\" }}\n            onHide={handleClose}\n        >\n            <Row>\n                <Col sm={6} className='mb-3'>\n                    <div style={{ position: 'relative' }}>\n                        <label className={clsx(style.customLabel)}>FROM</label>\n                        <Dropdown\n                            options={\n                                (outgoingEmailTemplateQuery && outgoingEmailTemplateQuery?.data && ([{\n                                    value: outgoingEmailTemplateQuery?.data?.outgoing_email,\n                                    label: `${outgoingEmailTemplateQuery?.data?.outgoing_email}`,\n                                }])) ||\n                                []\n                            }\n                            className={clsx(\n                                style.dropdownSelect,\n                                \"dropdown-height-fixed w-100\"\n                            )}\n                            style={{ height: \"46px\", paddingLeft: '60px' }}\n                            placeholder=\"Select from email\"\n                            onChange={(e) => {\n                                setFrom(e.value);\n                                setErrors((others) => ({ ...others, from: false }));\n                            }}\n                            value={from}\n                            filterInputAutoFocus={true}\n                        />\n                    </div>\n                    {errors?.from && (\n                        <p className=\"error-message mb-0\">{\"From email is required\"}</p>\n                    )}\n                </Col>\n                <Col sm={6} className='mb-3'>\n                    <div style={{ position: 'relative' }}>\n                        <label className={clsx(style.customLabel)}>Templates</label>\n                        <Dropdown\n                            options={\n                                (emailTemplateQuery &&\n                                    emailTemplateQuery.data?.map((emailTemplate) => ({\n                                        value: emailTemplate.id,\n                                        label: `${emailTemplate.name}`,\n                                    }))) ||\n                                []\n                            }\n                            className={clsx(\n                                style.dropdownSelect,\n                                \"dropdown-height-fixed w-100\"\n                            )}\n                            style={{ height: \"46px\", paddingLeft: '88px' }}\n                            placeholder=\"Select template\"\n                            onChange={(e) => {\n                                setEmailTemplatedId(e.value);\n                            }}\n                            value={emailTemplateId}\n                            loading={emailTemplateQuery?.isFetching}\n                            filterInputAutoFocus={true}\n                        />\n                        <div className={style.templateInfo} onClick={(e) => op.current.toggle(e)}>\n                            <InfoCircle size={16} color='#737374ff' />\n                        </div>\n                        <OverlayPanel ref={op}>\n                            <p className='font-12' style={{ color: '#344054', lineHeight: '18px' }}>Choose from your existing templates here.</p>\n                            <div className='font-12' style={{ color: '#344054', lineHeight: '18px' }}>To edit or add new templates, go to<br /> Profile Settings &gt; Templates &gt; Email<br /> Templates.</div>\n                        </OverlayPanel>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12} className='mb-3'>\n                    <div className=\"d-flex gap-3 w-100\">\n                        <div style={{ position: 'relative' }} className={style.autoCompleteBox}>\n                            <div style={{ width: '50px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>TO</label>\n                            <AutoComplete\n                                ref={autoCompleteRef}\n                                value={to}\n                                completeMethod={search}\n                                onChange={(e) => {\n                                    setTo(e.value);\n                                    setErrors((others) => ({ ...others, to: false, toInvalid: false }));\n                                }}\n                                multiple\n                                suggestions={filteredEmails}\n                                onClick={onFocus}\n                                onFocus={onFocus}\n                                onKeyUp={onInputChange}\n                                onBlur={(e) => {\n                                    const currentValue = e.target.value.trim();\n                                    if (currentValue) {\n                                        if (isValidEmail(currentValue)) {\n                                            setTo((prev) => [...new Set([...prev, currentValue])]);\n                                            setErrors((others) => ({ ...others, to: false, toInvalid: false }));\n                                        } else {\n                                            setErrors((others) => ({ ...others, toInvalid: true }));\n                                        }\n                                        e.target.value = '';\n                                    }\n                                }}\n                                className={clsx(style.AutoComplete, \"w-100\")}\n                                placeholder=\"TO\"\n                            />\n                        </div>\n                        <Button\n                            className={clsx(style.box, { [style.active]: showCC })}\n                            onClick={() => { setShowCC(!showCC); setCC([]); }}\n                        >\n                            CC\n                        </Button>\n                        <Button\n                            className={clsx(style.box, { [style.active]: showBCC })}\n                            onClick={() => { setShowBCC(!showBCC); setBCC([]); }}\n                        >\n                            BCC\n                        </Button>\n                    </div>\n                    {errors?.to && !errors?.toInvalid && (\n                        <p className=\"error-message mb-0\">{\"To email is required\"}</p>\n                    )}\n                    {errors?.toInvalid && (\n                        <div>\n                            <p className=\"error-message mb-0\">{\"Please enter valid email addresses for TO\"}</p>\n                            {errors?.invalidToEmails && errors.invalidToEmails.length > 0 && (\n                                <p className=\"error-message mb-0 mt-1\" style={{ fontSize: '12px', color: '#dc3545' }}>\n                                    Invalid emails: {errors.invalidToEmails.join(', ')}\n                                </p>\n                            )}\n                        </div>\n                    )}\n                </Col>\n                {\n                    showCC &&\n                    <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '50px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>CC</label>\n                            <AutoComplete\n                                ref={autoCompleteRef2}\n                                value={cc}\n                                completeMethod={search}\n                                onChange={(e) => { \n                                    setCC(e.value);\n                                    setErrors((others) => ({ ...others, cc: false }));\n                                }}\n                                multiple\n                                suggestions={filteredEmails}\n                                onClick={onFocus2}\n                                onFocus={onFocus2}\n                                onKeyUp={onInputChange2}\n                                onBlur={(e) => {\n                                    const currentValue = e.target.value.trim();\n                                    if (currentValue) {\n                                        if (isValidEmail(currentValue)) {\n                                            setCC((prev) => [...new Set([...prev, currentValue])]);\n                                            setErrors((others) => ({ ...others, cc: false }));\n                                        } else {\n                                            setErrors((others) => ({ ...others, cc: true }));\n                                        }\n                                        e.target.value = '';\n                                    }\n                                }}\n                                className={clsx(style.AutoComplete, \"w-100\")}\n                                placeholder=\"CC\"\n                            />\n                        </div>\n                        {errors?.cc && (\n                            <div>\n                                <p className=\"error-message mb-0\">{\"Please enter valid email addresses for CC\"}</p>\n                                {errors?.invalidCcEmails && errors.invalidCcEmails.length > 0 && (\n                                    <p className=\"error-message mb-0 mt-1\" style={{ fontSize: '12px', color: '#dc3545' }}>\n                                        Invalid emails: {errors.invalidCcEmails.join(', ')}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </Col>\n                }\n\n                {\n                    showBCC && <Col sm={6} className='mb-3'>\n                        <div style={{ position: 'relative' }}>\n                            <div style={{ width: '60px' }} className={style.bag}></div>\n                            <label className={clsx(style.customLabel)}>BCC</label>\n                            <AutoComplete\n                                ref={autoCompleteRef3}\n                                value={bcc}\n                                completeMethod={search}\n                                onChange={(e) => { \n                                    setBCC(e.value);\n                                    setErrors((others) => ({ ...others, bcc: false }));\n                                }}\n                                multiple\n                                suggestions={filteredEmails}\n                                onClick={onFocus3}\n                                onFocus={onFocus3}\n                                onKeyUp={onInputChange3}\n                                onBlur={(e) => {\n                                    const currentValue = e.target.value.trim();\n                                    if (currentValue) {\n                                        if (isValidEmail(currentValue)) {\n                                            setBCC((prev) => [...new Set([...prev, currentValue])]);\n                                            setErrors((others) => ({ ...others, bcc: false }));\n                                        } else {\n                                            setErrors((others) => ({ ...others, bcc: true }));\n                                        }\n                                        e.target.value = '';\n                                    }\n                                }}\n                                className={clsx(style.AutoComplete, style.bcc, \"w-100\")}\n                                placeholder=\"BCC\"\n                            />\n                        </div>\n                        {errors?.bcc && (\n                            <div>\n                                <p className=\"error-message mb-0\">{\"Please enter valid email addresses for BCC\"}</p>\n                                {errors?.invalidBccEmails && errors.invalidBccEmails.length > 0 && (\n                                    <p className=\"error-message mb-0 mt-1\" style={{ fontSize: '12px', color: '#dc3545' }}>\n                                        Invalid emails: {errors.invalidBccEmails.join(', ')}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </Col>\n                }\n                <Col sm={12} className='mb-2'>\n                    <div style={{ position: 'relative' }}>\n                        <div style={{ width: '60px' }} className={style.bag}></div>\n                        <label className={clsx(style.customLabel)}>SUBJECT</label>\n                        <IconField>\n                            <InputIcon>\n                                {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                            </InputIcon>\n                            <InputText\n                                value={subject}\n                                className={clsx(style.inputBox, 'w-100')}\n                                style={{ paddingLeft: '100px' }}\n                                onChange={(e) => {\n                                    setSubject(e.target.value);\n                                    setErrors((others) => ({ ...others, subject: false }));\n                                }}\n                                placeholder=\"{Organization} | Quotation: {number} | {reference}\"\n                            />\n                        </IconField>\n                    </div>\n                    {errors?.subject && (\n                        <p className=\"error-message mb-0\">{\"Subject is required\"}</p>\n                    )}\n                </Col>\n                <Col sm={12} className='mb-3'>\n                    <div className=\"d-flex flex-column gap-1\" style={{ position: 'relative' }}>\n                        <label className={clsx(style.lable)}>Message</label>\n                        <InputIcon style={{ position: 'absolute', right: '15px', top: '40px', zIndex: 1 }}>\n                            {emailQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                        </InputIcon>\n                        <Editor\n                            style={{ minHeight: \"150px\" }}\n                            headerTemplate={header}\n                            value={text}\n                            placeholder='Enter a description...'\n                            onTextChange={(e) => {\n                                setText(e.htmlValue);\n                                setErrors((others) => ({ ...others, text: false }));\n                            }}\n                        />\n                    </div>\n                    {errors?.text && (\n                        <p className=\"error-message mb-0\">{\"Message is required\"}</p>\n                    )}\n                </Col>\n                <Col sm={12}>\n                    <div style={{ position: 'relative' }}>\n                        <label className={clsx(style.customLabel)}>Signature</label>\n                        <Dropdown\n                            options={\n                                (signatureQuery &&\n                                    signatureQuery.data?.map((template) => ({\n                                        value: template.id,\n                                        label: `${template.name}`,\n                                    }))) ||\n                                []\n                            }\n                            panelClassName='px880-dropdown-item'\n                            className={clsx(\n                                style.dropdownSelect,\n                                \"dropdown-height-fixed w-100\"\n                            )}\n                            style={{ height: \"46px\", paddingLeft: '88px' }}\n                            placeholder=\"Select signature\"\n                            onChange={(e) => {\n                                setSignature(e.value);\n                            }}\n                            value={signature}\n                            loading={signatureQuery?.isFetching}\n                            filterInputAutoFocus={true}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Dialog>\n    );\n};\n\nexport default SendEmailForm;","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createNewIndividualClient = async (data) => {\n  const endpoint = '/clients/individual/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewBusinessClient = async (data) => {\n  const endpoint = '/clients/business/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const restoreClient = async (id) => {\n  const endpoint = `/clients/restore/${id}/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientById = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientCategories = async () => {\n  const endpoint = `/references/clients/categories/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientIndustries = async () => {\n  const endpoint = `/references/clients/industries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getCountries = async () => {\n  const endpoint = `/references/countries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  const response = await fetchAPI(url.toString(), options, false);\n  const allowedCountries = [1];\n  return response?.filter(country => allowedCountries.includes(country.id)) || [];\n};\n\nexport const getStates = async (country) => {\n  const endpoint = `/references/states/${country}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getCities = async (state) => {\n  const endpoint = `/references/cities/${state}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getProjectManager = async () => {\n  const endpoint = `/references/desktop-users/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientEditApi = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getListOfClients = async (page, limit, search = \"\", order = \"\", isShowDeleted) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientOrderHistory = async (id, page, limit, search = \"\", order = \"\",) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/${id}/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"number\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  \n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainContact = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteClient = async (id) => {\n  const endpoint = `/clients/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteContactPerson = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchClients = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/clients`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Clients fetch error:', error);\n    throw error;\n  }\n};\n\nexport const bringBack = async (id) => {\n  const endpoint = `/projects/back/`;\n  const options = {\n    method: 'PUT',\n    body: { unique_id: id }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};"],"names":["headerElement","_jsx","className","style","modalHeader","children","headerTitle","header","_jsxs","value","_ref","_outgoingEmailTemplat4","_outgoingEmailTemplat5","_emailTemplateQuery$d2","_signatureQuery$data2","show","setShow","contactPersons","setPayload","save","defaultTemplate","op","useRef","profileData","JSON","parse","window","localStorage","getItem","from","setFrom","useState","to","setTo","cc","setCC","bcc","setBCC","subject","setSubject","text","setText","signature","setSignature","errors","setErrors","filteredEmails","setFilteredEmails","autoCompleteRef","autoCompleteRef2","autoCompleteRef3","showCC","setShowCC","showBCC","setShowBCC","isLoading","setIsLoading","isValidEmail","useCallback","email","test","trim","validateEmailArray","emailArray","length","every","getInvalidEmails","filter","cleanEmailArray","validateAndCleanAllEmails","hasErrors","invalidToEmails","console","log","invalidCcEmails","invalidBccEmails","emailTemplateId","setEmailTemplatedId","emailTemplateQuery","useQuery","queryKey","queryFn","getEmailTemplates","signatureQuery","getSignatureTemplates","outgoingEmailTemplateQuery","getOutgoingEmail","emailQuery","getEmail","enabled","retry","useEffect","_outgoingEmailTemplat","_outgoingEmailTemplat2","_outgoingEmailTemplat3","data","outgoing_email","outgoing_email_verified","_emailTemplateQuery$d","activeTemplateId","find","template","type","id","footerContent","Button","onClick","disabled","async","errorCount","others","invalidEmails","toInvalid","ProgressSpinner","width","height","color","search","event","_event$query","query","toLowerCase","emails","map","includes","onFocus","current","onFocus2","onFocus3","prev","email_body","from_email","toString","_signatureQuery$data","_signatureQuery$data$","email_signature","_emailQuery$data","_emailQuery$data2","body","validEmails","Dialog","visible","modal","footer","onHide","handleClose","Row","Col","sm","position","clsx","customLabel","Dropdown","options","label","dropdownSelect","paddingLeft","placeholder","onChange","e","filterInputAutoFocus","emailTemplate","name","loading","isFetching","templateInfo","toggle","InfoCircle","size","OverlayPanel","ref","lineHeight","autoCompleteBox","bag","AutoComplete","completeMethod","multiple","suggestions","onKeyUp","currentValue","target","key","split","Set","onBlur","box","active","fontSize","join","IconField","InputIcon","top","InputText","inputBox","lable","right","zIndex","Editor","minHeight","headerTemplate","onTextChange","htmlValue","panelClassName","fetchAPI","endpoint","arguments","undefined","isRequiredLoggedin","method","headers","accessToken","isFormData","FormData","defaultHeaders","requestOptions","stringify","redirect","url","URL","response","fetch","contentType","get","ok","_errorData","errorData","json","status","clear","sessionStorage","location","replace","error","Error","message","API_BASE_URL","process","restoreClient","getClientById","getClientCategories","getClientIndustries","getCountries","allowedCountries","country","getStates","getCities","state","getProjectManager","getListOfClients","page","limit","order","isShowDeleted","offset","searchParams","append","clientOrderHistory","markeMainAddress","markeMainContact","deleteClient","deleteContactPerson","deleteAddress","bringBack","unique_id","getJobTemplates","getJobTemplate","createJobTemplate","updateJobTemplate","deleteJobTemplate","createEmailTemplate","updateEmailTemplate","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates"],"sourceRoot":""}