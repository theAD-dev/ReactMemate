{"version":3,"file":"static/js/1281.d691f245.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","APIs/management-api.js","APIs/base-api.js","shared/ui/circular-progressbar/index.js","APIs/jobs-api.js","APIs/email-template.js","APIs/team-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { createNewJob, updateJob } from '../../../../APIs/jobs-api';\nimport { getManagement } from '../../../../APIs/management-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\n\nexport function getFileIcon(fileType) {\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\n\nconst CreateJob = ({ visible, setVisible, setRefetch, workerId, isEditMode = false, jobData = null, jobId = null }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            console.log('acceptedFiles: ', acceptedFiles);\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...acceptedFiles.map((file) =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file),\n                        progress: 0,\n                    })\n                ),\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const [start, setStart] = useState(\"\");\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileuserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({\n        queryKey: [\"getManagement\"],\n        queryFn: getManagement,\n        staleTime: Infinity,\n    });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            // Limit job reference to 50 characters when loading from template\n            const templateTitle = getTemplateByIDQuery?.data?.title || \"\";\n            setJobReference(templateTitle.substring(0, 50));\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    const uploadToS3 = async (file, url) => {\n        return axios.put(url, file, {\n            headers: {\n                \"Content-Type\": \"\",\n            },\n            onUploadProgress: (progressEvent) => {\n                const progress = Math.round(\n                    (progressEvent.loaded / progressEvent.total) * 100\n                );\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, { progress, url })\n                            : f\n                    );\n                });\n            },\n        }).catch((err) => {\n            console.log('err: ', err);\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 0, url, error: true })\n                        : f\n                );\n            });\n        });\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n\n                // Step 2: Upload the file to S3 using the signed URL\n                await uploadToS3(file, url);\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n                toast.error(`Failed to upload ${file.name}. Please try again.`);\n            }\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => {\n            if (isEditMode && jobId) {\n                return updateJob(jobId, data);\n            } else {\n                return createNewJob(data);\n            }\n        },\n        onSuccess: async (response) => {\n            const id = isEditMode ? jobId : response.id;\n\n            // Only upload new files (not existing ones)\n            const newFiles = files.filter(file => !file.isExisting);\n            if (newFiles.length > 0) {\n                setFiles(prevFiles => prevFiles.map(file =>\n                    file.isExisting ? file : { ...file, progress: 0 }\n                ));\n                await fileUploadBySignedURL(id);\n                await attachmentsUpdateInJob(id);\n            }\n\n            toast.success(`Job ${isEditMode ? 'updated' : 'created'} successfully`);\n            setVisible(false);\n            setRefetch((refetch) => !refetch);\n            reset();\n        },\n        onError: (error) => {\n            console.error(`Error ${isEditMode ? 'updating' : 'creating'} job:`, error);\n            toast.error(`Failed to ${isEditMode ? 'update' : 'create'} job. Please try again.`);\n        }\n    });\n\n    const onSubmit = () => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        // if (!projectId) tempErrors.projectId = true;\n        if (projectId) payload.project = projectId;\n\n        payload.project_photos = projectPhotoDeliver;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = (id) => {\n        let user = mobileuserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        }\n\n    };\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId);\n            workerDetailsSet(+workerId);\n        }\n    }, [workerId]);\n\n    // Populate form with job data when in edit mode\n    useEffect(() => {\n        if (isEditMode && jobData) {\n            // Set job reference and description\n            setJobReference(jobData.short_description || \"\");\n            setDescription(jobData.long_description || \"\");\n\n            // Set worker details\n            if (jobData.worker) {\n                setUserId(jobData.worker.id);\n                workerDetailsSet(jobData.worker.id);\n            }\n\n            // Set project\n            if (jobData.project) {\n                setProjectId(jobData.project.id);\n            }\n\n            // Set payment type and cost\n            setType(jobData.type || \"2\");\n            setCost(jobData.cost || 0.00);\n\n            // Set time type and duration\n            set_time_type(jobData.time_type || \"\");\n            setDuration(jobData.duration || \"\");\n\n            // Set dates\n            if (jobData.start_date) {\n                setStart(new Date(jobData.start_date));\n            }\n            if (jobData.end_date) {\n                setEnd(new Date(jobData.end_date));\n            }\n\n            // Set project photos\n            setProjectPhotoDeliver(jobData.project_photos || \"\");\n\n            // Set attachments if available\n            if (jobData.attachments && jobData.attachments.length > 0) {\n                setFiles(jobData.attachments.map(attachment => ({\n                    name: attachment.name,\n                    size: attachment.size,\n                    url: attachment.link,\n                    progress: 100,\n                    isExisting: true\n                })));\n            }\n        }\n    }, [isEditMode, jobData]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            {!isEditMode && (\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <Dropdown\n                                        options={\n                                            (templateQuery &&\n                                                templateQuery.data?.map((template) => ({\n                                                    value: template.id,\n                                                    label: `${template.name}`,\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\"\n                                        )}\n                                        style={{ height: \"44px\", width: '606px' }}\n                                        placeholder=\"Select template\"\n                                        onChange={(e) => {\n                                            setTemplatedId(e.value);\n                                        }}\n                                        value={templateId}\n                                        loading={templateQuery?.isFetching}\n                                        filter\n                                    />\n                                </div>\n                            )}\n                            {isEditMode && (\n                                <h2 className=\"mb-0\" style={{ fontSize: '18px', fontWeight: '500' }}>Edit Job #{jobId}</h2>\n                            )}\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>{isEditMode ? 'Edit Job' : 'New Job'}</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    const value = e.target.value;\n                                                    if (value.length <= 50) {\n                                                        setJobReference(value);\n                                                        if (value)\n                                                            setErrors((others) => ({ ...others, jobReference: false }));\n                                                    }\n                                                }}\n                                                maxLength={50}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        {errors?.jobReference && (\n                                            <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                        )}\n                                        <small className=\"text-muted ms-auto\">{jobReference.length}/50</small>\n                                    </div>\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to*</h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={\n                                                    (mobileuserQuery &&\n                                                        mobileuserQuery.data?.users?.filter((user) => user.status !== 'disconnected')?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        }))) ||\n                                                    []\n                                                }\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileuserQuery?.isFetching}\n                                                filter\n                                                disabled={!!workerId}\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                            <Col sm={2} className='p-0'>\n                                                <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                    <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                </div>\n                                            </Col>\n                                            <Col sm={5} className='pe-0 ps-0'>\n                                                <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                            </Col>\n                                            <Col sm={5} className=''>\n                                                <div className='d-flex align-items-center gap-2 mb-3'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                    <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                </div>\n                                                <div className='d-flex align-items-center gap-2'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                    <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment</label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time</label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts</label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End</label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.unique_id,\n                                                    label: `${project.reference} - ${project.number}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        filter\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>{parseFloat(file?.size / 1024).toFixed(2)} KB - {parseInt(file?.progress) || 0}% uploaded</p>\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            {/* <div className={style.deleteBox}>\n                                                                <Trash color='#F04438' size={16} />\n                                                            </div> */}\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        <Button type='button' onClick={onSubmit} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending || isEditMode}>\n                            {isEditMode ? 'Update' : 'Create'} {mutation?.isPending && <ProgressSpinner\n                            style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                            />}\n                        </Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const resendQuoteEmail = async (id, data) => {\n    let endpoint = `/resend/quote/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\n\n\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateJob = async (id, data) => {\n    const endpoint = `/jobs/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n"],"names":["getFileIcon","fileType","fileData","name","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","_ref","visible","setVisible","setRefetch","workerId","isEditMode","jobData","jobId","accessToken","localStorage","getItem","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","console","log","prevFiles","map","file","Object","assign","preview","URL","createObjectURL","progress","type","setType","cost","setCost","time_type","set_time_type","start","setStart","end","setEnd","duration","setDuration","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getJobTemplates","getTemplateByIDQuery","getJobTemplate","enabled","retry","mobileuserQuery","getTeamMobileUser","projectQuery","getManagement","staleTime","Infinity","itemTemplate","option","borderRadius","overflow","border","FallbackImage","photo","image","has_photo","is_business","size","label","selectedItemTemplate","props","placeholder","useEffect","data","_getTemplateByIDQuery","_getTemplateByIDQuery2","templateTitle","title","substring","others","uploadToS3","async","url","axios","put","headers","onUploadProgress","progressEvent","Math","round","loaded","total","f","catch","err","error","mutation","useMutation","mutationFn","updateJob","createNewJob","onSuccess","id","response","filter","isExisting","length","toast","post","filename","Authorization","fileUploadBySignedURL","attachments","_file$url","obj","split","push","attachmentsUpdateInJob","success","refetch","onError","onSubmit","tempErrors","payload","short_description","long_description","worker","start_date","Date","toISOString","end_date","project","project_photos","values","includes","mutate","workerDetailsSet","_mobileuserQuery$data","_mobileuserQuery$data2","user","users","find","paymentCycleObj","parseFloat","hourly_rate","toFixed","payment_cycle","first_name","last_name","attachment","link","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileuserQuery$data3","_mobileuserQuery$data4","_mobileuserQuery$data5","_projectQuery$data","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","options","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","fontSize","fontWeight","Button","ref","onClick","X","Card","Body","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","maxLength","InputTextarea","Row","Col","sm","status","valueTemplate","disabled","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","unique_id","reference","number","fillRule","clipRule","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","minWidth","isPending","API_BASE_URL","process","fetchAPI","endpoint","arguments","undefined","method","body","requestOptions","JSON","stringify","redirect","fetch","ok","Error","contentType","get","json","message","text","updateProjectScheduleById","toString","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","resendQuoteEmail","myHeaders","Headers","append","ProjectCardApi","uniqueId","isRequiredLoggedin","isFormData","FormData","defaultHeaders","window","clear","sessionStorage","location","replace","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition","getListOfJobs","page","limit","order","isShowDeleted","offset","searchParams","getJob","getJobDashboardData","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getTeamDesktopUser"],"sourceRoot":""}