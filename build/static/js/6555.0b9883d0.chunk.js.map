{"version":3,"file":"static/js/6555.0b9883d0.chunk.js","mappings":"iRAQA,MAgFA,EAhFoBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,KACXC,EAAQ,IAAIC,iBAAgBC,EAAAA,EAAAA,MAAcC,QAAQC,IAAI,SAEvDN,GAAMF,EAAS,eAEpB,MAAOS,EAAcC,IAAkBC,EAAAA,EAAAA,UAAS,KACzCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,IAQjD,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAAA,EAAUC,IAAI,iBAE1BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,CAAC,gBAAU,IAAIM,MAAOC,kBAChDT,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAASF,UACtBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBACUF,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAAe,eAE5CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UACfJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UACfJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBACfJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UACfJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAEjBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,sBAAkBF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEC,MAAO,WAAYT,SAAC,UAC5DC,EAAAA,EAAAA,MAAA,OAAKC,UAAW,cAAaN,EAAe,eAAiB,IAAKI,SAAA,EAChEF,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLC,KAAK,eACLC,MAAOnB,EACPoB,YAAY,4BACZC,SAAWC,IACTrB,EAAeqB,EAAEC,OAAOJ,MAAM,IAGjChB,IAAgBE,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAoBC,IAAKc,EAAAA,EAAmBZ,IAAI,0BAEjFT,IAAgBE,EAAAA,EAAAA,KAAA,KAAGI,UAAU,gBAAeF,SAAEJ,QAGjDK,EAAAA,EAAAA,MAAA,UACES,KAAK,SACLR,UAAU,wBACVgB,QAjDIC,KACQ,KAAxB1B,EAAa2B,OAIjBpC,EAAS,sBAAsBE,WAAcE,kBAAsBK,KAHjEI,EAAgB,2BAGgE,EA4C3CG,SAAA,CAAC,aAExBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKkB,EAAAA,EAAYhB,IAAI,yBAKhCP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,2BAA2BM,MAAO,CAC/Cc,gBAAiB,OAAOC,KACxBC,eAAgB,QAChBC,iBAAkB,aAClBzB,UACAF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kEAMZ,C","sources":["components/layout/onboarding/Companyname.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport BusinessProfile from \"../../../assets/images/img/emailSlider02.png\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst CompanyName = () => {\n  const navigate = useNavigate();\n  const { uuid } = useParams();\n  const email = new URLSearchParams(useLocation().search).get(\"email\");\n\n  if (!uuid) navigate('/onboarding');\n\n  const [company_name, setCompanyname] = useState('');\n  const [firstcmError, setFirstcmError] = useState('');\n  const handleStepOne = () => {\n    if (company_name.trim() === '') {\n      setFirstcmError('Company name is required');\n      return;\n    }\n    navigate(`/regional-settings/${uuid}?email=${email}&company_name=${company_name}`);\n  };\n  return (\n    <>\n      <div className='requestDemoWrap'>\n        <div className=\"logohead\">\n          <img src={LoinLogo} alt=\"Loin Logo\" />\n        </div>\n        <div className=\"copywrite\">Â© Memate {new Date().getFullYear()}</div>\n        <div className='OnboardingStep1'>\n          <form>\n            <div className=\"loginPage\">\n              <div className=\"boxinfo\">\n                <div className=\"boxLogin\">\n                  <h2>\n                    Define Your <br></br><span>Business</span> Profile\n                  </h2>\n                  <div className=\"step-progress\">\n                    <div className=\"step\"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step active\" ></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step\"></div>\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Company Legal Name<span style={{ color: \"#f04438\" }}>*</span></label>\n                    <div className={`inputInfo ${firstcmError ? 'error-border' : ''}`}>\n                      <input\n                        type=\"text\"\n                        name=\"company_name\"\n                        value={company_name}\n                        placeholder='Enter company legal name '\n                        onChange={(e) => {\n                          setCompanyname(e.target.value);\n                        }}\n                      />\n                      {firstcmError && <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Exclamation Circle\" />}\n                    </div>\n                    {firstcmError && <p className=\"error-message\">{firstcmError}</p>}\n                  </div>\n\n                  <button\n                    type='button'\n                    className=\"fillbtn flexcenterbox\"\n                    onClick={handleStepOne}>\n                    Next Step\n                    <img src={arrowRight} alt=\"Arrow Right\" />\n                  </button>\n\n                </div>\n              </div>\n              <div className=\"sliderRight SinglBgRight\" style={{\n                backgroundImage: `url(${BusinessProfile})`,\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}>\n                <p>Ability to scale and avoid any manual processes.</p>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CompanyName;\n"],"names":["CompanyName","navigate","useNavigate","uuid","useParams","email","URLSearchParams","useLocation","search","get","company_name","setCompanyname","useState","firstcmError","setFirstcmError","_jsx","_Fragment","children","_jsxs","className","src","LoinLogo","alt","Date","getFullYear","style","color","type","name","value","placeholder","onChange","e","target","exclamationCircle","onClick","handleStepOne","trim","arrowRight","backgroundImage","BusinessProfile","backgroundSize","backgroundRepeat"],"sourceRoot":""}