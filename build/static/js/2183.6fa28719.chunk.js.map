{"version":3,"file":"static/js/2183.6fa28719.chunk.js","mappings":"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","sources":["APIs/SettingsGeneral.js","components/layout/Login/logout-button.js","components/layout/settings/Sidebar.js","components/layout/settings/projectstatus/ProjectStatus.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n  const { method = 'GET', headers = {}, body } = options;\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  const defaultHeaders = {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n    ...headers\n  };\n\n  const requestOptions = {\n    method,\n    headers: defaultHeaders,\n    body: JSON.stringify(body),\n    redirect: 'follow'\n  };\n\n  try {\n    const url = new URL(`${endpoint}`);\n    const response = await fetch(url, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    } \n    \n    const contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    } else {\n      // Handle non-JSON responses\n      const text = await response.text();\n      return { message: 'Non-JSON response', body: text };\n    }\n    \n  } catch (error) {\n    console.error('Fetch API error:', error);\n    throw error;\n  }\n};\n\nexport const createProjectStatus = async (data) => {\n  console.log('data: ', data);\n  if(data.id) delete data.id;\n  if(data.isNew) delete data.isNew;\n  if(data.isChanged) delete data.isChanged;\n  if(data.value) delete data.value;\n  \n  const endpoint = `/settings/project-statuses/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const updateProjectStatusById = async (id, data) => {\n  const endpoint = `/settings/project-statuses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\nexport const deleteProjectStatusById = async (id) => {\n  const endpoint = `/settings/project-statuses/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n}\n\n\n\n\n\n\n\nexport const SettingsGeneralInformation = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateGeneralInformation = async (data, photo) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => {\n    formData.append(key, data[key]);\n  });\n\n  if (photo?.croppedImageBlob) {\n    const photoHintId = nanoid(6);\n    formData.append('company_logo', photo?.croppedImageBlob, `${photoHintId}.jpg`);\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.text();\n    console.log('result>>>>>>>>>>: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const SettingsBankInformation = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateBankInformation = async (generalData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(generalData).forEach((key) => {\n    formData.append(key, generalData[key]);\n  });\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const ProjectStatusesList = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/project-statuses/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('project fetch error:', error);\n    throw error;\n  }\n};\n\n","import React from \"react\";\nimport BoxArrowRight from \"../../../assets/images/icon/box-arrow-right.png\";\nconst LogoutButton = () => {\n  const onClick = () => {\n    window.localStorage.removeItem('access_token');\n    window.localStorage.removeItem('refresh_token');\n    window.localStorage.removeItem('isLoggedIn');\n    window.location.href = \"/login\";\n  };\n\n  return (\n    <button className=\"logoutStyle logoutBottom\" onClick={onClick}>\n      Logout <img src={BoxArrowRight} alt=\"Arrow Right\" />\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./settings.css\";\nimport {\n  InfoSquare,\n  Person,\n  CreditCard2Back,\n  People,\n  Map,\n  Bell,\n  PlusSlashMinus,\n  WindowDock,\n  Bookmarks,\n  CardChecklist,\n  BlockquoteRight,\n  WindowStack,\n  FiletypeDoc,\n  ListUl,\n  Headset,\n} from \"react-bootstrap-icons\";\nimport LogoutButton from \"../Login/logout-button\";\nconst Sidebar = ({ activeTab, setActiveTab }) => {\n  const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n  return (\n    <>\n      <div className=\"settings-menu\">\n        <div className=\"menuList\">\n          <div className=\"topList\">\n            <h2>General</h2>\n            <ul>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/generalinformation\"\n                  className={`sidebar-tab ${activeTab === \"generalinformation\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"generalinformation\")}\n                >\n                  <InfoSquare color=\"#667085\" size={18} />\n                  Company Information\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/generalinformation/profile\"\n                  className={`sidebar-tab ${activeTab === \"profile\"\n                    ? \"activelist\"\n                    : \"\"\n                    }`}\n                  onClick={() =>\n                    setActiveTab(\"profile\")\n                  }\n                >\n                  <Person color=\"#667085\" size={18} />\n                  My Profile\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/generalinformation/subscription\"\n                  className={`sidebar-tab ${activeTab === \"subscription\"\n                    ? \"activelist\"\n                    : \"\"\n                    }`}\n                  onClick={() =>\n                    setActiveTab(\"subscription\")\n                  }\n                >\n                  <CreditCard2Back color=\"#667085\" size={18} />\n                  Subscription\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/users/desktop\"\n                  className={`sidebar-tab ${activeTab === \"desktop\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"desktop\")}\n                >\n                  <People color=\"#667085\" size={18} />\n                  Users\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/location\"\n                  className={`sidebar-tab ${activeTab === \"locations\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"locations\")}\n                >\n                  <Map color=\"#667085\" size={18} />\n                  Locations\n                </Link>\n              </li>\n            </ul>\n            <h2>Settings</h2>\n            <ul>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/calculators/departments\"\n                  className={`sidebar-tab ${activeTab === \"departments\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"departments\")}\n                >\n                  <PlusSlashMinus color=\"#667085\" size={18} />\n                  Calculators\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/templates/job-templates\"\n                  className={`sidebar-tab ${activeTab === \"job-templates\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"job-templates\")}\n                >\n                  <WindowDock color=\"#667085\" size={18} />\n                  Templates\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/companyethos/company-ethos\"\n                  className={`sidebar-tab ${activeTab === \"company-ethos\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"company-ethos\")}\n                >\n                  <Bookmarks color=\"#667085\" size={18} />\n                  Company Ethos\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/integrations\"\n                  className={`sidebar-tab ${activeTab === \"integrations\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"integrations\")}\n                >\n                  <CardChecklist color=\"#667085\" size={18} />\n                  Integrations\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/quotesjobs/recurring-quotes\"\n                  className={`sidebar-tab ${activeTab === \"recurring-quotes\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"recurring-quotes\")}\n                >\n                  <BlockquoteRight color=\"#667085\" size={18} />\n                  Quotes & Jobs\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/projectstatus/project-status\"\n                  className={`sidebar-tab ${activeTab === \"organisation-setting\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"organisation-setting\")}\n                >\n                  <WindowStack color=\"#667085\" size={18} />\n                  Organisation Setting\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/termsandconditions/terms-and-conditions\"\n                  className={`sidebar-tab ${activeTab === \"terms-and-conditions\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"terms-and-conditions\")}\n                >\n                  <FiletypeDoc color=\"#667085\" size={18} />\n                  Terms and Conditions\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/customerssettings/industries\"\n                  className={`sidebar-tab ${activeTab === \"industries\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"industries\")}\n                >\n                  <Person color=\"#667085\" size={18} />\n                  Customers Settings\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/accounting/expenses\"\n                  className={`sidebar-tab ${activeTab === \"expenses\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"expenses\")}\n                >\n                  <ListUl color=\"#667085\" size={18} />\n                  Accounting\n                </Link>\n              </li>\n              <li>\n                {\" \"}\n                <Link\n                  to=\"/settings/notifications/dashboard-notifications\"\n                  className={`sidebar-tab ${activeTab === \"dashboard-notifications\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"dashboard-notifications\")}\n                >\n                  <Bell color=\"#667085\" size={18} />\n                  Notifications\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"logoutBottomS pt-2\" style={{ borderTop: '.5px solid #dedede', height: '200px' }}>\n            <div className=\"userNameList ps-2\">\n            <button className=\"btn d-flex align-items-center gap-3 mb-2 px-0\">\n              <Headset size={16} color=\"#667085\"/>\n              <p className=\"mb-0\">Support</p>\n            </button>\n            </div>\n            <div className=\"userNameList ps-2\">\n              {profileData && (\n                <div className=\"d-flex align-items-center gap-3 mb-3\">\n                  <Person size={16} color=\"#667085\" />\n                  <p className=\"mb-0\">\n                    <strong>{profileData.full_name}</strong>\n                    <span>{profileData.email}</span>\n                  </p>\n                </div>\n              )}\n            </div>\n            <LogoutButton />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport { Menu, MenuItem, MenuButton, MenuGroup } from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport Sidebar from '../Sidebar';\nimport { Button, Spinner, Table } from 'react-bootstrap';\nimport { PlusLg, ChevronDown } from \"react-bootstrap-icons\";\nimport { createProjectStatus, deleteProjectStatusById, ProjectStatusesList, updateProjectStatusById } from \"../../../../APIs/SettingsGeneral\";\nimport { Link } from 'react-router-dom';\nimport { useMutation } from \"@tanstack/react-query\";\nimport { toast } from 'sonner';\n\nconst colorOptions = [\n    { value: \"#1AB2FF\", bg: \"#BAE8FF\", border: \"#1AB2FF\", color: \"#0A4766\", text: \"Blue\" },\n    { value: \"#4E5BA6\", bg: \"#EAECF5\", border: \"#4E5BA6\", color: \"#293056\", text: \"Deep Blue\" },\n    { value: \"#2970FF\", bg: \"#D1E0FF\", border: \"#2970FF\", color: \"#0040C1\", text: \"Dark Blue\" },\n    { value: \"#FFB258\", bg: \"#FFE8CD\", border: \"#FFB258\", color: \"#6D471A\", text: \"Orange\" },\n    { value: \"#15B79E\", bg: \"#CCFBEF\", border: \"#15B79E\", color: \"#125D56\", text: \"Green\" },\n    { value: \"#66C61C\", bg: \"#E3FBCC\", border: \"#66C61C\", color: \"#326212\", text: \"Light Green\" },\n    { value: \"#7A5AF8\", bg: \"#EBE9FE\", border: \"#7A5AF8\", color: \"#4A1FB8\", text: \"Light Purple\" },\n    { value: \"#D444F1\", bg: \"#FBE8FF\", border: \"#D444F1\", color: \"#821890\", text: \"Magenta\" },\n    { value: \"#F63D68\", bg: \"#FFE4E8\", border: \"#F63D68\", color: \"#A11043\", text: \"Pink\" },\n    { value: \"#FF007F\", bg: \"#FFCCE5\", border: \"#FF007F\", color: \"#6F0A3C\", text: \"Soft Pink\" },\n    { value: \"#FFD700\", bg: \"#FFF8D1\", border: \"#FFD700\", color: \"#997100\", text: \"Yellow\" },\n    { value: \"#6C6C1C\", bg: \"#E1E1B8\", border: \"#6C6C1C\", color: \"#444403\", text: \"Dark Yellow\" }\n];\n\n\n\nconst ProjectStatus = () => {\n    const [isCreating, setIsCreating] = useState(false);\n    const [activeTab, setActiveTab] = useState('organisation-setting');\n    const [options, setOptions] = useState([]);\n    const [error, setError] = useState('');\n    const [charCount, setCharCount] = useState(0);\n    const fetchData = async () => {\n        try {\n            setIsCreating(true);\n            const data = await ProjectStatusesList();\n            console.log('data: ', data);\n            setOptions([...data]); // Include empty option\n        } catch (error) {\n            console.error(\"Error fetching project status data:\", error);\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    const updateMutation = useMutation({\n        mutationFn: (data) => updateProjectStatusById(data.id, data),\n        onSuccess: async () => {\n            toast.success('The project status has been successfully updated.');\n            await fetchData();\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n            toast.error('Failed to update the project status. Please try again.');\n            fetchData();\n        }\n    });\n\n    const deleteMutation = useMutation({\n        mutationFn: (id) => deleteProjectStatusById(id),\n        onSuccess: () => {\n            toast.success('The project status has been successfully deleted.');\n            fetchData();\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n            toast.error('Failed to delete the project status. Please try again.');\n            fetchData();\n        }\n    });\n\n    const createMutation = useMutation({\n        mutationFn: (data) => createProjectStatus(data),\n        onSuccess: () => {\n            toast.success('The project status has been successfully created.');\n            fetchData();\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n            toast.error('Failed to create the project status. Please try again.');\n            fetchData();\n        }\n    });\n\n    const addOption = () => {\n        setOptions((oldOptions) => [...oldOptions, { isNew: true, id: oldOptions.length + 1, value: '#FFB258', color: '#FFB258', title: \"\" }]);\n    };\n\n    const updateOptionColor = (id, color) => {\n        setOptions(options.map(option => option.id === id ? { ...option, color, isChanged: true } : option));\n    };\n\n    const updateOptionTitle = (id, title) => {\n        setCharCount(title.length);\n        if (title.length <= 20) {\n            setError('');\n            setOptions(options.map(option => option.id === id ? { ...option, title, isChanged: true } : option));\n        } else {\n            setError(`The status name can be up to 20 characters long.`);\n        }\n    };\n\n    const saveOption = (id, isNew = false) => {\n        const optionToSave = options.find(option => option.id === id);\n        if (isNew) {\n            console.log('new options to create...', optionToSave);\n            createMutation.mutate(optionToSave);\n        } else {\n            console.log('options to update...', optionToSave);\n            updateMutation.mutate(optionToSave);\n        }\n    };\n\n    const removeOption = (id) => {\n        let updatedOptions = options.filter(option => option.id === id);\n        console.log('updatedOptions: ', updatedOptions);\n        if (updatedOptions && updatedOptions.length && updatedOptions[0].isNew) {\n            setOptions(options.filter(option => option.id !== id));\n        }\n        else if (updatedOptions && updatedOptions.length) deleteMutation.mutate(id);\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className='settings-wrap'>\n            <div className=\"settings-wrapper\">\n                <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                <div className=\"settings-content setModalelBoots\">\n                    <div className='headSticky'>\n                        <h1>Organisation Setting</h1>\n                        <div className='contentMenuTab'>\n                            <ul>\n                                <li className='menuActive'><Link to=\"/settings/projectstatus/project-status\">Project Status</Link></li>\n                                {/* <li><Link to=\"/settings/projectstatus/outgoing-emails\">Outgoing Emails</Link></li> */}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"content_wrap_main\">\n                        <div className='content_wrapper'>\n                            <div className=\"listwrapper orgColorStatus\">\n                               <div className=\"top\">\n                               <h4>Custom Order Status</h4>\n                               {/* <p>The status name can be up to 20 characters long.</p> */}\n                               {error ? (\n                                <p style={{ color: 'red' }}>{error}</p>\n                            ) : (\n                                <p>The status name can be up to 20 characters long.</p>\n                            )}\n                               </div>\n                                {\n                                    isCreating && (\n                                        <div style={{ position: 'absolute', top: '50%', left: '50%', background: 'white', width: '60px', height: '60px', borderRadius: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 10 }} className=\"shadow-lg\">\n                                            <Spinner animation=\"border\" role=\"status\">\n                                                <span className=\"visually-hidden\">Loading...</span>\n                                            </Spinner>\n                                        </div>\n                                    )\n                                }\n                                <Table>\n                                    <tbody>\n                                        {options.map((option, index) => (\n                                            <tr key={`option-${option.id}-${index}`}>\n                                                <td>\n                                                    <div className='statuswrapper'>\n                                                  \n                                                    <div className='statusTitle'>\n                                                        <input\n                                                            type=\"text\"\n                                                            value={option.title}\n                                                            onChange={(e) => updateOptionTitle(option.id, e.target.value)}\n                                                        />\n                                                 {\n                                                       (option.isNew || option.isChanged) && <>\n                                                        {\n                                                            option?.title?.length >= 20\n                                                            ? <p className=\"mb-2 mt-2 text-danger\">20</p>\n                                                            : <p className=\"mb-2 mt-2\">{option?.title?.length || 0} </p>\n                                                        }\n                                                       </> \n                                                    }\n                                                    </div>\n                                                    \n                                                    \n                                                        <Menu\n                                                            className='mainSelectMenu'\n                                                            menuButton={\n                                                                <MenuButton className=\"colorSelectBut\">\n                                                                    <div\n                                                                        className=\"butcolorIn\"\n                                                                        style={{\n                                                                            borderColor: option.color,\n                                                                            background: colorOptions.find(opt => opt.value === option.color)?.bg || 'transparent',\n                                                                            color: option.color,\n                                                                        }}\n                                                                    >\n                                                                        {colorOptions.find(opt => opt.value === option.color)?.text || 'Select Color'}\n                                                                    </div>\n                                                                    <ChevronDown size={20} color='#98A2B3' />\n                                                                </MenuButton>\n\n                                                            }\n                                                            overflow={\"auto\"}\n                                                            position={\"anchor\"}>\n                                                            <MenuGroup takeOverflow style={{ maxHeight: '230px', overflow: 'auto', boxShadow: ' 0px 12px 16px -4px rgba(16, 24, 40, 0.08), 0px 4px 6px -2px rgba(16, 24, 40, 0.03)', borderRadius: '4px', border: '1px solid #D0D5DD' }}>\n                                                                {colorOptions.map(({ value, bg, border, color, text }, index) => (\n\n                                                                    <MenuItem onClick={() => updateOptionColor(option.id, value)} key={`${index}-${value}`} value={value} style={{ padding: '8px 10px 8px 8px' }}>\n                                                                        <div className=\"d-flex\" style={{ width: '140px', height: '30px', borderRadius: '4px', overflow: 'hidden' }}>\n                                                                            <div className=\"h-100\" style={{ width: '4px', background: `${border}` }}></div>\n                                                                            <div className=\"h-100 d-flex align-items-center\" style={{ width: '100%', background: `${bg}` }}>\n                                                                                <span style={{ color: `${color}`, fontSize: '14px', paddingLeft: '12px', fontWeight: '400' }}>{text}</span>\n                                                                            </div>\n                                                                        </div>\n                                                                    </MenuItem>\n                                                                ))}\n                                                            </MenuGroup>\n                                                        </Menu>\n                                                    </div>\n                                                   \n                                                </td>\n                                                <td className=\"butactionOrg\">\n                                                    {(option.isNew || option.isChanged) &&\n\n                                                        <Button className=\"save\" onClick={() => saveOption(option.id, option.isNew)}>\n                                                            {\n                                                                (updateMutation.isPending && updateMutation?.variables?.id === option.id)\n                                                                    ||\n                                                                    (createMutation.isPending && createMutation?.variables?.id === option.id)\n                                                                    ?\n                                                                    \"Loading...\"\n                                                                    : \"Save\"\n                                                            }\n                                                        </Button>\n\n                                                    }\n                                                    <Button className=\"remove\" onClick={() => removeOption(option.id)}>{deleteMutation.isPending && deleteMutation?.variables === option.id ? \"Loading...\" : \"Remove\"}</Button>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                        <tr>\n                                            <td id='addmoreOption' colSpan={3}>\n                                                <Button onClick={addOption}>\n                                                    Add an Option  &nbsp;<PlusLg size={20} color='#000000' />\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectStatus;"],"names":["API_BASE_URL","process","fetchAPI","async","endpoint","options","arguments","length","undefined","method","headers","body","requestOptions","localStorage","getItem","JSON","stringify","redirect","url","URL","response","fetch","ok","Error","status","contentType","get","includes","json","message","text","error","console","createProjectStatus","log","data","id","isNew","isChanged","value","toString","updateProjectStatusById","deleteProjectStatusById","SettingsGeneralInformation","myHeaders","Headers","accessToken","append","updateGeneralInformation","photo","formData","FormData","Object","keys","forEach","key","croppedImageBlob","photoHintId","nanoid","result","SettingsBankInformation","updateBankInformation","generalData","ProjectStatusesList","LogoutButton","_jsxs","className","onClick","window","removeItem","location","href","children","_jsx","src","alt","_ref","activeTab","setActiveTab","profileData","parse","_Fragment","Link","to","InfoSquare","color","size","Person","CreditCard2Back","People","Map","PlusSlashMinus","WindowDock","Bookmarks","CardChecklist","BlockquoteRight","WindowStack","FiletypeDoc","ListUl","Bell","style","borderTop","height","Headset","full_name","email","colorOptions","bg","border","ProjectStatus","isCreating","setIsCreating","useState","setOptions","setError","charCount","setCharCount","fetchData","updateMutation","useMutation","mutationFn","onSuccess","toast","success","onError","deleteMutation","createMutation","useEffect","Sidebar","position","top","left","background","width","borderRadius","display","justifyContent","alignItems","zIndex","Spinner","animation","role","Table","map","option","index","_option$title","_option$title2","_colorOptions$find","_colorOptions$find2","_updateMutation$varia","_createMutation$varia","type","title","onChange","e","updateOptionTitle","target","Menu","menuButton","MenuButton","borderColor","find","opt","ChevronDown","overflow","MenuGroup","takeOverflow","maxHeight","boxShadow","MenuItem","updateOptionColor","padding","fontSize","paddingLeft","fontWeight","Button","optionToSave","mutate","saveOption","isPending","variables","updatedOptions","filter","removeOption","colSpan","addOption","oldOptions","PlusLg"],"sourceRoot":""}