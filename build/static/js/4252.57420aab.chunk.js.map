{"version":3,"file":"static/js/4252.57420aab.chunk.js","mappings":"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","sources":["assets/images/Jobs/Featured icon.svg","shared/lib/format-aud.js","components/Work/features/view-job/view-attachements.js","webpack://memateapp/./src/components/Work/Pages/jobs/jobs.module.scss?138b","webpack://memateapp/./src/components/Work/features/job-table-actions/job-dialog.module.scss?24f6","components/Work/features/job-table-actions/job-confirmation-dialog.js","components/Work/features/job-table-actions/job-details-dialog.js","webpack://memateapp/./src/components/Work/features/show-job-declined/show-job-declined.module.scss?b07c","components/Work/features/show-job-declined/show-job-declined.js","components/Work/Pages/jobs/jobs-table.js","components/Work/features/view-job/view-job.js","webpack://memateapp/./src/components/Work/features/view-job/view-job.module.scss?49a6","webpack://memateapp/./src/ui/no-data-template/no-data-found-template.module.scss?18de","ui/no-data-template/no-data-found-template.js"],"sourcesContent":["var _rect, _rect2, _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFeaturedicon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    width: 48,\n    height: 48,\n    rx: 24,\n    fill: \"#FEE4E2\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    width: 48,\n    height: 48,\n    rx: 24,\n    stroke: \"#FEF3F2\",\n    strokeWidth: 8\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 38.5C22.201 38.5 17.5 33.799 17.5 28C17.5 22.201 22.201 17.5 28 17.5C33.799 17.5 38.5 22.201 38.5 28C38.5 33.799 33.799 38.5 28 38.5ZM28 40C34.6274 40 40 34.6274 40 28C40 21.3726 34.6274 16 28 16C21.3726 16 16 21.3726 16 28C16 34.6274 21.3726 40 28 40Z\",\n    fill: \"#B54708\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.8827 24.6792C23.8713 24.8835 24.0399 25.0491 24.2445 25.0491H25.4812C25.6883 25.0491 25.853 24.8802 25.8808 24.675C26.0143 23.6908 26.6898 22.9734 27.8938 22.9734C28.9221 22.9734 29.8648 23.4875 29.8648 24.7253C29.8648 25.6775 29.303 26.1155 28.4175 26.782C27.4082 27.5151 26.6084 28.3721 26.6656 29.7622L26.67 30.0874C26.6728 30.2925 26.8399 30.4573 27.045 30.4573H28.2615C28.4686 30.4573 28.6365 30.2894 28.6365 30.0823V29.9241C28.6365 28.8481 29.0459 28.5339 30.1504 27.696C31.0645 27.001 32.0166 26.2297 32.0166 24.6111C32.0166 22.345 30.1028 21.25 28.0081 21.25C26.1075 21.25 24.0245 22.1359 23.8827 24.6792ZM26.218 33.3232C26.218 34.123 26.856 34.7134 27.732 34.7134C28.646 34.7134 29.2744 34.123 29.2744 33.3232C29.2744 32.4949 28.646 31.9141 27.732 31.9141C26.856 31.9141 26.218 32.4949 26.218 33.3232Z\",\n    fill: \"#B54708\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFeaturedicon);\nexport default __webpack_public_path__ + \"static/media/Featured icon.f0452deecdd8a0600a95469561a90cfe.svg\";\nexport { ForwardRef as ReactComponent };","export function formatAUD(amount, shorten = false) {\n    const num = parseFloat(amount);\n\n    if (isNaN(num)) {\n        return \"0.00\";\n    }\n\n    if (shorten && Math.abs(num) >= 1000.00) {\n        return new Intl.NumberFormat('en-AU', {\n            notation: \"compact\",\n            compactDisplay: \"short\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(num);\n    }\n\n    return new Intl.NumberFormat('en-AU', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(num);\n}","import React from 'react';\nimport { Download } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport style from './view-job.module.scss';\nimport { getFileIcon } from '../create-job/create-job';\n\nconst ViewAttachements = ({ show, setShow, attachments }) => {\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Documents</span>\n        </div>\n    );\n    const footerContent = (\n        <div className='d-flex justify-content-center'>\n            <Button className='outline-button' onClick={() => setShow(false)} style={{ borderRadius: '30px' }}>Close</Button>\n        </div>\n    );\n    return (\n        <Dialog visible={show} modal={false} header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={() => { if (!show) return; setShow(false); }}>\n            <div className='d-flex flex-wrap gap-2'>\n                {\n                    attachments?.map((attachment) => (\n                        <div key={attachment?.link} className={style.attachmentBox}>\n                            <div className='d-flex align-items-center gap-2'>\n                                {\n                                    getFileIcon(attachment?.extension)\n                                }\n                                <Link to={attachment?.link} target='_blank'>\n                                    <span className='text-dark'>{attachment?.name}</span>\n                                </Link>\n                            </div>\n\n                            <button className='border-0 p-0 bg-none' onClick={() => window.open(attachment?.link, '_blank')}>\n                                <Download />\n                            </button>\n                        </div>\n                    ))\n                }\n            </div>\n        </Dialog>\n    );\n};\n\nexport default ViewAttachements;","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"jobs_active__ZiLB1\",\"selectedCount\":\"jobs_selectedCount__ylTL-\",\"filterBox\":\"jobs_filterBox__Fm1C9\",\"newButton\":\"jobs_newButton__CoaUb\",\"total\":\"jobs_total__tYu52\",\"totalCount\":\"jobs_totalCount__c5FC+\",\"shadowRight\":\"jobs_shadowRight__smZo7\",\"payment\":\"jobs_payment__i+7WA\",\"paymentHours\":\"jobs_paymentHours__e2Axb\",\"paymentFix\":\"jobs_paymentFix__1tRgO\",\"paymentTracker\":\"jobs_paymentTracker__sK5GM\",\"time\":\"jobs_time__v7zI9\",\"tracker\":\"jobs_tracker__aGhTF\",\"clientImg\":\"jobs_clientImg__9499y\",\"square\":\"jobs_square__5EeYW\",\"clientName\":\"jobs_clientName__5iKeN\",\"defaultStatus\":\"jobs_defaultStatus__XVACp\",\"status\":\"jobs_status__EX7Lm\",\"DRAFT\":\"jobs_DRAFT__+2Rds\",\"OPEN\":\"jobs_OPEN__TRxzq\",\"ASSIGNED\":\"jobs_ASSIGNED__vzQof\",\"CONFIRMED\":\"jobs_CONFIRMED__VW8Jd\",\"DECLINED\":\"jobs_DECLINED__XEbSy\",\"SUBMITTED\":\"jobs_SUBMITTED__YBG-G\",\"FINISHED\":\"jobs_FINISHED__AuxJC\",\"IN_PROGRESS\":\"jobs_IN_PROGRESS__7pb65\",\"type\":\"jobs_type__DW5S-\",\"shift\":\"jobs_shift__6lLPh\",\"fix\":\"jobs_fix__Jz8DC\",\"hours\":\"jobs_hours__w07yY\",\"timeFrame\":\"jobs_timeFrame__w+GZ5\",\"timeTracker\":\"jobs_timeTracker__JTEx0\",\"timeFrame2\":\"jobs_timeFrame2__mCys0\",\"linkToProjectCard\":\"jobs_linkToProjectCard__9PXHf\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"job-dialog_modal__6ffnW\",\"modalHeader\":\"job-dialog_modalHeader__j1WfV\",\"headerTitle\":\"job-dialog_headerTitle__sUBzz\",\"weekNames\":\"job-dialog_weekNames__7amIz\",\"weekName\":\"job-dialog_weekName__H3JqX\",\"iconJobstyle\":\"job-dialog_iconJobstyle__ze7N8\"};","import React from \"react\";\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport style from './job-dialog.module.scss';\nimport warningIcon from '../../../../assets/images/Jobs/Featured icon.svg';\n\n\nexport default function JobConfirmation({ visible, setVisible }) {\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <img src={warningIcon} alt=\"task-details\" style={{ width: '48px', height: '48px' }} />\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Are you sure you want to stop cycle?</span>\n        </div>\n    );\n\n    const footerContent = (\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <Button label=\"Stop Cycle\" className=\"danger-button\" onClick={() => setVisible(false)} autoFocus />\n            <Button label=\"Cancel\" className=\"outline-button\" onClick={() => setVisible(false)} autoFocus />\n        </div>\n    );\n    return (\n        <Dialog visible={visible} modal header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={() => { if (!visible) return; setVisible(false); }}>\n            <div className=\"\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <h6 style={{ fontSize: '18px', color: '#101828', fontWeight: 600, marginBottom: '16px' }}>Job Details</h6>\n                    <p className=\"font-14 mb-0\" style={{ color: '#475467' }}>Job ID: 031-240003</p>\n                </div>\n                <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Job Reference</p>\n                <h6 style={{ fontSize: '16px', color: '#475467', fontWeight: 600, marginBottom: '16px' }}>Enter the detailed quote for the client contract here. Include all relevant </h6>     \n            </div>\n        </Dialog>\n\n    );\n}\n","import React, { useState } from \"react\";\nimport {InfoCircle} from \"react-bootstrap-icons\";\nimport { Button } from 'primereact/button';\nimport { Chip } from \"primereact/chip\";\nimport { Dialog } from 'primereact/dialog';\nimport JobConfirmation from \"./job-confirmation-dialog\";\nimport style from './job-dialog.module.scss';\n\nexport default function JobDetails({ visible, setVisible }) {\n    const [confirmation, setConfirmation] = useState(false);\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <b className={style.iconJobstyle}><InfoCircle size={24} color=\"#106B99\" /></b>\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Job Details</span>\n        </div>\n    );\n\n    const footerContent = (\n        <div>\n            <Button label=\"Stop Cycle\" className=\"danger-button\" onClick={() => setConfirmation(true)} autoFocus />\n        </div>\n    );\n    return (\n        <>\n            <Dialog visible={visible} modal={false} header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={() => { if (!visible) return; setVisible(false); }}>\n                <div className=\"\">\n                    <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Repeat</p>\n                    <h6 className=\"font-16\" style={{ color: '#101828', fontWeight: 600, marginBottom: '16px' }}>Every Week</h6>\n                    <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Repeat on</p>\n                    <div className={`d-flex ${style.weekNames}`}>\n                        <Chip className={`status ${style.weekName}`} label={'Monday'} />\n                        <Chip className={`status ${style.weekName}`} label={'Wednesday'} />\n                        <Chip className={`status ${style.weekName}`} label={'Thursday'} />\n                    </div>\n                    <div className=\"d-flex\">\n                        <div style={{ width: '280px' }}>\n                            <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Starts</p>\n                            <p className=\"font-16 mb-0\" style={{ color: '#101828', fontWeight: 600 }}>12 Jul 2025</p>\n                        </div>\n                        <div style={{ width: '280px' }}>\n                            <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Ends</p>\n                            <p className=\"font-16 mb-0\" style={{ color: '#101828', fontWeight: 600 }}>12 Jul 2025</p>\n                        </div>\n                    </div>\n                </div>\n            </Dialog>\n            <JobConfirmation visible={confirmation} setVisible={setConfirmation} />\n        </>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"show-job-declined_modal__4txtg\",\"modalHeader\":\"show-job-declined_modalHeader__1+kdQ\",\"headerTitle\":\"show-job-declined_headerTitle__FKgix\",\"iconStyle\":\"show-job-declined_iconStyle__A0wYR\"};","import { XOctagon } from 'react-bootstrap-icons';\nimport { Dialog } from 'primereact/dialog';\nimport style from './show-job-declined.module.scss';\n\nconst JobDeclined = ({ showDeclined, setShowDeclined, message }) => {\n  const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <div className={style.iconStyle}>\n              <XOctagon color='#F04438' size={16} />\n            </div>\n            <span className={`white-space-nowrap ${style.headerTitle}`}>Job Declined</span>\n        </div>\n    );\n  return (\n    <Dialog visible={showDeclined} modal={false} header={headerElement} contentClassName='border-0 bg-transparent' className={`${style.modal} custom-modal`} onHide={() => { setShowDeclined(false); }}>\n      <div className=\"\">\n        <p className=\"font-14 mb-1\" style={{ color: '#667085' }}>Note:</p>\n        <h6 style={{ fontSize: '16px', color: '#475467', fontWeight: 600, marginBottom: '16px' }}>{message}</h6>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default JobDeclined;","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { ChatText, Repeat } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'primereact/button';\nimport { Chip } from 'primereact/chip';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport style from './jobs.module.scss';\nimport { getListOfJobs } from '../../../../APIs/jobs-api';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { formatAUD } from '../../../../shared/lib/format-aud';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\nimport Loader from '../../../../shared/ui/loader/loader';\nimport NoDataFoundTemplate from '../../../../ui/no-data-template/no-data-found-template';\nimport JobDetails from '../../features/job-table-actions/job-details-dialog';\nimport JobDeclined from '../../features/show-job-declined/show-job-declined';\nimport ViewJob from '../../features/view-job/view-job';\n\nexport const formatDate = (timestamp) => {\n  try {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"short\",\n    }).format(date);\n    const year = date.getFullYear();\n    return `${day} ${monthAbbreviation} ${year}`;\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return '';\n  }\n};\n\nconst JobsTable = forwardRef(({ searchValue, setTotal, selected, setSelected, refetch, setRefetch, createJobVisible, isCreateJobVisible, isFilterEnabled, filters }, ref) => {\n  const { trialHeight } = useTrialHeight();\n  const observerRef = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const [showDeclined, setShowDeclined] = useState(false);\n  const [declineMessage, setDeclineMessage] = useState('');\n  const [show, setShow] = useState({ visible: false, jobId: null });\n  const [editMode, setEditMode] = useState(false);\n  const [jobDetails, setJobDetails] = useState({});\n  const [jobs, setJobs] = useState([]);\n  const [page, setPage] = useState(1);\n  const [sort, setSort] = useState({ sortField: 'id', sortOrder: -1 });\n  const [tempSort, setTempSort] = useState({ sortField: 'id', sortOrder: -1 });\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const limit = 25;\n\n  const url = React.useMemo(() => window.location.href, []);\n  const urlObj = React.useMemo(() => new URL(url), [url]);\n  const params = React.useMemo(() => new URLSearchParams(urlObj.search), [urlObj]);\n\n  useEffect(() => {\n    setPage(1);  // Reset to page 1 whenever searchValue changes\n  }, [searchValue, refetch, filters]);\n\n  useEffect(() => {\n    if (params.get('jobId')) {\n      setShow({ visible: true, jobId: params.get('jobId') });\n      urlObj.searchParams.delete('jobId');\n      window.history.replaceState({}, '', urlObj);\n    }\n  }, [params]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n\n      let order = \"\";\n      if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n      else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n      const data = await getListOfJobs(page, limit, searchValue, order, filters);\n      setTotal(() => (data?.count || 0));\n      if (page === 1) setJobs(data.results);\n      else {\n        if (data?.results?.length > 0)\n          setJobs(prev => {\n            const existingIds = new Set(prev.map(data => data.id));\n            const newData = data.results.filter(data => !existingIds.has(data.id));\n            return [...prev, ...newData];\n          });\n      }\n      setSort(tempSort);\n      setHasMoreData(data.count !== jobs.length);\n      setLoading(false);\n    };\n\n    loadData();\n\n  }, [page, searchValue, tempSort, refetch, filters]);\n\n  useEffect(() => {\n    if (jobs.length > 0 && hasMoreData) {\n      observerRef.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n      });\n\n      const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n      if (lastRow) observerRef.current.observe(lastRow);\n    }\n\n    return () => {\n      if (observerRef.current) observerRef.current.disconnect();\n    };\n  }, [jobs, hasMoreData]);\n\n  useEffect(() => {\n    if (isCreateJobVisible) {\n      setEditMode(false);\n      setShow({ jobId: null, visible: false });\n    }\n  }, [isCreateJobVisible]);\n\n  function openDetails(data) {\n    setJobDetails(data);\n    setVisible(true);\n  }\n\n  const jobIDTemplate = (rowData) => {\n    return <div className={`d-flex gap-2 align-items-center justify-content-center show-on-hover`}>\n      <div className='d-flex flex-column' style={{ lineHeight: '1.385' }}>\n        <span>{rowData.number}</span>\n        <span className='font-12' style={{ color: '#98A2B3' }}>{formatDate(rowData.created)}</span>\n      </div>\n      {rowData?.is_recurring && <Repeat color='#158ECC' />}\n      <Button label=\"Open\"\n        onClick={() => {\n          createJobVisible(false);\n          setEditMode(false);\n          setShow({ jobId: rowData.id, visible: true });\n        }}\n        className='primary-text-button ms-3 show-on-hover-element' text\n      />\n    </div>;\n  };\n\n  const jobTypeBody = (rowData) => {\n    if (rowData.type_display === \"Fix\" && rowData.time_type_display === \"Shift\") {\n      return <div className={style.type}>\n        <div className={style.shift}>Shift</div>\n        <div className={style.fix}>Fix</div>\n      </div>;\n    }\n\n    if (rowData.type_display === \"Fix\" && rowData.time_type_display === \"Time frame\") {\n      return <div className={style.type}>\n        <div className={style.timeFrame}>Time Frame</div>\n        <div className={style.fix}>Fix</div>\n      </div>;\n    }\n\n    if (rowData.type_display === \"Hours\" && rowData.time_type_display === \"Shift\") {\n      return <div className={style.type}>\n        <div className={style.shift}>Shift</div>\n        <div className={style.hours}>Hours</div>\n      </div>;\n    }\n\n    if (rowData.type_display === \"Hours\" && rowData.time_type_display === \"Time frame\") {\n      return <div className={style.type}>\n        <div className={style.timeFrame}>Time Frame</div>\n        <div className={style.hours}>Hours</div>\n      </div>;\n    }\n\n    if (rowData.type_display === \"Time Tracker\" && rowData.time_type_display === \"Time frame\") {\n      return <div className={style.type}>\n        <div className={style.timeTracker}>Time Tracker</div>\n        <div className={style.timeFrame2}>Time Frame</div>\n      </div>;\n    }\n    return \"\";\n  };\n\n  const nameBody = (rowData) => {\n    const status = rowData.status;\n    if (status === '1') {\n      return <div className='d-flex align-items-center'>\n        <div className={`d-flex justify-content-center align-items-center ${style.clientName}`}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n            <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n            <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n          </svg>\n        </div>\n        Open Jobs\n      </div>;\n    }\n\n    const name = `${rowData?.worker?.first_name} ${rowData?.worker?.last_name}`;\n    return <div className='d-flex align-items-center'>\n      <div className={`d-flex justify-content-center align-items-center ${style.clientName}`}>\n        <FallbackImage photo={rowData?.worker?.photo} is_business={false} has_photo={!!(rowData?.worker?.photo) || false} />\n      </div>\n      {name}\n    </div>;\n  };\n\n  const statusBody = (rowData) => {\n    const status = rowData.status;\n\n    if (!rowData.published) {\n      return <Chip className={`status ${style.DRAFT} font-14`} label={\"Draft\"} />;\n    }\n\n    if (status === 'a' && rowData.action_status) {\n      return <Chip className={`status ${style.IN_PROGRESS} font-14`} label={\"In Progress\"} />;\n    }\n\n    switch (status) {\n      case '1':\n        return <Chip className={`status ${style.OPEN} font-14`} label={\"Open\"} />;\n      case '2':\n        return <Chip className={`status ${style.ASSIGNED} font-14`} label={\"Assigned\"} />;\n      case '3':\n        return <Chip className={`status ${style.SUBMITTED} font-14`} label={\"Submitted\"} />;\n      case '4':\n        return <Chip className={`status ${style.FINISHED} font-14`} label={\"Finished\"} />;\n      case '6':\n        return <div className='d-flex gap-2 align-items-center'>\n          <Chip className={`status ${style.DECLINED} font-14`} label={\"Declined\"} />\n          <ChatText color='#158ECC' className=\"cursor-pointer\" onClick={() => {\n            setShowDeclined(true);\n            setDeclineMessage(rowData.decline_message);\n          }}\n          />\n        </div>;\n      case 'a':\n        return <Chip className={`status ${style.CONFIRMED} font-14`} label={\"Confirmed\"} />;\n      default:\n        return <Chip className={`status ${style.defaultStatus} font-14`} label={status} />;\n    }\n  };\n\n  const startDateBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{formatDate(rowData.start_date)}</span>;\n  };\n\n  const endDateBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{formatDate(rowData.end_date)}</span>;\n  };\n\n  const assignedTimeBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{parseFloat(rowData.time_assigned).toFixed(2)}h</span>;\n  };\n\n  const realTimeBody = (rowData) => {\n    const [hours, minutes, seconds] = rowData?.real_time?.split(':').map(Number);\n\n    return <span style={{ color: '#667085' }}>{parseFloat(hours + (minutes / 60) + (seconds / 3600)).toFixed(2)}h</span>;\n  };\n\n  const bonusBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>{parseFloat(rowData.variations || 0) < 0 ? `-$${rowData.variations || 0}` : `$${rowData.variations}`}</span>;\n  };\n\n  const totalBody = (rowData) => {\n    return <span style={{ color: '#667085' }}>${formatAUD(rowData.total || 0)}</span>;\n  };\n\n  const linkToBody = (rowData) => {\n    if (!rowData?.project) return '-';\n\n    return <div className='d-flex align-items-center'>\n      <div className={`d-flex justify-content-center align-items-center ${style.clientImg} ${rowData?.client?.is_business ? style.square : 'rounded-circle'}`}>\n        <FallbackImage photo={rowData?.client?.photo} is_business={rowData?.client?.is_business || false} has_photo={rowData?.client?.has_photo || false} />\n      </div>\n      <div className='d-flex flex-column' style={{ lineHeight: '1.385' }}>\n        <span>{rowData?.project?.reference}</span>\n        <span className='font-12' style={{ color: '#98A2B3' }}><Link className={`${style.linkToProjectCard}`} to={`/management?unique_id=${rowData?.project?.unique_id}&reference=${rowData?.project?.reference}&number=${rowData?.project?.number}`}>{rowData?.project?.number}</Link> | {rowData?.client?.name}</span>\n      </div>\n    </div>;\n  };\n\n  const rowClassName = (data) => (data?.deleted ? style.deletedRow : '');\n\n  const onSort = (event) => {\n    const { sortField, sortOrder } = event;\n\n    setTempSort({ sortField, sortOrder });\n    setPage(1);  // Reset to page 1 whenever searchValue changes\n  };\n\n  return (\n    <>\n      <DataTable ref={ref} value={jobs} scrollable selectionMode={'checkbox'}\n        columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n        scrollHeight={`calc(100vh - 175px - ${trialHeight}px - ${isFilterEnabled ? 56 : 0}px)`} className=\"border\" selection={selected}\n        onSelectionChange={(e) => setSelected(e.value)}\n        loading={loading}\n        loadingIcon={Loader}\n        emptyMessage={<NoDataFoundTemplate isDataExist={!!searchValue} />}\n        sortField={sort?.sortField}\n        sortOrder={sort?.sortOrder}\n        onSort={onSort}\n        rowClassName={rowClassName}\n      >\n        <Column selectionMode=\"multiple\" headerClassName='ps-4 border-end-0' bodyClassName={'show-on-hover border-end-0 ps-4'} headerStyle={{ width: '3rem', textAlign: 'center' }} frozen></Column>\n        <Column field=\"number\" header=\"Job ID\" body={jobIDTemplate} style={{ minWidth: '100px' }} className='ps-0' headerClassName='ps-0' frozen sortable></Column>\n        <Column field='type' header=\"Job Type\" body={jobTypeBody} style={{ minWidth: '100px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen sortable></Column>\n        <Column field=\"start_date\" header=\"Start\" body={startDateBody} style={{ minWidth: '122px' }} sortable></Column>\n        <Column field=\"end_date\" header=\"Finish\" body={endDateBody} style={{ minWidth: '122px' }} sortable></Column>\n        <Column field=\"worker.firstname\" header=\"Name A→Z\" body={nameBody} style={{ minWidth: '205px' }}></Column>\n        <Column field=\"reference\" header=\"Job Reference\" style={{ minWidth: '270px' }}></Column>\n        <Column field=\"status\" header=\"Status\" body={statusBody} style={{ minWidth: '120px' }}></Column>\n        <Column field='project.number' header=\"Linked To Project\" body={linkToBody} style={{ minWidth: '105px' }} />\n        <Column field=\"time_assigned\" header=\"Time Assigned\" body={assignedTimeBody} style={{ minWidth: '117px' }} ></Column>\n        <Column field=\"real_time\" header=\"Real Time\" body={realTimeBody} bodyClassName={'text-end'} headerClassName='text-center' style={{ minWidth: '88px' }}></Column>\n        <Column field=\"variations\" header=\"Variation\" body={bonusBody} style={{ minWidth: '88px' }} sortable></Column>\n        <Column field=\"total\" header=\"Total\" body={totalBody} style={{ minWidth: '105px' }} sortable></Column>\n      </DataTable>\n      <JobDetails visible={visible} setVisible={setVisible} jobDetails={jobDetails} />\n      <JobDeclined showDeclined={showDeclined} setShowDeclined={setShowDeclined} message={declineMessage} />\n      <ViewJob visible={show?.visible} jobId={show?.jobId} setVisible={(bool) => setShow((others) => ({ ...others, visible: bool }))} setRefetch={setRefetch} editMode={editMode} setEditMode={setEditMode} />\n    </>\n  );\n});\n\nexport default JobsTable;","import { useState } from 'react';\nimport { Button, Card, Col, Placeholder, Row } from 'react-bootstrap';\nimport { Calendar3, Link, X } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport ViewAttachements from './view-attachements';\nimport style from './view-job.module.scss';\nimport { deleteJob, getJob } from '../../../../APIs/jobs-api';\nimport { formatDate } from '../../Pages/jobs/jobs-table';\nimport CreateJob from '../create-job/create-job';\n\nconst ViewJob = ({ visible, setVisible, jobId, setRefetch, editMode, setEditMode }) => {\n    const [show, setShow] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const navigate = useNavigate();\n\n    let paymentCycleObj = {\n        \"7\": \"WEEK\",\n        \"14\": \"TWO_WEEKS\",\n        \"28\": \"FOUR_WEEKS\",\n        \"1\": \"MONTH\"\n    };\n\n    const jobQuery = useQuery({\n        queryKey: [\"jobRead\", jobId],\n        queryFn: () => getJob(jobId),\n        enabled: !!jobId,\n        retry: 1,\n    });\n\n    const job = jobQuery?.data;\n    const loading = jobQuery?.isFetching;\n\n    const handleEditClick = () => {\n        setVisible(false);\n        setEditMode(true);\n    };\n\n    const calculateShiftHours = (job) => {\n        const startDate = new Date(+job.start_date * 1000);\n        const endDate = new Date(+job.end_date * 1000);\n        const diffInMs = endDate - startDate;\n        const dayCount = diffInMs / (24 * 60 * 60 * 1000);\n        const durationInHours = Number(job.duration) || 0;\n        const dayShiftHours =\n            dayCount > 0\n                ? Math.round((durationInHours / dayCount) * 100) / 100\n                : 0;\n\n        return dayShiftHours.toFixed(2);\n    };\n\n    const deleteMutation = useMutation({\n        mutationFn: () => deleteJob(jobId),\n        onSuccess: () => {\n            setVisible(false);\n            setRefetch((prev) => !prev);\n            toast.success(\"Job deleted successfully\");\n        },\n        onError: (error) => {\n            console.error(\"Error deleting job:\", error);\n            toast.error(\"Failed to delete job\");\n        }\n    });\n\n    return (\n        <>\n            <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n                content={({ closeIconRef, hide }) => (\n                    <div className='create-sidebar d-flex flex-column'>\n                        <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                            <div className=\"d-flex align-items-center gap-3\">\n                                <div className={style.viewBox}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                                        <path d=\"M9.75 1.5C8.5076 1.5 7.5 2.50675 7.5 3.74963V4.5H2.25C1.00736 4.5 0 5.50736 0 6.75V18.75C0 19.9926 1.00736 21 2.25 21H21.75C22.9926 21 24 19.9926 24 18.75V6.75C24 5.50736 22.9926 4.5 21.75 4.5H16.5V3.74963C16.5 2.50675 15.4924 1.5 14.25 1.5H9.75ZM9.75 3H14.25C14.6645 3 15 3.33695 15 3.75092V4.5H9V3.74963C9 3.33566 9.33555 3 9.75 3ZM12.5797 13.3716L22.5 10.7262V18.75C22.5 19.1642 22.1642 19.5 21.75 19.5H2.25C1.83579 19.5 1.5 19.1642 1.5 18.75V10.7262L11.4203 13.3716C11.8001 13.4729 12.1999 13.4729 12.5797 13.3716ZM2.25 6H21.75C22.1642 6 22.5 6.33579 22.5 6.75V9.17379L12.1932 11.9223C12.0666 11.956 11.9334 11.956 11.8068 11.9223L1.5 9.17379V6.75C1.5 6.33579 1.83579 6 2.25 6Z\" fill=\"#079455\" />\n                                    </svg>\n                                </div>\n                                <span className={style.viewHeading}>Job Details</span>\n                            </div>\n                            <span>\n                                <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                    <X size={24} color='#667085' />\n                                </Button>\n                            </span>\n                        </div>\n\n\n                        <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 102px)', overflow: 'auto' }}>\n                            <div className={clsx('d-flex justify-content-between align-items-center mb-3')}>\n                                <h1 className={style.heading}>Job Details</h1>\n                                <div className='d-flex align-items-center gap-2'>\n                                    <span className='font-14'>Job ID: {jobId}</span>\n                                </div>\n                            </div>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Job Reference</label>\n                                        {loading ? (\n                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                <Placeholder bg=\"secondary\" style={{ height: '20px', width: '50%', borderRadius: '4px' }} size=\"lg\" />\n                                            </Placeholder>\n                                        ) : (\n                                            <p className={clsx(style.text)}>{job?.short_description || \"-\"}</p>\n                                        )}\n                                    </div>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Job Description</label>\n                                        {loading ? (\n                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                <Placeholder bg=\"secondary\" style={{ height: '40px', width: '100%', borderRadius: '4px' }} size=\"lg\" />\n                                            </Placeholder>\n                                        ) : (\n                                            <p className={clsx(style.text, !expanded && style.description, \"mb-0\")}>{job?.long_description || \"-\"}</p>\n                                        )}\n                                        {!loading && job?.long_description?.length > 200 && (\n                                            <button onClick={() => setExpanded(!expanded)} className={style.toggleButton}>\n                                                {expanded ? \"Show Less\" : \"Show More\"}\n                                            </button>\n                                        )}\n                                    </div>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Assigned to</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                    {\n                                        job?.status === '1' ?\n                                            <div className='d-flex align-items-center gap-2'>\n                                                <div className={`d-flex justify-content-center align-items-center`} style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                                        <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                                                        <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                                                    </svg>\n                                                </div>\n                                                Open Jobs\n                                            </div>\n                                            : <Row className={clsx(style.chooseUserBox, 'flex-nowrap', 'w-75')}>\n                                                <Col sm={2} className='p-0'>\n                                                    {\n                                                        loading ? <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                            <Placeholder bg=\"secondary\" style={{ height: '62px', width: '62px', borderRadius: '50%' }} size=\"lg\" />\n                                                        </Placeholder> : (\n                                                            <div className='d-flex justify-content-center align-items-center border' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden' }}>\n                                                                {job?.worker?.has_photo ? <img src={job?.worker?.photo} style={{ width: '62px', height: '62px', borderRadius: '50%' }} />\n                                                                    : <span className='font-16'>{job?.worker?.alias}</span>\n                                                                }\n                                                            </div>\n                                                        )\n                                                    }\n\n                                                </Col>\n                                                <Col sm={5} className='pe-0 ps-0'>\n                                                    <label className={clsx(style.assignedUser, 'text-nowrap')}>\n                                                        {loading ? (\n                                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                                <Placeholder bg=\"secondary\" style={{ height: '20px', width: '150px', borderRadius: '4px' }} size=\"lg\" />\n                                                            </Placeholder>\n                                                        ) : (\n                                                            <>{job?.worker?.full_name || \"-\"}</>\n                                                        )}\n                                                    </label>\n                                                    <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                                </Col>\n                                                <Col sm={5} className=''>\n                                                    <div className='d-flex align-items-center gap-2 mb-3'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                        {loading ? (\n                                                            <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '0px' }}>\n                                                                <Placeholder bg=\"secondary\" style={{ height: '20px', width: '100px', borderRadius: '4px' }} size=\"lg\" />\n                                                            </Placeholder>\n                                                        ) : (\n                                                            <span>{job?.worker?.hourly_rate || \"-\"} AUD</span>\n                                                        )}\n                                                    </div>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                        <span>{paymentCycleObj[job?.worker?.payment_cycle] || \"-\"}</span>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                    }\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Time / Money</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column gap-3')}>\n                                    <div className='d-flex gap-3'>\n                                        <div className={style.paymentType}>\n                                            <label className={clsx(style.customLabel)}>Payment Type</label>\n                                            {\n                                                job?.type === \"2\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"fix\"\n                                                        value=\"2\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                                </div>\n                                            }\n                                            {\n                                                job?.type === \"3\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"fix\"\n                                                        value=\"3\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                                </div>\n                                            }\n                                            {\n                                                job?.type === \"4\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"fix\"\n                                                        value=\"4\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                                </div>\n                                            }\n                                        </div>\n                                        <div className='d-flex align-items-center gap-3'>\n                                            {\n                                                job?.type !== \"2\" && <div>\n                                                    <label className={clsx(style.customLabel)}>Hours</label>\n                                                    <div className={style.paymentBox}>\n                                                        <div className={style.dollarBox}>\n                                                            <span style={{ fontSize: '14px', color: '#158ECC' }}>H</span>\n                                                        </div>\n                                                        {job?.duration}\n                                                    </div>\n                                                </div>\n                                            }\n                                            <div>\n                                                <label className={clsx(style.customLabel)}>Payment</label>\n                                                <div className={style.paymentBox}>\n                                                    <div className={style.dollarBox}>\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                            <path d=\"M4 10.7813C4.14782 12.4484 5.51294 13.6306 7.59107 13.7837V15H8.63448V13.7837C10.9039 13.6051 12.3125 12.3463 12.3125 10.4836C12.3125 8.89307 11.3647 7.97448 9.35617 7.45565L8.63448 7.26853V3.46659C9.75615 3.57716 10.5126 4.18104 10.7039 5.08262H12.1734C12.0082 3.4836 10.6343 2.33536 8.63448 2.20778V1H7.59107V2.23329C5.65207 2.46294 4.32172 3.70474 4.32172 5.38882C4.32172 6.84326 5.28687 7.87242 6.98241 8.3062L7.59107 8.4678V12.4994C6.44332 12.3293 5.65207 11.6999 5.46077 10.7813H4ZM7.39108 6.94532C6.34767 6.68165 5.79119 6.12029 5.79119 5.32928C5.79119 4.38518 6.49549 3.68773 7.59107 3.50061V6.99635L7.39108 6.94532ZM8.98228 8.81652C10.2692 9.13973 10.8343 9.67558 10.8343 10.5857C10.8343 11.6829 10.0083 12.4143 8.63448 12.5249V8.73147L8.98228 8.81652Z\" fill=\"#158ECC\" />\n                                                        </svg>\n                                                    </div>\n                                                    {job?.cost} AUD\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className='d-flex gap-3'>\n                                        <div className={style.paymentType}>\n                                            <label className={clsx(style.customLabel)}>Time</label>\n                                            {\n                                                job?.time_type === \"1\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        value=\"1\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                            }\n                                            {\n                                                job?.time_type === \"T\" &&\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        value=\"T\"\n                                                        checked\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                                </div>\n                                            }\n                                        </div>\n                                        <div className=''>\n                                            <label className={clsx(style.customLabel)}>Starts</label>\n                                            <div className={style.paymentBox}>\n                                                <div className={style.dollarBox}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                        <path d=\"M8.51496 1.01896C8.34401 1.00635 8.17225 1 8 1V0C8.19685 0 8.39314 0.00726199 8.58852 0.0216722L8.51496 1.01896ZM10.5193 1.46905C10.1985 1.34533 9.86912 1.2454 9.53371 1.17008L9.75282 0.194382C10.1361 0.280463 10.5126 0.394665 10.8792 0.536055L10.5193 1.46905ZM11.889 2.17971C11.7458 2.08402 11.5994 1.99388 11.4503 1.90939L11.9432 1.0393C12.1136 1.13586 12.2809 1.23888 12.4446 1.34824C12.6082 1.4576 12.7674 1.5727 12.9219 1.69322L12.3066 2.48158C12.1715 2.37612 12.0322 2.27541 11.889 2.17971ZM13.7231 3.96934C13.5252 3.68829 13.3068 3.42218 13.0697 3.17321L13.794 2.48368C14.0649 2.76821 14.3145 3.07233 14.5407 3.39353L13.7231 3.96934ZM14.4672 5.32122C14.4012 5.16208 14.3296 5.00583 14.2526 4.85271L15.1458 4.40311C15.2339 4.5781 15.3157 4.75667 15.391 4.93853C15.4664 5.12039 15.5348 5.30453 15.5962 5.49054L14.6467 5.80423C14.5929 5.64147 14.5331 5.48035 14.4672 5.32122ZM14.9979 7.82822C14.9895 7.48455 14.9557 7.14197 14.8969 6.80326L15.8822 6.63231C15.9494 7.01939 15.988 7.41092 15.9976 7.80367L14.9979 7.82822ZM14.8655 9.36563C14.8991 9.1967 14.9264 9.02699 14.9474 8.85687L15.9398 8.97929C15.9159 9.17372 15.8847 9.36766 15.8463 9.56072C15.8079 9.75378 15.7625 9.94489 15.7102 10.1337L14.7464 9.867C14.7922 9.70179 14.8319 9.53457 14.8655 9.36563ZM13.914 11.745C14.0979 11.4546 14.2602 11.151 14.3995 10.8367L15.3137 11.2419C15.1545 11.6011 14.969 11.9481 14.7588 12.28L13.914 11.745ZM12.9497 12.9497C13.0715 12.828 13.1885 12.702 13.3005 12.5722L14.0577 13.2254C13.9297 13.3737 13.796 13.5177 13.6569 13.6569L12.9497 12.9497Z\" fill=\"#158ECC\" />\n                                                        <path d=\"M8 1C6.84885 1 5.71545 1.2839 4.70022 1.82655C3.68499 2.3692 2.81926 3.15386 2.17971 4.11101C1.54017 5.06816 1.14654 6.16827 1.03371 7.31388C0.920876 8.45949 1.09232 9.61525 1.53285 10.6788C1.97337 11.7423 2.66939 12.6808 3.55925 13.4111C4.44911 14.1414 5.50533 14.6409 6.63437 14.8655C7.76341 15.0901 8.93041 15.0327 10.032 14.6986C11.1336 14.3644 12.1358 13.7637 12.9497 12.9497L13.6569 13.6569C12.7266 14.5871 11.5812 15.2736 10.3223 15.6555C9.06332 16.0374 7.72961 16.1029 6.43928 15.8463C5.14895 15.5896 3.94183 15.0187 2.92486 14.1841C1.90788 13.3495 1.11243 12.2769 0.608966 11.0615C0.105504 9.846 -0.0904279 8.52514 0.0385242 7.21586C0.167476 5.90659 0.617333 4.64933 1.34825 3.55544C2.07916 2.46155 3.06857 1.5648 4.22883 0.94463C5.38909 0.324457 6.68439 0 8 0V1Z\" fill=\"#158ECC\" />\n                                                        <path d=\"M7.5 3C7.77614 3 8 3.22386 8 3.5V8.70984L11.2481 10.5659C11.4878 10.7029 11.5711 11.0083 11.4341 11.2481C11.2971 11.4878 10.9917 11.5711 10.7519 11.4341L7.25193 9.43412C7.09615 9.3451 7 9.17943 7 9V3.5C7 3.22386 7.22386 3 7.5 3Z\" fill=\"#158ECC\" />\n                                                    </svg>\n                                                </div>\n                                                {job?.time_type === \"1\" && formatDate(job?.start_date)}\n                                                {job?.time_type === \"T\" && <>{formatDate(job?.start_date)} - {formatDate(job?.end_date)} </>}\n                                            </div>\n                                        </div>\n                                        {(job?.type === '2' && job?.time_type !== 'T') ? (\n                                            <div>\n                                                <label className={clsx(style.customLabel)}>Hours</label>\n                                                <div className={style.paymentBox}>\n                                                    <div className={style.dollarBox}>\n                                                        <span style={{ fontSize: '14px', color: '#158ECC' }}>H</span>\n                                                    </div>\n                                                    {job?.duration}\n                                                </div>\n                                            </div>\n                                        ) :\n                                            (job?.time_type === \"1\" || (job?.time_type !== '1' && job?.type === '4')) ? (\n                                                <div className=''>\n                                                    <label className={clsx(style.customLabel)}>Hours</label>\n                                                    <div className={style.paymentBox}>\n                                                        <div className={style.dollarBox}>\n                                                            <span style={{ fontSize: '14px', color: '#158ECC' }}>H</span>\n                                                        </div>\n                                                        {calculateShiftHours(job)}\n                                                    </div>\n                                                </div>\n                                            ) : null}\n                                    </div>\n\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>Link to Project</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Project</label>\n                                        <p className={clsx(style.text, 'd-flex align-items-center gap-1')}>{job?.project?.number || \"-\"} <Button className='text-button p-0' onClick={() => navigate(`/management?unique_id=${job?.project?.unique_id}&reference=${job?.project?.reference}&number=${job?.project?.number}`)}><Link size={16} color='#158ECC' /></Button></p>\n                                    </div>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Reference</label>\n                                        <p className={clsx(style.text, style.description)}>{job?.project?.reference || \"-\"}</p>\n                                    </div>\n                                    <div className='form-group mb-3'>\n                                        <label className={clsx(style.customLabel)}>Description</label>\n                                        <p className={clsx(style.text, style.description)}>{job?.project?.description || \"-\"}</p>\n                                    </div>\n                                </Card.Header>\n                            </Card>\n                            {\n                                job?.project_photos && <>\n                                    <h1 className={clsx(style.heading, 'mb-3')}>Project Photos</h1>\n                                    <Card className={clsx(style.border, 'mb-3')}>\n                                        <Card.Header className={clsx(style.background, 'border-0')}>\n                                            <div className='d-flex flex-column gap-1' style={{ overflowX: 'auto' }}>\n                                                {\n                                                    job?.project_photos == 1 ? (<>\n                                                        <label className={clsx(style.customLabel, 'd-block')}>Before & After</label>\n                                                        <div style={{ width: '124px', height: '124px', background: '#f0f0f0' }}></div>\n                                                    </>) : job?.project_photos == 2 ? (<>\n                                                        <label className={clsx(style.customLabel, 'd-block')}>In Process</label>\n                                                        <div style={{ width: '124px', height: '124px', background: '#f0f0f0' }}></div>\n                                                    </>) : job?.project_photos == 3 ? (<>\n                                                        <label className={clsx(style.customLabel, 'd-block')}>All</label>\n                                                        <div style={{ width: '124px', height: '124px', background: '#f0f0f0' }}></div>\n                                                    </>) : null\n                                                }\n                                            </div>\n                                            {/* <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria10.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria11.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria12.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria13.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria14.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview />\n                                        <Image src=\"https://primefaces.org/cdn/primereact/images/galleria/galleria15.jpg\" alt=\"Image\" className={style.jobGalleri} width=\"124\" preview /> */}\n                                        </Card.Header>\n                                    </Card>\n                                </>\n                            }\n                            <h1 className={clsx(style.heading, 'mb-3')}>Documents</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <Button className='outline-button d-flex gap-2' onClick={() => setShow(true)} style={{ borderRadius: '40px' }}>\n                                        Viw All Documents\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                            <path d=\"M1.25 4.375C1.25 3.33947 2.08947 2.5 3.125 2.5H6.57992C7.77713 2.5 8.78091 3.19995 9.46927 3.97997C9.98156 4.56048 10.5984 5 11.25 5H16.8759C17.912 5 18.75 5.84003 18.75 6.875V15.625C18.75 16.6605 17.9105 17.5 16.875 17.5H3.125C2.08947 17.5 1.25 16.6605 1.25 15.625V4.375ZM3.125 3.75C2.77982 3.75 2.5 4.02982 2.5 4.375V7.5H17.5V6.875C17.5 6.52926 17.2205 6.25 16.8759 6.25H11.25C10.0451 6.25 9.11184 5.46409 8.53203 4.80706C7.96726 4.16709 7.27657 3.75 6.57992 3.75H3.125ZM17.5 8.75H2.5V15.625C2.5 15.9702 2.77982 16.25 3.125 16.25H16.875C17.2202 16.25 17.5 15.9702 17.5 15.625V8.75Z\" fill=\"#344054\" />\n                                        </svg>\n                                    </Button>\n                                </Card.Header>\n                            </Card>\n\n                            <h1 className={clsx(style.heading, 'mb-3')}>History</h1>\n                            <Card className={clsx(style.border, 'mb-3')}>\n                                <Card.Header className={clsx(style.background, 'border-0')}>\n                                    <table className='w-100 table table-bordered rounded'>\n                                        <thead>\n                                            <tr>\n                                                <td>Date</td>\n                                                <td>User</td>\n                                                <td>Status</td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>-</td>\n                                                <td>-</td>\n                                                <td>-</td>\n                                            </tr>\n                                        </tbody>\n\n                                    </table>\n                                </Card.Header>\n                            </Card>\n                        </div>\n\n                        <div className='modal-footer d-flex align-items-center justify-content-between gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                            <div>\n                                <Button className='danger-text-button' disabled={deleteMutation.isPending} onClick={() => deleteMutation.mutate()}>Delete\n                                    {deleteMutation.isPending && <ProgressSpinner style={{ width: \"20px\", height: \"20px\" }} />}\n                                </Button>\n                            </div>\n                            <div className='d-flex align-items-center gap-2'>\n                                <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                                <Button type='button' disabled={job?.status === \"3\" || job?.status === \"a\"} onClick={handleEditClick} className='solid-button' style={{ minWidth: '75px' }}>Edit {false && <ProgressSpinner\n                                    style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                                />}</Button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            ></Sidebar>\n            <ViewAttachements attachments={job?.attachments || []} show={show} setShow={setShow} />\n\n            {/* Edit Job Modal */}\n            {editMode && (\n                <CreateJob\n                    visible={editMode}\n                    setVisible={setEditMode}\n                    setRefetch={setRefetch}\n                    isEditMode={true}\n                    jobData={job}\n                    jobId={jobId}\n                    refetch={() => jobQuery.refetch()}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ViewJob;","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"view-job_newJobTag__EyCAF\",\"border\":\"view-job_border__KnprQ\",\"borderBottom\":\"view-job_borderBottom__Ag9Vk\",\"background\":\"view-job_background__eeiN9\",\"customLabel\":\"view-job_customLabel__6I5W6\",\"lightText\":\"view-job_lightText__1nbTX\",\"customText\":\"view-job_customText__oK3GU\",\"text\":\"view-job_text__Vqm2T\",\"assignedUser\":\"view-job_assignedUser__lgKW+\",\"toggleButton\":\"view-job_toggleButton__wFHGc\",\"description\":\"view-job_description__0rHSF\",\"chooseUserBox\":\"view-job_chooseUserBox__hIESK\",\"heading\":\"view-job_heading__XPFer\",\"paymentType\":\"view-job_paymentType__BE0T5\",\"typeBorder\":\"view-job_typeBorder__R7jQm\",\"paymentmain\":\"view-job_paymentmain__ejYfy\",\"customRadio\":\"view-job_customRadio__C9Z8H\",\"fix\":\"view-job_fix__NRFOO\",\"hours\":\"view-job_hours__s1kVw\",\"timetracker\":\"view-job_timetracker__ut0cZ\",\"shift\":\"view-job_shift__2dlSR\",\"timeFrame\":\"view-job_timeFrame__j+Q-T\",\"radioLabel\":\"view-job_radioLabel__19vAG\",\"RadioButton\":\"view-job_RadioButton__F21av\",\"paymentBox\":\"view-job_paymentBox__PS9jL\",\"dollarBox\":\"view-job_dollarBox__CmYGa\",\"jobGalleri\":\"view-job_jobGalleri__Lc+x4\",\"viewBox\":\"view-job_viewBox__04ZW0\",\"viewHeading\":\"view-job_viewHeading__rzJVa\",\"defaultStatus\":\"view-job_defaultStatus__sF7Uc\",\"status\":\"view-job_status__p9QvE\",\"open\":\"view-job_open__-y1qk\",\"Accepted\":\"view-job_Accepted__SPymV\",\"CONFIRMED\":\"view-job_CONFIRMED__LIoTK\",\"ASSIGN\":\"view-job_ASSIGN__Rf5vD\",\"NotConfirmed\":\"view-job_NotConfirmed__hK3lN\",\"COMPLETED\":\"view-job_COMPLETED__LQaDi\",\"DECLINED\":\"view-job_DECLINED__JzIeY\",\"MANAGER_DECLINED\":\"view-job_MANAGER_DECLINED__ZLLTf\",\"finished\":\"view-job_finished__21gzC\",\"assign\":\"view-job_assign__uRJ2w\",\"modal\":\"view-job_modal__9jVc+\",\"modalHeader\":\"view-job_modalHeader__-AqYp\",\"headerTitle\":\"view-job_headerTitle__kcd8H\",\"attachmentBox\":\"view-job_attachmentBox__El24C\"};","// extracted by mini-css-extract-plugin\nexport default {\"noDataBox\":\"no-data-found-template_noDataBox__HgeT1\",\"searchImg\":\"no-data-found-template_searchImg__MnYNA\",\"title\":\"no-data-found-template_title__P5uV2\",\"subTitle\":\"no-data-found-template_subTitle__zMBB-\",\"supportext\":\"no-data-found-template_supportext__pHg2P\"};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport style from './no-data-found-template.module.scss';\nimport NodataImg from \"../../assets/images/img/NodataImg.png\";\nimport Support from '../../shared/ui/support/support';\n\n\nconst NoDataFoundTemplate = ({ isDataExist = true }) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <div className={clsx(style.noDataBox)}>\n            <div className='position-relative d-flex flex-column'>\n                <img src={NodataImg} alt='no-data' />\n            </div>\n            {\n                isDataExist ? (\n                    <>\n                        <h2 className={clsx(style.title)}>There is no results</h2>\n                        <p className={clsx(style.subTitle)}>\n                            The user you are looking for doesn't exist. <br />Here are some helpful links:\n                        </p>\n                        <Link to={\"/\"}><Button className='outline-button' style={{ marginBottom: '32px' }}> <ChevronLeft /> Go back</Button></Link>\n                        <Link onClick={() => setVisible(true)} to={\"#\"}><span className={clsx(style.supportext)}>Support</span></Link>\n                    </>\n                ) : (\n                    <>\n                        <h2 className={clsx(style.title)}>No historical records yet.</h2>\n                    </>\n                )\n            }\n            <Support setVisible={setVisible} visible={visible} />\n        </div>\n    );\n};\n\nexport default NoDataFoundTemplate;"],"names":["formatAUD","amount","shorten","arguments","length","undefined","num","parseFloat","isNaN","Math","abs","Intl","NumberFormat","notation","compactDisplay","minimumFractionDigits","maximumFractionDigits","format","_ref","show","setShow","attachments","headerElement","_jsx","className","style","modalHeader","children","headerTitle","footerContent","Button","onClick","borderRadius","Dialog","visible","modal","header","footer","onHide","map","attachment","_jsxs","attachmentBox","getFileIcon","extension","Link","to","link","target","name","window","open","Download","JobConfirmation","setVisible","src","warningIcon","alt","width","height","label","autoFocus","fontSize","color","fontWeight","marginBottom","JobDetails","confirmation","setConfirmation","useState","InfoCircle","size","_Fragment","Chip","showDeclined","setShowDeclined","message","XOctagon","contentClassName","formatDate","timestamp","date","Date","day","getDate","monthAbbreviation","DateTimeFormat","month","getFullYear","error","console","forwardRef","ref","searchValue","setTotal","selected","setSelected","refetch","setRefetch","createJobVisible","isCreateJobVisible","isFilterEnabled","filters","trialHeight","useTrialHeight","observerRef","useRef","declineMessage","setDeclineMessage","jobId","editMode","setEditMode","jobDetails","setJobDetails","jobs","setJobs","page","setPage","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","loading","setLoading","url","React","location","href","urlObj","URL","params","URLSearchParams","search","useEffect","get","searchParams","delete","history","replaceState","async","order","data","getListOfJobs","_data$results","count","results","prev","existingIds","Set","id","newData","filter","has","loadData","current","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","DataTable","value","scrollable","selectionMode","columnResizeMode","resizableColumns","showGridlines","scrollHeight","selection","onSelectionChange","e","loadingIcon","Loader","emptyMessage","NoDataFoundTemplate","isDataExist","onSort","event","rowClassName","deleted","deletedRow","Column","headerClassName","bodyClassName","headerStyle","textAlign","frozen","field","body","rowData","lineHeight","number","created","is_recurring","Repeat","text","minWidth","sortable","type_display","time_type_display","type","shift","fix","timeFrame","hours","timeTracker","timeFrame2","shadowRight","start_date","end_date","_rowData$worker","_rowData$worker2","_rowData$worker3","_rowData$worker4","status","clientName","xmlns","viewBox","fill","d","fillRule","clipRule","worker","first_name","last_name","FallbackImage","photo","is_business","has_photo","published","DRAFT","action_status","IN_PROGRESS","OPEN","ASSIGNED","SUBMITTED","FINISHED","DECLINED","ChatText","decline_message","CONFIRMED","defaultStatus","_rowData$client","_rowData$client2","_rowData$client3","_rowData$client4","_rowData$project","_rowData$project2","_rowData$project3","_rowData$project4","_rowData$project5","_rowData$client5","project","clientImg","client","square","reference","linkToProjectCard","unique_id","time_assigned","toFixed","_rowData$real_time","minutes","seconds","real_time","split","Number","variations","total","JobDeclined","ViewJob","bool","others","expanded","setExpanded","navigate","useNavigate","paymentCycleObj","jobQuery","useQuery","queryKey","queryFn","getJob","enabled","retry","job","isFetching","handleEditClick","calculateShiftHours","startDate","dayCount","durationInHours","duration","round","deleteMutation","useMutation","mutationFn","deleteJob","onSuccess","toast","success","onError","Sidebar","position","dismissable","content","_ref2","_job$long_description","_job$worker","_job$worker2","_job$worker3","_job$worker4","_job$worker5","_job$worker6","_job$project","_job$project5","_job$project6","closeIconRef","hide","borderBottom","padding","viewHeading","X","overflow","clsx","heading","Card","border","Header","background","customLabel","Placeholder","as","animation","bg","short_description","description","long_description","toggleButton","Row","chooseUserBox","Col","sm","alias","assignedUser","full_name","display","alignItems","justifyContent","hourly_rate","Calendar3","payment_cycle","paymentType","RadioButton","checked","customRadio","htmlFor","radioLabel","timetracker","paymentBox","dollarBox","cost","time_type","_job$project2","_job$project3","_job$project4","project_photos","overflowX","borderTop","disabled","isPending","mutate","ProgressSpinner","stopPropagation","ViewAttachements","CreateJob","isEditMode","jobData","NodataImg","ChevronLeft","Support"],"sourceRoot":""}