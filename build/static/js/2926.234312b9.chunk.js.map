{"version":3,"file":"static/js/2926.234312b9.chunk.js","mappings":"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","sources":["shared/lib/format-aud.js","../node_modules/react-bootstrap-icons/dist/icons/info-square-fill.js","components/Business/Pages/statistics/overview.js","webpack://memateapp/./src/components/Business/Pages/statistics/statistics.module.scss?e36e"],"sourcesContent":["export function formatAUD(amount, shorten = false) {\n    const num = parseFloat(amount);\n\n    if (isNaN(num)) {\n        return \"0.00\";\n    }\n\n    if (shorten && Math.abs(num) >= 1000.00) {\n        return new Intl.NumberFormat('en-AU', {\n            notation: \"compact\",\n            compactDisplay: \"short\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(num);\n    }\n\n    return new Intl.NumberFormat('en-AU', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(num);\n}","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar InfoSquareFill = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '1em' : _ref$size,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? null : _ref$title,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-info-square-fill', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm8.93 4.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2\"\n  }));\n});\nInfoSquareFill.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nexport default InfoSquareFill;","import React, { useState, useEffect } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { ClipboardData, Google, InfoSquareFill, PieChart, Speedometer2, TextParagraph, WindowDesktop } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Chart } from 'primereact/chart';\nimport style from './statistics.module.scss';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { formatAUD } from '../../../../shared/lib/format-aud';\n\nconst Overview = () => {\n    const { trialHeight } = useTrialHeight();\n\n    // Sample data based on the image with 12 months\n    const reportsData = {\n        grossVolume: { value: 1402.50, change: 38.28, date: 'Feb 26, 2024', prevValue: 1014.38 },\n        activeQuotesVolume: { value: 47, change: null, date: 'Feb 26, 2024', prevValue: 26.48, auto: 485.00 },\n        orders: { value: 1, change: 0.0, date: 'Feb 26, 2024', prevValue: 1014.38 },\n        unpaidInvoicesVolume: { value: 3444.69, change: 38.28, date: 'Feb 26, 2024', prevValue: 1014.38 },\n        spendPerOrder: { value: 0.00, change: null, date: 'Feb 26, 2024', prevValue: 1014.38 },\n        jobsCompleted: { value: 0, change: 0.0, date: 'Feb 26, 2024', prevValue: 1014.38 },\n        contractorExpense: { value: 3444.69, change: null, date: 'Feb 26, 2024', prevValue: 0.00 },\n    };\n\n    const [grossVolumeChartData, setGrossVolumeChartData] = useState({});\n    const [activeQuotesChartData, setActiveQuotesChartData] = useState({});\n    const [ordersChartData, setOrdersChartData] = useState({});\n    const [unpaidInvoicesChartData, setUnpaidInvoicesChartData] = useState({});\n    const [spendPerOrderChartData, setSpendPerOrderChartData] = useState({});\n    const [jobsCompletedChartData, setJobsCompletedChartData] = useState({});\n    const [contractorExpenseChartData, setContractorExpenseChartData] = useState({});\n\n    useEffect(() => {\n        const documentStyle = window.getComputedStyle(document.documentElement);\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary') || '#475467';\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border') || '#E0E0E0';\n\n        // Common chart configuration\n        const baseOptions = {\n            maintainAspectRatio: false,\n            aspectRatio: 0.6,\n            plugins: {\n                legend: { display: false },\n                title: { display: false },\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary,\n                        callback: function (value) {\n                            const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n                            return value === 0 ? labels[0] : value === labels.length - 1 ? labels[labels.length - 1] : '';\n                        },\n                        padding: 10,\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false,\n                    },\n                },\n                y: {\n                    ticks: { display: false },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false,\n                    },\n                },\n            },\n            elements: {\n                line: {\n                    tension: 0.4, // Matches the curved line in the image\n                    borderWidth: 2,\n                },\n                point: {\n                    radius: 0, // Hide data points to match minimalist design\n                },\n            },\n        };\n\n        // Gross Volume Chart\n        const grossVolumeData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Gross Volume',\n                    data: [1014.38, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1375, 1390, 1400, 1402.50],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF', // Blue line to match the image\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04), // Light blue gradient\n                },\n            ],\n        };\n        setGrossVolumeChartData({ ...grossVolumeData, options: baseOptions });\n\n        // Active Quotes Volume Chart\n        const activeQuotesData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Active Quotes',\n                    data: [26.48, 30, 35, 38, 40, 42, 44, 45, 46, 46.5, 47, 47],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04),\n                },\n            ],\n        };\n        setActiveQuotesChartData({ ...activeQuotesData, options: baseOptions });\n\n        // Orders Chart\n        const ordersData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Orders',\n                    data: [1014.38, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50, 1],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04),\n                },\n            ],\n        };\n        setOrdersChartData({ ...ordersData, options: baseOptions });\n\n        // Unpaid Invoices Volume Chart\n        const unpaidInvoicesData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Unpaid Invoices',\n                    data: [1014.38, 1200, 1400, 1600, 1800, 2000, 2200, 2500, 2800, 3000, 3200, 3444.69],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04),\n                },\n            ],\n        };\n        setUnpaidInvoicesChartData({ ...unpaidInvoicesData, options: baseOptions });\n\n        // Spend per Order Chart\n        const spendPerOrderData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Spend per Order',\n                    data: [1014.38, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50, 0.00],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04),\n                },\n            ],\n        };\n        setSpendPerOrderChartData({ ...spendPerOrderData, options: baseOptions });\n\n        // Jobs Completed Chart\n        const jobsCompletedData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Jobs Completed',\n                    data: [1014.38, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50, 0],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04),\n                },\n            ],\n        };\n        setJobsCompletedChartData({ ...jobsCompletedData, options: baseOptions });\n\n        // Contractor Expense Chart\n        const contractorExpenseData = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Contractor Expense',\n                    data: [0, 500, 1000, 1500, 2000, 2500, 3000, 3200, 3300, 3400, 3422, 3444.69],\n                    fill: true,\n                    tension: 0.4,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradient('#1AB2FF', 0.2, 0.04),\n                },\n            ],\n        };\n        setContractorExpenseChartData({ ...contractorExpenseData, options: baseOptions });\n    }, []);\n\n    // Gradient function\n    const getGradient = (color, startOpacity, endOpacity) => {\n        const ctx = document.createElement('canvas').getContext('2d');\n        if (!ctx) return `rgba(${hexToRgb(color)}, ${startOpacity})`;\n\n        const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n        gradient.addColorStop(0, `rgba(${hexToRgb(color)}, ${startOpacity})`);\n        gradient.addColorStop(1, `rgba(${hexToRgb(color)}, ${endOpacity})`);\n        return gradient;\n    };\n\n    // Helper to convert hex to RGB\n    const hexToRgb = (hex) => {\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? `${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}` : '0, 0, 0';\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Overview</title>\n            </Helmet>\n            <div className={`topbar ${style.borderTopbar}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                {/* Executive - disabled */}\n                <Link to=\"/statistics/executive\" className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <PieChart color='#9E77ED' size={16} className='me-2' />\n                    <span className={style.topbartext}>Executive</span>\n                </Link>\n                {/* Sales Conversion - disabled */}\n                <Link to=\"/statistics/sales-conversion\" className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <Speedometer2 color='#17B26A' size={16} className='me-2' />\n                    <span className={style.topbartext}>Conversion</span>\n                </Link>\n                {/* Overview - disabled (current page) */}\n                <Link to=\"/statistics/overview\" style={{ background: \"#FEF3F2\" }} className={clsx(style.activeTab, 'd-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <TextParagraph color='#F04438' size={16} className='me-2' />\n                    <span className={style.topbartext} style={{ color: \"#F04438\" }}>Overview</span>\n                </Link>\n                {/* Key Results - enabled */}\n                <Link to=\"/statistics/key-results\" className='d-flex align-items-center px-2 py-1'>\n                    <WindowDesktop color='#667085' size={16} className='me-2' />\n                    <span className={style.topbartext}>Key Results</span>\n                </Link>\n                {/* Reports - disabled */}\n                <Link to={\"#\"} className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <ClipboardData color='#084095' size={16} className='me-2' />\n                    <span className={style.topbartext}>Reports</span>\n                </Link>\n                {/* GA Widgets - disabled */}\n                <Link to={\"#\"} className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <Google color='#F79009' size={16} className='me-2' />\n                    <span className={style.topbartext}>GA Widgets</span>\n                </Link>\n            </div>\n\n            <div className={clsx(style.keyResults)} style={{ padding: \"24px\", marginBottom: '20px', overflow: 'auto', height: `calc(100vh - 175px - ${trialHeight}px)`, background: '#F8F9FC', position: 'relative' }}>\n                <h2 className={clsx(style.keyResultsTitle)}>Reports Overview</h2>\n\n                <div className={clsx(style.dateRangeSelector)}>\n                    <select className={style.dateRangeDropdown}>\n                        <option>Year to date</option>\n                    </select>\n                    <span>1 Jan - 26 Feb</span>\n\n                    <span>Compared to </span>\n\n                    <select className={style.dateRangeDropdown}>\n                        <option>Previous year</option>\n                    </select>\n\n                    <select className={style.dateRangeDropdown}>\n                        <option>Daily</option>\n                    </select>\n                </div>\n\n                <Card className='rounded-0 border-0'>\n                    <Card.Body className='p-0'>\n                        <Row className='p-0 m-0 w-100'>\n                            {/* Gross Volume */}\n                            <Col sm={4} className='border-top border-left border-right' style={{ height: '340px', padding: '20px' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Gross Volume</span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                        <span className={style.changePositive}>{reportsData.grossVolume.change}%</span>\n                                    </div>\n                                    <span className={style.dateLabel}>{reportsData.grossVolume.date}<br /> ${reportsData.grossVolume.prevValue}</span>\n                                </div>\n                                <div className={style.value}>${formatAUD(reportsData.grossVolume.value)}</div>\n                                <Chart type=\"line\" data={grossVolumeChartData} options={grossVolumeChartData.options} style={{ height: '200px' }} />\n                            </Col>\n\n                            {/* Active Quotes Volume */}\n                            <Col sm={4} className='border-top' style={{ height: '340px', padding: '20px', position: 'relative' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Active Quotes Volume</span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                        <span className={style.changeNeutral}>{reportsData.activeQuotesVolume.change || 'N/A'}</span>\n                                    </div>\n                                    <span className={style.dateLabel}>{reportsData.activeQuotesVolume.date} <br />${reportsData.activeQuotesVolume.prevValue}</span>\n                                </div>\n                                <div className={style.value}>{formatAUD(reportsData.activeQuotesVolume.value)}</div>\n                                <Chart type=\"line\" data={activeQuotesChartData} options={activeQuotesChartData.options} style={{ height: '200px' }} />\n                            </Col>\n\n                            {/* Orders */}\n                            <Col sm={4} className='border-top border-right border-left' style={{ height: '340px', padding: '20px' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Orders</span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                        <span className={style.changeNeutral}>{reportsData.orders.change}%</span>\n                                    </div>\n                                    <span className={style.dateLabel}>{reportsData.orders.date} <br /> ${reportsData.orders.prevValue}</span>\n                                </div>\n                                <div className={style.value}>{formatAUD(reportsData.orders.value)}</div>\n                                <Chart type=\"line\" data={ordersChartData} options={ordersChartData.options} style={{ height: '200px' }} />\n                            </Col>\n\n                            {/* Unpaid Invoices Volume */}\n                            <Col sm={4} className='border' style={{ height: '340px', padding: '20px' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Unpaid Invoices Volume</span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                        <span className={style.changePositive}>{reportsData.unpaidInvoicesVolume.change}%</span>\n                                    </div>\n                                    <span className={style.dateLabel}>{reportsData.unpaidInvoicesVolume.date} <br /> ${reportsData.unpaidInvoicesVolume.prevValue}</span>\n                                </div>\n                                <div className={style.value}>${formatAUD(reportsData.unpaidInvoicesVolume.value)}</div>\n                                <Chart type=\"line\" data={unpaidInvoicesChartData} options={unpaidInvoicesChartData.options} style={{ height: '200px' }} />\n                            </Col>\n\n                            {/* Spend per Order */}\n                            <Col sm={4} className='border-top border-bottom' style={{ height: '340px', padding: '20px' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Spend per Order</span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                        <span className={style.changeNeutral}>{reportsData.spendPerOrder.change || 'N/A'}</span>\n                                    </div>\n\n                                    <span className={style.dateLabel}>{reportsData.spendPerOrder.date}<br /> ${reportsData.spendPerOrder.prevValue}</span>\n                                </div>\n                                <div className={style.value}>${formatAUD(reportsData.spendPerOrder.value)}</div>\n                                <Chart type=\"line\" data={spendPerOrderChartData} options={spendPerOrderChartData.options} style={{ height: '200px' }} />\n                            </Col>\n\n                            {/* Jobs Completed */}\n                            <Col sm={4} className='border' style={{ height: '340px', padding: '20px' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Job Completed </span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                        <span className={style.changeNeutral}>{reportsData.jobsCompleted.change}%</span>\n                                    </div>\n\n                                    <span className={style.dateLabel}>{reportsData.jobsCompleted.date}<br /> ${reportsData.jobsCompleted.prevValue}</span>\n                                </div>\n                                <div className={style.value}>{formatAUD(reportsData.jobsCompleted.value)}%</div>\n                                <Chart type=\"line\" data={jobsCompletedChartData} options={jobsCompletedChartData.options} style={{ height: '200px' }} />\n                            </Col>\n\n                            {/* Contractor Expense */}\n                            <Col sm={4} className='border' style={{ height: '340px', padding: '20px' }}>\n                                <div className={style.graphHeader}>\n                                    <div className={style.graphHeaderLeft}>\n                                        <span className={style.graphHeaderLeftText}>Contractor Expense</span>\n                                        <InfoSquareFill size={12} color='#8792A2' />\n                                    </div>\n\n                                    <span className={style.dateLabel}>{reportsData.contractorExpense.date} <br /> ${reportsData.contractorExpense.prevValue}</span>\n                                </div>\n                                <div className={style.value}>${formatAUD(reportsData.contractorExpense.value)}</div>\n                                <Chart type=\"line\" data={contractorExpenseChartData} options={contractorExpenseChartData.options} style={{ height: '200px' }} />\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </div>\n        </>\n    );\n};\n\nexport default Overview;","// extracted by mini-css-extract-plugin\nexport default {\"borderTopbar\":\"statistics_borderTopbar__ljqaY\",\"topbartext\":\"statistics_topbartext__HchJJ\",\"box\":\"statistics_box__DcXrH\",\"executiveBox\":\"statistics_executiveBox__ObZsN\",\"executiveBox2\":\"statistics_executiveBox2__SboXU\",\"executiveBox3\":\"statistics_executiveBox3__E-b3x\",\"executiveBox4\":\"statistics_executiveBox4__4Nkgv\",\"executiveBox5\":\"statistics_executiveBox5__opcH1\",\"executiveBox6\":\"statistics_executiveBox6__+Ewe4\",\"boxTitle\":\"statistics_boxTitle__NOx9r\",\"boxSubtitle\":\"statistics_boxSubtitle__sP+Le\",\"activeTab\":\"statistics_activeTab__lcBPp\",\"disabledLink\":\"statistics_disabledLink__cVJyk\",\"keyResults\":\"statistics_keyResults__Z6mVH\",\"keyResultsTitle\":\"statistics_keyResultsTitle__FGClX\",\"button\":\"statistics_button__yOhzt\",\"monthName\":\"statistics_monthName__VNpP0\",\"activeButton\":\"statistics_activeButton__a9d6t\",\"chartBox\":\"statistics_chartBox__Ge0H+\",\"rightBox\":\"statistics_rightBox__QVbDu\",\"firstBox\":\"statistics_firstBox__NX8+s\",\"secondBox\":\"statistics_secondBox__4-TxO\",\"divider\":\"statistics_divider__Q+7Li\",\"chartTextBox\":\"statistics_chartTextBox__vhgGM\",\"chartTextLabel\":\"statistics_chartTextLabel__RSz82\",\"boxlable\":\"statistics_boxlable__IDKF0\",\"uptoDate\":\"statistics_uptoDate__yB-dd\",\"target\":\"statistics_target__AkTXB\",\"daysComplete\":\"statistics_daysComplete__TO81g\",\"daysTotal\":\"statistics_daysTotal__hVKuy\",\"circularProgressDiv\":\"statistics_circularProgressDiv__4qwlG\",\"chartProgressText\":\"statistics_chartProgressText__IJ6Eo\",\"text1\":\"statistics_text1__l19kj\",\"ProgressBar\":\"statistics_ProgressBar__c-oQT\",\"progressDefaultClass\":\"statistics_progressDefaultClass__-FFkg\",\"ProgressBarInner\":\"statistics_ProgressBarInner__FYOyj\",\"ProgressBarInner2\":\"statistics_ProgressBarInner2__Fll52\",\"ProgressBarInner3\":\"statistics_ProgressBarInner3__HvY8O\",\"ProgressBarInner4\":\"statistics_ProgressBarInner4__ngmi9\",\"ProgressInnerBar\":\"statistics_ProgressInnerBar__yxRlG\",\"ProgressInnerBarPercentage\":\"statistics_ProgressInnerBarPercentage__JRRCl\",\"rightBoxDiv\":\"statistics_rightBoxDiv__M-E12\",\"title\":\"statistics_title__PE0MJ\",\"money\":\"statistics_money__i+Zbv\",\"dateRangeSelector\":\"statistics_dateRangeSelector__9FaSI\",\"dateRangeDropdown\":\"statistics_dateRangeDropdown__5DtSu\",\"graphHeader\":\"statistics_graphHeader__IuB-s\",\"graphHeaderLeft\":\"statistics_graphHeaderLeft__ZgmxU\",\"graphHeaderLeftText\":\"statistics_graphHeaderLeftText__W44Ps\",\"changePositive\":\"statistics_changePositive__M3RP9\",\"changeNeutral\":\"statistics_changeNeutral__x8XEe\",\"dateLabel\":\"statistics_dateLabel__xbQES\",\"value\":\"statistics_value__qJhHh\",\"bottomText\":\"statistics_bottomText__40PQh\"};"],"names":["formatAUD","amount","shorten","arguments","length","undefined","num","parseFloat","isNaN","Math","abs","Intl","NumberFormat","notation","compactDisplay","minimumFractionDigits","maximumFractionDigits","format","_excluded","_extends","Object","assign","bind","n","e","t","r","hasOwnProperty","call","apply","InfoSquareFill","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","_ref$title","title","_ref$className","className","rest","o","i","includes","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","React","xmlns","viewBox","width","height","fill","filter","Boolean","join","d","propTypes","PropTypes","Overview","trialHeight","useTrialHeight","reportsData","value","change","date","prevValue","auto","grossVolumeChartData","setGrossVolumeChartData","useState","activeQuotesChartData","setActiveQuotesChartData","ordersChartData","setOrdersChartData","unpaidInvoicesChartData","setUnpaidInvoicesChartData","spendPerOrderChartData","setSpendPerOrderChartData","jobsCompletedChartData","setJobsCompletedChartData","contractorExpenseChartData","setContractorExpenseChartData","useEffect","documentStyle","window","getComputedStyle","document","documentElement","textColorSecondary","getPropertyValue","surfaceBorder","baseOptions","maintainAspectRatio","aspectRatio","plugins","legend","display","scales","x","ticks","callback","labels","padding","grid","drawBorder","y","elements","line","tension","borderWidth","point","radius","grossVolumeData","datasets","label","data","borderColor","backgroundColor","getGradient","options","activeQuotesData","ordersData","unpaidInvoicesData","spendPerOrderData","jobsCompletedData","contractorExpenseData","startOpacity","endOpacity","ctx","createElement","getContext","hexToRgb","gradient","createLinearGradient","addColorStop","hex","result","exec","parseInt","_jsxs","_Fragment","children","_jsx","Helmet","style","borderTopbar","position","Link","to","clsx","disabledLink","PieChart","topbartext","Speedometer2","background","activeTab","TextParagraph","WindowDesktop","ClipboardData","Google","keyResults","marginBottom","overflow","keyResultsTitle","dateRangeSelector","dateRangeDropdown","Card","Body","Row","Col","sm","graphHeader","graphHeaderLeft","graphHeaderLeftText","changePositive","dateLabel","Chart","type","changeNeutral"],"sourceRoot":""}