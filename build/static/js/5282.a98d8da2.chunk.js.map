{"version":3,"file":"static/js/5282.a98d8da2.chunk.js","mappings":"yNACA,MAAMA,EAAeC,mCAERC,EAAmBC,eAAOC,EAAMC,GAA8C,IAAvCC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,GAAIG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,GAAII,EAAYJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnF,MAAMG,GAAUR,EAAO,GAAKC,EAKtBQ,EAAM,IAAIC,IAAI,GAAGd,eAOvB,OANAa,EAAIE,aAAaC,OAAO,QAASX,GACjCQ,EAAIE,aAAaC,OAAO,SAAUJ,GAC9BN,GAAQO,EAAIE,aAAaC,OAAO,SAAUV,GAC1CI,GAAOG,EAAIE,aAAaC,OAAO,WAAYN,GAC3CC,GAAcE,EAAIE,aAAaC,OAAO,SAAU,aAE7CC,EAAAA,EAAAA,GAASJ,EAAIK,WAVJ,CACdC,OAAQ,OAUZ,EAEaC,EAAmBjB,UAC9B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,4BACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7BE,EAAkBlB,UAC7B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,0BACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7BG,EAAanB,UACxB,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,oBAAoBuB,QAKrC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7BK,EAAmBrB,UAC9B,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,mBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7BG,EAAgBzB,MAAOoB,EAAII,KACtC,MACMF,EAAU,CACdN,OAAQ,MACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,IALN,oBAAoBuB,QAMrC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7BI,EAAc1B,UACzB,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,oBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7BK,EAAgB3B,UAC3B,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,sBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7BM,EAAuB5B,UAClC,MACMsB,EAAU,CACZN,OAAQ,MACRO,KAAMC,GAEJd,EAAM,IAAIC,IAAI,GAAGd,uBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7BO,EAAgB7B,UAC3B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,oBAAoBiC,QAKrC,OAAOhB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,UAG8B,C,sTCrG1C,SAAgB,UAAY,8BAA8B,OAAS,2BAA2B,aAAe,iCAAiC,WAAa,+BAA+B,YAAc,gCAAgC,SAAW,6BAA6B,cAAgB,kCAAkC,YAAc,gCAAgC,WAAa,+BAA+B,YAAc,gCAAgC,YAAc,gCAAgC,IAAM,wBAAwB,MAAQ,0BAA0B,YAAc,gCAAgC,MAAQ,0BAA0B,UAAY,8BAA8B,WAAa,+BAA+B,YAAc,gCAAgC,QAAU,4BAA4B,OAAS,2BAA2B,SAAW,6BAA6B,YAAc,gCAAgC,UAAY,8BAA8B,eAAiB,oC,iFCwBh+B,SAASe,EAAYC,GAAW,IAADC,EAC9BD,IAAUA,EAAmB,QAAXC,EAAGD,SAAQ,IAAAC,OAAA,EAARA,EAAUC,eAEnC,MA8CMC,EA9CY,CACd,kBAAmB,CAAEC,KAAM,MAAOC,MAAO,WACzC,2BAA4B,CAAED,KAAM,QAASC,MAAO,WACpD,oEAAqE,CAAED,KAAM,QAASC,MAAO,WAC7F,qBAAsB,CAAED,KAAM,OAAQC,MAAO,WAC7C,0EAA2E,CAAED,KAAM,OAAQC,MAAO,WAClG,aAAc,CAAED,KAAM,OAAQC,MAAO,WACrC,YAAa,CAAED,KAAM,MAAOC,MAAO,WACnC,YAAa,CAAED,KAAM,MAAOC,MAAO,WACnC,YAAa,CAAED,KAAM,MAAOC,MAAO,WACnC,YAAa,CAAED,KAAM,MAAOC,MAAO,WACnC,YAAa,CAAED,KAAM,MAAOC,MAAO,WACnC,aAAc,CAAED,KAAM,OAAQC,MAAO,WACrC,kBAAmB,CAAED,KAAM,MAAOC,MAAO,WACzC,mBAAoB,CAAED,KAAM,OAAQC,MAAO,WAC3C,gBAAiB,CAAED,KAAM,MAAOC,MAAO,WACvC,+BAAgC,CAAED,KAAM,MAAOC,MAAO,WACtD,gCAAiC,CAAED,KAAM,MAAOC,MAAO,WACvD,4EAA6E,CAAED,KAAM,MAAOC,MAAO,WACnG,+BAAgC,CAAED,KAAM,YAAaC,MAAO,WAC5D,gCAAiC,CAAED,KAAM,MAAOC,MAAO,WACvD,oBAAqB,CAAED,KAAM,MAAOC,MAAO,WAC3C,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,YAAaC,MAAO,WACnC,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,OAAQC,MAAO,WAC9B,KAAQ,CAAED,KAAM,OAAQC,MAAO,WAC/B,IAAO,CAAED,KAAM,QAASC,MAAO,WAC/B,KAAQ,CAAED,KAAM,QAASC,MAAO,WAChC,IAAO,CAAED,KAAM,OAAQC,MAAO,WAC9B,KAAQ,CAAED,KAAM,OAAQC,MAAO,WAC/B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,IAAO,CAAED,KAAM,OAAQC,MAAO,WAC9B,KAAQ,CAAED,KAAM,OAAQC,MAAO,WAC/B,IAAO,CAAED,KAAM,MAAOC,MAAO,WAC7B,KAAQ,CAAED,KAAM,MAAOC,MAAO,YAGPL,IAAa,CAAEI,KAAM,UAAWC,MAAO,WAElE,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMC,OAAOC,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAML,SAAA,EAC1FM,EAAAA,EAAAA,KAAA,QACIC,EAAE,4JACFF,KAAMZ,EAASE,SAEnBW,EAAAA,EAAAA,KAAA,QACIE,QAAQ,MACRD,EAAE,4EACFF,KAAK,cAGbC,EAAAA,EAAAA,KAAA,OAAKT,UAAWC,EAAMR,SAASU,SAAEP,EAASC,SAGtD,CAEA,MAmyCA,EAnyCkBe,IAAqJ,IAADC,EAAA,IAAnJ,QAAEC,EAAO,WAAEC,EAAU,WAAEC,EAAaA,OAAS,SAAEC,EAAQ,WAAEC,GAAa,EAAK,QAAEC,EAAU,KAAI,MAAEC,EAAQ,KAAI,aAAEC,EAAY,QAAEC,EAAUA,QAAWV,EAC7J,MAAMW,EAAcC,aAAaC,QAAQ,gBACnCC,GAAaC,EAAAA,EAAAA,QAAO,MACpBxD,EAAMyD,EAAAA,SAAc,IAAMC,OAAOC,SAASC,MAAM,IAChDC,EAASJ,EAAAA,SAAc,IAAM,IAAIxD,IAAID,IAAM,CAACA,IAC5C8D,EAASL,EAAAA,SAAc,IAAM,IAAIM,gBAAgBF,EAAOpE,SAAS,CAACoE,KAEjEG,EAAYC,IAAkBC,EAAAA,EAAAA,UAAS,KACvCC,EAAqBC,IAA0BF,EAAAA,EAAAA,WAAS,IACxDG,EAA0BC,KAA+BJ,EAAAA,EAAAA,WAAS,IAClEK,GAA2BC,KAAgCN,EAAAA,EAAAA,WAAS,IAEpEO,GAAcC,KAAmBR,EAAAA,EAAAA,UAAS,KAC1CS,GAAaC,KAAkBV,EAAAA,EAAAA,UAAS,KAExCW,GAAQC,KAAaZ,EAAAA,EAAAA,UAAS,KAC9Ba,GAAkBC,KAAuBd,EAAAA,EAAAA,UAAS,CAAC,IACnDe,GAAYC,KAAiBhB,EAAAA,EAAAA,UAAS,SACtCiB,GAAcC,KAAmBlB,EAAAA,EAAAA,UAAS,KAE1CmB,GAAWC,KAAgBpB,EAAAA,EAAAA,UAAS,KACpCqB,GAAQC,KAAatB,EAAAA,EAAAA,UAAS,WAC9BuB,GAAOC,KAAYxB,EAAAA,EAAAA,UAAS,KAC5ByB,GAAQC,KAAa1B,EAAAA,EAAAA,UAAS,KAC9B2B,GAAaC,KAAkB5B,EAAAA,EAAAA,UAAS,KACxC6B,GAAQC,KAAa9B,EAAAA,EAAAA,UAAS,KAC9B+B,GAAWC,KAAgBhC,EAAAA,EAAAA,UAAS,KACpCiC,GAAaC,KAAkBlC,EAAAA,EAAAA,UAAS,KAExCmC,GAAqBC,KAA0BpC,EAAAA,EAAAA,UAAS,KAGxDqC,GAAOC,KAAYtC,EAAAA,EAAAA,UAAS,KAC7B,aACFuC,GAAY,cACZC,KACAC,EAAAA,EAAAA,IAAY,CACZC,OAAQC,IACJ,MAAMC,EAAWD,EAAcE,KAAIC,GAAQC,OAAOC,OAAOF,EAAM,CAC3DG,QAASlH,IAAImH,gBAAgBJ,GAC7BK,SAAU,MAGdb,IAAUc,GAAc,IACjBA,KACAR,IACL,KAKHS,GAAMC,KAAWtD,EAAAA,EAAAA,UAAS,MAC1BuD,GAAMC,KAAWxD,EAAAA,EAAAA,UAAS,IAC1ByD,GAAWC,KAAiB1D,EAAAA,EAAAA,UAAS,IACtC2D,GAAQ,IAAIC,MACXC,GAAOC,KAAY9D,EAAAA,EAAAA,UAAS2D,KAC5BI,GAAKC,KAAUhE,EAAAA,EAAAA,UAAS,KACxBiE,GAAUC,KAAelE,EAAAA,EAAAA,UAAS,KAElCmE,GAAQC,KAAapE,EAAAA,EAAAA,UAAS,CAAC,GAEhCqE,IAAgBC,EAAAA,EAAAA,GAAS,CAC3BC,SAAU,CAAC,eACXC,QAASC,EAAAA,KAEPC,IAAuBJ,EAAAA,EAAAA,GAAS,CAClCC,SAAU,CAAC,aAAczE,GACzB0E,QAASA,KAAMG,EAAAA,EAAAA,IAAe7E,GAC9B8E,UAAW9E,EACX+E,MAAO,IAGLC,IAAkBR,EAAAA,EAAAA,GAAS,CAC7BC,SAAU,CAAC,cACXC,QAASO,EAAAA,KAGPC,IAAeV,EAAAA,EAAAA,GAAS,CAAEC,SAAU,CAAC,mBAAoBC,QAASlI,EAAAA,KAElE2I,GAAgBC,IAEdxH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CM,EAAAA,EAAAA,KAAA,OAAKT,UAAU,mDAAmDC,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQkH,aAAc,MAAOC,SAAU,SAAUC,OAAQ,qBAAsBvH,SAC1J,aAAZ,OAANoH,QAAM,IAANA,OAAM,EAANA,EAAQI,QACH5H,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAML,SAAA,EAC5FM,EAAAA,EAAAA,KAAA,QAAMC,EAAE,oOAAoOF,KAAK,aACjPC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,oOAAoOF,KAAK,aACjPC,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,orBAAorBF,KAAK,gBAEzuBC,EAAAA,EAAAA,KAACqH,EAAAA,EAAa,CAACC,MAAa,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQI,MAAOK,UAAiB,OAANT,QAAM,IAANA,OAAM,EAANA,EAAQS,UAAWC,aAAa,EAAOC,KAAM,QAGvGzH,EAAAA,EAAAA,KAAA,OAAAN,SAAMoH,EAAOY,WAKnBC,GAAuBA,CAACb,EAAQc,IAC9Bd,GAEIxH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CM,EAAAA,EAAAA,KAAA,OAAKT,UAAU,mDAAmDC,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQkH,aAAc,MAAOC,SAAU,SAAUC,OAAQ,qBAAsBvH,SAC1J,aAAZ,OAANoH,QAAM,IAANA,OAAM,EAANA,EAAQI,QACH5H,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAML,SAAA,EAC5FM,EAAAA,EAAAA,KAAA,QAAMC,EAAE,oOAAoOF,KAAK,aACjPC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,oOAAoOF,KAAK,aACjPC,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,orBAAorBF,KAAK,gBAEzuBC,EAAAA,EAAAA,KAACqH,EAAAA,EAAa,CAACC,MAAa,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQI,MAAOK,UAAiB,OAANT,QAAM,IAANA,OAAM,EAANA,EAAQS,UAAWC,aAAa,EAAOC,KAAM,QAGvGzH,EAAAA,EAAAA,KAAA,OAAAN,SAAMoH,EAAOY,YAKlB1H,EAAAA,EAAAA,KAAA,QAAAN,SAAOkI,EAAMC,cAGlBC,GAAQA,KACVnG,EAAe,IACfG,GAAuB,GACvBE,IAA4B,GAC5BE,IAA6B,GAC7BE,GAAgB,IAChBE,GAAe,IACfE,GAAU,IACVE,GAAoB,CAAC,GACrBE,GAAc,QACdE,GAAgB,IAChBE,GAAa,IACbE,GAAU,UACVE,GAAS,IACTE,GAAU,IACVE,GAAe,IACfE,GAAU,IACVE,GAAa,IACbE,GAAe,IACfE,GAAuB,IACvBE,GAAS,IACTgB,GAAQ,KACRE,GAAQ,GACRE,GAAc,IACdI,GAAS,IACTE,GAAO,IACPE,GAAY,IACZE,GAAU,CAAC,EAAE,GAGjB+B,EAAAA,EAAAA,YAAU,KACN,GAAwB,OAApBzB,SAAoB,IAApBA,IAAAA,GAAsB9H,KAAM,CAAC,IAADwJ,EAAAC,EAE5B,MAAMC,GAAoC,OAApB5B,SAAoB,IAApBA,IAA0B,QAAN0B,EAApB1B,GAAsB9H,YAAI,IAAAwJ,OAAN,EAApBA,EAA4BG,QAAS,GAC3D/F,GAAgB8F,EAAcE,UAAU,EAAG,KAC3C9F,IAAmC,OAApBgE,SAAoB,IAApBA,IAA0B,QAAN2B,EAApB3B,GAAsB9H,YAAI,IAAAyJ,OAAN,EAApBA,EAA4B5F,cAAe,IAC1D2D,IAAWqC,IAAM,IAAWA,EAAQlG,cAAc,MAClD6D,IAAWqC,IAAM,IAAWA,EAAQhG,aAAa,KACrD,IACD,CAAqB,OAApBiE,SAAoB,IAApBA,QAAoB,EAApBA,GAAsB9H,QAE1BuJ,EAAAA,EAAAA,YAAU,KACN,MAAMO,EAAiB9G,EAAO+G,IAAI,aAC5BC,EAAYhH,EAAO+G,IAAI,aACzBC,IACApG,GAAgBoG,GAChBjH,EAAO3D,aAAa6K,OAAO,aAC3BrH,OAAOsH,QAAQC,aAAa,CAAC,EAAG,GAAIpH,IAGpC+G,IACAhI,GAAW,GACX0C,IAAcsF,GACd/G,EAAO3D,aAAa6K,OAAO,aAC3BrH,OAAOsH,QAAQC,aAAa,CAAC,EAAG,GAAIpH,GACxC,GACD,CAACjB,EAAYkB,EAAQD,IAExB,MAAMqH,GAAa5L,MAAO0H,EAAMhH,KAC5B,IACI,MAAMmL,QAAiBC,EAAAA,EAAMC,IAAIrL,EAAKgH,EAAM,CACxCsE,QAAS,CACL,eAAgB,IAEpBC,iBAAmBC,IACf,MAAMnE,EAAWoE,KAAKC,MACjBF,EAAcG,OAASH,EAAcI,MAAS,KAEnDpF,IAAUc,GACCA,EAAUP,KAAK8E,GAClBA,EAAEnK,OAASsF,EAAKtF,KACVuF,OAAOC,OAAO2E,EAAG,CAAExE,WAAUrH,QAC7B6L,KAEZ,IAaV,OARArF,IAAUc,GACCA,EAAUP,KAAK8E,GAClBA,EAAEnK,OAASsF,EAAKtF,KACVuF,OAAOC,OAAO2E,EAAG,CAAExE,SAAU,IAAKyE,UAAU,IAC5CD,MAIPV,CACX,CAAE,MAAOY,GAEL,IAAIC,EAAe,gBA+BnB,OA3BQA,EAFJD,EAAIZ,SACwB,MAAxBY,EAAIZ,SAASc,OACE,oCAEA,iBAAiBF,EAAIZ,SAASc,SAE1CF,EAAIG,QACI,0BAEAH,EAAII,QAGvBC,QAAQC,MAAM,mBAAmBrF,EAAKtF,QAASsK,GAG/CxF,IAAUc,GACCA,EAAUP,KAAK8E,GAClBA,EAAEnK,OAASsF,EAAKtF,KACVuF,OAAOC,OAAO2E,EAAG,CACfxE,SAAU,EACVgF,OAAO,EACPL,eACAM,cAAc,IAEhBT,MAKP,CAAEQ,OAAO,EAAMF,QAASH,EACnC,GAqGEO,IAAWC,EAAAA,EAAAA,GAAY,CACzBC,WAAa3L,GACLiC,GAAcE,GACPyJ,EAAAA,EAAAA,IAAUzJ,EAAOnC,IAEjB6L,EAAAA,EAAAA,IAAa7L,GAG5B8L,UAAWtN,UACP,MAAMoB,EAAKqC,EAAaE,EAAQkI,EAASzK,GAErC6F,GAAM5G,OAAS,SA/EGL,WAC1B,IAAKiH,GAAM5G,OAAQ,OACnB,IAAKe,EAAI,OAAOmM,EAAAA,GAAMR,MAAM,oBAE5B,IAAIS,EAAe,EACfC,EAAa,EAGjB,IAAK,MAAM/F,KAAQT,GACf,IAEI,MAAM4E,QAAiBC,EAAAA,EAAM4B,KACzB,yDAAiEtM,KACjE,CAAEuM,SAAUjG,EAAKtF,MACjB,CACI4J,QAAS,CACL4B,cAAe,UAAU9J,QAK/B,IAAEpD,GAAQmL,EAASrK,KACzB,IAAKd,EAAK,CACNoM,QAAQC,MAAM,6BAA6BrF,EAAKtF,QAChDqL,IACA,QACJ,CAGA,MAAMI,QAAejC,GAAWlE,EAAMhH,GAGlCmN,IAAWA,EAAOd,MAClBS,IAEAC,GAER,CAAE,MAAOV,GACLD,QAAQC,MAAM,wBAAyBrF,EAAKtF,KAAM2K,GAGlD7F,IAAUc,GACCA,EAAUP,KAAK8E,GAClBA,EAAEnK,OAASsF,EAAKtF,KACVuF,OAAOC,OAAO2E,EAAG,CACfxE,SAAU,EACVgF,OAAO,EACPL,aAAcK,EAAMF,SAAW,2BAC/BG,cAAc,IAEhBT,MAIdkB,GAEJ,CAIAD,EAAe,GACfD,EAAAA,GAAMO,QAAQ,yBAAyBN,aAEvCC,EAAa,GACbF,EAAAA,GAAMR,MAAM,oBAAoBU,YACpC,EAecM,CAAsB3M,QA9GTpB,WAC3B,IAAIgO,EAAc,GAClB,IAAK,MAAMtG,KAAQT,GAAO,CAAC,IAADgH,EACtB,GAAIvG,EAAKqF,QAAUrF,EAAKhH,IAAK,SAE7B,IAAIwN,EAAM,CACN,KAAY,OAAJxG,QAAI,IAAJA,OAAI,EAAJA,EAAMtF,KACd,MAAY,OAAJsF,QAAI,IAAJA,GAAS,QAALuG,EAAJvG,EAAMhH,WAAG,IAAAuN,OAAL,EAAJA,EAAWE,MAAM,KAAK,KAAM,GACpC,KAAY,OAAJzG,QAAI,IAAJA,OAAI,EAAJA,EAAM+C,MAElBuD,EAAYI,KAAKF,EACrB,CAEA,IACI,MAAMrC,QAAiBC,EAAAA,EAAM4B,KACzB,qDAA6DtM,KAC7D,CAAE4M,YAAaA,GAAe,IAC9B,CACIhC,QAAS,CACL4B,cAAe,UAAU9J,OAIrCgJ,QAAQuB,IAAI,WAAYxC,EAC5B,CAAE,MAAOY,GACLK,QAAQC,MAAM,wBAAyBN,GACvCc,EAAAA,GAAMR,MAAM,wDAChB,GAoFcuB,CAAuBlN,IAI7BsC,GAASG,IACbN,GAAYgL,IAAUA,IAEtBhB,EAAAA,GAAMO,QAAQ,OAAOrK,EAAa,UAAY,0BAC9CH,GAAW,GACXwH,KACA7G,EAAWuK,QAAU,IAAI,EAE7BC,QAAU1B,IACN9I,EAAWuK,QAAU,KACrB1B,QAAQC,MAAM,SAAStJ,EAAa,WAAa,kBAAmBsJ,GACpEQ,EAAAA,GAAMR,MAAM,aAAatJ,EAAa,SAAW,kCAAkC,IAIrFiL,GAAYC,IAEd,MAAMC,EAAa,CACfzJ,cAAc,EACdE,aAAa,EACbE,QAAQ,EACR0C,MAAM,EACNE,MAAM,EACNU,UAAU,EACVR,WAAW,EACXI,OAAO,EACPE,KAAK,EACL5C,WAAW,GAGT8I,EAAU,CAAC,EA4BjB,GA1BK1J,GACA0J,EAAQC,kBAAoB3J,GADdyJ,EAAWzJ,cAAe,EAGzCE,KAAawJ,EAAQE,iBAAmB1J,IAEvCE,GACIA,IAAoB,KAAVA,KAAesJ,EAAQG,OAASzJ,IADtCqJ,EAAWrJ,QAAS,EAG5B0C,GACA4G,EAAQ5G,KAAOA,GADT2G,EAAW3G,MAAO,EAGhB,MAATA,IAAiBE,GAChB0G,EAAQ1G,KAAOA,GADOyG,EAAWzG,MAAO,EAGhC,MAATF,IAAiBY,GACZA,KAAUgG,EAAQhG,UAAYA,IADR+F,EAAW/F,UAAW,EAGhDR,GACAwG,EAAQxG,UAAYA,GADTuG,EAAWvG,WAAY,EAGlCI,GACAoG,EAAQI,WAAa,IAAIzG,KAAKC,IAAOyG,cAD9BN,EAAWnG,OAAQ,EAGb,MAAdJ,IAAsBM,GACjBA,KAAKkG,EAAQM,SAAW,IAAI3G,KAAKG,IAAKuG,eADhBN,EAAWjG,KAAM,EAG5C5C,GAAW,CAAC,IAADqJ,EACX,MAAMC,EAAsB,OAAZzF,SAAY,IAAZA,IAAkB,QAANwF,EAAZxF,GAAcpI,YAAI,IAAA4N,OAAN,EAAZA,EAAoBE,MAAKD,GAAWA,EAAQjO,KAAO2E,KAC/DsJ,IAASR,EAAQQ,QAAUA,EAAQE,UAC3C,CAEIxI,KACA8H,EAAQW,eAAiBzI,IAE7B8H,EAAQY,UAAYd,EACpB1K,EAAWuK,QAAUG,EAGrB3F,GAAU4F,GAGLjH,OAAO+H,OAAOd,GAAYe,UAAS,IACpC1C,GAAS2C,OAAOf,EACpB,EAGEgB,IAAmBC,EAAAA,EAAAA,cAAa1O,IAAQ,IAAD2O,EAAAC,EACzC,IAAIC,EAAsB,OAAfvG,SAAe,IAAfA,IAAqB,QAANqG,EAAfrG,GAAiBlI,YAAI,IAAAuO,GAAO,QAAPC,EAArBD,EAAuBG,aAAK,IAAAF,OAAb,EAAfA,EAA8BV,MAAKW,GAAQA,EAAK7O,KAAOA,IAC9D+O,EAAkB,CAClB,EAAK,OACL,GAAM,YACN,GAAM,aACN,EAAK,SAELF,GACAvK,GAAoB,CAChBC,WAAYyK,YAAe,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,cAAe,GAAGC,QAAQ,GACvDzK,aAAcsK,EAAoB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMM,gBAAkB,GACtDrG,OAAW,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAM3F,QAAS,GACtBC,UAAe,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAM1F,UACjBnI,KAAM,GAAG6N,EAAKO,cAAcP,EAAKQ,aAEzC,GACD,CAAgB,OAAf/G,SAAe,IAAfA,IAAqB,QAANtG,EAAfsG,GAAiBlI,YAAI,IAAA4B,OAAN,EAAfA,EAAuB8M,QAgF3B,OA9EAnF,EAAAA,EAAAA,YAAU,KACFvH,IACAgC,IAAWhC,GAAY,KACvBqM,IAAkBrM,GAAY,IAClC,GACD,CAACA,EAAUqM,MAEd9E,EAAAA,EAAAA,YAAU,KACFnH,GACAoC,GAAapC,EACjB,GACD,CAACA,KAGJmH,EAAAA,EAAAA,YAAU,KACN,GAAItH,GAAcC,GAAuB,OAAZkG,SAAY,IAAZA,IAAAA,GAAcpI,KAAM,CAc7C,GAZA4D,GAAgB1B,EAAQoL,mBAAqB,IAC7CxJ,GAAe5B,EAAQqL,kBAAoB,IAGvCrL,EAAQsL,QACRxJ,GAAU9B,EAAQsL,OAAO5N,IACzByO,GAAiBnM,EAAQsL,OAAO5N,KAEhCoE,GAAU,KAIV9B,EAAQ2L,QAAS,CAAC,IAADqB,EACjB,MAAMrB,EAAsB,OAAZzF,SAAY,IAAZA,IAAkB,QAAN8G,EAAZ9G,GAAcpI,YAAI,IAAAkP,OAAN,EAAZA,EAAoBpB,MAAKD,GAAWA,EAAQE,YAAc7L,EAAQ2L,QAAQE,YAC1FvJ,IAAoB,OAAPqJ,QAAO,IAAPA,OAAO,EAAPA,EAASjO,KAAM,GAChC,CAWA,GARA8G,GAAQxE,EAAQuE,MAAQ,KACxBG,GAAQ1E,EAAQyE,MAAQ,GAGxBG,GAAc5E,EAAQ2E,WAAa,IACnCS,GAAYpF,EAAQmF,UAAY,IAG5BnF,EAAQuL,WAAY,CACpB,MAAM0B,EAAY,IAAInI,KAA2B,KAArB9E,EAAQuL,YACpCvG,GAASiI,EACb,CACA,GAAIjN,EAAQyL,SAAU,CAClB,MAAMyB,EAAU,IAAIpI,KAAyB,KAAnB9E,EAAQyL,UAClCvG,GAAOgI,EACX,CAGA5J,GAAuBtD,EAAQ8L,gBAAkB,KAG7C9L,EAAQsK,aAAetK,EAAQsK,YAAY3N,OAAS,GACpD6G,GAASxD,EAAQsK,YAAYvG,KAAIoJ,IAAU,CACvCzO,KAAMyO,EAAWzO,KACjBqI,KAAMoG,EAAWpG,KACjB/J,IAAKmQ,EAAWC,KAChB/I,SAAU,IACVgJ,YAAY,MAGxB,IACD,CAACtN,EAAYC,EAASmM,GAA8B,OAAZjG,SAAY,IAAZA,QAAY,EAAZA,GAAcpI,QAEzDuJ,EAAAA,EAAAA,YAAU,KACN,GAAmB,OAAfrB,SAAe,IAAfA,IAAAA,GAAiBlI,MAAQ+D,KAA0B,MAAd8C,IAA8B,MAATJ,IAAgC,MAAdI,IAA8B,MAATJ,IAAgC,MAAdI,IAA8B,MAATJ,IAAgB,CAAC,IAAD+I,EACxJ,MAAMC,EAA0B,OAAfvH,SAAe,IAAfA,IAAqB,QAANsH,EAAftH,GAAiBlI,YAAI,IAAAwP,OAAN,EAAfA,EAAuBd,MAAMZ,MAAMW,GAASA,EAAK7O,KAAOmE,KACzE,GAAI0L,EAAU,CACV,IAAIpI,EAAWV,IAAe,OAAR8I,QAAQ,IAARA,OAAQ,EAARA,EAAUZ,aAChCvH,GAAYsH,WAAWvH,GAAUyH,QAAQ,GAC7C,CACJ,IACD,CAACnI,GAAqB,OAAfuB,SAAe,IAAfA,QAAe,EAAfA,GAAiBlI,KAAM+D,GAAQ8C,GAAWJ,MAGhDjF,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,CAAC7N,QAASA,EAAS8N,SAAS,QAAQC,OAAQA,KAAO9N,GAAW,GAAQwH,IAAO,EAAIuG,OAAO,EAAOC,aAAa,EAAO9O,MAAO,CAAEI,MAAO,SACvI2O,QAASC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,aAAEC,EAAY,KAAEC,GAAMP,EAAA,OAC5BlP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCG,SAAA,EAC9CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAkEC,MAAO,CAAEwP,aAAc,oBAAqBC,QAAS,QAASvP,SAAA,EAC3IJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC1Ce,IACET,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAE2O,SAAU,WAAYe,UAAW,SAAUxP,UACrDM,EAAAA,EAAAA,KAACmP,EAAAA,EAAQ,CACL7Q,QACK2H,KACqB,QADRwI,EACVxI,GAAczH,YAAI,IAAAiQ,OAAA,EAAlBA,EAAoBhK,KAAK2K,IAAQ,CAC7BC,MAAOD,EAAShR,GAChBsJ,MAAO,GAAG0H,EAAShQ,aAE3B,GAEJG,WAAW+P,EAAAA,EAAAA,GACP9P,EAAM+P,eACN,wBACA,gBAEJ/P,MAAO,CAAEK,OAAQ,OAAQD,MAAO,SAChCiI,YAAY,kBACZ2H,SAAWC,IACP9N,EAAe8N,EAAEJ,MAAM,EAE3BA,MAAO3N,EACPgO,QAAsB,OAAbzJ,SAAa,IAAbA,QAAa,EAAbA,GAAe0J,WACxBC,QAAM,EACNC,sBAAsB,MAIjCpP,IACGnB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,OAAOC,MAAO,CAAEsQ,SAAU,OAAQC,WAAY,OAAQrQ,SAAA,CAAC,aAAWiB,SAGxFX,EAAAA,EAAAA,KAAA,QAAAN,UACIM,EAAAA,EAAAA,KAACgQ,EAAAA,EAAM,CAAC/K,KAAK,SAAS1F,UAAU,cAAc0Q,IAAKnB,EAAcoB,QAAUT,GAAMV,EAAKU,GAAG/P,UACrFM,EAAAA,EAAAA,KAACmQ,EAAAA,EAAC,CAAC1I,KAAM,GAAIpI,MAAM,oBAK/BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEyP,QAAS,OAAQpP,OAAQ,4BAA6BmH,SAAU,QAAStH,SAAA,EAC1GJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,SAAA,EACxCJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKC,KAAI,CAAC9Q,WAAW+P,EAAAA,EAAAA,GAAK,oDAAqD9P,EAAMwP,cAActP,SAAA,EAChGM,EAAAA,EAAAA,KAAA,MAAIT,UAAU,iCAAiCC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAC,iBAC7FM,EAAAA,EAAAA,KAAA,OAAKT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAM8Q,UAAW,QAAQ5Q,SAAEe,EAAa,WAAa,gBAE9EnB,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,YAAY9Q,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BJ,EAAAA,EAAAA,MAAA,SAAOC,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMiR,aAAa/Q,SAAA,CAAC,iBAAaM,EAAAA,EAAAA,KAAA,QAAMT,UAAU,WAAUG,SAAC,UACnFM,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAE2O,SAAU,YAAazO,UACjCJ,EAAAA,EAAAA,MAACoR,EAAAA,EAAS,CAAAhR,SAAA,EACNM,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAS,CAAAjR,UACe,OAApB4G,SAAoB,IAApBA,QAAoB,EAApBA,GAAsBqJ,cAAc3P,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAe,CAACpR,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQsO,SAAU,WAAY0C,IAAK,aAE7H7Q,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAS,CACNzB,MAAOlN,GACP5C,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,SAChCvB,SAAWC,IACP,MAAMJ,EAAQI,EAAEuB,OAAO3B,MACnBA,EAAMhS,QAAU,KAChB+E,GAAgBiN,GACZA,GACArJ,IAAWqC,IAAM,IAAWA,EAAQlG,cAAc,MAC1D,EAEJ8O,UAAW,GACXpJ,YAAY,8BAIxBvI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCG,SAAA,EACpC,OAANqG,SAAM,IAANA,QAAM,EAANA,GAAQ5D,gBACLnC,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,+BAEvCJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qBAAoBG,SAAA,CAAEyC,GAAa9E,OAAO,gBAInEiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMiR,aAAa/Q,SAAC,qBAC3CM,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAE2O,SAAU,YAAazO,UACjCJ,EAAAA,EAAAA,MAACoR,EAAAA,EAAS,CAAAhR,SAAA,EACNM,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAS,CAAAjR,UACe,OAApB4G,SAAoB,IAApBA,QAAoB,EAApBA,GAAsBqJ,cAAc3P,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAe,CAACpR,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQsO,SAAU,WAAY0C,IAAK,aAE7H7Q,EAAAA,EAAAA,KAACkR,EAAAA,EAAa,CACV7B,MAAOhN,GACP9C,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,sBAChCvB,SAAWC,IACPnN,GAAemN,EAAEuB,OAAO3B,OACpBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQhG,aAAa,KAAS,EAElE7C,MAAO,CACHK,OAAQ,SAEZgI,YAAY,iCAIjB,OAAN9B,SAAM,IAANA,QAAM,EAANA,GAAQ1D,eACLrC,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,sCAOnDM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,UACxCJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,iBAAiB9Q,SAAA,EAC5DJ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,4BAA4BC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAA,CAAC,eAAWM,EAAAA,EAAAA,KAAA,QAAMT,UAAU,WAAUG,SAAC,UAC9HJ,EAAAA,EAAAA,MAAC6R,EAAAA,EAAG,CAAAzR,SAAA,EACAM,EAAAA,EAAAA,KAACoR,EAAAA,EAAG,CAACC,GAAI,EAAG9R,UAAU,4BAA2BG,UAC7CJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAE2O,SAAU,WAAYe,UAAW,SAAUxP,SAAA,EACrDM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMiR,aAAa/Q,SAAC,iBAC3CM,EAAAA,EAAAA,KAACmP,EAAAA,EAAQ,CACL7Q,QAAS,CACL,CAAE+Q,MAAO,IAAK3H,MAAO,WAAYR,MAAO,UAAWK,WAAW,OAC3C,OAAfb,SAAe,IAAfA,IAAqB,QAANgI,EAAfhI,GAAiBlI,YAAI,IAAAkQ,GAAO,QAAPC,EAArBD,EAAuBxB,aAAK,IAAAyB,GACsB,QADtBC,EAA5BD,EACEiB,QAAQ3C,GAAyB,iBAAhBA,EAAKtD,gBAA0B,IAAAiF,OADnC,EAAfA,EAEEnK,KAAKwI,IAAI,CACPoC,MAAOpC,EAAK7O,GACZsJ,MAAO,GAAGuF,EAAKO,cAAcP,EAAKQ,YAClCvG,MAAW,OAAJ+F,QAAI,IAAJA,OAAI,EAAJA,EAAM3F,MACbC,UAAe,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAM1F,gBACd,IAEfV,aAAcA,GACdtH,WAAW+P,EAAAA,EAAAA,GACP9P,EAAM+P,eACN,wBACA,gBAEJ/P,MAAO,CAAEK,OAAQ,OAAQD,MAAO,SAChCiI,YAAY,cACZ2H,SAAWC,IACPjN,GAAUiN,EAAEJ,OACZxC,GAAiB4C,EAAEJ,OACfI,EAAEJ,OACFrJ,IAAWqC,IAAM,IAAWA,EAAQ9F,QAAQ,KAAS,EAE7D8M,MAAO9M,GACP+O,cAAe3J,GACf+H,QAAwB,OAAfhJ,SAAe,IAAfA,QAAe,EAAfA,GAAiBiJ,WAC1B4B,aAAa,QACb3B,QAAM,EACNC,sBAAsB,KAEnB,OAAN9J,SAAM,IAANA,QAAM,EAANA,GAAQxD,UACLvC,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,6BAI/CM,EAAAA,EAAAA,KAACoR,EAAAA,EAAG,CAACC,GAAI,EAAE3R,SACN6C,IAAoB,KAAVA,KACPjD,EAAAA,EAAAA,MAAC6R,EAAAA,EAAG,CAAC5R,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgS,cAAe,eAAe9R,SAAA,EACrDM,EAAAA,EAAAA,KAACoR,EAAAA,EAAG,CAACC,GAAI,EAAG9R,UAAU,MAAKG,UACvBM,EAAAA,EAAAA,KAAA,OAAKT,UAAU,mDAAmDC,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQkH,aAAc,MAAOC,SAAU,SAAUC,OAAQ,qBAAsBvH,UAC7KM,EAAAA,EAAAA,KAACqH,EAAAA,EAAa,CAACC,MAAuB,OAAhB7E,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkByE,MAAOK,UAA2B,OAAhB9E,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkB8E,UAAWC,aAAa,EAAOC,KAAM,UAGzHnI,EAAAA,EAAAA,MAAC8R,EAAAA,EAAG,CAACC,GAAI,EAAG9R,UAAU,YAAWG,SAAA,EAC7BM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMiR,YAAa,eAAe/Q,UAAkB,OAAhB+C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBrD,OAAQ,OACrFY,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAEgR,WAAY,UAAWvJ,OAAQ,oBAAqBF,aAAc,OAAQmI,UAAW,UAAWxP,SAAC,iBAEnHJ,EAAAA,EAAAA,MAAC8R,EAAAA,EAAG,CAACC,GAAI,EAAG9R,UAAU,GAAEG,SAAA,EACpBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDM,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQ2Q,WAAY,UAAWvJ,OAAQ,oBAAqBF,aAAc,OAAQmI,UAAW,SAAUuC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWjS,SAAC,OAC/MJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EAAuB,OAAhB+C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBE,aAAc,IAAI,cAE/CrD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCG,SAAA,EAC5CM,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQ2Q,WAAY,UAAWvJ,OAAQ,oBAAqBF,aAAc,OAAQmI,UAAW,SAAUuC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWjS,UAACM,EAAAA,EAAAA,KAAC4R,EAAAA,EAAS,CAACvS,MAAM,UAAUoI,KAAM,QAChPzH,EAAAA,EAAAA,KAAA,QAAAN,UAAuB,OAAhB+C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBI,eAAgB,0BAUzEvD,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,SAAA,EACxCM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKC,KAAI,CAAC9Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMwP,cAActP,UAC3CM,EAAAA,EAAAA,KAAA,MAAIT,UAAU,iCAAiCC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAC,oBAEjGM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,gBAAiBhR,EAAMwP,cAActP,UAChFJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMqS,YAAYnS,SAAA,EAC9BM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,OAAOpS,SAAC,kBACrCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMuS,YAAYrS,SAAA,EAC9BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,EAAMwS,cAActS,SAAA,EAC3DM,EAAAA,EAAAA,KAAA,SACIiF,KAAK,QACL7G,GAAG,MACHgB,KAAK,aACLiQ,MAAM,IACNG,SAAWC,IACPvK,GAAQuK,EAAEuB,OAAO3B,OACM,MAAnBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQpD,MAAM,KAAS,EAE3DgN,QAAkB,MAAThN,GACT1F,UAAWC,EAAM0S,eAErBlS,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,MAAM5S,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAM4S,WAAY5S,EAAM6S,KAAK3S,SAAC,YAEvEM,EAAAA,EAAAA,KAAA,QAAAN,SAAM,QACNJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,EAAMwS,cAActS,SAAA,EAC3DM,EAAAA,EAAAA,KAAA,SACIiF,KAAK,QACL7G,GAAG,QACHgB,KAAK,aACLiQ,MAAM,IACNG,SAAWC,IACPvK,GAAQuK,EAAEuB,OAAO3B,OACM,MAAnBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQpD,MAAM,KAAS,EAE3DgN,QAAkB,MAAThN,GACT1F,UAAWC,EAAM0S,eAErBlS,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,QAAQ5S,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAM4S,WAAY5S,EAAM8S,OAAO5S,SAAC,cAE3EM,EAAAA,EAAAA,KAAA,QAAAN,SAAM,QACNJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,EAAMwS,cAActS,SAAA,EAC3DM,EAAAA,EAAAA,KAAA,SACIiF,KAAK,QACL7G,GAAG,cACHgB,KAAK,aACLiQ,MAAM,IACNG,SAAWC,IACPvK,GAAQuK,EAAEuB,OAAO3B,OACM,MAAnBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQpD,MAAM,KAAS,EAE3DgN,QAAkB,MAAThN,GACT1F,UAAWC,EAAM0S,eAErBlS,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,cAAc5S,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAM4S,WAAY5S,EAAM+S,aAAa7S,SAAC,wBAGpF,OAANqG,SAAM,IAANA,QAAM,EAANA,GAAQd,QACLjF,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,6BAG1B,MAATuF,IAAe3F,EAAAA,EAAAA,MAAAkT,EAAAA,SAAA,CAAA9S,SAAA,EACXJ,EAAAA,EAAAA,MAAA,SAAOC,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,MAAO,aAAapS,SAAA,CAAC,WAAOM,EAAAA,EAAAA,KAAA,QAAMT,UAAU,WAAUG,SAAC,UACpFJ,EAAAA,EAAAA,MAACoR,EAAAA,EAAS,CAAC+B,aAAa,OAAM/S,SAAA,EAC1BM,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAS,CAAAjR,UAACM,EAAAA,EAAAA,KAAA,QAAMR,MAAO,CAAE2O,SAAU,WAAY0C,IAAK,QAASnR,SAAC,SAC/DM,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAS,CAACzB,MAAOlK,GAAMqK,SAAWC,IAC/BrK,GAAQqK,EAAEuB,OAAO3B,OACbI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQlD,MAAM,KAAS,EACxDuN,UAAW,MAAOC,OAASlD,IAAC,IAAAmD,EAAA,OAAKxN,GAAQgI,YAAY,OAADqC,QAAC,IAADA,GAAS,QAARmD,EAADnD,EAAGuB,cAAM,IAAA4B,OAAR,EAADA,EAAWvD,QAAS,GAAG/B,QAAQ,GAAG,EAAE9N,MAAO,CAAEqT,YAAa,OAAQjT,MAAO,SAAWL,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,gBAAiBlJ,YAAY,WAErM,OAAN9B,SAAM,IAANA,QAAM,EAANA,GAAQZ,QACLnF,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,4BAGrCJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEI,MAAO,eAAgBF,SAAA,EACnCM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,MAAO,qBAAqBpS,SAAW,MAATuF,GAAe,QAAU,qBACpF3F,EAAAA,EAAAA,MAACoR,EAAAA,EAAS,CAAC+B,aAAa,OAAM/S,SAAA,EAC1BM,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAS,CAAAjR,UAACM,EAAAA,EAAAA,KAAA,QAAMR,MAAO,CAAE2O,SAAU,WAAY0C,IAAK,QAASnR,SAAC,SAC/DM,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAS,CAACzB,MAAOxJ,GAAU2J,SAAWC,IACnC3J,GAAY2J,EAAEuB,OAAO3B,OACjBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQxC,UAAU,KAAS,EAC5D6M,UAAW,MAAOC,OAASlD,IAAC,IAAAqD,EAAA,OAAKhN,GAAYsH,YAAY,OAADqC,QAAC,IAADA,GAAS,QAARqD,EAADrD,EAAGuB,cAAM,IAAA8B,OAAR,EAADA,EAAWzD,QAAS,GAAG/B,QAAQ,GAAG,EAAE9N,MAAO,CAAEqT,YAAa,OAAQjT,MAAO,SAAWL,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,gBAAiBlJ,YAAY,YAEzM,OAAN9B,SAAM,IAANA,QAAM,EAANA,GAAQF,YACL7F,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAW,MAATuF,GAAe,oBAAsB,yCAMhG3F,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,YAAY9Q,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMqS,YAAYnS,SAAA,EAC9BJ,EAAAA,EAAAA,MAAA,SAAOC,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,OAAOpS,SAAA,CAAC,QAAIM,EAAAA,EAAAA,KAAA,QAAMT,UAAU,WAAUG,SAAC,UACpEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMuS,YAAYrS,SAAA,CAEjB,MAATuF,KAAgB3F,EAAAA,EAAAA,MAAAkT,EAAAA,SAAA,CAAA9S,SAAA,EACZJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,EAAMwS,cAActS,SAAA,EAC3DM,EAAAA,EAAAA,KAAA,SACIiF,KAAK,QACL7G,GAAG,QACHgB,KAAK,WACLiQ,MAAM,IACNG,SAAWC,IACPnK,GAAcmK,EAAEuB,OAAO3B,OACA,MAAnBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQhD,WAAW,KAAS,EAEhE4M,QAAuB,MAAd5M,GACT9F,UAAWC,EAAM0S,eAErBlS,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,QAAQ5S,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAM4S,WAAY5S,EAAMuT,OAAOrT,SAAC,cAE3EM,EAAAA,EAAAA,KAAA,QAAAN,SAAM,WAIdJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,2BAA2BC,EAAMwS,cAActS,SAAA,EAC3DM,EAAAA,EAAAA,KAAA,SACIiF,KAAK,QACL7G,GAAG,YACHgB,KAAK,WACLiQ,MAAM,IACNG,SAAWC,IACPnK,GAAcmK,EAAEuB,OAAO3B,OACA,MAAnBI,EAAEuB,OAAO3B,OACTrJ,IAAWqC,IAAM,IAAWA,EAAQhD,WAAW,KAAS,EAEhE4M,QAAuB,MAAd5M,GACT9F,UAAWC,EAAM0S,eAErBlS,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,YAAY5S,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAM4S,WAAY5S,EAAMwT,WAAWtT,SAAC,sBAGhF,OAANqG,SAAM,IAANA,QAAM,EAANA,GAAQV,aACLrF,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,8BAI3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcG,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYG,SAAA,EACvBJ,EAAAA,EAAAA,MAAA,SAAOC,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,MAAO,qBAAqBpS,SAAA,CAAC,UAAMM,EAAAA,EAAAA,KAAA,QAAMT,UAAU,WAAUG,SAAC,UAC3FM,EAAAA,EAAAA,KAACiT,EAAAA,EAAQ,CACL5D,MAAO5J,GACP+J,SAAWC,IACP/J,GAAS+J,EAAEJ,OACPI,EAAEJ,OACFrJ,IAAWqC,IAAM,IAAWA,EAAQ5C,OAAO,KAAS,EAE5DyN,eAAa,EACbrL,YAAY,cACZsL,WAAW,UACXC,OAAO,KACPC,UAAQ,EACR7T,MAAO,CAAEK,OAAQ,OAAQD,MAAO,QAASoH,SAAU,UACnDsM,MAAMtT,EAAAA,EAAAA,KAAC4R,EAAAA,EAAS,CAACvS,MAAM,UAAUoI,KAAM,KACvClI,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,oBAChCwC,WAAW,KACXC,UAAQ,KAEL,OAANzN,SAAM,IAANA,QAAM,EAANA,GAAQN,SACLzF,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,yBAIzB,MAAd2F,KAAqB/F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYG,SAAA,EAC5CJ,EAAAA,EAAAA,MAAA,SAAOC,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,MAAO,qBAAqBpS,SAAA,CAAC,OAAGM,EAAAA,EAAAA,KAAA,QAAMT,UAAU,WAAUG,SAAC,UACxFM,EAAAA,EAAAA,KAACiT,EAAAA,EAAQ,CACL5D,MAAO1J,GACP6J,SAAWC,IACP7J,GAAO6J,EAAEJ,OACLI,EAAEJ,OACFrJ,IAAWqC,IAAM,IAAWA,EAAQ1C,KAAK,KAAS,EAE1DuN,eAAa,EACbrL,YAAY,cACZsL,WAAW,UACXC,OAAO,KACPC,UAAQ,EACR7T,MAAO,CAAEK,OAAQ,OAAQD,MAAO,QAASoH,SAAU,UACnDsM,MAAMtT,EAAAA,EAAAA,KAAC4R,EAAAA,EAAS,CAACvS,MAAM,UAAUoI,KAAM,KACvClI,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,oBAChCwC,WAAW,KACXC,UAAQ,KAEL,OAANzN,SAAM,IAANA,QAAM,EAANA,GAAQJ,OACL3F,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,wBAK5B,MAAd2F,IAAoC,MAAdA,IAA8B,MAATJ,MAAkB3F,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEI,MAAO,eAAgBF,SAAA,EAC/FM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMsS,MAAO,qBAAqBpS,SAAC,WAC1DJ,EAAAA,EAAAA,MAACoR,EAAAA,EAAS,CAAC+B,aAAa,QAAO/S,SAAA,EAC3BM,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAS,CAAAjR,UAACM,EAAAA,EAAAA,KAACyT,EAAAA,EAAY,CAACpU,MAAM,UAAUoI,KAAM,GAAIjI,MAAO,CAAE2O,SAAU,WAAY0C,IAAK,aACvF7Q,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAS,CAACzB,MAAOxJ,GAAU2J,SAAWC,GAAM3J,GAAY2J,EAAEuB,OAAO3B,OAAQqD,UAAW,MAAOC,OAASlD,IAAC,IAAAiE,EAAA,OAAK5N,GAAYsH,YAAY,OAADqC,QAAC,IAADA,GAAS,QAARiE,EAADjE,EAAGuB,cAAM,IAAA0C,OAAR,EAADA,EAAWrE,QAAS,GAAG/B,QAAQ,GAAG,EAAE9N,MAAO,CAAEqT,YAAa,OAAQjT,MAAO,SAAWL,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,gBAAiBlJ,YAAY,wBAS3SvI,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,SAAA,EACxCM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKC,KAAI,CAAC9Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMwP,cAActP,UAC3CM,EAAAA,EAAAA,KAAA,MAAIT,UAAU,iCAAiCC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAC,uBAEjGM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,WAAYhR,EAAMwP,cAActP,UAC3EJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAE2O,SAAU,WAAYe,UAAW,SAAUxP,SAAA,EACrDM,EAAAA,EAAAA,KAAA,SAAOT,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMiR,aAAa/Q,SAAC,aAC3CM,EAAAA,EAAAA,KAACmP,EAAAA,EAAQ,CACL7Q,QACKsI,KACoB,QADRiI,EACTjI,GAAapI,YAAI,IAAAqQ,OAAA,EAAjBA,EAAmBpK,KAAK4H,IAAO,CAC3BgD,MAAOhD,EAAQjO,GACfsJ,MAAO,GAAG2E,EAAQsH,WAAWtH,EAAQ7D,kBAE7C,GAEJjJ,WAAW+P,EAAAA,EAAAA,GACP9P,EAAM+P,eACN,wBACA,eACA,QAEJ/P,MAAO,CAAEK,OAAQ,OAAQD,MAAO,QAChCiI,YAAY,iBACZ2H,SAAWC,IACPzM,GAAayM,EAAEJ,OACXI,EAAEJ,OACFrJ,IAAWqC,IAAM,IAAWA,EAAQtF,WAAW,KAAS,EAEhEsM,MAAOtM,GACP2M,QAAqB,OAAZ9I,SAAY,IAAZA,QAAY,EAAZA,GAAc+I,WACvB4B,aAAa,QACb3B,QAAM,EACNC,sBAAsB,KAEnB,OAAN9J,SAAM,IAANA,QAAM,EAANA,GAAQhD,aACL/C,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,iCA+CnDJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,SAAA,EACxCM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKC,KAAI,CAAC9Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMwP,aAAc,kBAAmBkB,QAASA,IAAMpO,GAAwBD,GAAqBnC,UAC1HJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDG,SAAA,EAC9DM,EAAAA,EAAAA,KAAA,MAAIT,UAAU,iCAAiCC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAC,mBAC7FM,EAAAA,EAAAA,KAAA,UAAQT,UAAU,kBAAiBG,SAE3BmC,GAAsB7B,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAML,UAC9GM,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,uUAAuUF,KAAK,eACrXC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAML,UACnGM,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,8TAA8TF,KAAK,qBAOjY8B,IAAuBvC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMoU,eAAelU,SAAA,EACxDM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,WAAYhR,EAAMwP,cAActP,UAC3EJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,SAASzU,KAAK,SAASiQ,MAAM,SAASG,SAAWC,GAAMvM,GAAUuM,EAAEJ,OAAQ4C,QAAoB,WAAXhP,MACzGjD,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,SAAS5S,UAAU,sBAAqBG,SAAC,eAE5DJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,UAAUzU,KAAK,SAASiQ,MAAM,UAAUG,SAAWC,GAAMvM,GAAUuM,EAAEJ,OAAQ4C,QAAoB,YAAXhP,MAC3GjD,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,UAAU5S,UAAU,sBAAqBG,SAAC,qBAIrEM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,WAAYhR,EAAMwP,cAActP,UAC3EJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EAC/BM,EAAAA,EAAAA,KAAA,SAAOT,UAAU,OAAMG,SAAC,cAET,WAAXuD,KAAuBjD,EAAAA,EAAAA,KAAA,OAAKT,UAAU,kCAAiCG,SAE/D,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAO+E,KAAI,CAACqP,EAAKC,KACxD/T,EAAAA,EAAAA,KAAA,UAAkBkQ,QAASA,KACvB9M,IAAU4Q,GACNA,EAAUrH,SAASoH,GACbC,EAAUpE,QAAQ3P,GAAMA,IAAM8T,IAC9B,IAAIC,EAAWD,IACxB,EACFxU,WAAW+P,EAAAA,EAAAA,GAAK,iBAAkB,CAAE,wBAAyBnM,GAAMwJ,SAASoH,KAAUrU,SACpFoU,GAPQA,OAcd,YAAX7Q,KAAwBjD,EAAAA,EAAAA,KAAA,OAAKT,UAAU,4CAA2CG,SAE1EuU,MAAMC,KAAK,CAAE7W,OAAQ,KAAM,CAAC8W,EAAGC,IAAMA,EAAI,IAAG3P,KAAK4P,IAC7CrU,EAAAA,EAAAA,KAAA,UAAoBkQ,QAASA,KACzB5M,IAAWgR,GACPA,EAAW3H,SAAS0H,GACdC,EAAW1E,QAAQ2E,GAAMA,IAAMF,IAC/B,IAAIC,EAAYD,IACzB,EACF9U,WAAW+P,EAAAA,EAAAA,GAAK,iBAAkB,CAAE,wBAAyBjM,GAAOsJ,SAAS0H,KAAU3U,SACrF2U,GAPQA,QAatB,OAANtO,SAAM,IAANA,QAAM,EAANA,GAAQyO,MACLxU,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,kCAI/CJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,WAAYhR,EAAMwP,cAActP,SAAA,EAC3EM,EAAAA,EAAAA,KAAA,SAAOT,UAAU,OAAMG,SAAC,YACxBM,EAAAA,EAAAA,KAACiT,EAAAA,EAAQ,CACL5D,MAAO9L,GACPiM,SAAWC,GAAMjM,GAAeiM,EAAEJ,OAClC6D,eAAa,EACbrL,YAAY,cACZsL,WAAW,UACXC,OAAO,KACPC,UAAQ,EACR7T,MAAO,CAAEK,OAAQ,OAAQD,MAAO,QAASoH,SAAU,UACnDsM,MAAMtT,EAAAA,EAAAA,KAAC4R,EAAAA,EAAS,CAACvS,MAAM,UAAUoI,KAAM,KACvClI,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,uBAE7B,OAANhL,SAAM,IAANA,QAAM,EAANA,GAAQxC,eACLvD,EAAAA,EAAAA,KAAA,KAAGT,UAAU,qBAAoBG,SAAE,2BAG3CJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,kBAAmBhR,EAAMwP,cAActP,SAAA,EAClFJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EAC/BM,EAAAA,EAAAA,KAAA,SAAOT,UAAU,OAAMG,SAAC,UACxBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,KAAKzU,KAAK,SAASiQ,MAAM,KAAKG,SAAWC,GAAM/L,GAAU+L,EAAEJ,OAAQ4C,QAAoB,OAAXhP,MACjGjD,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,KAAK5S,UAAU,sBAAqBG,SAAC,WAExDM,EAAAA,EAAAA,KAACiT,EAAAA,EAAQ,CACL5D,MAAO1L,GACP6L,SAAWC,GAAM7L,GAAa6L,EAAEJ,OAChC6D,eAAa,EACbrL,YAAY,cACZsL,WAAW,UACXC,OAAO,KACPC,UAAQ,EACR7T,MAAO,CAAEK,OAAQ,OAAQD,MAAO,QAASoH,SAAU,UACnDsM,MAAMtT,EAAAA,EAAAA,KAAC4R,EAAAA,EAAS,CAACvS,MAAM,UAAUoI,KAAM,KACvClI,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMuR,SAAU,uBAEpCzR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,QAAQzU,KAAK,SAASiQ,MAAM,QAAQG,SAAWC,GAAM/L,GAAU+L,EAAEJ,OAAQ4C,QAAoB,UAAXhP,MACvGjD,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,QAAQ5S,UAAU,sBAAqBG,SAAC,oBAInEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAAA,SAAOT,UAAU,OAAMG,SAAC,iBACxBM,EAAAA,EAAAA,KAACmP,EAAAA,EAAQ,CACL7Q,QACI,CACI,CAAEoJ,MAAO,EAAG2H,MAAO,GACnB,CAAE3H,MAAO,EAAG2H,MAAO,GACnB,CAAE3H,MAAO,EAAG2H,MAAO,GACnB,CAAE3H,MAAO,EAAG2H,MAAO,GACnB,CAAE3H,MAAO,EAAG2H,MAAO,GACnB,CAAE3H,MAAO,EAAG2H,MAAO,GACnB,CAAE3H,MAAO,EAAG2H,MAAO,IAG3B9P,WAAW+P,EAAAA,EAAAA,GACP9P,EAAM+P,eACN,wBACA,eACA,QAEJ/P,MAAO,CAAEK,OAAQ,OAAQD,MAAO,QAChCiI,YAAY,qBACZ2H,SAAWC,IACPzM,GAAayM,EAAEJ,MAAM,EAEzBA,MAAOtM,GACP2M,QAAqB,OAAZ9I,SAAY,IAAZA,QAAY,EAAZA,GAAc+I,WACvBC,QAAM,EACNC,sBAAsB,WAIlCvQ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,8BAA+BhR,EAAMwP,cAActP,SAAA,EAC9FM,EAAAA,EAAAA,KAAA,SAAOT,UAAU,OAAMG,SAAC,wBACxBM,EAAAA,EAAAA,KAACmP,EAAAA,EAAQ,CACL7Q,QACI,CACI,CAAEoJ,MAAO,SAAU2H,MAAO,GAC1B,CAAE3H,MAAO,SAAU2H,MAAO,GAC1B,CAAE3H,MAAO,SAAU2H,MAAO,GAC1B,CAAE3H,MAAO,SAAU2H,MAAO,GAC1B,CAAE3H,MAAO,SAAU2H,MAAO,GAC1B,CAAE3H,MAAO,SAAU2H,MAAO,GAC1B,CAAE3H,MAAO,SAAU2H,MAAO,IAGlC9P,WAAW+P,EAAAA,EAAAA,GACP9P,EAAM+P,eACN,wBACA,eACA,QAEJ/P,MAAO,CAAEK,OAAQ,OAAQD,MAAO,SAChCiI,YAAY,cACZ2H,SAAWC,IACP3L,GAAe2L,EAAEJ,MAAM,EAE3BA,MAAOxL,GACPgM,sBAAsB,QAG9BvQ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,0CAA2ChR,EAAMwP,cAActP,SAAA,EAC1GM,EAAAA,EAAAA,KAACgQ,EAAAA,EAAM,CAACzQ,UAAU,iBAAgBG,SAAC,YACnCM,EAAAA,EAAAA,KAACgQ,EAAAA,EAAM,CAACzQ,UAAU,uCAAsCG,SAAC,oBAMzEJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,SAAA,EACxCM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKC,KAAI,CAAC9Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMwP,aAAc,kBAAmBkB,QAASA,IAAMhO,IAA8BD,IAA2BvC,UACtIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDG,SAAA,EAC9DM,EAAAA,EAAAA,KAAA,MAAIT,UAAU,iCAAiCC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAC,oBAC7FM,EAAAA,EAAAA,KAAA,UAAQT,UAAU,kBAAiBG,SAE3BuC,IAA4BjC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAML,UACpHM,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,uUAAuUF,KAAK,eACrXC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAML,UACnGM,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,8TAA8TF,KAAK,qBAOjYkC,KAA6BjC,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,0CAA2ChR,EAAMwP,cAActP,UACvIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCG,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,OAAOzU,KAAK,sBAAsBiQ,MAAM,GAAGG,SAAWC,GAAMzL,GAAuByL,EAAEJ,OAAQ4C,QAAgC,IAAvBlO,MAC3H/D,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,OAAO5S,UAAU,sBAAqBG,SAAC,aAE1DJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,mBAAmBzU,KAAK,sBAAsBiQ,MAAM,IAAIG,SAAWC,GAAMzL,GAAuByL,EAAEJ,OAAQ4C,QAAgC,KAAvBlO,MACxI/D,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,mBAAmB5S,UAAU,sBAAqBG,SAAC,yBAEtEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,QAAQzU,KAAK,sBAAsBiQ,MAAM,IAAIG,SAAWC,GAAMzL,GAAuByL,EAAEJ,OAAQ4C,QAAiC,MAAxBlO,MAC7H/D,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,QAAQ5S,UAAU,sBAAqBG,SAAC,8BAE3DJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBG,SAAA,EACpCM,EAAAA,EAAAA,KAACgS,EAAAA,EAAW,CAAC6B,QAAQ,MAAMzU,KAAK,sBAAsBiQ,MAAM,IAAIG,SAAWC,GAAMzL,GAAuByL,EAAEJ,OAAQ4C,QAAgC,KAAvBlO,MAC3H/D,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,MAAM5S,UAAU,sBAAqBG,SAAC,oBAOzEJ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAI,CAAC7Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMyH,OAAQ,QAAQvH,SAAA,EACxCM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKC,KAAI,CAAC9Q,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMwP,aAAc,kBAAmBkB,QAASA,IAAMlO,IAA6BD,GAA0BrC,UACpIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDG,SAAA,EAC9DM,EAAAA,EAAAA,KAAA,MAAIT,UAAU,iCAAiCC,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,KAAMrQ,SAAC,iBAC7FM,EAAAA,EAAAA,KAAA,UAAQT,UAAU,kBAAiBG,SAE3BqC,GAA2B/B,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAML,UACnHM,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,uUAAuUF,KAAK,eACrXC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAML,UACnGM,EAAAA,EAAAA,KAAA,QAAMmH,SAAS,UAAUC,SAAS,UAAUnH,EAAE,8TAA8TF,KAAK,qBAOjYgC,IAA4BzC,EAAAA,EAAAA,MAAAkT,EAAAA,SAAA,CAAA9S,SAAA,EACxBM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,2CAA2C9Q,UACtFJ,EAAAA,EAAAA,MAAA,UAAS6E,GAAa,CAAE5E,UAAW,0EAA4EC,MAAO,CAAEI,MAAO,OAAQC,OAAQ,QAAS2Q,WAAY,OAAQzJ,aAAc,MAAOE,OAAQ,oBAAqBwN,UAAW,QAAS/U,SAAA,EAC9OM,EAAAA,EAAAA,KAAA,YAAWoE,QACXpE,EAAAA,EAAAA,KAAA,UAAQiF,KAAK,SAAS1F,UAAU,mDAAmDC,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQoH,OAAQ,oBAAqBuJ,WAAY,OAAQzJ,aAAc,MAAO2N,aAAc,QAAShV,UACpNM,EAAAA,EAAAA,KAAC2U,EAAAA,EAAW,OAEhBrV,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAOC,MAAO,CAAEH,MAAO,UAAWyQ,SAAU,QAASpQ,SAAA,EAACM,EAAAA,EAAAA,KAAA,QAAMR,MAAO,CAAEH,MAAO,UAAW0Q,WAAY,OAAQrQ,SAAC,oBAAsB,wBAC/IM,EAAAA,EAAAA,KAAA,QAAMR,MAAO,CAAEH,MAAO,UAAWyQ,SAAU,QAASpQ,SAAC,gDAG7DM,EAAAA,EAAAA,KAACoQ,EAAAA,EAAKG,OAAM,CAAChR,WAAW+P,EAAAA,EAAAA,GAAK9P,EAAMgR,WAAY,8BAA+BhR,EAAMwP,cAActP,UAC9FM,EAAAA,EAAAA,KAAA,OAAKT,UAAU,2BAA0BG,SAE5B,OAALuE,SAAK,IAALA,QAAK,EAALA,GAAOQ,KAAI,CAACC,EAAMqP,KACdzU,EAAAA,EAAAA,MAAA,OAAiBC,UAAWC,EAAMoV,QAAQlV,SAAA,CACrCX,EAAY2F,EAAKO,OAClB3F,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMqV,YAAYnV,SAAA,EAC9BM,EAAAA,EAAAA,KAAA,KAAGT,UAAU,OAAMG,UAAM,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAMtF,OAAQ,MACnCE,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMG,SAAA,CACd0N,YAAe,OAAJ1I,QAAI,IAAJA,OAAI,EAAJA,EAAM+C,MAAO,MAAM6F,QAAQ,GAAG,MACzC5I,EAAKqF,OACF/J,EAAAA,EAAAA,KAAA,QAAMR,MAAO,CAAEH,MAAO,WAAYK,SAAC,qBACnC,MAAMoV,SAAa,OAAJpQ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,WAAa,iBAGzCL,EAAKgF,eACF1J,EAAAA,EAAAA,KAAA,KAAGT,UAAU,OAAOC,MAAO,CAAEH,MAAO,UAAWyQ,SAAU,QAASpQ,SAAEgF,EAAKgF,mBAGjF1J,EAAAA,EAAAA,KAAA,OAAKT,UAAU,UAASG,SACnBgF,EAAKqF,OACF/J,EAAAA,EAAAA,KAAA,OAAKR,MAAO,CAAEH,MAAO,UAAWO,MAAO,OAAQC,OAAQ,OAAQ4R,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWjS,SAAC,OAClIM,EAAAA,EAAAA,KAAC+U,EAAAA,EAAmB,CAACC,WAAYF,SAAa,OAAJpQ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,WAAa,EAAG0C,KAAM,GAAIpI,MAAM,gBAlBlF0U,mBAiC1CzU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mEAAmEC,MAAO,CAAEyP,QAAS,YAAagG,UAAW,qCAAsCpV,OAAQ,QAASH,SAAA,EAC/KM,EAAAA,EAAAA,KAACgQ,EAAAA,EAAM,CAAC/K,KAAK,SAASiL,QAAUT,IAAQA,EAAEyF,kBAAmB5U,GAAW,EAAM,EAAKf,UAAU,iBAAgBG,SAAC,YAC9GJ,EAAAA,EAAAA,MAAC0Q,EAAAA,EAAM,CAAC/K,KAAK,SAASiL,QAASA,IAAMxE,IAAS,GAAQnM,UAAU,uCAAuC4V,SAAkB,OAARlL,SAAQ,IAARA,QAAQ,EAARA,GAAUmL,UAAU1V,SAAA,CAChIe,EAAa,eAAiB,cACtB,OAARwJ,SAAQ,IAARA,QAAQ,EAARA,GAAUmL,aAAcnU,EAAWuK,UAAWxL,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAe,CAACpR,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQR,MAAO,cAEnHC,EAAAA,EAAAA,MAAC0Q,EAAAA,EAAM,CAAC/K,KAAK,SAASiL,QAASA,IAAMxE,IAAS,GAAOnM,UAAU,eAAeC,MAAO,CAAE6V,SAAU,QAAUF,SAAkB,OAARlL,SAAQ,IAARA,QAAQ,EAARA,GAAUmL,UAAU1V,SAAA,CACpIe,EAAa,qBAAuB,oBAC5B,OAARwJ,SAAQ,IAARA,QAAQ,EAARA,GAAUmL,YAAanU,EAAWuK,UAAWxL,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAe,CAACpR,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQR,MAAO,kBAGpH,GAEH,C,kBC73CZ,SAASiW,EAAUC,GAA0B,IAAlBC,EAAOpY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACrC,MAAMqY,EAAMrI,WAAWmI,GAEvB,OAAIG,MAAMD,GACC,OAGPD,GAAWrM,KAAKwM,IAAIF,IAAQ,IACrB,IAAIG,KAAKC,aAAa,QAAS,CAClCC,SAAU,UACVC,eAAgB,QAChBC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOT,GAGP,IAAIG,KAAKC,aAAa,QAAS,CAClCG,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOT,EACd,C,mDCdO,MAAM3X,EAAWd,eAAOmZ,GAAuD,IAA7C7X,EAAOlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGgZ,IAAkBhZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrE,MAAM,OAAEY,EAAS,MAAK,QAAEgL,EAAU,CAAC,EAAC,KAAEzK,GAASD,EACzCwC,EAAcC,aAAaC,QAAQ,gBACnCqV,EAAa9X,aAAgB+X,SAE7BC,EAAiB,CACnB,eAAgBF,EAAa,sBAAwB,sBAClDrN,GAGHoN,IACAG,EAA8B,cAAI,UAAUzV,KAGhD,MAAM0V,EAAiB,CACnBxY,SACAgL,QAASuN,EACThY,KAAM8X,EAAa9X,EAAOkY,KAAKC,UAAUnY,GACzCoY,SAAU,UAGd,IACI,MAAMjZ,EAAM,IAAIC,IAAIwY,GACdtN,QAAiB+N,MAAMlZ,EAAK8Y,GAC5BK,EAAchO,EAASG,QAAQT,IAAI,gBAEzC,IAAKM,EAASiO,GAAI,CAAC,IAADC,EACd,IAAIC,EAAY,KAGZA,EADAH,GAAeA,EAAYlK,SAAS,0BAClB9D,EAASoO,aAETpO,EAASqO,OAGP,MAApBrO,EAASc,SACT5I,aAAaoW,QACbC,eAAeD,QACf/V,OAAOC,SAASgW,QAAQ,WAG5B,MAAMtN,EAAQ,IAAIuN,OAAe,QAATP,EAAAC,SAAS,IAAAD,OAAA,EAATA,EAAWlN,UAAW,uBAAuBhB,EAASc,UAG9E,MAFAI,EAAMJ,OAASd,EAASc,OACxBI,EAAMvL,KAAOwY,EACPjN,CACV,CAEA,GAAI8M,GAAeA,EAAYlK,SAAS,oBACpC,aAAa9D,EAASoO,OAGtB,MAAO,CAAEpN,QAAS,oBAAqBtL,WADpBsK,EAASqO,OAGpC,CAAE,MAAOnN,GAGL,MAFAD,QAAQC,MAAM,mBAAoBA,GAE5BA,CACV,CACJ,C,kDChEO,MAAMgL,EAAsB5U,IAA0F,IAAzF,WAAE6U,EAAU,KAAEvN,EAAO,IAAG,YAAE8P,EAAc,EAAC,MAAElY,EAAQ,UAAS,WAAEmR,EAAa,QAAQrQ,EACnH,MAAMqX,GAAU/P,EAAO8P,GAAe,EAChCE,EAAgB,EAAItO,KAAKuO,GAAKF,EAC9BG,EAAiBF,EAAiBzC,EAAa,IAAOyC,EAE5D,OACInY,EAAAA,EAAAA,MAAA,OAAKM,MAAO6H,EAAM5H,OAAQ4H,EAAK/H,SAAA,EAE3BM,EAAAA,EAAAA,KAAA,UACI4X,GAAInQ,EAAO,EACXoQ,GAAIpQ,EAAO,EACXqQ,EAAGN,EACHzX,KAAK,OACLgY,OAAQvH,EACR+G,YAAaA,KAGjBvX,EAAAA,EAAAA,KAAA,UACI4X,GAAInQ,EAAO,EACXoQ,GAAIpQ,EAAO,EACXqQ,EAAGN,EACHzX,KAAK,OACLgY,OAAQ1Y,EACRkY,YAAaA,EACbS,gBAAiBP,EACjBQ,iBAAkBN,EAClBO,cAAc,QACd1Y,MAAO,CAAE2Y,WAAY,mCAEvB,C,yGC5Bd,MAAMtb,EAAeC,mCAERsb,EAAgBpb,eAAOC,EAAMC,GAAiD,IAA1CkC,EAAIhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIib,EAAajb,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjF,MAAMG,GAAUR,EAAO,GAAKC,EAKtBQ,EAAM,IAAIC,IAAI,GAAGd,WAQvB,OAPAa,EAAIE,aAAaC,OAAO,QAASX,GACjCQ,EAAIE,aAAaC,OAAO,SAAUJ,GAC9B2B,GAAM1B,EAAIE,aAAaC,OAAO,OAAQuB,GACtC7B,GAAOG,EAAIE,aAAaC,OAAO,WAAYN,GAC3C8a,GAAe3a,EAAIE,aAAaC,OAAO,UAAW,GACtDH,EAAIE,aAAaC,OAAO,SAAU,gBAE3BC,EAAAA,EAAAA,GAASJ,EAAIK,WAXJ,CACZC,OAAQ,OAWhB,EAEaqM,EAAerN,UACxB,MACMsB,EAAU,CACZN,OAAQ,OACRO,KAAMC,GAEJd,EAAM,IAAIC,IAAI,GAAGd,kBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG/Bga,EAAStb,UAClB,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,SAASuB,QAK1B,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACZC,OAAQ,OAG4B,EAG/Bua,EAAsBvb,UAC/B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,gBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACZC,OAAQ,OAG4B,EAG/BoM,EAAYpN,MAAOoB,EAAII,KAChC,MACMF,EAAU,CACZN,OAAQ,MACRO,KAAMC,GAEJd,EAAM,IAAIC,IAAI,GAAGd,IALN,gBAAgBuB,QAMjC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG/Bka,EAAiBxb,UAC1B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,oBAAoBuB,QAKrC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACZC,OAAQ,OAG4B,EAG/Bya,EAAiBzb,MAAOoB,EAAII,KACrC,MACMF,EAAU,CACZN,OAAQ,OACRO,KAAMC,GAEJd,EAAM,IAAIC,IAAI,GAAGd,IALN,iBAAiBuB,QAMlC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,C,mRCzE5C,MAAMzB,EAAeC,mCAERuJ,EAAkBrJ,UAC7B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,qBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7BuI,EAAiBvJ,UAC5B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,mBAAmBuB,QAKpC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7B0a,EAAoB1b,UAC/B,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,qBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7Bqa,EAAoB3b,MAAOoB,EAAII,KAC1C,MACMF,EAAU,CACdN,OAAQ,MACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,IALN,mBAAmBuB,QAMpC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7Bsa,EAAoB5b,UAC/B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,mBAAmBuB,QAKpC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,UAG8B,EAG7B6a,EAAoB7b,UAC/B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,yCACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7B8a,EAAsB9b,UACjC,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,yCACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7Bya,EAAsB/b,MAAOoB,EAAII,KAC5C,MACMF,EAAU,CACdN,OAAQ,MACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,IALN,uCAAuCuB,QAMxD,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7B0a,EAAWhc,UACtB,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,uCAAuCuB,QAKxD,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bib,EAAwBjc,UACnC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,uBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bkb,EAAoBlc,UAC/B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,qBAAqBuB,QAKtC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bmb,EAAuBnc,UAClC,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,uBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7B8a,EAAuBpc,MAAOoB,EAAII,KAC7C,MACMF,EAAU,CACdN,OAAQ,MACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,IALN,qBAAqBuB,QAMtC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7B+a,EAAuBrc,UAClC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,qBAAqBuB,QAKtC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,UAG8B,EAG7Bsb,EAA2Btc,UACtC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,sCAAsCuB,QAKvD,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bub,EAAkBvc,UAC7B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,oBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bwb,EAASxc,UACpB,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,kBAAkBuB,QAKnC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Byb,EAAoBzc,UAC/B,MACMsB,EAAU,CACdN,OAAQ,OACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,oBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7Bob,EAAoB1c,MAAOoB,EAAII,KAC1C,MACMF,EAAU,CACdN,OAAQ,MACRO,KAAMC,GAEFd,EAAM,IAAIC,IAAI,GAAGd,IALN,kBAAkBuB,QAMnC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAAYO,EAAQ,EAG7Bqb,EAAoB3c,UAC/B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,kBAAkBuB,QAKnC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,UAG8B,EAG7B4b,EAAuB5c,UAClC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,cAAcuB,QAK/B,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7B6b,EAAmB7c,UAC9B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,gCACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7B8b,EAAuB9c,UAClC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,uCAAuCuB,QAKxD,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,UAG8B,EAG7B+b,EAAwB/c,UACnC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,yBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAG7Bgc,EAAuBhd,UAClC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,uBAAuBuB,QAKxC,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,OAG8B,EAa7Bic,EAA0Bjd,UACrC,MAIMU,EAAM,IAAIC,IAAI,GAAGd,IAJN,8BAA8BuB,QAK/C,OAAON,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACdC,OAAQ,UAG8B,C,qEC3P1C,MAAMnB,EAAeC,mCAER6J,EAAoB3J,UAC7B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,wBACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACZC,OAAQ,OAG4B,EAG/Bkc,EAAqBld,UAC9B,MAIMU,EAAM,IAAIC,IAAI,GAAGd,0BACvB,OAAOiB,EAAAA,EAAAA,GAASJ,EAAIK,WAJJ,CACZC,OAAQ,OAG4B,EAG/Bmc,EAAwBnd,eAAOoB,EAAInB,EAAMC,GAAoC,IAA7BC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAClE,IAAKgB,IAAOnB,IAASC,EAAO,OAE5B,MAAMO,GAAUR,EAAO,GAAKC,EAKtBQ,EAAM,IAAIC,IAAI,GAAGd,IAJN,sBAAsBuB,iBAUvC,OALAV,EAAIE,aAAaC,OAAO,QAASX,GACjCQ,EAAIE,aAAaC,OAAO,SAAUJ,GAC9BN,GAAQO,EAAIE,aAAaC,OAAO,SAAUV,IAGvCW,EAAAA,EAAAA,GAASJ,EAAIK,WATJ,CACZC,OAAQ,OAShB,C","sources":["APIs/expenses-api.js","webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","shared/lib/format-aud.js","APIs/base-api.js","shared/ui/circular-progressbar/index.js","APIs/jobs-api.js","APIs/email-template.js","APIs/team-api.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfExpense = async (page, limit, search=\"\", order=\"\", isShowUnpaid) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/expenses/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowUnpaid) url.searchParams.append('status', 'not_paid');\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getXeroCodesList = async () => {\n  const endpoint = `/references/xero-codes/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProjectsList = async () => {\n  const endpoint = `/references/projects/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getExpense = async (id) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewExpense = async (data) => {\n  const endpoint = '/expenses/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateExpense = async (id, data) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const paidExpense = async (data) => {\n  const endpoint = '/expenses/paid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const unpaidExpense = async (data) => {\n  const endpoint = '/expenses/unpaid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendExpenseToXeroApi = async (data) => {\n  const endpoint = `/expenses/to-xero/`;\n  const options = {\n      method: 'PUT',\n      body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteExpense = async (uniqueId) => {\n  const endpoint = `/expenses/delete/${uniqueId}/`;\n  const options = {\n    method: 'DELETE'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { getProjectsList } from '../../../../APIs/expenses-api';\nimport { createNewJob, updateJob } from '../../../../APIs/jobs-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\nexport function getFileIcon(fileType) {\n    if (fileType) fileType = fileType?.toLowerCase();\n    \n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n        'zip': { name: 'ZIP', color: '#FFD700' },\n        'rar': { name: 'RAR', color: '#F44336' },\n        'ppt': { name: 'PPT', color: '#FF9800' },\n        'pub': { name: 'Publisher', color: '#4CAF50' },\n        'swf': { name: 'SWF', color: '#FFEB3B' },\n        'tar': { name: 'TAR', color: '#FFC107' },\n        'pdf': { name: 'PDF', color: '#D92D20' },\n        'doc': { name: 'Word', color: '#2368E1' },\n        'docx': { name: 'Word', color: '#2368E1' },\n        'xls': { name: 'Excel', color: '#22A746' },\n        'xlsx': { name: 'Excel', color: '#22A746' },\n        'jpg': { name: 'JPEG', color: '#FFAA00' },\n        'jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'png': { name: 'PNG', color: '#00ADEF' },\n        'gif': { name: 'GIF', color: '#F64A8A' },\n        'mp4': { name: 'MP4', color: '#9C27B0' },\n        'mp3': { name: 'MP3', color: '#4CAF50' },\n        'wav': { name: 'WAV', color: '#795548' },\n        'txt': { name: 'Text', color: '#8E8E8E' },\n        'json': { name: 'JSON', color: '#22A746' },\n        'svg': { name: 'SVG', color: '#FF5722' },\n        'pptx': { name: 'PPT', color: '#FF9800' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\nconst CreateJob = ({ visible, setVisible, setRefetch = () => { }, workerId, isEditMode = false, jobData = null, jobId = null, jobProjectId, refetch = () => { } }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n    const publishRef = useRef(null);\n    const url = React.useMemo(() => window.location.href, []);\n    const urlObj = React.useMemo(() => new URL(url), [url]);\n    const params = React.useMemo(() => new URLSearchParams(urlObj.search), [urlObj]);\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            const newFiles = acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file),\n                progress: 0,\n            }));\n\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...newFiles,\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const today = new Date();\n    const [start, setStart] = useState(today);\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileUserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({ queryKey: ['getProjectsList'], queryFn: getProjectsList });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    {option?.image === \"openJob\"\n                        ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                            <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                            <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                        </svg>\n                        : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    }\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        {option?.image === \"openJob\"\n                            ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <path d=\"M7.14307 6.57171C6.82748 6.57171 6.57164 6.82754 6.57164 7.14314C6.57164 7.45873 6.82748 7.71457 7.14307 7.71457H12.8574C13.1729 7.71457 13.4288 7.45873 13.4288 7.14314C13.4288 6.82754 13.1729 6.57171 12.8574 6.57171H7.14307Z\" fill=\"#475467\" />\n                                <path d=\"M7.14307 8.85742C6.82748 8.85742 6.57164 9.11326 6.57164 9.42885C6.57164 9.74444 6.82748 10.0003 7.14307 10.0003H10.5716C10.8872 10.0003 11.1431 9.74444 11.1431 9.42885C11.1431 9.11326 10.8872 8.85742 10.5716 8.85742H7.14307Z\" fill=\"#475467\" />\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0002 3.14314C11.2626 3.14314 12.2859 2.11979 12.2859 0.857422H15.1431C16.0898 0.857422 16.8574 1.62493 16.8574 2.57171V17.4289C16.8574 18.3756 16.0898 19.1431 15.1431 19.1431H4.85735C3.91058 19.1431 3.14307 18.3756 3.14307 17.4289V2.57171C3.14307 1.62493 3.91058 0.857422 4.85735 0.857422H7.7145C7.7145 2.11979 8.73784 3.14314 10.0002 3.14314ZM10.0002 4.28599C11.493 4.28599 12.763 3.33193 13.2337 2.00028H15.1431C15.4587 2.00028 15.7145 2.25612 15.7145 2.57171V17.4289C15.7145 17.7444 15.4587 18.0003 15.1431 18.0003H4.85735C4.54176 18.0003 4.28592 17.7444 4.28592 17.4289V2.57171C4.28592 2.25612 4.54176 2.00028 4.85735 2.00028H6.76673C7.2374 3.33193 8.50739 4.28599 10.0002 4.28599Z\" fill=\"#475467\" />\n                            </svg>\n                            : <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                        }\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            // Limit job reference to 50 characters when loading from template\n            const templateTitle = getTemplateByIDQuery?.data?.title || \"\";\n            setJobReference(templateTitle.substring(0, 50));\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    useEffect(() => {\n        const projectParamId = params.get('projectId');\n        const reference = params.get('reference');\n        if (reference) {\n            setJobReference(reference);\n            urlObj.searchParams.delete('reference');\n            window.history.replaceState({}, '', urlObj);\n        }\n\n        if (projectParamId) {\n            setVisible(true);\n            setProjectId(+projectParamId);\n            urlObj.searchParams.delete('projectId');\n            window.history.replaceState({}, '', urlObj);\n        }\n    }, [setVisible, params, urlObj]);\n\n    const uploadToS3 = async (file, url) => {\n        try {\n            const response = await axios.put(url, file, {\n                headers: {\n                    \"Content-Type\": \"\",\n                },\n                onUploadProgress: (progressEvent) => {\n                    const progress = Math.round(\n                        (progressEvent.loaded / progressEvent.total) * 100\n                    );\n                    setFiles((prevFiles) => {\n                        return prevFiles.map((f) =>\n                            f.name === file.name\n                                ? Object.assign(f, { progress, url })\n                                : f\n                        );\n                    });\n                },\n            });\n\n            // Mark as successfully uploaded\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 100, uploaded: true })\n                        : f\n                );\n            });\n\n            return response;\n        } catch (err) {\n            // Handle specific error types\n            let errorMessage = \"Upload failed\";\n\n            if (err.response) {\n                if (err.response.status === 403) {\n                    errorMessage = \"Permission denied (403 Forbidden)\";\n                } else {\n                    errorMessage = `Server error: ${err.response.status}`;\n                }\n            } else if (err.request) {\n                errorMessage = \"No response from server\";\n            } else {\n                errorMessage = err.message;\n            }\n\n            console.error(`Error uploading ${file.name}:`, errorMessage);\n\n            // Update file with error status but don't stop other uploads\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, {\n                            progress: 0,\n                            error: true,\n                            errorMessage,\n                            uploadFailed: true\n                        })\n                        : f\n                );\n            });\n\n            // Return error object instead of throwing\n            return { error: true, message: errorMessage };\n        }\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            if (file.error || !file.url) continue;\n\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        let successCount = 0;\n        let errorCount = 0;\n\n        // Process each file independently\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n                if (!url) {\n                    console.error(`No URL returned for file: ${file.name}`);\n                    errorCount++;\n                    continue;\n                }\n\n                // Step 2: Upload the file to S3 using the signed URL\n                const result = await uploadToS3(file, url);\n\n                // Check if upload was successful\n                if (result && !result.error) {\n                    successCount++;\n                } else {\n                    errorCount++;\n                }\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n\n                // Update file with error status\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, {\n                                progress: 0,\n                                error: true,\n                                errorMessage: error.message || \"Failed to get upload URL\",\n                                uploadFailed: true\n                            })\n                            : f\n                    );\n                });\n\n                errorCount++;\n                // Continue with next file instead of stopping\n            }\n        }\n\n        // Show summary toasts\n        if (successCount > 0) {\n            toast.success(`Successfully uploaded ${successCount} file(s)`);\n        }\n        if (errorCount > 0) {\n            toast.error(`Failed to upload ${errorCount} file(s)`);\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => {\n            if (isEditMode && jobId) {\n                return updateJob(jobId, data);\n            } else {\n                return createNewJob(data);\n            }\n        },\n        onSuccess: async (response) => {\n            const id = isEditMode ? jobId : response.id;\n\n            if (files.length > 0) {\n                await fileUploadBySignedURL(id);\n                await attachmentsUpdateInJob(id);\n            }\n\n            // Call setRefetch to trigger a refresh in the parent component\n            if (jobData) refetch();\n            setRefetch((prev) => !prev);\n\n            toast.success(`Job ${isEditMode ? 'updated' : 'created'} successfully`);\n            setVisible(false);\n            reset();\n            publishRef.current = null;\n        },\n        onError: (error) => {\n            publishRef.current = null;\n            console.error(`Error ${isEditMode ? 'updating' : 'creating'} job:`, error);\n            toast.error(`Failed to ${isEditMode ? 'update' : 'create'} job. Please try again.`);\n        }\n    });\n\n    const onSubmit = (isPublish) => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else if (userId && userId != \"0\") payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        if (projectId) {\n            const project = projectQuery?.data?.find(project => project.id === projectId);\n            if (project) payload.project = project.unique_id;\n        }\n\n        if (projectPhotoDeliver)\n            payload.project_photos = projectPhotoDeliver;\n\n        payload.published = isPublish;\n        publishRef.current = isPublish;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = useCallback((id) => {\n        let user = mobileUserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        }\n    }, [mobileUserQuery?.data?.users]);\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId || \"0\");\n            workerDetailsSet(+workerId || \"\");\n        }\n    }, [workerId, workerDetailsSet]);\n\n    useEffect(() => {\n        if (jobProjectId) {\n            setProjectId(jobProjectId);\n        }\n    }, [jobProjectId]);\n\n    // Populate form with job data when in edit mode\n    useEffect(() => {\n        if (isEditMode && jobData && projectQuery?.data) {\n            // Set job reference and description\n            setJobReference(jobData.short_description || \"\");\n            setDescription(jobData.long_description || \"\");\n\n            // Set worker details\n            if (jobData.worker) {\n                setUserId(jobData.worker.id);\n                workerDetailsSet(jobData.worker.id);\n            } else {\n                setUserId(\"0\");\n            }\n\n            // Set project\n            if (jobData.project) {\n                const project = projectQuery?.data?.find(project => project.unique_id === jobData.project.unique_id);\n                setProjectId(project?.id || \"\");\n            }\n\n            // Set payment type and cost\n            setType(jobData.type || \"2\");\n            setCost(jobData.cost || 0.00);\n\n            // Set time type and duration\n            set_time_type(jobData.time_type || \"\");\n            setDuration(jobData.duration || \"\");\n\n            // Set dates\n            if (jobData.start_date) {\n                const startDate = new Date(+jobData.start_date * 1000);\n                setStart(startDate);\n            }\n            if (jobData.end_date) {\n                const endDate = new Date(+jobData.end_date * 1000);\n                setEnd(endDate);\n            }\n\n            // Set project photos\n            setProjectPhotoDeliver(jobData.project_photos || \"3\");\n\n            // Set attachments if available\n            if (jobData.attachments && jobData.attachments.length > 0) {\n                setFiles(jobData.attachments.map(attachment => ({\n                    name: attachment.name,\n                    size: attachment.size,\n                    url: attachment.link,\n                    progress: 100,\n                    isExisting: true\n                })));\n            }\n        }\n    }, [isEditMode, jobData, workerDetailsSet, projectQuery?.data]);\n\n    useEffect(() => {\n        if (mobileUserQuery?.data && userId && ((time_type === '1' && type === '2') || (time_type === '1' && type === '3') || (time_type === 'T' && type === '4'))) {\n            const findUser = mobileUserQuery?.data?.users.find((user) => user.id === userId);\n            if (findUser) {\n                let duration = cost / findUser?.hourly_rate;\n                setDuration(parseFloat(duration).toFixed(2));\n            }\n        }\n    }, [cost, mobileUserQuery?.data, userId, time_type, type]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => {setVisible(false); reset();}} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            {!isEditMode && (\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <Dropdown\n                                        options={\n                                            (templateQuery &&\n                                                templateQuery.data?.map((template) => ({\n                                                    value: template.id,\n                                                    label: `${template.name}`,\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\"\n                                        )}\n                                        style={{ height: \"44px\", width: '606px' }}\n                                        placeholder=\"Select template\"\n                                        onChange={(e) => {\n                                            setTemplatedId(e.value);\n                                        }}\n                                        value={templateId}\n                                        loading={templateQuery?.isFetching}\n                                        filter\n                                        filterInputAutoFocus={true}\n                                    />\n                                </div>\n                            )}\n                            {isEditMode && (\n                                <h2 className=\"mb-0\" style={{ fontSize: '18px', fontWeight: '500' }}>Edit Job #{jobId}</h2>\n                            )}\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>{isEditMode ? 'Edit Job' : 'New Job'}</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference<span className=\"required\">*</span></label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    const value = e.target.value;\n                                                    if (value.length <= 50) {\n                                                        setJobReference(value);\n                                                        if (value)\n                                                            setErrors((others) => ({ ...others, jobReference: false }));\n                                                    }\n                                                }}\n                                                maxLength={50}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        {errors?.jobReference && (\n                                            <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                        )}\n                                        <small className=\"text-muted ms-auto\">{jobReference.length}/50</small>\n                                    </div>\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to<span className=\"required\">*</span></h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={[\n                                                    { value: \"0\", label: \"Open job\", image: \"openJob\", has_photo: false },\n                                                    ...(mobileUserQuery?.data?.users\n                                                        ?.filter((user) => user.status !== 'disconnected')\n                                                        ?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        })) || [])\n                                                ]}\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileUserQuery?.isFetching}\n                                                scrollHeight=\"350px\"\n                                                filter\n                                                filterInputAutoFocus={true}\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        {userId && userId != \"0\" &&\n                                            <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                                <Col sm={2} className='p-0'>\n                                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                        <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                    </div>\n                                                </Col>\n                                                <Col sm={5} className='pe-0 ps-0'>\n                                                    <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                    <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                                </Col>\n                                                <Col sm={5} className=''>\n                                                    <div className='d-flex align-items-center gap-2 mb-3'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                        <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                    </div>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                        <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment<span className=\"required\">*</span></label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time<span className=\"required\">*</span></label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts<span className=\"required\">*</span></label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            locale=\"en\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End<span className=\"required\">*</span></label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                locale=\"en\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.id,\n                                                    label: `${project.number}: ${project.reference}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        scrollHeight=\"400px\"\n                                        filter\n                                        filterInputAutoFocus={true}\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            locale=\"en\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    locale=\"en\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                                filterInputAutoFocus={true}\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                            filterInputAutoFocus={true}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"None\" name=\"projectPhotoDeliver\" value=\"\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == ''} />\n                                            <label htmlFor=\"None\" className=\"ms-2 cursor-pointer\">None</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>\n                                                                {parseFloat(file?.size / 1024).toFixed(2)} KB\n                                                                {file.error ?\n                                                                    <span style={{ color: \"#F04438\" }}> - Upload failed</span> :\n                                                                    ` - ${parseInt(file?.progress) || 0}% uploaded`\n                                                                }\n                                                            </p>\n                                                            {file.errorMessage &&\n                                                                <p className='mb-0' style={{ color: \"#F04438\", fontSize: \"12px\" }}>{file.errorMessage}</p>\n                                                            }\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            {file.error ?\n                                                                <div style={{ color: \"#F04438\", width: \"30px\", height: \"30px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>!</div> :\n                                                                <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        <Button type='button' onClick={() => onSubmit(false)} className='outline-button active-outline-button' disabled={mutation?.isPending}>\n                            {isEditMode ? \"Update Draft\" : \"Save Draft\"}\n                            {mutation?.isPending && !publishRef.current && <ProgressSpinner style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }} />}\n                        </Button>\n                        <Button type='button' onClick={() => onSubmit(true)} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending}>\n                            {isEditMode ? 'Update and Publish' : 'Save and Publish'}\n                            {mutation?.isPending && publishRef.current && <ProgressSpinner style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }} />}\n                        </Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","export function formatAUD(amount, shorten = false) {\n    const num = parseFloat(amount);\n\n    if (isNaN(num)) {\n        return \"0.00\";\n    }\n\n    if (shorten && Math.abs(num) >= 1000.00) {\n        return new Intl.NumberFormat('en-AU', {\n            notation: \"compact\",\n            compactDisplay: \"short\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(num);\n    }\n\n    return new Intl.NumberFormat('en-AU', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(num);\n}","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n    url.searchParams.append('status', '3,2,1,6,4,a');\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateJob = async (id, data) => {\n    const endpoint = `/jobs/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getApprovedJob = async (id) => {\n    const endpoint = `/jobs/to-approve/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createApproval = async (id, data) => {\n    const endpoint = `/jobs/approve/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamInvoiceHistory = async (id, page, limit, search = \"\", order = \"\") => {\n    if (!id || !page || !limit) return;\n    \n    const offset = (page - 1) * limit;\n    const endpoint = `/team/mobile-users/${id}/invoices/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (search) url.searchParams.append(\"number\", search);\n    // if (order) url.searchParams.append(\"ordering\", order);\n\n    return fetchAPI(url.toString(), options);\n};\n"],"names":["API_BASE_URL","process","getListOfExpense","async","page","limit","search","arguments","length","undefined","order","isShowUnpaid","offset","url","URL","searchParams","append","fetchAPI","toString","method","getXeroCodesList","getProjectsList","getExpense","id","createNewExpense","options","body","data","updateExpense","paidExpense","unpaidExpense","sendExpenseToXeroApi","deleteExpense","uniqueId","getFileIcon","fileType","_fileType","toLowerCase","fileData","name","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","_ref","_mobileUserQuery$data3","visible","setVisible","setRefetch","workerId","isEditMode","jobData","jobId","jobProjectId","refetch","accessToken","localStorage","getItem","publishRef","useRef","React","window","location","href","urlObj","params","URLSearchParams","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","newFiles","map","file","Object","assign","preview","createObjectURL","progress","prevFiles","type","setType","cost","setCost","time_type","set_time_type","today","Date","start","setStart","end","setEnd","duration","setDuration","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getJobTemplates","getTemplateByIDQuery","getJobTemplate","enabled","retry","mobileUserQuery","getTeamMobileUser","projectQuery","itemTemplate","option","borderRadius","overflow","border","image","fillRule","clipRule","FallbackImage","photo","has_photo","is_business","size","label","selectedItemTemplate","props","placeholder","reset","useEffect","_getTemplateByIDQuery","_getTemplateByIDQuery2","templateTitle","title","substring","others","projectParamId","get","reference","delete","history","replaceState","uploadToS3","response","axios","put","headers","onUploadProgress","progressEvent","Math","round","loaded","total","f","uploaded","err","errorMessage","status","request","message","console","error","uploadFailed","mutation","useMutation","mutationFn","updateJob","createNewJob","onSuccess","toast","successCount","errorCount","post","filename","Authorization","result","success","fileUploadBySignedURL","attachments","_file$url","obj","split","push","log","attachmentsUpdateInJob","prev","current","onError","onSubmit","isPublish","tempErrors","payload","short_description","long_description","worker","start_date","toISOString","end_date","_projectQuery$data","project","find","unique_id","project_photos","published","values","includes","mutate","workerDetailsSet","useCallback","_mobileUserQuery$data","_mobileUserQuery$data2","user","users","paymentCycleObj","parseFloat","hourly_rate","toFixed","payment_cycle","first_name","last_name","_projectQuery$data2","startDate","endDate","attachment","link","isExisting","_mobileUserQuery$data4","findUser","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileUserQuery$data5","_mobileUserQuery$data6","_mobileUserQuery$data7","_projectQuery$data3","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","filter","filterInputAutoFocus","fontSize","fontWeight","Button","ref","onClick","X","Card","Body","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","maxLength","InputTextarea","Row","Col","sm","valueTemplate","scrollHeight","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","locale","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","number","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","disabled","isPending","minWidth","formatAUD","amount","shorten","num","isNaN","abs","Intl","NumberFormat","notation","compactDisplay","minimumFractionDigits","maximumFractionDigits","format","endpoint","isRequiredLoggedin","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","fetch","contentType","ok","_errorData","errorData","json","text","clear","sessionStorage","replace","Error","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition","getListOfJobs","isShowDeleted","getJob","getJobDashboardData","getApprovedJob","createApproval","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getTeamDesktopUser","getTeamInvoiceHistory"],"sourceRoot":""}