{"version":3,"file":"static/js/2553.5ea983eb.chunk.js","mappings":"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","sources":["shared/lib/format-aud.js","APIs/base-api.js","components/Business/Pages/statistics/api/statistics-api.js","components/Business/Pages/statistics/executive.js","webpack://memateapp/./src/components/Business/Pages/statistics/statistics.module.scss?e36e"],"sourcesContent":["export function formatAUD(amount, shorten = false) {\n    const num = parseFloat(amount);\n\n    if (isNaN(num)) {\n        return \"0.00\";\n    }\n\n    if (shorten && Math.abs(num) >= 1000.00) {\n        return new Intl.NumberFormat('en-AU', {\n            notation: \"compact\",\n            compactDisplay: \"short\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(num);\n    }\n\n    return new Intl.NumberFormat('en-AU', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(num);\n}","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","import { format } from 'date-fns';\nimport { fetchAPI } from \"../../../../../APIs/base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getExecutiveStatistics = async (year) => {\n  const endpoint = `/statistics/executive/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  if (year) url.searchParams.append('year', year);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getKeyResultStatics = async (year, month) => {\n  console.log('month: ', month);\n  console.log('year: ', year);\n  const endpoint = `/statistics/key-results/${year}/${month}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOverviewStatistics = async (startDate, endDate) => {\n  const currentStart = new Date(startDate);\n  const currentEnd = new Date(endDate);\n\n  const prevStart = new Date(startDate);\n  prevStart.setFullYear(prevStart.getFullYear() - 1);\n\n  const prevEnd = new Date(endDate);\n  prevEnd.setFullYear(prevEnd.getFullYear() - 1);\n\n  // Format dates as YYYY-MM-DD\n  const currentRange = `${format(currentStart, 'yyyy-MM-dd')}:${format(currentEnd, 'yyyy-MM-dd')}`;\n  const previousRange = `${format(prevStart, 'yyyy-MM-dd')}:${format(prevEnd, 'yyyy-MM-dd')}`;\n\n  const endpoint = `/statistics/overview/${currentRange}/${previousRange}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import React, { useState, useEffect } from 'react';\nimport { Button, Card, CardBody, Col, Dropdown, Row } from 'react-bootstrap';\nimport { Calendar as CalendarIcon, ClipboardData, Google, PieChart, ShopWindow, Speedometer2, TextParagraph, WindowDesktop } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { Chart as ChartJS, registerables } from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport clsx from 'clsx';\nimport { Chart } from 'primereact/chart';\nimport { getExecutiveStatistics } from './api/statistics-api';\nimport style from './statistics.module.scss';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { formatAUD } from '../../../../shared/lib/format-aud';\n\n\nexport const verticalLinePlugin = {\n    id: 'verticalLine',\n    beforeDatasetsDraw: (chart) => {\n        const tooltip = chart?.tooltip;\n        const ctx = chart?.ctx;\n        const chartArea = chart?.chartArea;\n\n        if (tooltip && tooltip._active && tooltip._active.length > 0) {\n            const activePoint = tooltip._active[0];\n            const xPos = activePoint.element.x;\n\n            ctx.save();\n\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = '#1AB2FF';\n\n            ctx.beginPath();\n            ctx.moveTo(xPos, chartArea.top);\n            ctx.lineTo(xPos, chartArea.bottom);\n            ctx.stroke();\n\n            ctx.restore();\n        }\n    }\n};\n\nChartJS.register(...registerables, annotationPlugin, verticalLinePlugin);\n\nconst Executive = () => {\n    const { trialHeight } = useTrialHeight();\n    const [selectedYear, setSelectedYear] = useState(2025);\n\n    const [chartData, setChartData] = useState({});\n    const [chartOptions, setChartOptions] = useState({});\n    const [total, setTotal] = useState({});\n\n    const currentYear = new Date().getFullYear();\n    const years = Array.from({ length: 5 }, (_, i) => currentYear - i);\n    const months = React.useMemo(() => ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], []);\n\n    const handleYearSelect = (year) => {\n        setSelectedYear(year);\n    };\n\n    const executiveQuery = useQuery({\n        queryKey: [\"getExecutiveStatistics\", selectedYear],\n        queryFn: () => getExecutiveStatistics(selectedYear),\n        enabled: !!selectedYear,\n        retry: 1\n    });\n\n    useEffect(() => {\n        const documentStyle = getComputedStyle(document.documentElement);\n        const textColor = documentStyle.getPropertyValue('--text-color');\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n        const datasetObj = executiveQuery?.data?.statistics;\n\n        let total_income = [];\n        let operating_profit = [];\n        let cost_of_sale = [];\n        let labor = [];\n        let operating_expense = [];\n\n        for (const key in datasetObj) {\n            total_income.push(parseFloat(datasetObj[key].total_income));\n            operating_profit.push(parseFloat(datasetObj[key].operating_profit));\n            cost_of_sale.push(parseFloat(datasetObj[key].cost_of_sale));\n            labor.push(parseFloat(datasetObj[key].labor));\n            operating_expense.push(parseFloat(datasetObj[key].operating_expense));\n        }\n\n        const isCurrentYear = selectedYear === currentYear;\n        if (isCurrentYear) {\n            const currentMonth = new Date().getMonth();\n            total_income = total_income.slice(0, currentMonth);\n            operating_profit = operating_profit.slice(0, currentMonth);\n            cost_of_sale = cost_of_sale.slice(0, currentMonth);\n            labor = labor.slice(0, currentMonth);\n            operating_expense = operating_expense.slice(0, currentMonth);\n        }\n\n        const total_income_sum = total_income.reduce((sum, val) => sum + val, 0);\n        const operating_profit_sum = operating_profit.reduce((sum, val) => sum + val, 0);\n        const cost_of_sale_sum = cost_of_sale.reduce((sum, val) => sum + val, 0);\n        const labor_sum = labor.reduce((sum, val) => sum + val, 0);\n        const operating_expense_sum = operating_expense.reduce((sum, val) => sum + val, 0);\n\n        setTotal({\n            total_income: total_income_sum,\n            operating_profit: operating_profit_sum,\n            cost_of_sale: cost_of_sale_sum,\n            labor: labor_sum,\n            operating_expense: operating_expense_sum\n        });\n\n        const data = {\n            labels: months,\n            datasets: [\n                {\n                    label: 'Total Income',\n                    data: total_income,\n                    fill: true,\n                    tension: 0,\n                    borderWidth: 2,\n                    borderColor: '#475467',\n                    backgroundColor: getGradientForTotalIncome(),\n                    pointRadius: 4,\n                    pointHoverRadius: 5,\n                    pointBackgroundColor: '#475467',\n                    pointBorderColor: '#475467',\n                    pointBorderWidth: 0\n                },\n                {\n                    label: 'Operational Profit',\n                    data: operating_profit,\n                    fill: true,\n                    tension: 0,\n                    borderWidth: 2,\n                    borderColor: '#17B26A',\n                    backgroundColor: getGradientForOperationalProfit(),\n                    pointRadius: 4,\n                    pointHoverRadius: 5,\n                    pointBackgroundColor: '#17B26A',\n                    pointBorderColor: '#17B26A',\n                    pointBorderWidth: 0\n                },\n                {\n                    label: 'Cost of Sale',\n                    data: cost_of_sale,\n                    fill: true,\n                    tension: 0,\n                    borderWidth: 2,\n                    borderColor: '#F04438',\n                    backgroundColor: getGradientCostOfSale(),\n                    pointRadius: 4,\n                    pointHoverRadius: 5,\n                    pointBackgroundColor: '#F04438',\n                    pointBorderColor: '#F04438',\n                    pointBorderWidth: 0\n                },\n                {\n                    label: 'Labor',\n                    data: labor,\n                    fill: true,\n                    tension: 0,\n                    borderWidth: 2,\n                    borderColor: '#F79009',\n                    backgroundColor: getGradientLabor(),\n                    pointRadius: 4,\n                    pointHoverRadius: 5,\n                    pointBackgroundColor: '#F79009',\n                    pointBorderColor: '#F79009',\n                    pointBorderWidth: 0\n                },\n                {\n                    label: 'Operating Expense',\n                    data: operating_expense,\n                    tension: 0,\n                    fill: true,\n                    borderWidth: 2,\n                    borderColor: '#1AB2FF',\n                    backgroundColor: getGradientCyan(),\n                    pointRadius: 4,\n                    pointHoverRadius: 5,\n                    pointBackgroundColor: '#1AB2FF',\n                    pointBorderColor: '#1AB2FF',\n                    pointBorderWidth: 0\n                }\n            ]\n        };\n\n        function getGradientForTotalIncome() {\n            const ctx = document.createElement('canvas').getContext('2d');\n            if (!ctx) return 'rgba(71, 84, 103, 0.2)';\n\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n            gradient.addColorStop(0, 'rgba(71, 84, 103, 0.20)');\n            gradient.addColorStop(1, 'rgba(71, 84, 103, 0.00)');\n\n            return gradient;\n        }\n\n        function getGradientForOperationalProfit() {\n            const ctx = document.createElement('canvas').getContext('2d');\n            if (!ctx) return 'rgba(23, 178, 106, 0.2)';\n\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n            gradient.addColorStop(0.0596, 'rgba(23, 178, 106, 0.20)');\n            gradient.addColorStop(0.9749, 'rgba(23, 178, 106, 0.04)');\n\n            return gradient;\n        }\n\n        function getGradientCostOfSale() {\n            const ctx = document.createElement('canvas').getContext('2d');\n            if (!ctx) return 'rgba(240, 68, 56, 0.3)';\n\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n            gradient.addColorStop(0.1, 'rgba(240, 68, 56, 0.30)');\n            gradient.addColorStop(1, 'rgba(240, 68, 56, 0.06)');\n\n            return gradient;\n        }\n\n        function getGradientLabor() {\n            const ctx = document.createElement('canvas').getContext('2d');\n            if (!ctx) return 'rgba(247, 144, 9, 0.2)';\n\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n            gradient.addColorStop(0, 'rgba(247, 144, 9, 0.20)');\n            gradient.addColorStop(1, 'rgba(247, 144, 9, 0.00)');\n\n            return gradient;\n        }\n\n        function getGradientCyan() {\n            const ctx = document.createElement('canvas').getContext('2d');\n            if (!ctx) return 'rgba(26, 178, 255, 0.2)';\n\n            const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n            gradient.addColorStop(0, 'rgba(26, 178, 255, 0.20)');\n            gradient.addColorStop(1, 'rgba(26, 178, 255, 0.00)');\n\n            return gradient;\n        }\n\n        const options = {\n            maintainAspectRatio: false,\n            aspectRatio: 0.6,\n            plugins: {\n                legend: {\n                    position: 'top',\n                    align: 'end',\n                    labels: {\n                        usePointStyle: true,\n                        pointStyle: 'circle',\n                        color: textColor,\n                        boxHeight: 5,\n                        generateLabels: (chart) => {\n                            return chart.data.datasets.map((dataset, i) => ({\n                                text: dataset.label,\n                                fillStyle: dataset.borderColor || dataset.backgroundColor,\n                                strokeStyle: dataset.borderColor,\n                                pointStyle: 'circle',\n                                hidden: !chart.isDatasetVisible(i),\n                                index: i\n                            }));\n                        }\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'Financial Overview',\n                    position: 'top',\n                    align: 'start',\n                    color: '#101828',\n                    font: {\n                        size: 18,\n                    },\n                    padding: 5\n                },\n                subtitle: {\n                    display: true,\n                    text: 'Track how your rating compares to your industry average.',\n                    position: 'top',\n                    align: 'start',\n                    font: {\n                        size: 14,\n                    },\n                    color: '#475467',\n                    padding: 0\n                },\n                tooltip: {\n                    enabled: true,\n                    mode: 'index',\n                    intersect: false,\n                    backgroundColor: '#fff',  // Tooltip background color\n                    titleColor: '#667085',\n                    bodyColor: '#667085',\n                    borderColor: '#f2f2f2',\n                    borderWidth: 1,\n                    callbacks: {\n                        label: function (tooltipItem) {\n                            const datasetLabel = tooltipItem.dataset.label;\n                            const value = tooltipItem.raw;\n                            return `${datasetLabel}: $${formatAUD(value)}`;  // Display dataset label and value with currency formatting\n                        },\n                        footer: function () {\n                            return `Hover over the chart to see values`; // Optional footer\n                        },\n                    },\n                },\n                interaction: {\n                    mode: 'index',  // To show tooltip for all datasets at the hover point\n                    intersect: false,  // Tooltip will display even if the cursor isn't over a data point\n                },\n                elements: {\n                    line: {\n                        borderWidth: 2,  // Set line thickness\n                    },\n                    point: {\n                        radius: 4,  // Set point radius\n                    },\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder\n                    }\n                },\n                y: {\n                    beginAtZero: false, // Allow negative values\n                    ticks: {\n                        color: textColorSecondary,\n                        // Format the tick values to be more readable\n                        callback: function (value) {\n                            if (Math.abs(value) >= 1000) {\n                                return '$' + (value / 1000).toFixed(1) + 'k';\n                            }\n                            return '$' + value;\n                        }\n                    },\n                    grid: {\n                        color: surfaceBorder\n                    }\n                }\n            },\n        };\n\n        setChartData(data);\n        setChartOptions(options);\n    }, [executiveQuery?.data]);\n\n    useEffect(() => {\n        const currentDate = new Date();\n        setSelectedYear(currentDate.getUTCFullYear());\n    }, []);\n\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Executive</title>\n            </Helmet>\n            <div className={`topbar ${style.borderTopbar}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <Link to={\"/statistics/executive\"} style={{ background: \"#F9F5FF\" }} className={clsx(style.activeTab, 'd-flex align-items-center px-2 py-1')}>\n                    <PieChart color='#9E77ED' size={16} className='me-2' />\n                    <span className={style.topbartext} style={{ color: \"#9E77ED\" }}>Executive</span>\n                </Link>\n                <Link to={\"/statistics/sales-conversion\"} className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <Speedometer2 color='#17B26A' size={16} className='me-2' />\n                    <span className={style.topbartext}>Conversion</span>\n                </Link>\n                <Link to={\"/statistics/overview\"} className={clsx('d-flex align-items-center px-2 py-1')}>\n                    <TextParagraph color='#F04438' size={16} className='me-2' />\n                    <span className={style.topbartext}>Overview</span>\n                </Link>\n                <Link to={\"/statistics/key-results\"} className='d-flex align-items-center px-2 py-1'>\n                    <WindowDesktop color='#667085' size={16} className='me-2' />\n                    <span className={style.topbartext}>Key Results</span>\n                </Link>\n                <Link className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <ClipboardData color='#084095' size={16} className='me-2' />\n                    <span className={style.topbartext}>Reports</span>\n                </Link>\n                <Link className={clsx('d-flex align-items-center px-2 py-1', style.disabledLink)}>\n                    <Google color='#F79009' size={16} className='me-2' />\n                    <span className={style.topbartext}>GA Widgets</span>\n                </Link>\n                <Link to={\"/statistics/profitability\"} className={clsx('d-flex align-items-center px-2 py-1')}>\n                    <ShopWindow color='#15B79E' size={16} className='me-2' />\n                    <span className={style.topbartext}>Profitability</span>\n                </Link>\n            </div>\n            <div className={clsx(style.keyResults)} style={{ padding: \"24px\", marginBottom: '20px', overflow: 'auto', height: `calc(100vh - 175px - ${trialHeight}px)`, background: '#F8F9FC' }}>\n                <h2 className={clsx(style.keyResultsTitle)}>Executive</h2>\n                <Dropdown>\n                    <Dropdown.Toggle as={Button} className={clsx(style.button, \"outline-button mx-auto\")}>\n                        <CalendarIcon color='#475467' size={16} />\n                        {selectedYear}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {years.map((year) => (\n                            <Dropdown.Item\n                                key={year}\n                                eventKey={year}\n                                active={year === selectedYear}\n                                onClick={() => handleYearSelect(year)}\n                            >\n                                {year}\n                            </Dropdown.Item>\n                        ))}\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <div className='d-flex justify-content-center gap-0' style={{ marginTop: '16px', borderBottom: \"1px solid var(--Gray-200, #EAECF0)\", background: '#F8F9FC' }}>\n                </div>\n\n                <Row>\n                    <Col xs={8}>\n                        <Card className='mt-3 border-0'>\n                            <CardBody className='ps-3 pe-1'>\n                                <Chart type=\"line\" data={chartData} options={chartOptions} />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col xs={4} className='pt-3'>\n                        <div className={clsx(style.rightBoxDiv, 'w-100 mb-3')} style={{ background: '#FCFCFD' }}>\n                            <div className='d-flex gap-1 align-items-center mb-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\">\n                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"#475467\" />\n                                </svg>\n                                <span className={style.title}>Total Income</span>\n                            </div>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <span className={style.money}>${formatAUD(total.total_income || 0)}</span>\n                                <Button className={clsx('text-button p-0', style.disabledLink)}>View Invoices</Button>\n                            </div>\n                        </div>\n                        <div className={clsx(style.rightBoxDiv, 'w-100 mb-3')} style={{ background: '#F6FEF9' }}>\n                            <div className='d-flex gap-1 align-items-center mb-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\">\n                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"#17B26A\" />\n                                </svg>\n                                <span className={style.title}>Operational Profit</span>\n                            </div>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <span className={style.money}>${formatAUD(total.operating_profit || 0)}</span>\n                            </div>\n                        </div>\n                        <div className={clsx(style.rightBoxDiv, 'w-100 mb-3')} style={{ background: '#FFFBFA' }}>\n                            <div className='d-flex gap-1 align-items-center mb-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\">\n                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"#F04438\" />\n                                </svg>\n                                <span className={style.title}>Cost of Sale</span>\n                            </div>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <span className={style.money}>${formatAUD(total.cost_of_sale || 0)}</span>\n                                <Button className={clsx('text-button p-0', style.disabledLink)}>View Sales</Button>\n                            </div>\n                        </div>\n                        <div className={clsx(style.rightBoxDiv, 'w-100 mb-3')} style={{ background: '#FFFCF5' }}>\n                            <div className='d-flex gap-1 align-items-center mb-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\">\n                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"#F79009\" />\n                                </svg>\n                                <span className={style.title}>Labor</span>\n                            </div>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <span className={style.money}>${formatAUD(total.labor || 0)}</span>\n                                <Button className={clsx('text-button p-0', style.disabledLink)}>View People</Button>\n                            </div>\n                        </div>\n                        <div className={clsx(style.rightBoxDiv, 'w-100 mb-3')} style={{ background: '#F2FAFF' }}>\n                            <div className='d-flex gap-1 align-items-center mb-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\">\n                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"#1AB2FF\" />\n                                </svg>\n                                <span className={style.title}>Operating Expense</span>\n                            </div>\n                            <div className='d-flex justify-content-between align-items-center'>\n                                <span className={style.money}>${formatAUD(total.operating_expense || 0)}</span>\n                                <Button className={clsx('text-button p-0', style.disabledLink)}>View Expenses</Button>\n                            </div>\n                        </div>\n\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default Executive;","// extracted by mini-css-extract-plugin\nexport default {\"borderTopbar\":\"statistics_borderTopbar__ljqaY\",\"topbartext\":\"statistics_topbartext__HchJJ\",\"box\":\"statistics_box__DcXrH\",\"executiveBox\":\"statistics_executiveBox__ObZsN\",\"executiveBox2\":\"statistics_executiveBox2__SboXU\",\"executiveBox3\":\"statistics_executiveBox3__E-b3x\",\"executiveBox4\":\"statistics_executiveBox4__4Nkgv\",\"executiveBox5\":\"statistics_executiveBox5__opcH1\",\"executiveBox6\":\"statistics_executiveBox6__+Ewe4\",\"boxTitle\":\"statistics_boxTitle__NOx9r\",\"boxSubtitle\":\"statistics_boxSubtitle__sP+Le\",\"activeTab\":\"statistics_activeTab__lcBPp\",\"disabledLink\":\"statistics_disabledLink__cVJyk\",\"keyResults\":\"statistics_keyResults__Z6mVH\",\"keyResultsTitle\":\"statistics_keyResultsTitle__FGClX\",\"button\":\"statistics_button__yOhzt\",\"monthName\":\"statistics_monthName__VNpP0\",\"activeButton\":\"statistics_activeButton__a9d6t\",\"chartBox\":\"statistics_chartBox__Ge0H+\",\"rightBox\":\"statistics_rightBox__QVbDu\",\"firstBox\":\"statistics_firstBox__NX8+s\",\"secondBox\":\"statistics_secondBox__4-TxO\",\"divider\":\"statistics_divider__Q+7Li\",\"chartTextBox\":\"statistics_chartTextBox__vhgGM\",\"chartTextLabel\":\"statistics_chartTextLabel__RSz82\",\"boxlable\":\"statistics_boxlable__IDKF0\",\"uptoDate\":\"statistics_uptoDate__yB-dd\",\"target\":\"statistics_target__AkTXB\",\"daysComplete\":\"statistics_daysComplete__TO81g\",\"daysTotal\":\"statistics_daysTotal__hVKuy\",\"circularProgressDiv\":\"statistics_circularProgressDiv__4qwlG\",\"chartProgressText\":\"statistics_chartProgressText__IJ6Eo\",\"text1\":\"statistics_text1__l19kj\",\"ProgressBar\":\"statistics_ProgressBar__c-oQT\",\"progressDefaultClass\":\"statistics_progressDefaultClass__-FFkg\",\"ProgressBarInner\":\"statistics_ProgressBarInner__FYOyj\",\"ProgressBarInner2\":\"statistics_ProgressBarInner2__Fll52\",\"ProgressBarInner3\":\"statistics_ProgressBarInner3__HvY8O\",\"ProgressBarInner4\":\"statistics_ProgressBarInner4__ngmi9\",\"ProgressInnerBar\":\"statistics_ProgressInnerBar__yxRlG\",\"ProgressInnerBarPercentage\":\"statistics_ProgressInnerBarPercentage__JRRCl\",\"rightBoxDiv\":\"statistics_rightBoxDiv__M-E12\",\"title\":\"statistics_title__PE0MJ\",\"money\":\"statistics_money__i+Zbv\",\"dateRangeSelector\":\"statistics_dateRangeSelector__9FaSI\",\"dateRangeDropdown\":\"statistics_dateRangeDropdown__5DtSu\",\"graphHeader\":\"statistics_graphHeader__IuB-s\",\"graphHeaderLeft\":\"statistics_graphHeaderLeft__ZgmxU\",\"graphHeaderLeftText\":\"statistics_graphHeaderLeftText__W44Ps\",\"changePositive\":\"statistics_changePositive__M3RP9\",\"changeNeutral\":\"statistics_changeNeutral__x8XEe\",\"dateLabel\":\"statistics_dateLabel__xbQES\",\"value\":\"statistics_value__qJhHh\",\"bottomText\":\"statistics_bottomText__40PQh\",\"calendar\":\"statistics_calendar__eDJFd\",\"borderRadiusRightZero\":\"statistics_borderRadiusRightZero__4dtcG\"};"],"names":["formatAUD","amount","shorten","arguments","length","undefined","num","parseFloat","isNaN","Math","abs","Intl","NumberFormat","notation","compactDisplay","minimumFractionDigits","maximumFractionDigits","format","fetchAPI","async","endpoint","options","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","contentType","get","ok","_errorData","errorData","includes","json","text","status","clear","sessionStorage","window","location","replace","error","Error","message","data","console","API_BASE_URL","process","getExecutiveStatistics","year","searchParams","append","toString","getKeyResultStatics","month","log","getOverviewStatistics","startDate","endDate","currentStart","Date","currentEnd","prevStart","setFullYear","getFullYear","prevEnd","currentRange","previousRange","verticalLinePlugin","id","beforeDatasetsDraw","chart","tooltip","ctx","chartArea","_active","xPos","element","x","save","lineWidth","strokeStyle","beginPath","moveTo","top","lineTo","bottom","stroke","restore","ChartJS","register","registerables","annotationPlugin","Executive","trialHeight","useTrialHeight","selectedYear","setSelectedYear","useState","chartData","setChartData","chartOptions","setChartOptions","total","setTotal","currentYear","years","Array","from","_","i","months","React","executiveQuery","useQuery","queryKey","queryFn","enabled","retry","useEffect","_executiveQuery$data","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","textColorSecondary","surfaceBorder","datasetObj","statistics","total_income","operating_profit","cost_of_sale","labor","operating_expense","key","push","currentMonth","getMonth","slice","total_income_sum","reduce","sum","val","operating_profit_sum","cost_of_sale_sum","labor_sum","operating_expense_sum","labels","datasets","label","fill","tension","borderWidth","borderColor","backgroundColor","createElement","getContext","gradient","createLinearGradient","addColorStop","getGradientForTotalIncome","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointBorderWidth","getGradientForOperationalProfit","getGradientCostOfSale","getGradientLabor","getGradientCyan","maintainAspectRatio","aspectRatio","plugins","legend","position","align","usePointStyle","pointStyle","color","boxHeight","generateLabels","map","dataset","fillStyle","hidden","isDatasetVisible","index","title","display","font","size","padding","subtitle","mode","intersect","titleColor","bodyColor","callbacks","tooltipItem","datasetLabel","value","raw","footer","interaction","elements","line","point","radius","scales","ticks","grid","y","beginAtZero","callback","toFixed","currentDate","getUTCFullYear","_jsxs","_Fragment","children","_jsx","Helmet","className","style","borderTopbar","height","Link","to","background","clsx","activeTab","PieChart","topbartext","disabledLink","Speedometer2","TextParagraph","WindowDesktop","ClipboardData","Google","ShopWindow","keyResults","marginBottom","overflow","keyResultsTitle","Dropdown","Toggle","as","Button","button","CalendarIcon","Menu","Item","eventKey","active","onClick","handleYearSelect","marginTop","borderBottom","Row","Col","xs","Card","CardBody","Chart","type","rightBoxDiv","xmlns","width","viewBox","cx","cy","r","money"],"sourceRoot":""}