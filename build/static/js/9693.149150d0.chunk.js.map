{"version":3,"file":"static/js/9693.149150d0.chunk.js","mappings":"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","sources":["APIs/expenses-api.js","APIs/base-api.js","components/Work/Pages/tasks/old-development/DateRangePicker.js","components/Work/features/task/view-task/view-task.js","APIs/TasksApi.js","APIs/task-api.js","webpack://memateapp/./src/components/Work/features/task/create-task/create-task.module.scss?cbbe","components/Business/Pages/management/task/select-date.js","components/Work/features/task/create-task/create-task.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfExpense = async (page, limit, search = \"\", order = \"\", isShowUnpaid) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/expenses/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowUnpaid) url.searchParams.append('status', 'not_paid');\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getXeroCodesList = async () => {\n  const endpoint = `/references/xero-codes/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProjectsList = async () => {\n  const endpoint = `/references/projects/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getExpense = async (id) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewExpense = async (data) => {\n  const endpoint = '/expenses/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateExpense = async (id, data) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const paidExpense = async (data) => {\n  const endpoint = '/expenses/paid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const unpaidExpense = async (data) => {\n  const endpoint = '/expenses/unpaid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendExpenseToXeroApi = async (data) => {\n  const endpoint = `/expenses/to-xero/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteExpense = async (uniqueId) => {\n  const endpoint = `/expenses/delete/${uniqueId}/`;\n  const options = {\n    method: 'DELETE'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const downloadStatement = async (data) => {\n  const endpoint = '/clients/statement/pdf/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendStatementEmail = async (data) => {\n  const endpoint = '/clients/statement/send/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport Flatpickr from \"react-flatpickr\";\n\nconst DateRangePicker = ({ onDataApply, dateRange, onClose }) => {\n  const [selectedDates, setSelectedDates] = useState([]);\n  const calendarRef = useRef(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [isApplying, setIsApplying] = useState(false);\n  const [formattedCurrentDate, setFormattedCurrentDate] = useState(\"\");\n\n  useEffect(() => {\n    if (dateRange) {\n      setSelectedDates([dateRange?.startDate, dateRange?.endDate]);\n      setStartDate(dateRange?.startDate);\n      setEndDate(dateRange?.endDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    const currentDate = new Date();\n    const formattedDate = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`;\n    setFormattedCurrentDate(formattedDate);\n  }, []);\n\n  const handleChange = (selectedDates) => {\n    setSelectedDates(selectedDates);\n  };\n\n  useEffect(() => {\n    if (selectedDates.length === 2) {\n      const startDate = selectedDates[0];\n      const endDate = selectedDates[1];\n      setStartDate(startDate);\n      setEndDate(endDate);\n    } else if (selectedDates.length === 1) {\n      const startDate = selectedDates[0];\n      setStartDate(startDate);\n    }\n  }, [selectedDates]);\n\n  const handleApply = () => {\n    setIsApplying(true);\n    onDataApply({ startDate, endDate });\n    const taggingElement = document.querySelector(\".tags-input-container .rangedatepicker .mainWrapperTags\");\n    if (taggingElement) {\n      taggingElement.textContent = `${startDate.toISOString().split('T')[0]} - ${endDate.toISOString().split('T')[0]}`;\n    }\n  };\n\n  const handleCancel = () => {\n    setSelectedDates([]);\n    setStartDate(null);\n    setEndDate(null);\n    setIsApplying(false);\n    if (onClose) onClose();\n\n    const existingCustomDiv = document.querySelector(\".custom-div p\");\n    if (existingCustomDiv) {\n      existingCustomDiv.textContent = `${formattedCurrentDate}`;\n    }\n  };\n\n  const flatpickrOptions = {\n    dateFormat: \"Y-m-d\",\n    mode: \"range\",\n    locale: {\n      firstDayOfWeek: 1\n    },\n    inline: true,\n    // onDayCreate: function (dObj, dStr, fp, dayElem) {\n    //   if (Math.random() < 0.15)\n    //     dayElem.innerHTML += \"<span class='event'></span>\";\n    //   else if (Math.random() > 0.85)\n    //     dayElem.innerHTML += \"<span class='event busy'></span>\";\n    // }\n  };\n\n  useEffect(() => {\n    if (isApplying) {\n      // Custom logic when applying\n    }\n  }, [isApplying]);\n\n  const handleTodayClick = () => {\n    const currentDate = new Date();\n    setSelectedDates([currentDate, currentDate]);\n  };\n\n  useEffect(() => {\n    if (!startDate && !endDate) {\n      const currentDate = new Date();\n      setStartDate(currentDate);\n      setEndDate(currentDate);\n    } else if (startDate && endDate) {\n      const options = { year: 'numeric', month: 'short', day: 'numeric' };\n      const start = new Date(startDate);\n      const formattedStartDate = start.toLocaleDateString('en-US', options);\n      const end = new Date(endDate);\n      const formattedEndDate = end.toLocaleDateString('en-US', options);\n\n      const textContent = `${formattedStartDate} - ${formattedEndDate}`;\n      const newContent = `<p>${textContent}</p><span class=\"today-span\" style=\"cursor: pointer\">Today</span>`;\n      const monthsElement = document.querySelector(\".flatpickr-months\");\n      if (monthsElement) {\n        const existingCustomDiv = document.querySelector(\".custom-div\");\n        if (existingCustomDiv) {\n          existingCustomDiv.innerHTML = newContent;\n        } else {\n          const customDiv = document.createElement('div');\n          customDiv.className = \"custom-div\";\n          customDiv.innerHTML = newContent;\n          monthsElement.parentNode.insertBefore(customDiv, monthsElement.nextSibling);\n        }\n      }\n    }\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    const todaySpan = document.querySelector(\".today-span\");\n    if (todaySpan) {\n      todaySpan.addEventListener(\"click\", handleTodayClick);\n    }\n\n    return () => {\n      if (todaySpan) {\n        todaySpan.removeEventListener(\"click\", handleTodayClick);\n      }\n    };\n  }, [startDate, endDate]);\n\n  return (\n    <div>\n      <Flatpickr\n        options={flatpickrOptions}\n        value={selectedDates}\n        onChange={handleChange}\n        ref={calendarRef}\n      />\n      <div className=\"calenderBut\">\n        <button className=\"tabCancel\" onClick={handleCancel}>Cancel</button>\n        <button className=\"tabApply\" onClick={handleApply}>Apply</button>\n      </div>\n    </div>\n  );\n};\n\nexport default DateRangePicker;\n","import { useQuery } from '@tanstack/react-query';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { getTask } from '../../../../../APIs/task-api';\nimport CreateTask from '../create-task/create-task';\n\nconst TaskLoadingView = () => {\n  return (\n    <>\n      <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n        <Placeholder xs={12} bg=\"secondary\" size='lg' />\n      </Placeholder>\n      <Placeholder as=\"p\" animation=\"wave\">\n        <Placeholder xs={12} bg=\"secondary\" style={{ height: '80px' }} size='lg' />\n      </Placeholder>\n      <table className='task-deatils-table w-100'>\n        <tbody>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n    </>\n  );\n};\n\nconst ViewTaskModal = ({ view, setView, taskId, setTaskId, reInitialize }) => {\n  const { data } = useQuery({\n    queryKey: ['taskId', taskId],\n    queryFn: () => getTask(taskId),\n    enabled: !!taskId && !!view,\n    retry: 1,\n    cacheTime: 0,\n    staleTime: 0,\n  });\n\n  return (\n    <>\n      {view && <CreateTask show={view} setShow={setView} taskId={taskId} setTaskId={setTaskId} defaultValue={data} refetch={reInitialize} />}\n    </>\n  );\n};\n\nexport default ViewTaskModal;","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Fetch API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasks = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> View Task API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksRead = async (taskId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/${taskId}/`);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Task Update API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksUpdate= async (mainData,taskId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify(mainData)\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/update/${taskId}/`);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Task partials Update API  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const partialsTasksUpdate= async (taskId, data) => {\n  console.log('taskId: ', taskId);\n  console.log('data: ', data);\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'PATCH',\n    headers: myHeaders,\n    body: JSON.stringify(data),\n  };\n\n  try {\n    const url = new URL(`${API_BASE_URL}/tasks/update/${taskId}/`);\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Partials update error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Task Create API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksNew = async (formData) => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: JSON.stringify(formData), // Serialize formData directly here\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/tasks/new/`, requestOptions);\n    const result = await response.text();\n    return result; // Return the result if needed\n  } catch (error) {\n    console.error(error);\n    throw error; // Rethrow the error if needed\n  }\n};\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Fetch Task Project API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksProject = async () => {\n \n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/references/projects/`, requestOptions);\n    const result = await response.json();\n    return result; // Return the result if needed\n  } catch (error) {\n    console.error(error);\n    throw error; // Rethrow the error if needed\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Fetch Task Uses API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksUsers = async () => {\n \n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/references/all-users/`, requestOptions);\n    const result = await response.json();\n    return result; // Return the result if needed\n  } catch (error) {\n    console.error(error);\n    throw error; // Rethrow the error if needed\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DELETE Task  API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const fetchTasksDelete = async (taskId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'DELETE',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/tasks/delete/${taskId}/`);\n\n    const response = await fetch(url, requestOptions);\n    if (response.ok) \n    return { message: 'Task deleted successfully' };\n    else\n    throw new Error(\"Error during deleting\"); \n    \n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Complete Task  API >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const TaskCompleteJob = async (taskId, finished) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const raw = JSON.stringify({\n    \"finished\": finished\n  });\n\n  const requestOptions = {\n    method: \"PATCH\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const url = new URL(`${API_BASE_URL}/tasks/complete/${taskId}/`);\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Tasks fetch error:', error);\n    throw error;\n  }\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfTasks = async (page, limit, search = \"\", order = \"\", isShowDeleted = false, showNotCompleted = false, userId) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/tasks/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (search) url.searchParams.append(\"search\", search);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n    if (showNotCompleted === true) url.searchParams.append('finished', false);\n    if (showNotCompleted === false) url.searchParams.append('finished', true);\n    if (userId) url.searchParams.append('users', userId);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTask = async (id) => {\n    const endpoint = `/tasks/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewTask = async (data) => {\n    const endpoint = '/tasks/new/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateTask = async (id, data) => {\n    const endpoint = `/tasks/update/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getUserList = async () => {\n    const endpoint = `/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getMobileUserList = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"circleDesignStyle\":\"create-task_circleDesignStyle__vtKho\",\"out\":\"create-task_out__LG-iY\",\"taskTitleInput\":\"create-task_taskTitleInput__s+lNu\",\"formLabel\":\"create-task_formLabel__04J0h\",\"taskDescriptionInput\":\"create-task_taskDescriptionInput__RZWSI\",\"projectDropdown\":\"create-task_projectDropdown__qXb5+\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { Calendar2Event } from \"react-bootstrap-icons\";\nimport DateRangePicker from '../../../../Work/Pages/tasks/old-development/DateRangePicker';\n\nconst formatDateRange = (startDate, endDate) => {\n    const options = { month: 'short', day: 'numeric' };\n    const start = new Date(startDate).toLocaleDateString('en-US', options);\n    const end = new Date(endDate).toLocaleDateString('en-US', options);\n    return `${start} - ${end}`;\n};\n\nconst DateRangeComponent = ({ startDate, endDate }) => (\n    <div className='dateSelectdTaskBar'>\n        {formatDateRange(startDate, endDate)}\n    </div>\n);\n\nconst SelectDate = ({ setDateRange, dateRange }) => {\n    console.log('dateRange: ', dateRange);\n    const [isPickerVisible, setIsPickerVisible] = useState(false);\n    const selectDateRef = useRef(null);\n\n    const togglePicker = () => setIsPickerVisible(prev => !prev);\n\n    const handleDataApply = (data) => {\n        setDateRange(data);\n        setIsPickerVisible(false);\n    };\n\n    const handleClickOutside = (event) => {\n        if (selectDateRef.current && !selectDateRef.current.contains(event.target)) {\n            setIsPickerVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        if (isPickerVisible) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isPickerVisible]);\n\n    return (\n        <div className='select-date' style={{ position: 'relative' }} ref={selectDateRef}>\n            <div onClick={togglePicker} style={{ cursor: 'pointer' }}>\n                {dateRange?.startDate && dateRange?.endDate ? (\n                    <DateRangeComponent startDate={dateRange.startDate} endDate={dateRange.endDate} />\n                ) : (\n                    <div style={{ border: '1px dashed #98A2B3', width: '24px', height: '24px', borderRadius: '50%'}} className={`iconStyleCircle d-flex justify-content-center align-items-center iconStyleCircleRight ${isPickerVisible ? 'active' : ''}`}>\n                        <Calendar2Event color={isPickerVisible ? \"#1AB2FF\" : \"#475467\"} size={14} />\n                    </div>\n                )}\n            </div>\n            {isPickerVisible && (\n                <div className='select-date-range' style={{ position: 'absolute', top: '-100px', background: '#fff', zIndex: 1000 }}>\n                    <DateRangePicker onDataApply={handleDataApply} dateRange={dateRange} onClose={() => setIsPickerVisible(false)} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SelectDate;\n","import { useEffect, useRef, useState } from 'react';\nimport { Person, PlusCircle, X } from 'react-bootstrap-icons';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Dropdown } from 'primereact/dropdown';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Sidebar } from 'primereact/sidebar';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { toast } from 'sonner';\nimport styles from './create-task.module.scss';\nimport { getProjectsList } from '../../../../../APIs/expenses-api';\nimport { createNewTask, getMobileUserList, getUserList, updateTask } from '../../../../../APIs/task-api';\nimport { fetchTasksDelete } from '../../../../../APIs/TasksApi';\nimport { useAuth } from '../../../../../app/providers/auth-provider';\nimport { FallbackImage } from '../../../../../shared/ui/image-with-fallback/image-avatar';\nimport SelectDate from '../../../../Business/Pages/management/task/select-date';\n\nexport const dateFormat = (dateInMiliSec) => {\n    if (!dateInMiliSec) return null;\n\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    const date = new Date(1000 * +dateInMiliSec);\n    return date;\n};\n\nconst CreateTask = ({ show, setShow, refetch, taskId, setTaskId, defaultValue, projectId }) => {\n    const dropdownRef = useRef(null);\n    const textareaRef = useRef(null);\n    const { session } = useAuth();\n    const [submitted, setSubmitted] = useState(false);\n\n    const [taskTitle, setTaskTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [project, setProject] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [date, setDate] = useState(null);\n    const [errors, setErrors] = useState({\n        taskTitle: false,\n        description: false,\n        project: false,\n        user: false,\n        date: false,\n    });\n\n    useEffect(() => {\n        if (taskId && defaultValue) {\n            setTaskTitle(defaultValue?.title);\n            setDescription(defaultValue?.description);\n            setProject(defaultValue?.project?.id);\n            setUser(defaultValue?.user?.id);\n            setDate({ startDate: dateFormat(defaultValue?.from_date), endDate: dateFormat(defaultValue?.to_date) });\n        }\n    }, [taskId, defaultValue]);\n\n    const reset = () => {\n        setTaskTitle(\"\");\n        setDescription(\"\");\n        setProject(\"\");\n        setUser(null);\n        setDate(null);\n        setSubmitted(false);\n        setErrors({\n            taskTitle: false,\n            description: false,\n            project: false,\n            user: false,\n            date: false\n        });\n    };\n    const projectsList = useQuery({ queryKey: ['getProjectsList'], queryFn: getProjectsList });\n    const usersList = useQuery({ queryKey: ['getUserList'], queryFn: getUserList });\n    const mobileUsersList = useQuery({ queryKey: ['getMobileUserList'], queryFn: getMobileUserList });\n\n    useEffect(() => {\n        if (!show) reset();\n    }, [show]);\n\n    const mutation = useMutation({\n        mutationFn: (data) => taskId ? updateTask(taskId, data) : createNewTask(data),\n        onSuccess: () => {\n            refetch();\n            setShow(false);\n            reset();\n            if (taskId) setTaskId(null);\n            toast.success(`Task ${taskId ? \"updated\" : \"created\"} successfully`);\n        },\n        onError: (error) => {\n            console.error(`Error ${taskId ? \"updating\" : \"creating\"} task:`, error);\n            toast.error(`Failed to ${taskId ? \"update\" : \"create\"} client. Please try again.`);\n        }\n    });\n\n    useEffect(() => {\n        if (submitted) {\n            const newErrors = {\n                taskTitle: !taskTitle,\n                description: !description,\n                project: !project,\n                user: !user,\n                date: !date\n            };\n            setErrors(newErrors);\n        }\n    }, [taskTitle, description, project, user, date, submitted]);\n\n    const handleSubmit = () => {\n        setSubmitted(true);\n        const newErrors = {\n            taskTitle: !taskTitle,\n            description: !description,\n            project: !project,\n            user: !user,\n            date: !date\n        };\n        setErrors(newErrors);\n\n        if (!newErrors.taskTitle && !newErrors.description && !newErrors.user && !newErrors.date && !newErrors.project) {\n            mutation.mutate({\n                title: taskTitle,\n                description: description,\n                project: project,\n                user: user,\n                from_date: date.startDate,\n                to_date: date.endDate,\n            });\n        }\n    };\n\n    const deleteMutation = useMutation({\n        mutationFn: (data) => fetchTasksDelete(taskId),\n        onSuccess: () => {\n            console.log('Delete success');\n            setShow(false);\n            refetch();\n        },\n        onError: (error) => {\n            console.error('Error creating task:', error);\n        }\n    });\n\n    const handleDelete = () => {\n        deleteMutation.mutate();\n    };\n\n    const handleClose = () => {\n        setShow(false);\n        reset();\n    };\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (textareaRef.current) {\n                textareaRef.current.style.height = \"auto\";\n                textareaRef.current.style.height = textareaRef.current.scrollHeight + \"px\";\n            }\n        }, 200);\n    }, [description, taskId]);\n\n    useEffect(() => {\n        if (projectId) {\n            setProject(+projectId);\n        }\n    }, [projectId]);\n\n    return (\n        <Sidebar visible={show} position=\"right\" onHide={() => { setShow(false); }} modal={false} dismissable={false} style={{ width: '591px', height: '97vh', borderRadius: '10px', marginRight: '10px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '24px' }}>\n                        <div className=\"d-flex align-items-center gap-2\">\n                            <div className={styles.circleDesignStyle}>\n                                <div className={styles.out}>\n                                    <PlusCircle size={24} color=\"#17B26A\" />\n                                </div>\n                            </div>\n                            <span style={{ color: '344054', fontSize: '20px', fontWeight: 600 }}>{taskId ? \"Update\" : \"Create New\"} Task</span>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n                    <div className='modal-body' style={{ padding: '24px 24px', height: 'calc(100vh - 72px - 122px)', overflow: 'auto' }}>\n                        <Form.Control\n                            type=\"text\"\n                            name='taskTitle'\n                            id='taskTitle'\n                            placeholder=\"Enter task title\"\n                            value={taskTitle}\n                            onChange={(e) => setTaskTitle(e.target.value)}\n                            className={styles.taskTitleInput}\n                        />\n                        {errors.taskTitle && <Form.Text className=\"error-message\">Task title is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4} className='d-flex flex-column justify-content-center pt-2'>\n                                <Form.Label className={styles.formLabel}>Assignee</Form.Label>\n                            </Col>\n                            <Col sm={8} className='d-flex flex-column justify-content-center'>\n                                {!user && <div className='d-flex align-items-center justify-content-center' onClick={() => dropdownRef.current?.show()} style={{ border: '1px dashed #98A2B3', width: '24px', height: '24px', borderRadius: '50%' }}><Person\n                                    color={dropdownRef.current?.panel?.element?.offsetParent ? \"#1AB2FF\" : \"#475467\"}\n                                    size={18}\n                                    className='cursor-pointer' />\n                                </div>}\n                                <Dropdown\n                                    ref={dropdownRef}\n                                    options={[\n                                        {\n                                            label: 'Desktop User',\n                                            items: usersList?.data?.users?.filter((user) => user?.is_active)?.map((user) => ({\n                                                value: user?.id,\n                                                label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                                photo: user?.photo || \"\",\n                                                has_photo: user?.has_photo\n                                            })) || []\n                                        },\n                                        ...(session?.has_work_subscription\n                                            ? [\n                                                {\n                                                    label: 'Mobile User',\n                                                    items:\n                                                        mobileUsersList?.data?.users\n                                                            ?.filter((user) => user?.status !== 'disconnected')\n                                                            ?.map((user) => ({\n                                                                value: user?.id,\n                                                                label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                                                photo: user?.photo || \"\",\n                                                                has_photo: user?.has_photo,\n                                                            })) || [],\n                                                },\n                                            ]\n                                            : []),\n                                    ]}\n                                    onChange={(e) => {\n                                        setUser(e.value);\n                                    }}\n                                    valueTemplate={(option) => {\n                                        if (!option) return null;\n\n                                        return <div className='d-flex gap-2 align-items-center' style={{ position: 'relative', left: '-10px' }}>\n                                            <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                            </div>\n                                            {option?.label}\n                                        </div>;\n                                    }}\n                                    itemTemplate={(option) => {\n                                        return (\n                                            <div className='d-flex gap-2 align-items-center'>\n                                                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                    <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                                </div>\n                                                {option?.label}\n                                            </div>\n                                        );\n                                    }}\n                                    className='outline-none border-0 p-0'\n                                    style={{\n                                        width: !user ? '0px' : 'fit-content',\n                                        height: !user ? '0px' : '46px',\n                                        zIndex: !user ? '0' : '1',\n                                        position: 'relative',\n                                        left: !user ? '-60px' : '-4px',\n                                        top: !user ? '-15px' : '0px',\n                                    }}\n                                    value={user}\n                                    dropdownIcon={<></>}\n                                    collapseIcon={<></>}\n                                    placeholder=\"Select project\"\n                                    filter\n                                    filterInputAutoFocus={true}\n                                    optionGroupLabel=\"label\"\n                                    optionGroupChildren=\"items\"\n                                    scrollHeight=\"400px\"\n                                />\n                            </Col>\n                        </Row>\n                        {errors.user && <Form.Text className=\"error-message\">User is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4} className='d-flex flex-column justify-content-center'>\n                                <Form.Label className={styles.formLabel}>Due Date</Form.Label>\n                            </Col>\n                            <Col sm={8} className='d-flex flex-column justify-content-center'>\n                                <SelectDate dateRange={date} setDateRange={setDate} />\n                            </Col>\n                        </Row>\n                        {errors.date && <Form.Text className=\"error-message\">Date is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4} className='d-flex flex-column justify-content-center pt-3'>\n                                <Form.Label className={styles.formLabel}>Link to Project</Form.Label>\n                            </Col>\n                            <Col sm={8} className='d-flex flex-column justify-content-center'>\n                                <Dropdown\n                                    options={projectsList?.data?.map((project) => ({\n                                        value: project.id,\n                                        label: `${project.number}: ${project.reference}`\n                                    })) || []}\n                                    onChange={(e) => {\n                                        setProject(e.value);\n                                    }}\n                                    className={clsx('outline-none', styles.projectDropdown)}\n                                    style={{ height: '46px', maxWidth: '100%', width: 'fit-content' }}\n                                    value={project}\n                                    loading={projectsList?.isFetching}\n                                    placeholder=\"Select project\"\n                                    filter\n                                    filterInputAutoFocus={true}\n                                />\n                            </Col>\n                        </Row>\n                        {errors.project && <Form.Text className=\"error-message\">Project task is required</Form.Text>}\n\n                        <Row className={\"mt-3\"}>\n                            <Col sm={4}>\n                                <Form.Label className={styles.formLabel}>Description</Form.Label>\n                            </Col>\n                            <Col sm={12}>\n                                <Form.Control\n                                    name='taskDescription'\n                                    id='taskDescription'\n                                    as=\"textarea\"\n                                    placeholder='Enter a description...'\n                                    value={description}\n                                    rows={6}\n                                    ref={textareaRef}\n                                    onChange={(e) => {\n                                        setDescription(e.target.value);\n                                    }}\n                                    className={styles.taskDescriptionInput}\n                                    onInput={(e) => {\n                                        e.target.style.height = \"auto\"; // reset\n                                        e.target.style.height = e.target.scrollHeight + \"px\"; // grow\n                                    }}\n                                    onFocus={() => {\n                                        if (textareaRef.current) {\n                                            textareaRef.current.style.height = \"auto\";\n                                            textareaRef.current.style.height = textareaRef.current.scrollHeight + \"px\";\n                                        }\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        {errors.description && <Form.Text className=\"error-message\">Description is required</Form.Text>}\n\n                    </div>\n                    <div className='modal-footer d-flex align-items-center justify-content-between gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '80px' }}>\n                        <div>\n                            {taskId && (\n                                <Button className='danger-text-button gap-2' onClick={handleDelete}>\n                                    Delete\n                                    {deleteMutation.isPending && <ProgressSpinner style={{ width: '18px', height: '18px' }} />}\n                                </Button>\n                            )}\n                        </div>\n                        <div className='d-flex align-items-center gap-3'>\n                            <Button type='button' onClick={handleClose} className='outline-button'>Cancel</Button>\n                            <Button type='button' onClick={handleSubmit} className='solid-button' style={{ minWidth: '70px' }} disabled={mutation.isPending}>{taskId ? \"Update Task\" : \"Create Task\"} {mutation.isPending && <ProgressSpinner style={{ width: '18px', height: '18px' }} />}</Button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateTask;\n\n{/* <Modal show={show} centered onHide={handleClose} className='task-form'>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <img src={taskId ? taskEditIcon : newTaskImg} alt='task-details' style={{ width: '48px', height: '48px' }} />\n                    <span className='modal-task-title'>{taskId ? \"Edit\" : \"New\"} Task</span>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ background: '#f9fafb' }}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Task Title</Form.Label>\n                    <InputGroup>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Enter task title\"\n                            value={taskTitle}\n                            onChange={(e) => setTaskTitle(e.target.value)}\n                        />\n                        <InputGroup.Text>\n                            <QuestionCircle />\n                        </InputGroup.Text>\n                    </InputGroup>\n                    {errors.taskTitle && <Form.Text className=\"error-message\">Task title is required</Form.Text>}\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder='Enter a description...'\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                    />\n                    {errors.description && <Form.Text className=\"error-message\">Description is required</Form.Text>}\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Project Task</Form.Label>\n                    <Dropdown\n                        options={projectsList?.data?.map((project) => ({\n                            value: project.id,\n                            label: `${project.number}: ${project.reference}`\n                        })) || []}\n                        onChange={(e) => {\n                            setProject(e.value);\n                            console.log('e.value: ', e.value);\n                        }}\n                        className='w-100 outline-none'\n                        style={{ height: '46px' }}\n                        value={project}\n                        loading={projectsList?.isFetching}\n                        placeholder=\"Select project\"\n                        filter\n                        filterInputAutoFocus={true}\n                    />\n                    {errors.project && <Form.Text className=\"error-message\">Project task is required</Form.Text>}\n                </Form.Group>\n            </Modal.Body>\n            <div className='d-flex align-items-center border-top px-3 py-2 gap-2'>\n                <div className='d-flex align-items-center gap-4' style={{ minWidth: '200px' }}>\n                    {!user && <Person\n                        color={dropdownRef.current?.panel?.element?.offsetParent ? \"#1AB2FF\" : \"#475467\"}\n                        size={22} style={{ position: 'relative', left: '10px', zIndex: 1 }}\n                        onClick={() => dropdownRef.current?.show()} className='me-3 cursor-pointer' />\n                    }\n                    <Dropdown\n                        ref={dropdownRef}\n                        options={[\n                            {\n                                label: 'Desktop User',\n                                items: usersList?.data?.users?.filter((user) => user?.is_active)?.map((user) => ({\n                                    value: user?.id,\n                                    label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                    photo: user?.photo || \"\",\n                                    has_photo: user?.has_photo\n                                })) || []\n                            },\n                            ...(session?.has_work_subscription\n                                ? [\n                                    {\n                                        label: 'Mobile User',\n                                        items:\n                                            mobileUsersList?.data?.users\n                                                ?.filter((user) => user?.status !== 'disconnected')\n                                                ?.map((user) => ({\n                                                    value: user?.id,\n                                                    label: `${user?.first_name} ${user?.last_name}` || user?.first_name || \"-\",\n                                                    photo: user?.photo || \"\",\n                                                    has_photo: user?.has_photo,\n                                                })) || [],\n                                    },\n                                ]\n                                : []),\n                        ]}\n                        onChange={(e) => {\n                            setUser(e.value);\n                        }}\n                        valueTemplate={(option) => {\n                            return <div className='d-flex gap-2 align-items-center'>\n                                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '0px solid #dedede' }}>\n                                    <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                </div>\n                                {option?.label}\n                            </div>;\n                        }}\n                        itemTemplate={(option) => {\n                            return (\n                                <div className='d-flex gap-2 align-items-center'>\n                                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                        <FallbackImage photo={option?.photo} has_photo={option?.has_photo} is_business={false} size={17} />\n                                    </div>\n                                    {option?.label}\n                                </div>\n                            );\n                        }}\n                        className='outline-none border-0 p-0'\n                        style={{\n                            width: !user ? '0px' : 'fit-content',\n                            height: !user ? '0px' : '46px',\n                            zIndex: !user ? '0' : '1',\n                            position: 'relative',\n                            left: !user ? '-60px' : '0px',\n                            top: !user ? '-15px' : '0px',\n                        }}\n                        value={user}\n                        dropdownIcon={<></>}\n                        collapseIcon={<></>}\n                        placeholder=\"Select project\"\n                        filter\n                        filterInputAutoFocus={true}\n                        optionGroupLabel=\"label\"\n                        optionGroupChildren=\"items\"\n                    />\n                </div>\n                <SelectDate dateRange={date} setDateRange={setDate} />\n            </div>\n            {\n                (errors.user || errors.date) && <div className='d-flex align-items-center gap-2' style={{ gap: '16px', padding: \"5px 15px\" }}>\n                    <div style={{ minWidth: '200px' }}>\n                        {errors.user && <Form.Text className=\"error-message\">User is required</Form.Text>}\n                    </div>\n                    {errors.date && <Form.Text className=\"error-message\">Date is required</Form.Text>}\n                </div>\n            }\n            <Modal.Footer className='d-flex justify-content-between'>\n                <Button type='button' className='delete-button' onClick={handleDelete}>{deleteMutation.isPending ? 'Loading...' : 'Delete Task'}</Button>\n                <Button type='button' className='save-button' onClick={handleSubmit}>{mutation.isPending ? 'Loading...' : `${taskId ? \"Update\" : \"Create\"} Task`}</Button>\n            </Modal.Footer>\n        </Modal> */}"],"names":["API_BASE_URL","process","getListOfExpense","async","page","limit","search","arguments","length","undefined","order","isShowUnpaid","offset","url","URL","searchParams","append","fetchAPI","toString","method","getXeroCodesList","getProjectsList","getExpense","id","createNewExpense","options","body","data","updateExpense","paidExpense","unpaidExpense","sendExpenseToXeroApi","deleteExpense","uniqueId","downloadStatement","sendStatementEmail","endpoint","isRequiredLoggedin","headers","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","response","fetch","contentType","get","ok","_errorData","errorData","includes","json","text","status","clear","sessionStorage","window","location","replace","error","Error","message","console","_ref","onDataApply","dateRange","onClose","selectedDates","setSelectedDates","useState","calendarRef","useRef","startDate","setStartDate","endDate","setEndDate","isApplying","setIsApplying","formattedCurrentDate","setFormattedCurrentDate","useEffect","currentDate","Date","formattedDate","getFullYear","getMonth","padStart","getDate","handleTodayClick","year","month","day","newContent","toLocaleDateString","monthsElement","document","querySelector","existingCustomDiv","innerHTML","customDiv","createElement","className","parentNode","insertBefore","nextSibling","todaySpan","addEventListener","removeEventListener","_jsxs","children","_jsx","Flatpickr","dateFormat","mode","locale","firstDayOfWeek","inline","value","onChange","ref","onClick","handleCancel","textContent","handleApply","taggingElement","toISOString","split","view","setView","taskId","setTaskId","reInitialize","useQuery","queryKey","queryFn","getTask","enabled","retry","cacheTime","staleTime","_Fragment","CreateTask","show","setShow","defaultValue","refetch","fetchTasksRead","myHeaders","Headers","fetchTasksDelete","TaskCompleteJob","finished","getListOfTasks","isShowDeleted","showNotCompleted","userId","createNewTask","updateTask","getUserList","getMobileUserList","formatDateRange","DateRangeComponent","_ref2","setDateRange","log","isPickerVisible","setIsPickerVisible","selectDateRef","handleClickOutside","event","current","contains","target","style","position","togglePicker","prev","cursor","border","width","height","borderRadius","Calendar2Event","color","size","top","background","zIndex","DateRangePicker","dateInMiliSec","projectId","dropdownRef","textareaRef","session","useAuth","submitted","setSubmitted","taskTitle","setTaskTitle","description","setDescription","project","setProject","user","setUser","date","setDate","errors","setErrors","_defaultValue$project","_defaultValue$user","title","from_date","to_date","reset","projectsList","usersList","mobileUsersList","mutation","useMutation","mutationFn","onSuccess","toast","success","onError","handleSubmit","newErrors","mutate","deleteMutation","handleDelete","handleClose","setTimeout","scrollHeight","Sidebar","visible","onHide","modal","dismissable","marginRight","content","_dropdownRef$current2","_dropdownRef$current3","_dropdownRef$current4","_usersList$data","_usersList$data$users","_usersList$data$users2","_mobileUsersList$data","_mobileUsersList$data2","_mobileUsersList$data3","_projectsList$data","closeIconRef","hide","borderBottom","padding","styles","PlusCircle","fontSize","fontWeight","Button","type","e","X","overflow","Form","Control","name","placeholder","Text","Row","Col","sm","Label","_dropdownRef$current","Person","panel","element","offsetParent","Dropdown","label","items","users","filter","is_active","map","first_name","last_name","photo","has_photo","has_work_subscription","valueTemplate","option","left","FallbackImage","is_business","itemTemplate","dropdownIcon","collapseIcon","filterInputAutoFocus","optionGroupLabel","optionGroupChildren","SelectDate","number","reference","clsx","maxWidth","loading","isFetching","as","rows","onInput","onFocus","borderTop","isPending","ProgressSpinner","minWidth","disabled"],"sourceRoot":""}