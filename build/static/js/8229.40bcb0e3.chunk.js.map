{"version":3,"file":"static/js/8229.40bcb0e3.chunk.js","mappings":"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","sources":["APIs/base-api.js","utils/html-preservers.js","webpack://memateapp/./src/components/layout/settings/templates/email-signature-template/premium-email-signatures.module.scss?3aa7","webpack://memateapp/./src/components/layout/settings/templates/email-signature-template/signature-html-editor.module.scss?9d44","components/layout/settings/templates/email-signature-template/signature-html-editor.js","components/layout/settings/templates/email-signature-template/social-icons-base64.js","components/layout/settings/templates/email-signature-template/create-email-signature-template.js","webpack://memateapp/./src/components/layout/settings/templates/job-template.module.scss?a246","components/layout/Login/logout-button.js","components/layout/settings/Sidebar.js","APIs/email-template.js"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","/**\n * Utility functions for preserving HTML structure in rich text editors\n */\n\n/**\n * Preserves the structure of email signature HTML\n * @param {string} html - The HTML content to preserve\n * @returns {string} - The preserved HTML content\n */\nexport const preserveEmailSignatureHtml = (html) => {\n  if (!html) return '';\n\n  // Handle pasted content from Microsoft Outlook or other email clients\n  // which might include extra markup or styles\n  const cleanHtml = cleanPastedHtml(html);\n\n  // Don't process if it's not a signature template\n  if (!cleanHtml.includes('class=\"email-signature\"') &&\n      !cleanHtml.includes(\"class='email-signature'\") &&\n      !cleanHtml.includes('class=email-signature')) {\n    // If it doesn't have the email-signature class, but looks like a signature,\n    // try to wrap it in our signature container\n    if (looksLikeSignature(cleanHtml)) {\n      return wrapAsSignature(cleanHtml);\n    }\n    return cleanHtml;\n  }\n\n  // Create a temporary div to parse the HTML\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = cleanHtml;\n\n  // Find the email signature container\n  const signatureDiv = tempDiv.querySelector('.email-signature') || tempDiv;\n\n  // Preserve table structure\n  const tables = signatureDiv.querySelectorAll('table');\n  tables.forEach(table => {\n    // Ensure tables have proper email client compatibility styles\n    if (!table.style.borderCollapse) {\n      table.style.borderCollapse = 'collapse';\n    }\n\n    // Ensure cellpadding and cellspacing are preserved\n    if (!table.hasAttribute('cellpadding')) {\n      table.setAttribute('cellpadding', '0');\n    }\n\n    if (!table.hasAttribute('cellspacing')) {\n      table.setAttribute('cellspacing', '0');\n    }\n\n    if (!table.hasAttribute('border')) {\n      table.setAttribute('border', '0');\n    }\n  });\n\n  // Preserve image dimensions and styles\n  const images = signatureDiv.querySelectorAll('img');\n  images.forEach(img => {\n    // Ensure images have width and height\n    if (img.style.width && !img.hasAttribute('width')) {\n      img.setAttribute('width', img.style.width);\n    }\n\n    if (img.style.height && !img.hasAttribute('height')) {\n      img.setAttribute('height', img.style.height);\n    }\n\n    // Fix image paths if they're relative\n    if (img.src && img.src.startsWith('cid:')) {\n      // For embedded images in emails (Content-ID), we can't display these\n      // Replace with a placeholder\n      img.setAttribute('data-original-src', img.src);\n      img.src = 'https://via.placeholder.com/150x50?text=Embedded+Image';\n    } else if (img.src && !img.src.startsWith('http') && !img.src.startsWith('data:')) {\n      // For relative paths, we can't display these either\n      img.setAttribute('data-original-src', img.src);\n      img.src = 'https://via.placeholder.com/150x50?text=Image';\n    }\n\n    // For base64 images, they should work as-is\n  });\n\n  // Preserve link styles\n  const links = signatureDiv.querySelectorAll('a');\n  links.forEach(link => {\n    if (!link.style.textDecoration) {\n      link.style.textDecoration = 'none';\n    }\n  });\n\n  return tempDiv.innerHTML;\n};\n\n/**\n * Cleans HTML pasted from email clients like Outlook\n * @param {string} html - The pasted HTML content\n * @returns {string} - Cleaned HTML content\n */\nconst cleanPastedHtml = (html) => {\n  if (!html) return '';\n\n  // Remove common problematic elements from Outlook and other email clients\n  let cleaned = html;\n\n  // Remove MS Office namespace elements and attributes\n  cleaned = cleaned.replace(/<\\/?o:[^>]+>/gi, ''); // Remove Office namespace tags\n  cleaned = cleaned.replace(/<\\/?m:[^>]+>/gi, ''); // Remove Math namespace tags\n  cleaned = cleaned.replace(/<\\/?v:[^>]+>/gi, ''); // Remove VML namespace tags\n  cleaned = cleaned.replace(/<\\/?w:[^>]+>/gi, ''); // Remove Word namespace tags\n\n  // Remove MS Office specific attributes\n  cleaned = cleaned.replace(/\\s+class=\"?Mso[a-zA-Z]+\"?/gi, ''); // Remove Mso classes\n  cleaned = cleaned.replace(/\\s+style=\"mso-[^\"]*\"/gi, ''); // Remove mso- style attributes\n\n  // Remove HTML comments\n  cleaned = cleaned.replace(/<!--[\\s\\S]*?-->/g, '');\n\n  // Remove excessive whitespace\n  cleaned = cleaned.replace(/\\s{2,}/g, ' ');\n\n  return cleaned;\n};\n\n/**\n * Checks if HTML content looks like an email signature\n * @param {string} html - The HTML content to check\n * @returns {boolean} - True if it looks like a signature\n */\nconst looksLikeSignature = (html) => {\n  if (!html) return false;\n\n  // Common patterns found in email signatures\n  const signaturePatterns = [\n    /<table[^>]*>/i, // Contains tables\n    /mailto:/i, // Contains email links\n    /tel:/i, // Contains phone links\n    /<img[^>]*>/i, // Contains images\n    /\\b(?:regards|sincerely|cheers|best|thank you)\\b/i, // Common signature closings\n    /\\b(?:phone|tel|mobile|email|web|website|address)\\b/i, // Common signature fields\n    /\\b(?:facebook|twitter|linkedin|instagram)\\b/i // Social media references\n  ];\n\n  // Check if at least 2 patterns match\n  const matchCount = signaturePatterns.filter(pattern => pattern.test(html)).length;\n  return matchCount >= 2;\n};\n\n/**\n * Wraps HTML content in an email signature container\n * @param {string} html - The HTML content to wrap\n * @returns {string} - Wrapped HTML content\n */\nconst wrapAsSignature = (html) => {\n  return `<div class=\"email-signature\" style=\"font-family: Arial, sans-serif; max-width: 500px; color: #333333; line-height: 1.4; width: 100%; background-color: transparent;\">${html}</div>`;\n};\n\n/**\n * Sanitizes HTML to prevent XSS attacks while preserving structure\n * @param {string} html - The HTML content to sanitize\n * @returns {string} - The sanitized HTML content\n */\nexport const sanitizeHtml = (html) => {\n  if (!html) return '';\n\n  // Create a temporary div to parse the HTML\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = html;\n\n  // Remove potentially dangerous elements and attributes\n  const scripts = tempDiv.querySelectorAll('script');\n  scripts.forEach(script => script.remove());\n\n  const iframes = tempDiv.querySelectorAll('iframe');\n  iframes.forEach(iframe => iframe.remove());\n\n  const objects = tempDiv.querySelectorAll('object');\n  objects.forEach(object => object.remove());\n\n  const embeds = tempDiv.querySelectorAll('embed');\n  embeds.forEach(embed => embed.remove());\n\n  // Remove on* attributes\n  const allElements = tempDiv.querySelectorAll('*');\n  allElements.forEach(el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on')) {\n        el.removeAttribute(attr.name);\n      }\n    });\n  });\n\n  return tempDiv.innerHTML;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formSection\":\"premium-email-signatures_formSection__CBm0c\",\"previewSection\":\"premium-email-signatures_previewSection__E7ztA\",\"templateSelector\":\"premium-email-signatures_templateSelector__Bljsp\",\"templateOptions\":\"premium-email-signatures_templateOptions__VAXvB\",\"templateOption\":\"premium-email-signatures_templateOption__JgXrW\",\"selected\":\"premium-email-signatures_selected__1uBci\",\"thumbnailContainer\":\"premium-email-signatures_thumbnailContainer__iJyEr\",\"templateName\":\"premium-email-signatures_templateName__orKRl\",\"imageUploadSection\":\"premium-email-signatures_imageUploadSection__wJQ3L\",\"imageUploadContainer\":\"premium-email-signatures_imageUploadContainer__9inOP\",\"imageUploadBox\":\"premium-email-signatures_imageUploadBox__MEiIx\",\"uploadIcon\":\"premium-email-signatures_uploadIcon__bmv8V\",\"hasImage\":\"premium-email-signatures_hasImage__OlqNS\",\"removeImageButton\":\"premium-email-signatures_removeImageButton__dTX1v\",\"socialMediaSection\":\"premium-email-signatures_socialMediaSection__Hb1N7\",\"socialMediaList\":\"premium-email-signatures_socialMediaList__Z72L0\",\"socialMediaItem\":\"premium-email-signatures_socialMediaItem__rpgfY\",\"socialIcon\":\"premium-email-signatures_socialIcon__8nF7y\",\"active\":\"premium-email-signatures_active__V-sO8\",\"previewCard\":\"premium-email-signatures_previewCard__DuLP-\",\"previewHeader\":\"premium-email-signatures_previewHeader__Hyisy\",\"previewBody\":\"premium-email-signatures_previewBody__rdooU\",\"emailPreview\":\"premium-email-signatures_emailPreview__StYuf\",\"emailHeader\":\"premium-email-signatures_emailHeader__aYSRL\",\"emailHeaderItem\":\"premium-email-signatures_emailHeaderItem__6XG73\",\"emailBody\":\"premium-email-signatures_emailBody__xRmx6\",\"emailSignature\":\"premium-email-signatures_emailSignature__VIN0+\",\"compatibilityInfo\":\"premium-email-signatures_compatibilityInfo__mAb3R\",\"compatibilityList\":\"premium-email-signatures_compatibilityList__HA7FL\",\"compatibilityItem\":\"premium-email-signatures_compatibilityItem__6eaid\",\"compatibilityIcon\":\"premium-email-signatures_compatibilityIcon__0rTwL\",\"label\":\"premium-email-signatures_label__QYLIw\",\"inputBox\":\"premium-email-signatures_inputBox__4FR5Y\",\"textarea\":\"premium-email-signatures_textarea__0d0YR\"};","// extracted by mini-css-extract-plugin\nexport default {\"signatureEditor\":\"signature-html-editor_signatureEditor__sf2Oy\",\"editorToolbar\":\"signature-html-editor_editorToolbar__WnLm+\",\"viewToggle\":\"signature-html-editor_viewToggle__zEIP-\",\"viewButton\":\"signature-html-editor_viewButton__KUUwc\",\"pasteButton\":\"signature-html-editor_pasteButton__rKXgU\",\"pasteArea\":\"signature-html-editor_pasteArea__0hmL4\",\"pasteInstructions\":\"signature-html-editor_pasteInstructions__b4dNW\",\"pasteTarget\":\"signature-html-editor_pasteTarget__OEfDR\",\"pasteActions\":\"signature-html-editor_pasteActions__xVWBu\",\"editorContainer\":\"signature-html-editor_editorContainer__1OM26\",\"editorSide\":\"signature-html-editor_editorSide__xL4ak\",\"previewSide\":\"signature-html-editor_previewSide__erR3R\",\"editorHeader\":\"signature-html-editor_editorHeader__i8Mep\",\"previewHeader\":\"signature-html-editor_previewHeader__5BxD7\",\"editorControls\":\"signature-html-editor_editorControls__P2Sxi\",\"htmlLabel\":\"signature-html-editor_htmlLabel__VSKQz\",\"previewPane\":\"signature-html-editor_previewPane__V-PEO\",\"previewPlaceholder\":\"signature-html-editor_previewPlaceholder__Ucj1o\",\"previewPlaceholderContent\":\"signature-html-editor_previewPlaceholderContent__C-pqs\",\"previewPlaceholderIcon\":\"signature-html-editor_previewPlaceholderIcon__R2Mnu\",\"codePane\":\"signature-html-editor_codePane__EoR+z\"};","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Code, Clipboard } from 'react-bootstrap-icons';\nimport { toast } from 'sonner';\nimport styles from './signature-html-editor.module.scss';\n\n/**\n * A specialized editor for email signatures that preserves HTML structure\n * @param {Object} props - Component props\n * @param {string} props.value - The HTML content\n * @param {Function} props.onChange - Function to call when content changes\n * @param {string} props.placeholder - Placeholder text\n */\nconst SignatureHtmlEditor = ({ value, onChange, placeholder }) => {\n  const textareaRef = useRef(null);\n  const pasteAreaRef = useRef(null);\n  const [internalValue, setInternalValue] = useState(value || '');\n  const [showPasteArea, setShowPasteArea] = useState(false);\n\n  // Update internal value when prop value changes\n  useEffect(() => {\n    setInternalValue(value || '');\n  }, [value]);\n\n  // Handle changes to the HTML textarea\n  const handleHtmlChange = (e) => {\n    const newValue = e.target.value;\n    setInternalValue(newValue);\n    onChange(newValue);\n  };\n\n  // Handle paste from clipboard\n  const handlePaste = (e) => {\n    // Get clipboard data\n    const clipboardData = e.clipboardData || window.clipboardData;\n    const pastedData = clipboardData.getData('text/html') || clipboardData.getData('text');\n\n    if (pastedData) {\n      // Set the value directly without any processing\n      setInternalValue(pastedData);\n      onChange(pastedData);\n      setShowPasteArea(false);\n      toast.success('Signature pasted successfully!');\n    }\n  };\n\n  // Toggle paste area\n  const togglePasteArea = () => {\n    setShowPasteArea(!showPasteArea);\n    // Focus the paste area when shown\n    if (!showPasteArea) {\n      setTimeout(() => {\n        if (pasteAreaRef.current) {\n          pasteAreaRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n\n  return (\n    <div className={styles.signatureEditor}>\n\n      <div className={styles.editorContainer}>\n        <div className={styles.editorSide}>\n          <div className={styles.editorHeader}>\n            <h5>Signature</h5>\n            <div className={styles.editorControls}>\n              <div className={styles.htmlLabel}>\n                <Code size={14} /> HTML\n              </div>\n              <Button\n                variant=\"outline-primary\"\n                size=\"sm\"\n                className=\"text-button\"\n                onClick={togglePasteArea}\n              >\n                <Clipboard size={14} /> Paste Signature\n              </Button>\n            </div>\n          </div>\n\n          {showPasteArea && (\n            <div className={styles.pasteArea}>\n              <div className={styles.pasteInstructions}>\n                <p>Paste your signature below (Ctrl+V or Cmd+V):</p>\n                <div\n                  ref={pasteAreaRef}\n                  className={styles.pasteTarget}\n                  contentEditable\n                  onPaste={handlePaste}\n                  tabIndex={0}\n                >\n                  Click here and paste your signature\n                </div>\n                <div className={styles.pasteActions}>\n                  <Button size=\"sm\" variant=\"secondary\" onClick={() => setShowPasteArea(false)}>Cancel</Button>\n                </div>\n              </div>\n            </div>\n          )}\n          <Form.Control\n            as=\"textarea\"\n            ref={textareaRef}\n            className={styles.codePane}\n            value={internalValue}\n            onChange={handleHtmlChange}\n            placeholder={placeholder}\n            rows={30}\n          />\n        </div>\n\n        <div className={styles.previewSide}>\n          <div className={styles.previewHeader}>\n            <h5 style={{ padding: '12px' }}>Preview</h5>\n          </div>\n          <div className={styles.previewPane}>\n            {internalValue ? (\n              <div style={{ marginRight: 'auto' }} dangerouslySetInnerHTML={{ __html: internalValue }} />\n            ) : (\n              <div className={styles.previewPlaceholder}>\n                <div className={styles.previewPlaceholderContent}>\n                  <div className={styles.previewPlaceholderIcon}>\n                    <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6C22 4.9 21.1 4 20 4Z\" stroke=\"#D0D5DD\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                      <path d=\"M22 6L12 13L2 6\" stroke=\"#D0D5DD\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>\n                  </div>\n                  <h6>Your signature preview will appear here</h6>\n                  <p>Enter your signature in the editor or paste an existing one</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignatureHtmlEditor;\n","// Base64-encoded social media icons for email signatures\n// These are embedded directly in the HTML to ensure they display in email clients\n\nexport const socialIcons = {\n  linkedin: `${process.env.REACT_APP_URL}/social-icons/linkedin.png`,\n  twitter: `${process.env.REACT_APP_URL}/social-icons/twitter.png`,\n  facebook: `${process.env.REACT_APP_URL}/social-icons/facebook.png`,\n  instagram: `${process.env.REACT_APP_URL}/social-icons/instagram.png`,\n  github: `${process.env.REACT_APP_URL}/social-icons/github.png`,\n  youtube: `${process.env.REACT_APP_URL}/social-icons/youtube.png`,\n  website: `${process.env.REACT_APP_URL}/social-icons/website.png`,\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { Button, Col, Form, Modal, OverlayTrigger, Row, Tooltip } from 'react-bootstrap';\nimport {\n    ChevronLeft,\n    Eye,\n    PencilSquare,\n    Upload,\n    XCircle,\n    Linkedin,\n    Twitter,\n    Instagram,\n    Facebook,\n    Github,\n    Youtube,\n    Globe,\n    CheckCircle\n} from \"react-bootstrap-icons\";\nimport { Helmet } from 'react-helmet-async';\nimport { Link, useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from 'primereact/inputtext';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport { preserveEmailSignatureHtml } from '../../../../../utils/html-preservers';\nimport style from '../job-template.module.scss';\nimport premiumStyle from './premium-email-signatures.module.scss';\nimport SignatureHtmlEditor from './signature-html-editor';\nimport { socialIcons } from './social-icons-base64';\nimport { createEmailSignature, deleteEmailSignature, getEmailSignature, setDefaultEmailSignature, updateEmailSignature } from '../../../../../APIs/email-template';\nimport { useTrialHeight } from '../../../../../app/providers/trial-height-provider';\nimport Sidebar from '../../Sidebar';\n\n\n\n\n// Premium template data with HTML thumbnails\nconst premiumTemplates = [\n    {\n        id: 'minimal',\n        title: 'Minimal',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"height:6px;width:60%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:40%;background:#e4e7ec;margin-bottom:12px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:12px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A clean, minimal signature without dividers'\n    },\n    {\n        id: 'single-column',\n        title: 'Single Column',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"width:24px;height:24px;background:#e4e7ec;border-radius:50%;margin-bottom:8px;\"></div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"height:6px;width:60%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:40%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:4px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A clean, single-column signature with dividers'\n    },\n    {\n        id: 'two-column',\n        title: 'Two Column',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"display:flex;margin-bottom:8px;\">\n          <div style=\"width:24px;height:24px;background:#e4e7ec;border-radius:50%;\"></div>\n          <div style=\"margin-left:8px;width:calc(100% - 32px);\">\n            <div style=\"height:6px;width:70%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:50%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n          </div>\n        </div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;\">\n          <div style=\"width:30%;\">\n            <div style=\"width:24px;height:24px;background:#e4e7ec;border-radius:4px;\"></div>\n          </div>\n          <div style=\"width:70%;\">\n            <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n          </div>\n        </div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:4px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A two-column signature with photo and logo'\n    },\n    {\n        id: 'vertical',\n        title: 'Vertical',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"width:24px;height:24px;background:#e4e7ec;border-radius:50%;margin:0 auto 8px;\"></div>\n        <div style=\"height:6px;width:60%;background:#e4e7ec;margin:0 auto 6px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:40%;background:#e4e7ec;margin:0 auto 6px;border-radius:4px;\"></div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"width:30%;margin:0 auto;\">\n          <div style=\"width:24px;height:24px;background:#e4e7ec;border-radius:4px;margin:0 auto;\"></div>\n        </div>\n        <div style=\"height:6px;width:90%;background:#e4e7ec;margin:8px auto 4px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:80%;background:#e4e7ec;margin:0 auto 4px;border-radius:4px;\"></div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin:4px auto;width:fit-content;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A vertical signature with centered content'\n    },\n    {\n        id: 'modern-divider',\n        title: 'Modern Divider',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"display:flex;margin-bottom:8px;\">\n          <div style=\"width:24px;height:24px;background:#e4e7ec;border-radius:50%;\"></div>\n          <div style=\"margin-left:8px;width:calc(100% - 32px);\">\n            <div style=\"height:6px;width:70%;background:#00BCD4;margin-bottom:6px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:50%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n          </div>\n        </div>\n        <div style=\"height:1px;width:100%;background:#00BCD4;margin:8px 0;\"></div>\n        <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:1px;width:100%;background:#00BCD4;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:4px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A modern signature with colored dividers'\n    },\n    {\n        id: 'photo-left',\n        title: 'Photo Left',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"display:flex;margin-bottom:8px;\">\n          <div style=\"width:30px;height:30px;background:#e4e7ec;border-radius:50%;margin-right:8px;\"></div>\n          <div style=\"width:calc(100% - 38px);\">\n            <div style=\"height:6px;width:70%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:50%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n          </div>\n        </div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:4px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A signature with photo on the left side'\n    },\n    {\n        id: 'photo-right',\n        title: 'Photo Right',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"display:flex;margin-bottom:8px;\">\n          <div style=\"width:calc(100% - 38px);\">\n            <div style=\"height:6px;width:70%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:50%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n            <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n          </div>\n          <div style=\"width:30px;height:30px;background:#e4e7ec;border-radius:50%;margin-left:8px;\"></div>\n        </div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:4px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A signature with photo on the right side'\n    },\n    {\n        id: 'logo-banner',\n        title: 'Logo Banner',\n        type: 'Premium',\n        htmlThumbnail: `\n      <div style=\"width:100%;height:100%;padding:8px;background:#f9fafb;border-radius:4px;\">\n        <div style=\"height:20px;background:#e4e7ec;margin-bottom:8px;border-radius:4px;display:flex;align-items:center;justify-content:center;\">\n          <div style=\"width:40px;height:12px;background:#ffffff;border-radius:2px;\"></div>\n        </div>\n        <div style=\"height:6px;width:60%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:40%;background:#e4e7ec;margin-bottom:6px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:90%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:6px;width:80%;background:#e4e7ec;margin-bottom:4px;border-radius:4px;\"></div>\n        <div style=\"height:1px;width:100%;background:#e4e7ec;margin:8px 0;\"></div>\n        <div style=\"display:flex;gap:4px;margin-top:4px;\">\n          <div style=\"height:8px;width:8px;background:#4285F4;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#3b5998;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#000000;border-radius:50%;\"></div>\n          <div style=\"height:8px;width:8px;background:#E1306C;border-radius:50%;\"></div>\n        </div>\n      </div>\n    `,\n        description: 'A signature with a logo banner at the top'\n    }\n];\n\n// Social media platforms\nconst socialPlatforms = [\n    { id: 'linkedin', name: 'LinkedIn', icon: Linkedin, color: '#0A66C2' },\n    { id: 'twitter', name: 'Twitter', icon: Twitter, color: '#1DA1F2' },\n    { id: 'instagram', name: 'Instagram', icon: Instagram, color: '#E4405F' },\n    { id: 'facebook', name: 'Facebook', icon: Facebook, color: '#1877F2' },\n    { id: 'github', name: 'GitHub', icon: Github, color: '#181717' },\n    { id: 'youtube', name: 'YouTube', icon: Youtube, color: '#FF0000' },\n    { id: 'website', name: 'Website', icon: Globe, color: '#0E85C7' }\n];\n\nconst CreateEmailSignatureTemplate = () => {\n    const { trialHeight } = useTrialHeight();\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || '{}');\n    const has_work_subscription = !!profileData?.has_work_subscription;\n    const has_twilio = !!profileData?.has_twilio;\n    const navigate = useNavigate();\n    const { id } = useParams();\n    const [searchParams] = useSearchParams();\n    const templateId = searchParams.get('templateId');\n\n    const [title, setTitle] = useState(\"\");\n    const [text, setText] = useState(null);\n    const [errors, setErrors] = useState({});\n    const [isEdit, setIsEdit] = useState(false);\n    const [activeTab, setActiveTab] = useState('job-templates');\n    const [showPreview, setShowPreview] = useState(false);\n    const [previewDevice, setPreviewDevice] = useState('desktop'); // 'desktop', 'tablet', or 'mobile'\n\n    // Premium signature fields\n    const [selectedTemplate, setSelectedTemplate] = useState(templateId || premiumTemplates[0].id);\n    const [fullName, setFullName] = useState('');\n    const [jobTitle, setJobTitle] = useState('');\n    const [company, setCompany] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [website, setWebsite] = useState('');\n    const [address, setAddress] = useState('');\n    const [profileImage, setProfileImage] = useState(null);\n    const [companyLogo, setCompanyLogo] = useState(null);\n    const [socialLinks, setSocialLinks] = useState({});\n    const [activeSocials, setActiveSocials] = useState([]);\n\n    // Advanced customization options\n    const [fontFamily, setFontFamily] = useState('Arial, sans-serif');\n    const [primaryColor, setPrimaryColor] = useState('#00BCD4'); // Default teal color\n    const [textColor, setTextColor] = useState('#333333');\n    const [secondaryTextColor, setSecondaryTextColor] = useState('#666666');\n    const [linkColor, setLinkColor] = useState('#0E85C7');\n    const [fontSize, setFontSize] = useState('normal'); // 'small', 'normal', 'large'\n    const [backgroundColor, setBackgroundColor] = useState('transparent');\n    const [dividerStyle, setDividerStyle] = useState('solid'); // 'solid', 'dashed', 'dotted'\n    const [dividerWidth, setDividerWidth] = useState('1px'); // '1px', '2px', '3px'\n    const [dividerColor, setDividerColor] = useState('#0E85C7'); // Default to primary color\n    const [profileImageStyle, setProfileImageStyle] = useState('circle'); // 'circle', 'square', 'rounded'\n    const [profileImageSize, setProfileImageSize] = useState('medium'); // 'small', 'medium', 'large'\n    const [companyLogoSize, setCompanyLogoSize] = useState('medium'); // 'small', 'medium', 'large'\n    const [previewKey, setPreviewKey] = useState(0); // Used to force preview re-render\n    const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n    const [isDefault, setIsDefault] = useState(false);\n\n    // Handle social media toggle\n    const toggleSocialPlatform = (platformId) => {\n        if (activeSocials.includes(platformId)) {\n            setActiveSocials(activeSocials.filter(id => id !== platformId));\n        } else {\n            setActiveSocials([...activeSocials, platformId]);\n        }\n    };\n\n    // Handle social media link change\n    const handleSocialLinkChange = (platformId, value) => {\n        setSocialLinks({\n            ...socialLinks,\n            [platformId]: value\n        });\n    };\n\n    // Handle image upload with validation and optimization\n    const handleImageUpload = (e, type) => {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        // Validate file type\n        const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n        if (!validTypes.includes(file.type)) {\n            toast.error('Please upload a valid image file (JPEG, PNG, GIF, or WebP)');\n            return;\n        }\n\n        // Validate file size (max 2MB)\n        if (file.size > 2 * 1024 * 1024) {\n            toast.error('Image size should be less than 2MB');\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            // Create an image element to get dimensions\n            const img = new Image();\n            img.onload = () => {\n                // Create a canvas to resize the image if needed\n                const canvas = document.createElement('canvas');\n                let width = img.width;\n                let height = img.height;\n\n                // Resize if image is too large (max dimension 800px)\n                const maxDimension = 800;\n                if (width > maxDimension || height > maxDimension) {\n                    if (width > height) {\n                        height = Math.round(height * (maxDimension / width));\n                        width = maxDimension;\n                    } else {\n                        width = Math.round(width * (maxDimension / height));\n                        height = maxDimension;\n                    }\n\n                    canvas.width = width;\n                    canvas.height = height;\n                    const ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0, width, height);\n\n                    // Convert to optimized data URL\n                    const optimizedDataUrl = canvas.toDataURL('image/jpeg', 0.85);\n\n                    if (type === 'profile') {\n                        setProfileImage(optimizedDataUrl);\n                    } else if (type === 'logo') {\n                        setCompanyLogo(optimizedDataUrl);\n                    }\n                } else {\n                    // Use original image if it's already small enough\n                    if (type === 'profile') {\n                        setProfileImage(event.target.result);\n                    } else if (type === 'logo') {\n                        setCompanyLogo(event.target.result);\n                    }\n                }\n            };\n            img.src = event.target.result;\n        };\n        reader.onerror = () => {\n            toast.error('Error reading file');\n        };\n        reader.readAsDataURL(file);\n    };\n\n    // Remove uploaded image\n    const removeImage = (type) => {\n        if (type === 'profile') {\n            setProfileImage(null);\n        } else if (type === 'logo') {\n            setCompanyLogo(null);\n        }\n    };\n    const signatureQuery = useQuery({\n        queryKey: [\"getEmailSignature\", id],\n        queryFn: () => getEmailSignature(id),\n        enabled: !!id && id !== '0',\n        retry: 1,\n    });\n    const mutation = useMutation({\n        mutationFn: (templateData) => ((id && id !== '0') ? updateEmailSignature(id, templateData) : createEmailSignature(templateData)),\n        onSuccess: () => {\n            toast.success(\"Template saved successfully!\");\n            navigate('/settings/templates/email-signatures/');\n        },\n        onError: (error) => {\n            console.error(\"Error saving template:\", error);\n            toast.error(\"Failed to save the template. Please try again.\");\n        },\n    });\n    const deleteMutation = useMutation({\n        mutationFn: () => (id && deleteEmailSignature(id)),\n        onSuccess: () => {\n            toast.success(\"Template deleted successfully!\");\n            navigate('/settings/templates/email-signatures/');\n        },\n        onError: (error) => {\n            console.error(\"Error deleting template:\", error);\n            toast.error(\"Failed to delete the template. Please try again.\");\n        },\n    });\n\n    const setDefaultTemplateMutation = useMutation({\n        mutationFn: () => setDefaultEmailSignature(id),\n        onSuccess: () => {\n            toast.success(\"Default template set successfully!\");\n        },\n        onError: (error) => {\n            console.error(\"Error setting default template:\", error);\n            toast.error(\"Failed to set the default template. Please try again.\");\n        },\n    });\n\n    // Function to get company logo size based on selection\n    const getCompanyLogoSize = (size) => {\n        switch (size) {\n            case 'small':\n                return { height: '40px', width: '40px' };\n            case 'large':\n                return { height: '80px', width: '80px' };\n            case 'medium':\n            default:\n                return { height: '60px', width: '60px' };\n        }\n    };\n\n    // Function to get profile image size based on selection\n    const getProfileImageSize = (size) => {\n        switch (size) {\n            case 'small':\n                return { width: '40px', height: '40px' };\n            case 'large':\n                return { width: '80px', height: '80px' };\n            case 'medium':\n            default:\n                return { width: '60px', height: '60px' };\n        }\n    };\n\n    // Generate HTML for the signature based on selected template and user inputs\n    const generateSignatureHTML = () => {\n        // Get font size in pixels based on selection\n        const getFontSize = (size) => {\n            switch (size) {\n                case 'small': return { base: '13px', heading: '15px' };\n                case 'large': return { base: '15px', heading: '18px' };\n                default: return { base: '14px', heading: '16px' }; // normal\n            }\n        };\n\n        // Get border radius based on style\n        const getIconRadius = (style) => {\n            switch (style) {\n                case 'square': return '0';\n                case 'rounded': return '4px';\n                default: return '50%'; // circle\n            }\n        };\n\n        // Get profile image styling\n        const getProfileImageStyle = () => {\n            const radius = getIconRadius(profileImageStyle);\n            const isCircle = profileImageStyle === 'circle';\n\n            if (isCircle) {\n                // For circle style, ensure perfect circular cropping\n                return `border-radius: ${radius}; object-fit: cover; aspect-ratio: 1/1; overflow: hidden;`;\n            } else {\n                return `border-radius: ${radius};`;\n            }\n        };\n\n        // Get border style for dividers\n        const getBorderStyle = (style, width) => {\n            return `${width} ${style} ${dividerColor}`;\n        };\n\n        // Only responsive styles for media queries\n        const responsiveStyles = `\n            /* Responsive styles */\n            @media screen and (max-width: 480px) {\n                .email-signature .mobile-stack {\n                    display: block !important;\n                    width: 100% !important;\n                    padding-right: 0 !important;\n                    padding-bottom: 15px !important;\n                }\n                .email-signature .mobile-text-center {\n                    text-align: center !important;\n                }\n                .email-signature .mobile-img-center {\n                    margin: 0 auto !important;\n                }\n            }\n        `;\n\n        // Generate social media icons HTML\n        const socialIconsHTML = activeSocials.map(platformId => {\n            const platform = socialPlatforms.find(p => p.id === platformId);\n            const link = socialLinks[platformId] || '#';\n            // Use Base64 encoded icons to ensure they display in email clients\n            return `\n                <a href=\"${link}\" class=\"social-icon\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"display: inline-block; margin-right: 8px; margin-bottom: 8px; text-decoration: none;\">\n                    <img src=\"${socialIcons[platformId] || socialIcons['website']}\"\n                         alt=\"${platform.name}\" width=\"24\" height=\"24\"\n                         style=\"border: none; display: inline-block; padding: 2px;\" />\n                </a>\n            `;\n        }).join('');\n\n        // Different templates\n        let signatureHTML = '';\n\n        switch (selectedTemplate) {\n            case 'single-column':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"font-family: ${fontFamily}; max-width: 500px; color: ${textColor}; line-height: 1.4; width: 100%; background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n                            <tr>\n                                <td class=\"mobile-text-center\" style=\"padding: 0; vertical-align: top; text-align: left;\">\n                                    ${profileImage ? `<div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin-bottom: 10px;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"border: 0; height: auto; line-height: 100%; outline: none; text-decoration: none; -ms-interpolation-mode: bicubic; ${getProfileImageStyle()}; display: block;\" class=\"mobile-img-center\" />\n                                    </div>` : ''}\n                                    <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 10px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"text-decoration: none; color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"text-decoration: none; color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"text-decoration: none; color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                    <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                                    ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                `;\n                break;\n\n            case 'two-column':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"font-family: ${fontFamily}; max-width: 500px; color: ${textColor}; line-height: 1.4; width: 100%; background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n                            <tr>\n                                ${profileImage ? `\n                                <td class=\"mobile-stack\" style=\"padding-right: 15px; width: 80px; vertical-align: center;\">\n                                    ${profileImage ? `<div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin-bottom: 0;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"${getProfileImageStyle()}; display: block;\" class=\"mobile-img-center\" />\n                                    </div>` : ''}\n                                </td>` : ''}\n                                <td class=\"mobile-text-center\">\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 0px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                </td>\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n                            <tr>\n                                ${companyLogo ? `\n                                <td class=\"mobile-stack\" style=\"padding-right: 15px; width: 80px; vertical-align: top;\">\n                                    ${companyLogo ? `<img src=\"${companyLogo}\" alt=\"${company}\" height=\"${getCompanyLogoSize(companyLogoSize).height.replace('px', '')}\" style=\"display: block; margin-top: 10px; width: ${getCompanyLogoSize(companyLogoSize).width};\" class=\"mobile-img-center\" />` : ''}\n                                </td>` : ''}\n                                <td class=\"mobile-stack mobile-text-center\" style=\"vertical-align: top;\">\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"text-decoration: none; color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"text-decoration: none; color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"text-decoration: none; color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                        ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                    </div>\n                `;\n                break;\n\n            case 'vertical':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"font-family: ${fontFamily}; max-width: 500px; color: ${textColor}; line-height: 1.4; width: 100%; background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n                            <tr>\n                                <td class=\"mobile-text-center\" style=\"text-align: center;\">\n                                    ${profileImage ? `<div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin: 0 auto 10px;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"${getProfileImageStyle()}; display: block;\" />\n                                    </div>` : ''}\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 10px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                    <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                                    ${companyLogo ? `<img src=\"${companyLogo}\" alt=\"${company}\" height=\"${getCompanyLogoSize(companyLogoSize).height}\" style=\"display: block; margin: 10px auto; width: ${getCompanyLogoSize(companyLogoSize).width};\" />` : ''}\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"text-decoration: none; color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"text-decoration: none; color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"text-decoration: none; color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                    <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                                    ${socialIconsHTML ? `<div style=\"margin-top: 10px; text-align: center;\">${socialIconsHTML}</div>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                `;\n                break;\n\n            case 'modern-divider':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"font-family: ${fontFamily}; max-width: 500px; color: ${textColor}; line-height: 1.4; width: 100%; background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n                            <tr>\n                                ${profileImage ? `\n                                <td class=\"mobile-stack\" style=\"padding-right: 15px; width: 80px; vertical-align: top;\">\n                                    <div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin-top: 10px;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"${getProfileImageStyle()}; display: block;\" class=\"mobile-img-center\" />\n                                    </div>\n                                </td>` : ''}\n                                <td class=\"mobile-stack mobile-text-center\" style=\"vertical-align: top;\">\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${primaryColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 10px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                </td>\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${dividerWidth} ${dividerStyle} ${dividerColor}; margin: 10px 0;\"></div>\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n                            <tr>\n                                <td>\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"text-decoration: none; color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"text-decoration: none; color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"text-decoration: none; color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${dividerWidth} ${dividerStyle} ${primaryColor}; margin: 10px 0;\"></div>\n                        ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                    </div>\n                `;\n                break;\n\n            case 'photo-left':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width: 100%;\">\n                            <tr>\n                                ${profileImage ? `\n                                <td class=\"mobile-stack\" style=\"padding-right: 15px; width: 80px; vertical-align: top;\">\n                                    <div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin-top: 10px;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"${getProfileImageStyle()}; display: block;\" class=\"mobile-img-center\" />\n                                    </div>\n                                </td>` : ''}\n                                <td class=\"mobile-stack mobile-text-center\" style=\"vertical-align: top;\">\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                        ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                    </div>\n                `;\n                break;\n\n            case 'photo-right':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width: 100%;\">\n                            <tr>\n                                <td class=\"mobile-stack mobile-text-center\" style=\"vertical-align: top;\">\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                </td>\n                                ${profileImage ? `\n                                <td class=\"mobile-stack\" style=\"padding-left: 15px; width: 80px; vertical-align: top;\">\n                                    <div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin-top: 10px;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"${getProfileImageStyle()}; display: block;\" class=\"mobile-img-center\" />\n                                    </div>\n                                </td>` : ''}\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                        ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                    </div>\n                `;\n                break;\n\n            case 'logo-banner':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"background-color: ${backgroundColor};\">\n                        ${companyLogo ? `\n                        <div style=\"background-color: ${primaryColor}; padding: 10px; text-align: center; margin-bottom: 15px;\">\n                            <img src=\"${companyLogo}\" alt=\"${company}\" height=\"${getCompanyLogoSize(companyLogoSize).height}\" style=\"display: inline-block; width: ${getCompanyLogoSize(companyLogoSize).width};\" />\n                        </div>` : ''}\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width: 100%;\">\n                            <tr>\n                                ${profileImage ? `\n                                <td class=\"mobile-stack\" style=\"padding-right: 15px; width: 80px; vertical-align: top;\">\n                                    <div style=\"width: ${getProfileImageSize(profileImageSize).width}; height: ${getProfileImageSize(profileImageSize).height}; ${profileImageStyle === 'circle' ? 'overflow: hidden; border-radius: 50%;' : ''} margin-top: 10px;\">\n                                        <img src=\"${profileImage}\" alt=\"${fullName}\" width=\"${getProfileImageSize(profileImageSize).width.replace('px', '')}\" height=\"${getProfileImageSize(profileImageSize).height.replace('px', '')}\" style=\"${getProfileImageStyle()}; display: block;\" class=\"mobile-img-center\" />\n                                    </div>\n                                </td>` : ''}\n                                <td class=\"mobile-stack mobile-text-center\" style=\"vertical-align: top;\">\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                        <div style=\"border-bottom: ${getBorderStyle(dividerStyle, dividerWidth)}; margin: 10px 0;\"></div>\n                        ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                    </div>\n                `;\n                break;\n\n            case 'minimal':\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width: 100%;\">\n                            <tr>\n                                <td class=\"mobile-text-center\">\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 10px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` at ${company}` : ''}</p>\n                                    ${email ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"mailto:${email}\" style=\"color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${phone ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"tel:${phone}\" style=\"color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\"><a href=\"${website}\" style=\"color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 3px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${address}</p>` : ''}\n                                    ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                `;\n                break;\n\n            // Keep the default case for backward compatibility\n            default:\n                signatureHTML = `\n                    <div class=\"email-signature\" style=\"background-color: ${backgroundColor};\">\n                        <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n                            <tr>\n                                <td>\n                                    <h3 style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).heading}; color: ${textColor}; font-weight: 600; font-family: ${fontFamily};\">${fullName}</h3>\n                                    <p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">${jobTitle}${company ? ` | ${company}` : ''}</p>\n                                    ${phone ? `<p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\">Phone: <a href=\"tel:${phone}\" style=\"color: ${textColor};\">${phone}</a></p>` : ''}\n                                    ${email ? `<p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\">Email: <a href=\"mailto:${email}\" style=\"color: ${linkColor};\">${email}</a></p>` : ''}\n                                    ${website ? `<p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; font-family: ${fontFamily};\">Website: <a href=\"${website}\" style=\"color: ${linkColor};\">${website}</a></p>` : ''}\n                                    ${address ? `<p style=\"margin: 0 0 5px 0; font-size: ${getFontSize(fontSize).base}; color: ${secondaryTextColor}; font-family: ${fontFamily};\">Address: ${address}</p>` : ''}\n                                    ${socialIconsHTML ? `<div style=\"margin-top: 10px;\">${socialIconsHTML}</div>` : ''}\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                `;\n        }\n\n        // Add style tag for responsive styles only\n        return `<style type=\"text/css\">${responsiveStyles}</style>${signatureHTML}`;\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors({});\n\n        const newErrors = {};\n        if (!title) newErrors.title = true;\n        if (!text && !fullName) newErrors.fullName = true;\n        if (!text && !email) newErrors.email = true;\n\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            return;\n        }\n\n        const signatureHTML = generateSignatureHTML();\n\n        // Make sure to preserve the HTML structure when saving\n        const finalHtml = text ? preserveEmailSignatureHtml(text) : signatureHTML;\n\n        const templateData = {\n            name: title,\n            text: finalHtml,\n        };\n\n        // Removed console.log to prevent unnecessary re-renders\n        toast.success(\"Saving your email signature...\");\n        mutation.mutate(templateData);\n    };\n\n    const handleDelete = () => {\n        if (id) {\n            deleteMutation.mutate();\n        }\n    };\n\n    useEffect(() => {\n        if (signatureQuery?.data) {\n            setTitle(signatureQuery?.data?.name);\n            setText(signatureQuery?.data?.text);\n            setIsDefault((profileData.email_signature === signatureQuery?.data?.id) || false);\n        }\n    }, [signatureQuery?.data, profileData.email_signature]);\n\n    return (\n        <div className='settings-wrap'>\n            <Helmet>\n                <title>MeMate - Email Signature Template</title>\n            </Helmet>\n            <div className=\"settings-wrapper\">\n                <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n                <div className=\"settings-content setModalelBoots\">\n                    <div className='headSticky' style={{ position: 'relative' }}>\n                        <h1>Templates</h1>\n                        <div className='contentMenuTab'>\n                            <ul>\n                                <li><Link to=\"/settings/templates/email-templates\">Email Templates</Link></li>\n                                <li className='menuActive'><Link to=\"/settings/templates/email-signatures\">Email Signatures</Link></li>\n                                <li><Link to=\"/settings/templates/proposal-templates\">Proposal Templates</Link></li>\n                                {!has_work_subscription ? (\n                                    <OverlayTrigger\n                                        key=\"top\"\n                                        placement=\"top\"\n                                        overlay={\n                                            <Tooltip className='TooltipOverlay width-300' id=\"tooltip-job-templates\">\n                                                Work environment is not available for this subscription type\n                                            </Tooltip>\n                                        }\n                                    >\n                                        <li style={{ opacity: '.5', cursor: 'not-allowed' }}><Link to=\"#\">Job Templates</Link></li>\n                                    </OverlayTrigger>\n                                ) : (\n                                    <li><Link to=\"/settings/templates/job-templates\">Job Templates</Link></li>\n                                )}\n                                {!has_twilio ? (\n                                    <OverlayTrigger\n                                        key=\"top\"\n                                        placement=\"top\"\n                                        overlay={\n                                            <Tooltip className='TooltipOverlay width-300' id=\"tooltip-job-templates\">\n                                                Your Twilio account has not been set up yet.\n                                            </Tooltip>\n                                        }\n                                    >\n                                        <li style={{ opacity: '.5', cursor: 'not-allowed' }}><Link to=\"#\">SMS Templates</Link></li>\n                                    </OverlayTrigger>\n                                ) : (\n                                    <li><Link to=\"/settings/templates/sms-templates\">SMS Templates</Link></li>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n\n                    {/* Email Signature Preview Modal */}\n                    <Modal show={showPreview} onHide={() => setShowPreview(false)} size=\"lg\" centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title className=\"font-16 mb-0 p-2\">{title || \"Email Signature Preview\"}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"d-flex justify-content-center mb-3\">\n                                <div className=\"d-flex gap-2\">\n                                    <Button\n                                        onClick={() => setPreviewDevice('desktop')}\n                                        className={previewDevice === 'desktop' ? 'info-button' : 'outline-button'}\n                                    >\n                                        <i className=\"bi bi-laptop\"></i> Desktop\n                                    </Button>\n                                    <Button\n                                        onClick={() => setPreviewDevice('tablet')}\n                                        className={previewDevice === 'tablet' ? 'info-button' : 'outline-button'}\n                                    >\n                                        <i className=\"bi bi-tablet\"></i> Tablet\n                                    </Button>\n                                    <Button\n                                        onClick={() => setPreviewDevice('mobile')}\n                                        className={previewDevice === 'mobile' ? 'info-button' : 'outline-button'}\n                                    >\n                                        <i className=\"bi bi-phone\"></i> Mobile\n                                    </Button>\n                                </div>\n                            </div>\n                            <div\n                                className={style.emailPreviewContainer}\n                                style={{\n                                    maxWidth: previewDevice === 'desktop' ? '100%' : previewDevice === 'tablet' ? '768px' : '375px',\n                                    margin: '0 auto'\n                                }}\n                            >\n                                <div className={style.emailPreviewHeader}>\n                                    <div className={style.emailPreviewHeaderItem}>\n                                        <strong>From:</strong> Your Name &lt;your.email@example.com&gt;\n                                    </div>\n                                    <div className={style.emailPreviewHeaderItem}>\n                                        <strong>To:</strong> Recipient &lt;recipient@example.com&gt;\n                                    </div>\n                                    <div className={style.emailPreviewHeaderItem}>\n                                        <strong>Subject:</strong> Email with Signature\n                                    </div>\n                                </div>\n                                <div className={style.emailPreviewBody}>\n                                    <p>Hello,</p>\n                                    <p>This is a sample email message. Your actual email content would appear here.</p>\n                                    <p>Best regards,</p>\n                                    <div className={style.emailSignature}>\n                                        {\n                                            text ? <div key={previewKey} className={style.emailSignatureContent} dangerouslySetInnerHTML={{ __html: preserveEmailSignatureHtml(text) }} /> :\n                                                <div key={previewKey} className={style.emailSignatureContent} dangerouslySetInnerHTML={{ __html: generateSignatureHTML() }} />\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button className=\"outline-button\" variant=\"secondary\" onClick={() => setShowPreview(false)}>\n                                Close\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <div className={`content_wrap_main mt-0`} style={{ background: '#F9FAFB', paddingBottom: `${trialHeight}px` }}>\n                        <div className='content_wrapper d-block px-3' style={{ paddingTop: '24px', paddingBottom: '100px' }}>\n                            <Link to='/settings/templates/email-signatures/' className={clsx(style.transparent, 'text-button border px-0')} style={{ width: \"fit-content\", marginBottom: '16px' }}>\n                                <ChevronLeft color=\"#475467\" size={20} /> <span style={{ color: '#475467' }}>Go Back</span>\n                            </Link>\n\n                            <div className='d-flex align-items-center w-100'>\n                                {\n                                    isEdit ? (\n                                        <>\n                                            <InputText onBlur={() => setIsEdit(false)} className={clsx(style.inputBox, style.templateName, style.transparent, 'me-2 p-0')} value={title} onChange={(e) => {\n                                                setTitle(e.target.value);\n                                                setErrors((others) => ({ ...others, title: false }));\n                                            }} autoFocus\n                                                placeholder='[ Template ]'\n                                            />\n                                        </>\n                                    ) : <span className={clsx(style.templateName, 'me-2')}>{title || \"[ Template Name ]\"}</span>\n                                }\n                                <div style={{ width: '30px' }}>\n                                    {signatureQuery?.isFetching ?\n                                        <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '2px' }} />\n                                        : <PencilSquare color='#106B99' onClick={() => setIsEdit(true)} size={16} style={{ cursor: 'pointer' }} />\n                                    }\n                                </div>\n                            </div>\n                            {errors?.title && (\n                                <p className=\"error-message mb-0\">{\"Title is required\"}</p>\n                            )}\n\n                            <div className={style.divider}></div>\n                            {!id ? (\n                                <Row className=\"mt-4\">\n                                    {/* Left Column - Form */}\n                                    <Col md={7}>\n                                        <div className={premiumStyle.formSection}>\n                                            <h3>Select your template</h3>\n                                            <div className={premiumStyle.templateSelector}>\n                                                <div className={premiumStyle.templateOptions}>\n                                                    {premiumTemplates.map(template => (\n                                                        <div\n                                                            key={template.id}\n                                                            className={clsx(\n                                                                premiumStyle.templateOption,\n                                                                { [premiumStyle.selected]: selectedTemplate === template.id }\n                                                            )}\n                                                            onClick={() => setSelectedTemplate(template.id)}\n                                                        >\n                                                            <div\n                                                                className={premiumStyle.thumbnailContainer}\n                                                                dangerouslySetInnerHTML={{ __html: template.htmlThumbnail }}\n                                                            ></div>\n                                                            <div className={premiumStyle.templateName}>{template.title}</div>\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            </div>\n\n                                            <h3>Personal Information</h3>\n                                            <Form>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Full Name <span className=\"text-danger\">*</span></Form.Label>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={fullName}\n                                                                onChange={(e) => {\n                                                                    setFullName(e.target.value);\n                                                                    setErrors(prev => ({ ...prev, fullName: false }));\n                                                                }}\n                                                                isInvalid={errors.fullName}\n                                                                placeholder=\"John Doe\"\n                                                                className={premiumStyle.inputBox}\n                                                            />\n                                                            {errors.fullName && <Form.Text className=\"text-danger\">Full name is required</Form.Text>}\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Job Title</Form.Label>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={jobTitle}\n                                                                onChange={(e) => setJobTitle(e.target.value)}\n                                                                placeholder=\"Marketing Manager\"\n                                                                className={premiumStyle.inputBox}\n                                                            />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Email <span className=\"text-danger\">*</span></Form.Label>\n                                                            <Form.Control\n                                                                type=\"email\"\n                                                                value={email}\n                                                                onChange={(e) => {\n                                                                    setEmail(e.target.value);\n                                                                    setErrors(prev => ({ ...prev, email: false }));\n                                                                }}\n                                                                isInvalid={errors.email}\n                                                                placeholder=\"john.doe@example.com\"\n                                                                className={premiumStyle.inputBox}\n                                                            />\n                                                            {errors.email && <Form.Text className=\"text-danger\">Email is required</Form.Text>}\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Phone</Form.Label>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={phone}\n                                                                onChange={(e) => setPhone(e.target.value)}\n                                                                placeholder=\"+1 (555) 123-4567\"\n                                                                className={premiumStyle.inputBox}\n                                                            />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Company</Form.Label>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={company}\n                                                                onChange={(e) => setCompany(e.target.value)}\n                                                                placeholder=\"Acme Inc.\"\n                                                                className={premiumStyle.inputBox}\n                                                            />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Website</Form.Label>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                value={website}\n                                                                onChange={(e) => setWebsite(e.target.value)}\n                                                                placeholder=\"https://example.com\"\n                                                                className={premiumStyle.inputBox}\n                                                            />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n\n                                                <Form.Group className=\"mb-3\">\n                                                    <Form.Label className={premiumStyle.label}>Address</Form.Label>\n                                                    <Form.Control\n                                                        type=\"text\"\n                                                        value={address}\n                                                        className={premiumStyle.inputBox}\n                                                        onChange={(e) => setAddress(e.target.value)}\n                                                        placeholder=\"123 Main St, City, State, 12345\"\n                                                    />\n                                                </Form.Group>\n                                            </Form>\n\n                                            <h3>Images</h3>\n                                            <div className={premiumStyle.imageUploadSection}>\n                                                <div className={premiumStyle.imageUploadContainer}>\n                                                    <div>\n                                                        <Form.Label>Profile Picture</Form.Label>\n                                                        {profileImage ? (\n                                                            <div className={clsx(premiumStyle.imageUploadBox, premiumStyle.hasImage)}>\n                                                                <img src={profileImage} alt=\"Profile\" />\n                                                                <button\n                                                                    className={premiumStyle.removeImageButton}\n                                                                    onClick={() => removeImage('profile')}\n                                                                    type=\"button\"\n                                                                >\n                                                                    <XCircle size={14} />\n                                                                </button>\n                                                            </div>\n                                                        ) : (\n                                                            <label className={premiumStyle.imageUploadBox}>\n                                                                <Upload className={premiumStyle.uploadIcon} size={24} />\n                                                                <p>Upload Image</p>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    accept=\"image/*\"\n                                                                    style={{ display: 'none' }}\n                                                                    onChange={(e) => handleImageUpload(e, 'profile')}\n                                                                />\n                                                            </label>\n                                                        )}\n                                                    </div>\n\n                                                    <div>\n                                                        <Form.Label>Company Logo</Form.Label>\n                                                        {companyLogo ? (\n                                                            <div className={clsx(premiumStyle.imageUploadBox, premiumStyle.hasImage)}>\n                                                                <img\n                                                                    src={companyLogo}\n                                                                    alt=\"Company Logo\"\n                                                                    style={{\n                                                                        height: getCompanyLogoSize(companyLogoSize).height,\n                                                                        width: getCompanyLogoSize(companyLogoSize).width\n                                                                    }}\n                                                                />\n                                                                <button\n                                                                    className={premiumStyle.removeImageButton}\n                                                                    onClick={() => removeImage('logo')}\n                                                                    type=\"button\"\n                                                                >\n                                                                    <XCircle size={14} />\n                                                                </button>\n                                                            </div>\n                                                        ) : (\n                                                            <label className={premiumStyle.imageUploadBox}>\n                                                                <Upload className={premiumStyle.uploadIcon} size={24} />\n                                                                <p>Upload Logo</p>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    accept=\"image/*\"\n                                                                    style={{ display: 'none' }}\n                                                                    onChange={(e) => handleImageUpload(e, 'logo')}\n                                                                />\n                                                            </label>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <h3>Social Media</h3>\n                                            <div className={premiumStyle.socialMediaSection}>\n                                                <Form.Label>Select platforms to include:</Form.Label>\n                                                <div className={premiumStyle.socialMediaList}>\n                                                    {socialPlatforms.map(platform => {\n                                                        const isActive = activeSocials.includes(platform.id);\n                                                        return (\n                                                            <div\n                                                                key={platform.id}\n                                                                className={clsx(\n                                                                    premiumStyle.socialMediaItem,\n                                                                    { [premiumStyle.active]: isActive }\n                                                                )}\n                                                                onClick={() => toggleSocialPlatform(platform.id)}\n                                                            >\n                                                                <platform.icon className={premiumStyle.socialIcon} size={16} />\n                                                                <span className=\"font-14\">{platform.name}</span>\n                                                            </div>\n                                                        );\n                                                    })}\n                                                </div>\n\n                                                {activeSocials.length > 0 && (\n                                                    <div className=\"mt-3\">\n                                                        {activeSocials.map(platformId => {\n                                                            const platform = socialPlatforms.find(p => p.id === platformId);\n                                                            return (\n                                                                <Form.Group key={platformId} className=\"mb-2\">\n                                                                    <Form.Label className={premiumStyle.label}>{platform.name} URL</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"text\"\n                                                                        value={socialLinks[platformId] || ''}\n                                                                        onChange={(e) => handleSocialLinkChange(platformId, e.target.value)}\n                                                                        placeholder={`https://${platformId}.com/username`}\n                                                                        className={premiumStyle.inputBox}\n                                                                    />\n                                                                </Form.Group>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                )}\n                                            </div>\n\n                                            <h3>Advanced Options</h3>\n                                            <div className={premiumStyle.advancedOptionsSection}>\n                                                <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                                                    <Form.Label className=\"mb-0\">Customize your signature appearance</Form.Label>\n                                                    <Button\n                                                        onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}\n                                                        className=\"py-1 outline-button\"\n                                                        style={{ width: '80px' }}\n                                                    >\n                                                        {showAdvancedOptions ? 'Hide' : 'Show'}\n                                                    </Button>\n                                                </div>\n\n                                                {showAdvancedOptions && (\n                                                    <div className=\"p-3 border rounded\">\n                                                        <Form.Group className=\"mb-3\">\n                                                            <Form.Label className={premiumStyle.label}>Font Family</Form.Label>\n                                                            <Dropdown\n                                                                value={fontFamily}\n                                                                onChange={(e) => setFontFamily(e.value)}\n                                                                options={[\n                                                                    { label: 'Arial', value: 'Arial, sans-serif' },\n                                                                    { label: 'Helvetica', value: '\\'Helvetica Neue\\', Helvetica, sans-serif' },\n                                                                    { label: 'Times New Roman', value: '\\'Times New Roman\\', Times, serif' },\n                                                                    { label: 'Georgia', value: 'Georgia, serif' },\n                                                                    { label: 'Verdana', value: 'Verdana, sans-serif' },\n                                                                    { label: 'Tahoma', value: 'Tahoma, sans-serif' },\n                                                                    { label: 'Trebuchet MS', value: '\\'Trebuchet MS\\', sans-serif' },\n                                                                    { label: 'Courier New', value: '\\'Courier New\\', Courier, monospace' }\n                                                                ]}\n                                                                style={{ width: '520px', outline: 'none', boxShadow: 'none' }}\n                                                                placeholder=\"Select a font family\"\n                                                            />\n                                                        </Form.Group>\n\n                                                        <Row>\n                                                            <Col md={6}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Primary Color</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"color\"\n                                                                        value={primaryColor}\n                                                                        onChange={(e) => setPrimaryColor(e.target.value)}\n                                                                        className={premiumStyle.inputBox}\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={6}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Text Color</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"color\"\n                                                                        value={textColor}\n                                                                        onChange={(e) => setTextColor(e.target.value)}\n                                                                        className={premiumStyle.inputBox}\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n\n                                                        <Row>\n                                                            <Col md={6}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Secondary Text Color</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"color\"\n                                                                        value={secondaryTextColor}\n                                                                        className={premiumStyle.inputBox}\n                                                                        onChange={(e) => setSecondaryTextColor(e.target.value)}\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={6}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Link Color</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"color\"\n                                                                        value={linkColor}\n                                                                        className={premiumStyle.inputBox}\n                                                                        onChange={(e) => setLinkColor(e.target.value)}\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n\n                                                        <Row>\n                                                            <Col md={6}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Background Color</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"color\"\n                                                                        className={premiumStyle.inputBox}\n                                                                        value={backgroundColor === 'transparent' ? '#ffffff' : backgroundColor}\n                                                                        onChange={(e) => setBackgroundColor(e.target.value)}\n                                                                    />\n                                                                    <div className=\"d-flex gap-2 mt-3\">\n                                                                        <Checkbox\n                                                                            checked={backgroundColor === 'transparent'}\n                                                                            onChange={(e) => setBackgroundColor(e.checked ? 'transparent' : '#ffffff')}\n                                                                        />\n                                                                        <label className=\"form-label\">Transparent</label>\n                                                                    </div>\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={6}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Font Size</Form.Label>\n                                                                    <Dropdown\n                                                                        value={fontSize}\n                                                                        options={[\n                                                                            { label: 'Small', value: 'small' },\n                                                                            { label: 'Normal', value: 'normal' },\n                                                                            { label: 'Large', value: 'large' }\n                                                                        ]}\n                                                                        onChange={(e) => setFontSize(e.value)}\n                                                                        style={{ width: '100%', outline: 'none', boxShadow: 'none' }}\n                                                                        placeholder=\"Select font size\"\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n\n                                                        <Row>\n                                                            <Col md={4}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Divider Style</Form.Label>\n                                                                    <Dropdown\n                                                                        value={dividerStyle}\n                                                                        options={[\n                                                                            { label: 'Solid', value: 'solid' },\n                                                                            { label: 'Dashed', value: 'dashed' },\n                                                                            { label: 'Dotted', value: 'dotted' }\n                                                                        ]}\n                                                                        onChange={(e) => setDividerStyle(e.value)}\n                                                                        style={{ width: '100%', outline: 'none', boxShadow: 'none' }}\n                                                                        placeholder=\"Select divider style\"\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={4}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Divider Width</Form.Label>\n                                                                    <Dropdown\n                                                                        value={dividerWidth}\n                                                                        options={[\n                                                                            { label: 'Thin', value: '1px' },\n                                                                            { label: 'Medium', value: '2px' },\n                                                                            { label: 'Thick', value: '3px' }\n                                                                        ]}\n                                                                        onChange={(e) => setDividerWidth(e.value)}\n                                                                        style={{ width: '100%', outline: 'none', boxShadow: 'none' }}\n                                                                        placeholder=\"Select divider width\"\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={4}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Divider Color</Form.Label>\n                                                                    <Form.Control\n                                                                        type=\"color\"\n                                                                        value={dividerColor}\n                                                                        className={premiumStyle.inputBox}\n                                                                        onChange={(e) => setDividerColor(e.target.value)}\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n\n                                                        <Row>\n                                                            <Col md={4}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Profile Image Style</Form.Label>\n                                                                    <Dropdown\n                                                                        value={profileImageStyle}\n                                                                        options={[\n                                                                            { label: 'Circle', value: 'circle' },\n                                                                            { label: 'Square', value: 'square' },\n                                                                            { label: 'Rounded', value: 'rounded' }\n                                                                        ]}\n                                                                        style={{ width: '100%', outline: 'none', boxShadow: 'none' }}\n                                                                        onChange={(e) => {\n                                                                            setProfileImageStyle(e.value);\n                                                                            setPreviewKey(prev => prev + 1); // Force preview re-render\n                                                                        }}\n                                                                        placeholder=\"Select image style\"\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={4}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Profile Image Size</Form.Label>\n                                                                    <Dropdown\n                                                                        value={profileImageSize}\n                                                                        options={[\n                                                                            { label: 'Small', value: 'small' },\n                                                                            { label: 'Medium', value: 'medium' },\n                                                                            { label: 'Large', value: 'large' }\n                                                                        ]}\n                                                                        onChange={(e) => {\n                                                                            setProfileImageSize(e.value);\n                                                                            setPreviewKey(prev => prev + 1); // Force preview re-render\n                                                                        }}\n                                                                        style={{ width: '100%', outline: 'none', boxShadow: 'none' }}\n                                                                        placeholder=\"Select image size\"\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                            <Col md={4}>\n                                                                <Form.Group className=\"mb-3\">\n                                                                    <Form.Label className={premiumStyle.label}>Company Logo Size</Form.Label>\n                                                                    <Dropdown\n                                                                        value={companyLogoSize}\n                                                                        options={[\n                                                                            { label: 'Small', value: 'small' },\n                                                                            { label: 'Medium', value: 'medium' },\n                                                                            { label: 'Large', value: 'large' }\n                                                                        ]}\n                                                                        onChange={(e) => {\n                                                                            setCompanyLogoSize(e.value);\n                                                                            setPreviewKey(prev => prev + 1); // Force preview re-render\n                                                                        }}\n                                                                        style={{ width: '100%', outline: 'none', boxShadow: 'none' }}\n                                                                        placeholder=\"Select logo size\"\n                                                                    />\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </Col>\n\n                                    {/* Right Column - Preview */}\n                                    <Col md={5}>\n                                        <div className={premiumStyle.previewSection}>\n                                            <div className={premiumStyle.previewCard}>\n                                                <div className={premiumStyle.previewHeader}>\n                                                    <h3>Live Preview</h3>\n                                                </div>\n                                                <div className={premiumStyle.previewBody}>\n                                                    <div className={premiumStyle.emailPreview}>\n                                                        <div className={premiumStyle.emailBody}>\n                                                            <div key={previewKey} dangerouslySetInnerHTML={{ __html: text ? preserveEmailSignatureHtml(text) : generateSignatureHTML() }} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className={premiumStyle.compatibilityInfo}>\n                                                    <h4>Compatible with:</h4>\n                                                    <div className={premiumStyle.compatibilityList}>\n                                                        <div className={premiumStyle.compatibilityItem}>\n                                                            <CheckCircle className={premiumStyle.compatibilityIcon} size={12} /> Gmail\n                                                        </div>\n                                                        <div className={premiumStyle.compatibilityItem}>\n                                                            <CheckCircle className={premiumStyle.compatibilityIcon} size={12} /> Outlook\n                                                        </div>\n                                                        <div className={premiumStyle.compatibilityItem}>\n                                                            <CheckCircle className={premiumStyle.compatibilityIcon} size={12} /> Apple Mail\n                                                        </div>\n                                                        <div className={premiumStyle.compatibilityItem}>\n                                                            <CheckCircle className={premiumStyle.compatibilityIcon} size={12} /> Yahoo Mail\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            ) :\n                                <Row>\n                                    <Col sm={12}>\n                                        <div className={premiumStyle.formSection} style={{ position: 'relative' }}>\n                                            <InputIcon style={{ position: 'absolute', right: '15px', top: '40px', zIndex: 1 }}>\n                                                {signatureQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <SignatureHtmlEditor\n                                                value={text}\n                                                placeholder='Enter your signature'\n                                                onChange={(newValue) => {\n                                                    setText(newValue);\n                                                }}\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            }\n\n                        </div>\n                    </div>\n                    <div className={style.bottom}>\n                        <div className=\"d-flex align-items-center gap-4\">\n                            {\n                                id ?\n                                    <>\n                                        <Button onClick={handleDelete} className='danger-outline-button ms-2'>{deleteMutation.isPending ? \"Loading...\" : \"Delete Template\"}</Button>\n                                        <div className=\"d-flex align-items-center gap-2\">\n                                            <Checkbox\n                                                inputId='defaultSignature'\n                                                checked={isDefault}\n                                                disabled={setDefaultTemplateMutation.isPending || isDefault}\n                                                onChange={(e) => {\n                                                    setIsDefault(e.checked);\n                                                    setDefaultTemplateMutation.mutate();\n                                                }}\n                                            />\n                                            <label htmlFor=\"defaultSignature\" className={clsx(premiumStyle.label, 'mb-0 cursor-pointer')} style={{ opacity: isDefault ? 0.5 : 1 }}>Set as default signature</label>\n                                        </div>\n                                    </>\n                                    : <span></span>\n                            }\n\n                        </div>\n                        <div className='d-flex gap-2'>\n                            <Link to={'/settings/templates/email-signatures/'}>\n                                <Button className='outline-button'>Cancel</Button>\n                            </Link>\n                            <Button onClick={() => setShowPreview(true)} className='outline-button'>\n                                <Eye size={16} className=\"me-1\" /> Preview\n                            </Button>\n                            <Button onClick={handleSubmit} className='solid-button'>{mutation.isPending ? \"Loading...\" : \"Save Template\"}</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateEmailSignatureTemplate;","// extracted by mini-css-extract-plugin\nexport default {\"boxlist\":\"job-template_boxlist__LV1Uo\",\"ricons\":\"job-template_ricons__SxkEo\",\"pencilSquare\":\"job-template_pencilSquare__3onds\",\"modelStyleBoxstatus\":\"job-template_modelStyleBoxstatus__xgQtz\",\"templateBoxWrap\":\"job-template_templateBoxWrap__Rvp8w\",\"breadcrumbWrap\":\"job-template_breadcrumbWrap__34tLk\",\"gobackBut\":\"job-template_gobackBut__aF4UD\",\"activeLinkbread\":\"job-template_activeLinkbread__LJbKP\",\"readcrumbChevron\":\"job-template_readcrumbChevron__6kkBb\",\"MenuitemText\":\"job-template_MenuitemText__SFfNt\",\"templateHeadBorder\":\"job-template_templateHeadBorder__Hb4VS\",\"proposalSetions\":\"job-template_proposalSetions__ihODV\",\"addNewSections\":\"job-template_addNewSections__VZ3U9\",\"breadCrumbTemp\":\"job-template_breadCrumbTemp__-s3fY\",\"activeDepartment\":\"job-template_activeDepartment__ArVI7\",\"formTemplateGroup\":\"job-template_formTemplateGroup__hn+qi\",\"lable\":\"job-template_lable__VQAVk\",\"inputText\":\"job-template_inputText__oE2M6\",\"error\":\"job-template_error__Bxe3i\",\"lable1\":\"job-template_lable1__5xgKz\",\"paymentType\":\"job-template_paymentType__Ni8nC\",\"typeBorder\":\"job-template_typeBorder__00Jui\",\"paymentmain\":\"job-template_paymentmain__L6C-R\",\"customRadio\":\"job-template_customRadio__PIr-2\",\"fix\":\"job-template_fix__Un6AU\",\"hours\":\"job-template_hours__n0uh3\",\"timetracker\":\"job-template_timetracker__9uStW\",\"shift\":\"job-template_shift__2oglG\",\"timeFrame\":\"job-template_timeFrame__yrxJt\",\"radioLabel\":\"job-template_radioLabel__77Gwi\",\"RadioButton\":\"job-template_RadioButton__krLd8\",\"listbox\":\"job-template_listbox__wtu-f\",\"editPencil\":\"job-template_editPencil__lQyJZ\",\"heading\":\"job-template_heading__1uTSR\",\"notCustomBox\":\"job-template_notCustomBox__yBonA\",\"templateName\":\"job-template_templateName__OiA7+\",\"inputBox\":\"job-template_inputBox__gNJXT\",\"label\":\"job-template_label__KkDV+\",\"divider\":\"job-template_divider__UrL7v\",\"bottom\":\"job-template_bottom__6Qnoh\",\"transparent\":\"job-template_transparent__bGBsy\",\"createProposal\":\"job-template_createProposal__mgAo-\",\"section\":\"job-template_section__w7-H9\",\"sectionName\":\"job-template_sectionName__dXatP\",\"blueOutlineButton\":\"job-template_blueOutlineButton__2yMrD\",\"deleteButton\":\"job-template_deleteButton__yhJCK\",\"emailPreviewContainer\":\"job-template_emailPreviewContainer__wzv1I\",\"emailPreviewHeader\":\"job-template_emailPreviewHeader__RKYuY\",\"emailPreviewHeaderItem\":\"job-template_emailPreviewHeaderItem__kkUdn\",\"emailPreviewBody\":\"job-template_emailPreviewBody__OPvRw\",\"emailSignature\":\"job-template_emailSignature__u3oFH\",\"emailSignatureContent\":\"job-template_emailSignatureContent__6L01A\"};","import React from \"react\";\nimport BoxArrowRight from \"../../../assets/images/icon/box-arrow-right.png\";\nconst LogoutButton = () => {\n  const onClick = () => {\n    window.localStorage.clear();\n    window.sessionStorage.clear();\n    window.location.replace(\"/login\");\n  };\n\n  return (\n    <button className=\"logoutStyle logoutBottom\" onClick={onClick}>\n      Logout <img src={BoxArrowRight} alt=\"Arrow Right\" />\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import React, { useEffect, useRef } from \"react\";\nimport {\n  InfoSquare,\n  Person,\n  CreditCard2Back,\n  People,\n  Map,\n  Bell,\n  PlusSlashMinus,\n  WindowDock,\n  Bookmarks,\n  CardChecklist,\n  BlockquoteRight,\n  WindowStack,\n  FiletypeDoc,\n  ListUl,\n  Headset,\n} from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useTrialHeight } from \"../../../app/providers/trial-height-provider\";\nimport Support from \"../../../shared/ui/support/support\";\nimport LogoutButton from \"../Login/logout-button\";\n\nconst Sidebar = ({ activeTab, setActiveTab }) => {\n  const { trialHeight } = useTrialHeight();\n  const profileData = JSON.parse(\n    window.localStorage.getItem(\"profileData\") || \"{}\"\n  );\n  const [visible, setVisible] = React.useState(false);\n\n  // Ref for the active list item\n  const activeRef = useRef(null);\n\n  const openSupportModal = () => {\n    setVisible(true);\n  };\n\n  // Scroll into view when the active tab changes\n  useEffect(() => {\n    if (activeRef.current) {\n      const container = activeRef.current.closest(\".topList\"); // Get the sidebar container\n      const containerRect = container.getBoundingClientRect();\n      const activeItemRect = activeRef.current.getBoundingClientRect();\n\n      // Calculate the scroll position to bring the active item into view\n      const offset = activeItemRect.top - containerRect.top - container.clientHeight / 2 + activeRef.current.clientHeight / 2;\n\n      container.scrollBy({\n        top: offset\n      });\n    }\n  }, [activeTab]);\n\n  return (\n    <>\n      <div className=\"settings-menu\">\n        <div className=\"menuList\">\n          <div\n            className=\"topList\"\n            style={{\n              height: `calc(100vh - 320px - ${trialHeight}px)`,\n              overflowY: \"auto\",\n              paddingBottom: '.5rem'\n            }}\n          >\n            <h2>General</h2>\n            <ul>\n              <li>\n                <Link\n                  to=\"/settings/generalinformation\"\n                  className={`sidebar-tab ${activeTab === \"generalinformation\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"generalinformation\")}\n                  ref={activeTab === \"generalinformation\" ? activeRef : null}\n                >\n                  <InfoSquare color=\"#667085\" size={18} />\n                  Company Information\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/generalinformation/profile\"\n                  className={`sidebar-tab ${activeTab === \"profile\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"profile\")}\n                  ref={activeTab === \"profile\" ? activeRef : null}\n                >\n                  <Person color=\"#667085\" size={18} />\n                  My Profile\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/generalinformation/subscription\"\n                  className={`sidebar-tab ${activeTab === \"subscription\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"subscription\")}\n                  ref={activeTab === \"subscription\" ? activeRef : null}\n                >\n                  <CreditCard2Back color=\"#667085\" size={18} />\n                  Subscription\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/users/desktop\"\n                  className={`sidebar-tab ${activeTab === \"desktop\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"desktop\")}\n                  ref={activeTab === \"desktop\" ? activeRef : null}\n                >\n                  <People color=\"#667085\" size={18} />\n                  Users\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/location\"\n                  className={`sidebar-tab ${activeTab === \"locations\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"locations\")}\n                  ref={activeTab === \"locations\" ? activeRef : null}\n                >\n                  <Map color=\"#667085\" size={18} />\n                  Locations\n                </Link>\n              </li>\n            </ul>\n            <h2>Settings</h2>\n            <ul>\n              <li>\n                <Link\n                  to=\"/settings/calculators/departments\"\n                  className={`sidebar-tab ${activeTab === \"departments\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"departments\")}\n                  ref={activeTab === \"departments\" ? activeRef : null}\n                >\n                  <PlusSlashMinus color=\"#667085\" size={18} />\n                  Calculators\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/templates/email-templates\"\n                  className={`sidebar-tab ${activeTab === \"job-templates\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"job-templates\")}\n                  ref={activeTab === \"job-templates\" ? activeRef : null}\n                >\n                  <WindowDock color=\"#667085\" size={18} />\n                  Templates\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/companyethos/company-ethos\"\n                  className={`sidebar-tab ${activeTab === \"company-ethos\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"company-ethos\")}\n                  ref={activeTab === \"company-ethos\" ? activeRef : null}\n                >\n                  <Bookmarks color=\"#667085\" size={18} />\n                  Company Ethos\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/integrations\"\n                  className={`sidebar-tab ${activeTab === \"integrations\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"integrations\")}\n                  ref={activeTab === \"integrations\" ? activeRef : null}\n                >\n                  <CardChecklist color=\"#667085\" size={18} />\n                  Integrations\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/quotesjobs/recurring-quotes\"\n                  className={`sidebar-tab ${activeTab === \"recurring-quotes\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"recurring-quotes\")}\n                  ref={activeTab === \"recurring-quotes\" ? activeRef : null}\n                >\n                  <BlockquoteRight color=\"#667085\" size={18} />\n                  Quotes & Jobs\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/projectstatus/project-status\"\n                  className={`sidebar-tab ${activeTab === \"organisation-setting\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"organisation-setting\")}\n                  ref={activeTab === \"organisation-setting\" ? activeRef : null}\n                >\n                  <WindowStack color=\"#667085\" size={18} />\n                  Organisation Setting\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/termsandconditions/terms-and-conditions-invoice\"\n                  className={`sidebar-tab ${activeTab === \"terms-and-conditions\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"terms-and-conditions\")}\n                  ref={activeTab === \"terms-and-conditions\" ? activeRef : null}\n                >\n                  <FiletypeDoc color=\"#667085\" size={18} />\n                  Terms and Conditions\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/customerssettings/industries\"\n                  className={`sidebar-tab ${activeTab === \"industries\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"industries\")}\n                  ref={activeTab === \"industries\" ? activeRef : null}\n                >\n                  <Person color=\"#667085\" size={18} />\n                  Customers Settings\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/accounting/department-turnover-plan\"\n                  className={`sidebar-tab ${activeTab === \"expenses\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"expenses\")}\n                  ref={activeTab === \"expenses\" ? activeRef : null}\n                >\n                  <ListUl color=\"#667085\" size={18} />\n                  Accounting\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/settings/notifications/dashboard-notifications\"\n                  className={`sidebar-tab ${activeTab === \"dashboard-notifications\" ? \"activelist\" : \"\"\n                    }`}\n                  onClick={() => setActiveTab(\"dashboard-notifications\")}\n                  ref={activeTab === \"dashboard-notifications\" ? activeRef : null}\n                >\n                  <Bell color=\"#667085\" size={18} />\n                  Notifications\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div\n            className=\"logoutBottomS pt-2\"\n            style={{ borderTop: \".5px solid #dedede\", height: \"200px\" }}\n          >\n            <div className=\"userNameList ps-2\">\n              <button className=\"btn d-flex align-items-center gap-3 mb-2 px-0\" onClick={openSupportModal}>\n                <Headset size={16} color=\"#667085\" />\n                <p className=\"mb-0\">Support</p>\n              </button>\n            </div>\n            <div className=\"userNameList ps-2\">\n              {profileData && (\n                <div className=\"d-flex align-items-center gap-3 mb-3\">\n                  <Person size={16} color=\"#667085\" />\n                  <p className=\"mb-0\">\n                    <strong>{profileData.full_name}</strong>\n                    <span>{profileData.email}</span>\n                  </p>\n                </div>\n              )}\n            </div>\n            <LogoutButton />\n          </div>\n        </div>\n      </div>\n      <Support visible={visible} setVisible={setVisible} />\n    </>\n  );\n};\n\nexport default Sidebar;","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","window","clear","sessionStorage","location","replace","Error","contentType","get","includes","json","message","text","error","console","preserveEmailSignatureHtml","html","cleanHtml","cleanPastedHtml","looksLikeSignature","wrapAsSignature","tempDiv","document","createElement","innerHTML","signatureDiv","querySelector","querySelectorAll","forEach","table","style","borderCollapse","hasAttribute","setAttribute","img","width","height","src","startsWith","link","textDecoration","cleaned","filter","pattern","test","_ref","value","onChange","placeholder","textareaRef","useRef","pasteAreaRef","internalValue","setInternalValue","useState","showPasteArea","setShowPasteArea","useEffect","_jsx","className","styles","children","_jsxs","Code","size","Button","variant","onClick","togglePasteArea","setTimeout","current","focus","Clipboard","ref","contentEditable","onPaste","e","clipboardData","pastedData","getData","toast","success","tabIndex","Form","Control","as","newValue","target","rows","padding","marginRight","dangerouslySetInnerHTML","__html","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","socialIcons","linkedin","twitter","facebook","instagram","github","youtube","website","premiumTemplates","id","title","type","htmlThumbnail","description","socialPlatforms","name","icon","Linkedin","color","Twitter","Instagram","Facebook","Github","Youtube","Globe","CreateEmailSignatureTemplate","trialHeight","useTrialHeight","profileData","parse","has_work_subscription","has_twilio","navigate","useNavigate","useParams","searchParams","useSearchParams","templateId","setTitle","setText","errors","setErrors","isEdit","setIsEdit","activeTab","setActiveTab","showPreview","setShowPreview","previewDevice","setPreviewDevice","selectedTemplate","setSelectedTemplate","fullName","setFullName","jobTitle","setJobTitle","company","setCompany","email","setEmail","phone","setPhone","setWebsite","address","setAddress","profileImage","setProfileImage","companyLogo","setCompanyLogo","socialLinks","setSocialLinks","activeSocials","setActiveSocials","fontFamily","setFontFamily","primaryColor","setPrimaryColor","textColor","setTextColor","secondaryTextColor","setSecondaryTextColor","linkColor","setLinkColor","fontSize","setFontSize","backgroundColor","setBackgroundColor","dividerStyle","setDividerStyle","dividerWidth","setDividerWidth","dividerColor","setDividerColor","profileImageStyle","setProfileImageStyle","profileImageSize","setProfileImageSize","companyLogoSize","setCompanyLogoSize","previewKey","setPreviewKey","showAdvancedOptions","setShowAdvancedOptions","isDefault","setIsDefault","handleImageUpload","file","files","reader","FileReader","onload","event","Image","canvas","maxDimension","Math","round","getContext","drawImage","optimizedDataUrl","toDataURL","result","onerror","readAsDataURL","removeImage","signatureQuery","useQuery","queryKey","queryFn","getEmailSignature","enabled","retry","mutation","useMutation","mutationFn","templateData","updateEmailSignature","createEmailSignature","onSuccess","onError","deleteMutation","deleteEmailSignature","setDefaultTemplateMutation","setDefaultEmailSignature","getCompanyLogoSize","getProfileImageSize","generateSignatureHTML","getFontSize","base","heading","getProfileImageStyle","radius","getIconRadius","getBorderStyle","socialIconsHTML","map","platformId","platform","find","p","join","signatureHTML","_signatureQuery$data","_signatureQuery$data2","_signatureQuery$data3","data","email_signature","Helmet","Sidebar","position","Link","to","OverlayTrigger","placement","overlay","Tooltip","opacity","cursor","Modal","show","onHide","centered","Header","closeButton","Title","Body","emailPreviewContainer","maxWidth","margin","emailPreviewHeader","emailPreviewHeaderItem","emailPreviewBody","emailSignature","emailSignatureContent","Footer","background","paddingBottom","paddingTop","clsx","transparent","marginBottom","ChevronLeft","_Fragment","InputText","onBlur","inputBox","templateName","others","autoFocus","isFetching","ProgressSpinner","top","PencilSquare","divider","Row","Col","sm","premiumStyle","formSection","InputIcon","right","zIndex","SignatureHtmlEditor","md","templateSelector","templateOptions","template","templateOption","selected","thumbnailContainer","Group","Label","label","prev","isInvalid","Text","imageUploadSection","imageUploadContainer","imageUploadBox","hasImage","alt","removeImageButton","XCircle","Upload","uploadIcon","accept","display","socialMediaSection","socialMediaList","isActive","socialMediaItem","active","toggleSocialPlatform","socialIcon","handleSocialLinkChange","advancedOptionsSection","Dropdown","outline","boxShadow","Checkbox","checked","previewSection","previewCard","previewHeader","previewBody","emailPreview","emailBody","compatibilityInfo","compatibilityList","compatibilityItem","CheckCircle","compatibilityIcon","bottom","handleDelete","mutate","isPending","inputId","disabled","htmlFor","Eye","preventDefault","newErrors","Object","keys","finalHtml","LogoutButton","visible","setVisible","React","activeRef","container","closest","containerRect","getBoundingClientRect","offset","clientHeight","scrollBy","overflowY","InfoSquare","Person","CreditCard2Back","People","Map","PlusSlashMinus","WindowDock","Bookmarks","CardChecklist","BlockquoteRight","WindowStack","FiletypeDoc","ListUl","Bell","borderTop","openSupportModal","Headset","full_name","Support","API_BASE_URL","process","getJobTemplates","toString","getJobTemplate","createJobTemplate","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates"],"sourceRoot":""}