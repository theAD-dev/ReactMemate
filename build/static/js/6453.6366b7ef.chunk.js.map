{"version":3,"file":"static/js/6453.6366b7ef.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/ui/image-with-fallback/image-avatar.module.scss?81d4","ui/image-with-fallback/image-avatar.jsx","webpack://memateapp/./src/components/Work/Pages/approval/approval.module.scss?cde7","components/Work/Pages/approval/week-navigator.js","APIs/approval-api.js","webpack://memateapp/./src/components/Work/features/approve-job/approve-job.module.scss?5fb3","components/Work/features/approve-job/approve-job.jsx","components/Work/Pages/approval/approval-table.js","components/Work/Pages/approval/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"clientImg\":\"image-avatar_clientImg__-nnRU\"};","import React, { useState } from 'react';\nimport { Building, Person } from 'react-bootstrap-icons';\nimport style from './image-avatar.module.scss';\n\nconst ImageAvatar = ({ has_photo, photo, is_business }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return (\n        <div className={`d-flex justify-content-center align-items-center ${style.clientImg} ${is_business ? \"\" : \"rounded-circle\"}`} style={{ overflow: 'hidden' }}>\n            {has_photo && photo && !imgError ? (\n                <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n            ) : (\n                <Icon color=\"#667085\" />\n            )}\n        </div>\n    );\n};\n\nexport const FallbackImage = ({ has_photo, photo, is_business, size }) => {\n    const [imgError, setImgError] = useState(false);\n    const Icon = is_business ? Building : Person;\n\n    return <>\n        {has_photo && photo && !imgError ? (\n            <img src={photo} alt=\"client avatar\" className=\"w-100\" onError={() => setImgError(true)} />\n        ) : (\n            <Icon color=\"#667085\" size={size}/>\n        )}\n    </>;\n};\n\nexport default ImageAvatar;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"approval_filterBox__ystSi\",\"total\":\"approval_total__t03q9\",\"totalCount\":\"approval_totalCount__hTTBc\",\"shadowRight\":\"approval_shadowRight__X9zTG\",\"payment\":\"approval_payment__YwghB\",\"paymentHours\":\"approval_paymentHours__0t+W3\",\"paymentFix\":\"approval_paymentFix__CXsuw\",\"time\":\"approval_time__EPrle\",\"tracker\":\"approval_tracker__67lYj\",\"clientImg\":\"approval_clientImg__UHBLY\",\"clientName\":\"approval_clientName__lw-Sd\",\"inProgress\":\"approval_inProgress__WFpNd\",\"approved\":\"approval_approved__oWI1u\",\"defaultStatus\":\"approval_defaultStatus__sa3+W\",\"finished\":\"approval_finished__tAhe6\",\"finishedAction\":\"approval_finishedAction__PNOct\",\"assign\":\"approval_assign__EvOLi\",\"assignAction\":\"approval_assignAction__ENiFC\",\"shadowLeft\":\"approval_shadowLeft__Slbva\",\"yearDropdown\":\"approval_yearDropdown__dYRYk\",\"clientPhoto\":\"approval_clientPhoto__T0lPw\",\"workerPhoto\":\"approval_workerPhoto__riwim\",\"button\":\"approval_button__2omTf\"};","import React, { useState, useEffect } from 'react';\nimport { Button, Dropdown } from 'react-bootstrap';\nimport { Calendar3 } from 'react-bootstrap-icons';\nimport clsx from 'clsx';\nimport style from './approval.module.scss';\n\nconst WeekNavigator = ({ onWeekChange }) => {\n  const [currentWeek, setCurrentWeek] = useState(null);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [weekInfo, setWeekInfo] = useState({ start: '', end: '' });\n\n  const currentYearNum = new Date().getFullYear();\n  const years = Array.from({ length: 5 }, (_, i) => currentYearNum - i);\n\n  const getWeekNumber = (date) => {\n    const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n    const pastDaysOfYear = (date - firstDayOfYear) / 86400000;\n    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\n  };\n\n  const getWeekDates = (weekNumber, year) => {\n    const firstDayOfYear = new Date(year, 0, 1);\n    const daysOffset = (weekNumber - 1) * 7 - (firstDayOfYear.getDay() - 1);\n\n    const firstDayOfWeek = new Date(year, 0, 1 + daysOffset);\n    const lastDayOfWeek = new Date(year, 0, 1 + daysOffset + 6);\n\n    return {\n      start: firstDayOfWeek,\n      end: lastDayOfWeek\n    };\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short'\n    });\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const weekNum = getWeekNumber(today);\n    setCurrentWeek(weekNum);\n\n    updateWeekDates(weekNum, currentYear);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    updateWeekDates(currentWeek, currentYear);\n\n    if (onWeekChange) {\n      const { start, end } = getWeekDates(currentWeek, currentYear);\n      onWeekChange({\n        week: currentWeek,\n        year: currentYear,\n        startDate: start,\n        endDate: end\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentWeek, currentYear]);\n\n  const updateWeekDates = (week, year) => {\n    const { start, end } = getWeekDates(week, year);\n    setWeekInfo({\n      start: formatDate(start),\n      end: formatDate(end)\n    });\n  };\n\n  const goToPreviousWeek = () => {\n    if (currentWeek > 1) {\n      setCurrentWeek(currentWeek - 1);\n    } else {\n      setCurrentYear(currentYear - 1);\n      setCurrentWeek(52);\n    }\n  };\n\n  // Check if next week button should be disabled\n  const isNextButtonDisabled = () => {\n    const currentDate = new Date();\n    const currentYearNum = currentDate.getFullYear();\n\n    // Disable if we're in a future year\n    if (currentYear > currentYearNum) {\n      return true;\n    }\n\n    // Disable if we're in the current year and at or beyond the current week\n    if (currentYear === currentYearNum) {\n      const currentWeekNum = getWeekNumber(currentDate);\n      if (currentWeek >= currentWeekNum) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const goToNextWeek = () => {\n    // Don't proceed if button is disabled\n    if (isNextButtonDisabled()) {\n      return;\n    }\n\n    // Normal week navigation logic\n    if (currentWeek < 52) {\n      setCurrentWeek(currentWeek + 1);\n    } else {\n      setCurrentYear(currentYear + 1);\n      setCurrentWeek(1);\n    }\n  };\n\n  const handleYearSelect = (year) => {\n    const selectedYear = parseInt(year);\n    const currentDate = new Date();\n    const currentYearNum = currentDate.getFullYear();\n\n    // Prevent selecting future years\n    if (selectedYear > currentYearNum) {\n      return;\n    }\n\n    // If selecting current year, make sure week is not in the future\n    if (selectedYear === currentYearNum) {\n      const currentWeekNum = getWeekNumber(currentDate);\n      if (currentWeek > currentWeekNum) {\n        setCurrentWeek(currentWeekNum);\n      }\n    }\n\n    setCurrentYear(selectedYear);\n  };\n\n  return (\n    <div className='d-flex align-items-center w-100' style={{ gap: '32px', position: 'relative' }}>\n      <Dropdown style={{ position: 'absolute', right: '16px' }}>\n        <Dropdown.Toggle as={Button} className={clsx(style.button, \"outline-button mx-auto\")}>\n          <Calendar3 size={16} color=\"#667085\" />\n          {currentYear}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {years.map(year => (\n            <Dropdown.Item\n              key={year}\n              onClick={() => handleYearSelect(year)}\n              active={year === currentYear}\n            >\n              {year}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <div className='d-flex align-items-center mx-auto'>\n        <button\n          className='border-0'\n          style={{\n            background: 'transparent',\n            cursor: 'pointer',\n            opacity: 1\n          }}\n          onClick={goToPreviousWeek}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.35355 1.80514C8.54882 2.0004 8.54882 2.31698 8.35355 2.51224L2.70711 8.15869L8.35355 13.8051C8.54882 14.0004 8.54882 14.317 8.35355 14.5122C8.15829 14.7075 7.84171 14.7075 7.64645 14.5122L1.64645 8.51224C1.45118 8.31698 1.45118 8.0004 1.64645 7.80514L7.64645 1.80514C7.84171 1.60988 8.15829 1.60988 8.35355 1.80514Z\" fill=\"#344054\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.3536 1.80514C12.5488 2.0004 12.5488 2.31698 12.3536 2.51224L6.70711 8.15869L12.3536 13.8051C12.5488 14.0004 12.5488 14.317 12.3536 14.5122C12.1583 14.7075 11.8417 14.7075 11.6464 14.5122L5.64645 8.51224C5.45118 8.31698 5.45118 8.0004 5.64645 7.80514L11.6464 1.80514C11.8417 1.60988 12.1583 1.60988 12.3536 1.80514Z\" fill=\"#344054\" />\n          </svg>\n        </button>\n\n        <div className='d-flex align-items-center justify-content-center' style={{ gap: '4px', width: '200px' }}>\n          <span className='font-14' style={{ color: '#344054' }}>\n            Week {currentWeek} | {weekInfo.start} - {weekInfo.end}\n          </span>\n        </div>\n\n        <button\n          className='border-0'\n          style={{\n            background: 'transparent',\n            cursor: isNextButtonDisabled() ? 'not-allowed' : 'pointer',\n            opacity: isNextButtonDisabled() ? 0.5 : 1\n          }}\n          onClick={goToNextWeek}\n          disabled={isNextButtonDisabled()}\n          aria-disabled={isNextButtonDisabled()}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.64645 1.80514C3.84171 1.60988 4.15829 1.60988 4.35355 1.80514L10.3536 7.80514C10.5488 8.0004 10.5488 8.31698 10.3536 8.51224L4.35355 14.5122C4.15829 14.7075 3.84171 14.7075 3.64645 14.5122C3.45118 14.317 3.45118 14.0004 3.64645 13.8051L9.29289 8.15869L3.64645 2.51224C3.45118 2.31698 3.45118 2.0004 3.64645 1.80514Z\" fill=\"#344054\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.64645 1.80514C7.84171 1.60988 8.15829 1.60988 8.35355 1.80514L14.3536 7.80514C14.5488 8.0004 14.5488 8.31698 14.3536 8.51224L8.35355 14.5122C8.15829 14.7075 7.84171 14.7075 7.64645 14.5122C7.45118 14.317 7.45118 14.0004 7.64645 13.8051L13.2929 8.15869L7.64645 2.51224C7.45118 2.31698 7.45118 2.0004 7.64645 1.80514Z\" fill=\"#344054\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WeekNavigator;\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobsToApprove = async () => {\n    const endpoint = `/jobs/to-approve/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getApproveNotInvoice = async (year, week) => {\n    const endpoint = `/jobs/to-invoice/${year}/${week}/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"approve-job_heading__NCGqc\",\"border\":\"approve-job_border__pYPi2\",\"borderBottom\":\"approve-job_borderBottom__73j1d\",\"cardBody\":\"approve-job_cardBody__igMLE\",\"jobDetailHeading\":\"approve-job_jobDetailHeading__RtqsC\",\"customLabel\":\"approve-job_customLabel__5r9ok\",\"text\":\"approve-job_text__VC0CF\",\"plannedTable\":\"approve-job_plannedTable__QV7Mr\",\"active1\":\"approve-job_active1__LwXX9\",\"nonActive\":\"approve-job_nonActive__R5QLG\",\"borderRightNone\":\"approve-job_borderRightNone__kqdzx\",\"active2\":\"approve-job_active2__6XFPc\",\"active3\":\"approve-job_active3__q5Ndq\",\"lastRow\":\"approve-job_lastRow__0-xNd\",\"fixRateBox\":\"approve-job_fixRateBox__53ez4\",\"shiftBox\":\"approve-job_shiftBox__vzGQP\",\"clockIcon\":\"approve-job_clockIcon__RE0Ne\",\"moneyBox\":\"approve-job_moneyBox__l1MqE\",\"InputTextarea\":\"approve-job_InputTextarea__KagCa\"};","import React, { useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, X } from 'react-bootstrap-icons';\nimport { useQuery } from \"@tanstack/react-query\";\nimport clsx from 'clsx';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Chip } from 'primereact/chip';\nimport { Image } from 'primereact/image';\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Sidebar } from 'primereact/sidebar';\nimport style from './approve-job.module.scss';\nimport { getApprovedJob } from '../../../../APIs/jobs-api';\nimport { formatDate } from '../../Pages/jobs/jobs-table';\n\nconst ApproveJob = ({ jobId = null, visible = false, setVisible }) => {\n    const [isOpenJobDetailsSection, setIsOpenJobDetailsSection] = useState(true);\n    const [isOpenPlannedVsActualSection, setIsOpenPlannedVsActualSection] = useState(true);\n    const [isOpenVariationSection, setIsOpenVariationSection] = useState(true);\n    const [isOpenJobTrackingSection, setIsOpenJobTrackingSection] = useState(true);\n    const [selectedColumn, setSelectedColumn] = useState(\"planned\");\n\n    const jobQuery = useQuery({\n        queryKey: [\"getApprovedJob\", jobId],\n        queryFn: () => getApprovedJob(jobId),\n        enabled: !!jobId,\n        retry: 1,\n    });\n    const job = jobQuery?.data;\n    console.log('job: ', job);\n\n    const formatTime = (timestamp) => {\n        const date = new Date(parseInt(timestamp) * 1000);\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    };\n\n    const formatHours = (hours) => {\n        const totalMinutes = hours * 60;\n        const h = Math.floor(totalMinutes / 60);\n        const m = Math.round(totalMinutes % 60);\n        return `${h}:${m.toString().padStart(2, '0')}`;\n    };\n\n    const calculateActualHours = () => {\n        if (job?.start && job?.finish) {\n            const start = parseInt(job.start) * 1000;\n            const finish = parseInt(job.finish) * 1000;\n            const diffMs = finish - start;\n            const hours = diffMs / (1000 * 60 * 60);\n            return formatHours(hours);\n        }\n        return \"0:00\";\n    };\n\n    const formatDateTimeIST = (timestamp) => {\n        const date = new Date(parseInt(timestamp) * 1000);\n        return date.toLocaleString('en-IN', {\n            timeZone: 'Asia/Kolkata',\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: true\n        });\n    };\n\n    const plannedHours = \"1:00\";\n    const plannedRate = 35.00;\n    const plannedSubtotal = parseInt(plannedHours.split(':')[0]) * plannedRate;\n    const actualHours = job?.spent_time || 0;\n    const actualSubtotal = (actualHours * plannedRate).toFixed(2);\n    const variation = 0;\n    const plannedTotal = (plannedSubtotal + variation).toFixed(2);\n    const actualTotal = (parseFloat(actualSubtotal) + variation).toFixed(2);\n\n    const mapEmbedUrl = job?.locations?.length > 0\n        ? `https://www.openstreetmap.org/export/embed.html?bbox=${parseFloat(job.locations[0].longitude) - 0.005},${parseFloat(job.locations[0].latitude) - 0.005},${parseFloat(job.locations[0].longitude) + 0.005},${parseFloat(job.locations[0].latitude) + 0.005}&marker=${job.locations[0].latitude},${job.locations[0].longitude}`\n        : null;\n\n    const handlePlannedRowClick = () => {\n        setSelectedColumn(\"planned\");\n    };\n\n    const handleActualRowClick = () => {\n        setSelectedColumn(\"actual\");\n    };\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            <span className={style.heading}>{job?.id}-{job?.number}</span>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenJobDetailsSection(!isOpenJobDetailsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenJobDetailsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenJobDetailsSection &&\n                                <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                    <h1 className={clsx(style.jobDetailHeading, 'mb-3')}>Link to Project</h1>\n\n                                    <label className={clsx(style.customLabel)}>Short Description</label>\n                                    <p className={clsx(style.text)}>{job?.short_description}</p>\n\n                                    <label className={clsx(style.customLabel)}>Long Description</label>\n                                    <p className={clsx(style.text)}>{job?.long_description}</p>\n\n                                    <Row>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>Client</label>\n                                            <p className={clsx(style.text)}>{job?.client?.name}</p>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>Location</label>\n                                            <p className={clsx(style.text)}>{job?.location?.name}</p>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>Start Date</label>\n                                            <p className={clsx(style.text)}>{formatDate(job?.start_date)}</p>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <label className={clsx(style.customLabel)}>End Date</label>\n                                            <p className={clsx(style.text)}>{formatDate(job?.end_date)}</p>\n                                        </Col>\n                                    </Row>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenPlannedVsActualSection(!isOpenPlannedVsActualSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Planned vs Actual</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenPlannedVsActualSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenPlannedVsActualSection &&\n                                <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between px-0 py-0', style.borderBottom)}>\n                                    <table className={clsx('w-100', style.plannedTable)}>\n                                        <tr>\n                                            <th>\n                                                <div className='d-flex align-items-center gap-2'>\n                                                    <div className={style.fixRateBox}>Fix Rate</div>\n                                                    <div>\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                                            <path d=\"M10 5C10.3452 5 10.625 5.27982 10.625 5.625V9.375H14.375C14.7202 9.375 15 9.65482 15 10C15 10.3452 14.7202 10.625 14.375 10.625H10.625V14.375C10.625 14.7202 10.3452 15 10 15C9.65482 15 9.375 14.7202 9.375 14.375V10.625H5.625C5.27982 10.625 5 10.3452 5 10C5 9.65482 5.27982 9.375 5.625 9.375H9.375V5.625C9.375 5.27982 9.65482 5 10 5Z\" fill=\"#667085\" />\n                                                        </svg>\n                                                    </div>\n                                                    <div className={style.shiftBox}>Shift</div>\n                                                </div>\n                                            </th>\n                                            <th className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                <div className='d-flex align-items-center gap-2'>\n                                                    <Checkbox checked={selectedColumn === \"planned\"} onChange={() => setSelectedColumn(selectedColumn === \"planned\" ? null : \"planned\")} />\n                                                    <label className={clsx(style.customLabel)}>Planned</label>\n                                                </div>\n                                            </th>\n                                            <th className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                <div className='d-flex justify-content-between'>\n                                                    <div className='d-flex align-items-center gap-2'>\n                                                        <Checkbox checked={selectedColumn === \"actual\"} onChange={() => setSelectedColumn(selectedColumn === \"actual\" ? null : \"actual\")} />\n                                                        <label className={clsx(style.customLabel)}>Actual</label>\n                                                    </div>\n                                                    <div className={style.clockIcon}>\n                                                        <ClockHistory color='#475467' size={16} />\n                                                    </div>\n                                                </div>\n                                            </th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Start</span>\n                                            </td>\n                                            <td className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                <span className='font-14'>{job?.start ? formatTime(job.start) : \"N/A\"} | {formatDate(job?.start_date)}</span>\n                                            </td>\n                                            <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                <span className='font-14'>{job?.start ? formatTime(job.start) : \"N/A\"} | {formatDate(job?.start_date)}</span>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Finish</span>\n                                            </td>\n                                            <td className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                <span className='font-14'>{job?.finish ? formatTime(job.finish) : \"N/A\"} | {formatDate(job?.end_date)}</span>\n                                            </td>\n                                            <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                <span className='font-14'>{job?.finish ? formatTime(job.finish) : \"N/A\"} | {formatDate(job?.end_date)}</span>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Hours</span>\n                                            </td>\n                                            <td className={selectedColumn === \"planned\" ? style.active1 : style.nonActive} onClick={handlePlannedRowClick}>\n                                                <span className='font-14'>{plannedHours}</span>\n                                            </td>\n                                            <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                <span className='font-14'>{calculateActualHours()}</span>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Rate per hour</span>\n                                            </td>\n                                            <td colSpan={2} className={clsx(selectedColumn === \"planned\" ? style.active1 : style.active3, 'text-center', style.borderRightNone)}>\n                                                <div className={clsx(style.moneyBox)}>${plannedRate.toFixed(2)}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Subtotal</span>\n                                            </td>\n                                            <td className={clsx(selectedColumn === \"planned\" ? style.active1 : style.nonActive, selectedColumn === \"planned\" ? style.active2 : '')} onClick={handlePlannedRowClick}>\n                                                <span className='font-14'>${plannedSubtotal.toFixed(2)}</span>\n                                            </td>\n                                            <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                <span className='font-14'>${actualSubtotal}</span>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Variation</span>\n                                            </td>\n                                            <td colSpan={2} className={clsx(selectedColumn === \"planned\" ? style.active1 : style.active3, 'text-center', selectedColumn !== \"planned\" ? \"\" : style.borderRightNone)}>\n                                                <div className={clsx(style.moneyBox)}>${variation.toFixed(2)}</div>\n                                            </td>\n                                        </tr>\n                                        <tr className={clsx(style.lastRow)}>\n                                            <td>\n                                                <span className='font-16' style={{ color: '#344054' }}>Total</span>\n                                            </td>\n                                            <td className={clsx(selectedColumn === \"planned\" ? style.active1 : style.nonActive, selectedColumn === \"planned\" ? style.active2 : '')} onClick={handlePlannedRowClick}>\n                                                <span className='font-14'>${plannedTotal}</span>\n                                            </td>\n                                            <td className={selectedColumn === \"actual\" ? style.active1 : ''} onClick={handleActualRowClick}>\n                                                <span className='font-14'>${actualTotal}</span>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenVariationSection(!isOpenVariationSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Variation</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenVariationSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenVariationSection &&\n                                <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                    <div className='form-group mb-3 w-100'>\n                                        <label className={clsx(style.customLabel)}>Amount</label>\n                                        <InputText className={clsx('w-100', style.InputText)} />\n                                    </div>\n\n                                    <div className='form-group mb-3 w-100'>\n                                        <label className={clsx(style.customLabel)}>Reason</label>\n                                        <InputTextarea className={clsx('w-100', style.InputTextarea)} rows={3} placeholder='Enter a reason...' />\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-4')}>\n                            <Card.Body className={clsx(style.borderBottom, style.cardBody, 'cursor-pointer')} onClick={() => setIsOpenJobTrackingSection(!isOpenJobTrackingSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Tracking</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenJobTrackingSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenJobTrackingSection &&\n                                <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                    {mapEmbedUrl ? (\n                                        <>\n                                            <label className={clsx(style.customLabel)}>Job Location</label>\n                                            <iframe\n                                                width=\"100%\"\n                                                height=\"300\"\n                                                frameBorder=\"0\"\n                                                style={{ border: 0 }}\n                                                src={mapEmbedUrl}\n                                                allowFullScreen\n                                            ></iframe>\n                                            {/* Display the timestamps of the location entries */}\n                                            {job?.locations?.length > 0 && (\n                                                <>\n                                                    <label className={clsx(style.customLabel, 'mt-3')}>Location Tracking Timestamps (IST)</label>\n                                                    {job.locations.map((loc, index) => (\n                                                        <p key={index} className={clsx(style.text)}>\n                                                            Recorded at: {formatDateTimeIST(loc.date)}\n                                                        </p>\n                                                    ))}\n                                                </>\n                                            )}\n                                        </>\n                                    ) : (\n                                        <p className={clsx(style.text)}>Location map unavailable: No coordinates provided.</p>\n                                    )}\n                                </Card.Header>\n                            }\n                        </Card>\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        <Button type='button' onClick={() => { }} className='solid-button' style={{ minWidth: '75px' }}>Edit {false && <ProgressSpinner\n                            style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                        />}</Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default ApproveJob;","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link45deg, Person, Repeat } from 'react-bootstrap-icons';\nimport { useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Chip } from 'primereact/chip';\nimport { Column } from 'primereact/column';\nimport { ColumnGroup } from 'primereact/columngroup';\nimport { DataTable } from 'primereact/datatable';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Row } from 'primereact/row';\nimport { Tag } from 'primereact/tag';\nimport { toast } from 'sonner';\nimport style from './approval.module.scss';\nimport WeekNavigator from './week-navigator';\nimport { getJobsToApprove, getApproveNotInvoice } from '../../../../APIs/approval-api';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { FallbackImage } from '../../../../ui/image-with-fallback/image-avatar';\nimport ApproveJob from '../../features/approve-job/approve-job';\n\nconst ApprovalTable = React.memo(() => {\n    const { trialHeight } = useTrialHeight();\n    const [selectedApprovals, setSelectedApprovals] = useState(null);\n    const [selectedInvoiceApprovals, setSelectedInvoiceApprovals] = useState(null);\n    const [weekData, setSelectedPeriod] = useState({\n        week: null,\n        year: null,\n        startDate: null,\n        endDate: null\n    });\n\n    const [isApproveJobVisible, setIsApproveJobVisible] = useState(false);\n    const [selectedJobId, setSelectedJobId] = useState(null);\n\n    const handleWeekChange = useCallback((periodData) => {\n        setSelectedPeriod(periodData);\n    }, []);\n\n    const {\n        data: approveData = [],\n        isLoading: isLoadingApprove,\n        error: approveError\n    } = useQuery({\n        queryKey: ['jobsToApprove'],\n        queryFn: getJobsToApprove,\n        refetchOnWindowFocus: false,\n        onError: (error) => {\n            toast.error('Failed to load jobs to approve');\n            console.error('Error loading jobs to approve:', error);\n        }\n    });\n\n    const fetchInvoiceData = React.useCallback(() => {\n        if (!weekData?.week || !weekData?.year) {\n            return Promise.resolve([]);\n        }\n        return getApproveNotInvoice(weekData.year, weekData.week);\n    }, [weekData?.week, weekData?.year]);\n\n    const {\n        data: invoiceData = [],\n        isLoading: isLoadingInvoice,\n        error: invoiceError\n    } = useQuery({\n        queryKey: ['jobsToInvoice', weekData?.week, weekData?.year],\n        queryFn: fetchInvoiceData,\n        enabled: !!weekData?.week && !!weekData?.year,\n        refetchOnWindowFocus: false,\n        onError: (error) => {\n            toast.error('Failed to load approved jobs for invoicing');\n            console.error('Error loading jobs to invoice:', error);\n        }\n    });\n\n    const paymentBody = (rowData) => {\n        const paymentType = rowData.time_type === \"1\" ? \"Hours\" : \"Fix\";\n        return (\n            <div className='d-flex justify-content-center align-items-center' style={{ gap: '10px' }}>\n                <div className={`${style.payment} ${paymentType === 'Hours' ? style.paymentHours : style.paymentFix}`}>\n                    {paymentType}\n                </div>\n                <Repeat color='#158ECC' />\n            </div>\n        );\n    };\n\n    const timeBody = (rowData) => {\n        const timeType = rowData.type === \"2\" ? \"TimeFrame\" : \"TimeTracker\";\n        return (\n            <div className={`d-flex align-items-center show-on-hover`}>\n                <div className={`${style.time} ${timeType === 'TimeFrame' ? style.frame : style.tracker}`}>\n                    {timeType}\n                </div>\n            </div>\n        );\n    };\n\n    const clientHeader = () => {\n        return <div className='d-flex align-items-center'>\n            Client\n            <small>A→Z</small>\n        </div>;\n    };\n\n    const clientBody = (rowData) => {\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientImg}`}>\n                <FallbackImage\n                    has_photo={rowData.client?.has_photo}\n                    photo={rowData.client?.photo}\n                    is_business={true}\n                    size={16}\n                />\n            </div>\n            {rowData.client?.name || 'N/A'}\n        </div>;\n    };\n\n    const nameBody = (rowData) => {\n        const fullName = `${rowData.worker?.first_name || ''} ${rowData.worker?.last_name || ''}`.trim();\n        const initials = fullName ? fullName.split(' ').map(word => word[0]).join('') : 'N/A';\n\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientName}`}>\n                {rowData.worker?.has_photo ? (\n                    <FallbackImage\n                        has_photo={rowData.worker?.has_photo}\n                        photo={rowData.worker?.photo}\n                        is_business={false}\n                        size={16}\n                    />\n                ) : initials}\n            </div>\n            {fullName || 'N/A'}\n        </div>;\n    };\n\n    const actionBody = (rowData) => {\n        return (\n            <div className='d-flex justify-content-center gap-2'>\n                <Chip\n                    className={`status ${style.finishedAction} cursor-pointer`}\n                    label=\"Approve\"\n                    onClick={() => handleApprove(rowData.id)}\n                />\n            </div>\n        );\n    };\n\n    const statusBody = () => {\n        return <Chip className={`status ${style.approved}`} label=\"Approved\" />;\n    };\n\n    const handleApprove = React.useCallback((id) => {\n        setSelectedJobId(id);\n        setIsApproveJobVisible(true);\n    }, []);\n\n\n    const formatDate = React.useCallback((dateString) => {\n        if (!dateString) return 'N/A';\n\n        try {\n            const date = new Date(dateString);\n            const day = String(date.getDate()).padStart(2, '0');\n            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            const month = months[date.getMonth()];\n\n            const year = date.getFullYear();\n            return `${day} ${month} ${year}`;\n        } catch (error) {\n            console.error('Error formatting date:', error);\n            return dateString || 'N/A';\n        }\n    }, []);\n\n    const linkToBody = (rowData) => {\n        return rowData.project ? (\n            <div className='d-flex align-items-center' style={{ gap: '10px' }}>\n                {rowData.project.number}\n                <Link45deg color='#3366CC' />\n            </div>\n        ) : 'N/A';\n    };\n\n    const totalBody = (rowData) => {\n        return <Tag value={rowData.total} style={{ border: \"2px solid var(--Orange-200, #FFE0BC)\", background: '#FFF7EE', color: '#FFB258', fontSize: '12px', fontWeight: 500 }} rounded></Tag>;\n    };\n\n    const thisWeekTotalBody = (rowData) => {\n        return <span style={{ fontWeight: 'bold' }}>{rowData.total}</span>;\n    };\n\n    const header = (\n        <div className=\"d-flex align-items-center justify-content-end gap-2\" style={{ position: 'relative' }}>\n            <p style={{ color: '#344054', fontWeight: 400 }} className='m-0 font-14'>Review & Approve</p>\n            {isLoadingApprove && <ProgressSpinner style={{ width: '20px', height: '20px', marginLeft: '8px', position: 'absolute', right: '-40px' }} />}\n        </div>\n    );\n\n    const header2 = (\n        <div className=\"d-flex align-items-center justify-content-between gap-2\" style={{ position: 'relative' }}>\n            <p style={{ color: '#344054', fontWeight: 500 }} className='m-0 font-14'>\n                {weekData?.week && weekData?.year\n                    ? `Week ${weekData.week}, ${weekData.year} - Approved Jobs (Not Invoiced)`\n                    : 'Approved Jobs - Not Invoiced'}\n            </p>\n            {isLoadingInvoice && <ProgressSpinner style={{ width: '20px', height: '20px', marginRight: '8px', position: 'absolute', right: '-40px' }} />}\n        </div>\n    );\n\n    const approveTotal = React.useMemo(() => {\n        if (!approveData || approveData.length === 0) return 0;\n        return approveData.reduce((sum, job) => sum + parseFloat(job.total || 0), 0);\n    }, [approveData]);\n\n    const invoiceTotal = React.useMemo(() => {\n        if (!invoiceData || invoiceData.length === 0) return 0;\n        return invoiceData.reduce((sum, job) => sum + parseFloat(job.total || 0), 0);\n    }, [invoiceData]);\n\n    const approveFooterGroup = React.useMemo(() => {\n        const formattedTotal = approveTotal.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        });\n\n        return (\n            <ColumnGroup>\n                <Row className='w-100'>\n                    <Column colSpan={12} />\n                    <Column\n                        footer={`Total= $${formattedTotal}`}\n                        footerStyle={{ position: 'sticky', right: 0 }}\n                    />\n                </Row>\n            </ColumnGroup>\n        );\n    }, [approveTotal]);\n\n    const invoiceFooterGroup = React.useMemo(() => {\n        const formattedTotal = invoiceTotal.toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        });\n\n        return (\n            <ColumnGroup>\n                <Row className='w-100'>\n                    <Column colSpan={12} />\n                    <Column\n                        footer={`Total= $${formattedTotal}`}\n                        footerStyle={{ position: 'sticky', right: 0 }}\n                    />\n                </Row>\n            </ColumnGroup>\n        );\n    }, [invoiceTotal]);\n\n    useEffect(() => {\n        if (approveError) {\n            toast.error(`Error loading jobs to approve: ${approveError.message || 'Please try again later'}`);\n        }\n        if (invoiceError) {\n            toast.error(`Error loading jobs to invoice: ${invoiceError.message || 'Please try again later'}`);\n        }\n    }, [approveError, invoiceError]);\n\n    return (\n        <>\n            {/* Jobs to Approve DataTable */}\n            <DataTable\n                value={approveData}\n                header={header}\n                footerColumnGroup={approveFooterGroup}\n                scrollable\n                selectionMode={'checkbox'}\n                removableSort\n                columnResizeMode=\"expand\"\n                resizableColumns\n                showGridlines\n                size={'large'}\n                scrollHeight=\"calc(50vh - 150px)\"\n                className=\"border-0\"\n                selection={selectedApprovals}\n                onSelectionChange={(e) => setSelectedApprovals(e.value)}\n                emptyMessage=\"No jobs to approve\"\n                loading={isLoadingApprove}\n                loadingIcon={<></>}\n            >\n                <Column selectionMode=\"multiple\" bodyClassName={'show-on-hover'} headerStyle={{ width: '3rem' }} frozen></Column>\n                <Column field=\"number\" header=\"Job ID\" style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"time_type\" header=\"Payment Type\" body={paymentBody} style={{ minWidth: '130px' }} frozen sortable></Column>\n                <Column field=\"type\" header=\"Time\" body={timeBody} style={{ minWidth: '118px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column\n                    field=\"submitted\"\n                    header=\"Submitted\"\n                    style={{ minWidth: '122px' }}\n                    sortable\n                    body={(rowData) => formatDate(rowData.submitted)}\n                ></Column>\n                <Column field=\"short_description\" header=\"Job Reference\" style={{ minWidth: '270px' }}></Column>\n                <Column field=\"client.name\" header={clientHeader} body={clientBody} style={{ minWidth: '162px' }}></Column>\n                <Column field=\"project.number\" header=\"Linked To Project\" body={linkToBody} style={{ minWidth: '105px' }}></Column>\n                <Column field=\"worker.first_name\" header=\"Worker\" body={nameBody} style={{ minWidth: '205px' }}></Column>\n                <Column field=\"spent_time\" header=\"Spent Time\" style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"real_total\" header=\"Real Total\" body={thisWeekTotalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"total\" header=\"Total\" body={totalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"id\" header=\"Actions\" body={actionBody} style={{ minWidth: '120px' }} bodyClassName={`${style.shadowLeft}`} headerClassName={clsx(`${style.shadowLeft}`, 'd-flex justify-content-center')} frozen alignFrozen=\"right\"></Column>\n            </DataTable>\n\n            <div className=\"topbar d-flex justify-content-center text-center w-100\" style={{ padding: '4px 0px', position: 'relative', height: '48px', borderTop: '1px solid #dedede', borderBottom: '0px solid #dedede', background: '#F9FAFB' }}>\n                <WeekNavigator onWeekChange={handleWeekChange} />\n            </div>\n\n            {/* Jobs to Invoice DataTable */}\n            <DataTable\n                value={invoiceData || []}\n                header={header2}\n                footerColumnGroup={invoiceFooterGroup}\n                scrollable\n                selectionMode={'checkbox'}\n                removableSort\n                columnResizeMode=\"expand\"\n                resizableColumns\n                showGridlines\n                size={'large'}\n                scrollHeight={`calc(50vh - 150px - ${trialHeight}px)`}\n                className=\"border-0\"\n                selection={selectedInvoiceApprovals}\n                onSelectionChange={(e) => setSelectedInvoiceApprovals(e.value)}\n                emptyMessage=\"No approved jobs waiting to be invoiced\"\n                loading={isLoadingInvoice}\n                loadingIcon={<></>}\n            >\n                <Column selectionMode=\"multiple\" bodyClassName={'show-on-hover'} headerStyle={{ width: '3rem' }} frozen></Column>\n                <Column field=\"number\" header=\"Job ID\" style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"time_type\" header=\"Payment Type\" body={paymentBody} style={{ minWidth: '130px' }} frozen sortable></Column>\n                <Column field=\"type\" header=\"Time\" body={timeBody} style={{ minWidth: '118px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column\n                    field=\"submitted\"\n                    header=\"Submitted\"\n                    style={{ minWidth: '122px' }}\n                    sortable\n                    body={(rowData) => formatDate(rowData.submitted)}\n                ></Column>\n                <Column field=\"short_description\" header=\"Job Reference\" style={{ minWidth: '270px' }}></Column>\n                <Column field=\"client.name\" header={clientHeader} body={clientBody} style={{ minWidth: '162px' }}></Column>\n                <Column field=\"project.number\" header=\"Linked To Project\" body={linkToBody} style={{ minWidth: '105px' }}></Column>\n                <Column field=\"worker.first_name\" header=\"Worker\" body={nameBody} style={{ minWidth: '205px' }}></Column>\n                <Column field=\"spent_time\" header=\"Spent Time\" style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"real_total\" header=\"Real Total\" body={thisWeekTotalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"total\" header=\"Total\" body={totalBody} style={{ minWidth: '105px' }} sortable></Column>\n                <Column field=\"id\" header=\"Status\" body={statusBody} style={{ minWidth: '120px' }} bodyClassName={clsx(`${style.shadowLeft}`, 'text-center')} headerClassName={clsx(`${style.shadowLeft}`, 'd-flex justify-content-center')} frozen alignFrozen=\"right\"></Column>\n            </DataTable>\n\n            <ApproveJob visible={isApproveJobVisible} setVisible={setIsApproveJobVisible} jobId={selectedJobId} />\n        </>\n    );\n});\n\nexport default ApprovalTable;","import React from 'react';\nimport { Filter } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport ApprovalTable from './approval-table';\nimport style from './approval.module.scss';\n\nconst ApprovalPage = () => {\n    const handleSearch = () => { };\n\n    return (\n        <div className='approval-page'>\n            <Helmet>\n                <title>MeMate - Approval</title>\n            </Helmet>\n            <div className=\"topbar\" style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    <div className='filtered-box'>\n                        <button className={`${style.filterBox}`}><Filter size={20} /></button>\n                    </div>\n                    <div className=\"searchBox\" style={{ position: 'relative' }}>\n                        <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                            </svg>\n                        </div>\n                        <input type=\"text\" placeholder=\"Search\" onChange={handleSearch} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                    </div>\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0 mt-1\">Approval</h1>\n                </div>\n\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    <h1 className={`${style.total} mb-0`}>Total</h1>\n                    <div className={`${style.totalCount}`}>30 Jobs</div>\n                </div>\n            </div>\n\n            <ApprovalTable />\n        </div>\n    );\n};\n\nexport default ApprovalPage;"],"names":["FallbackImage","_ref2","has_photo","photo","is_business","size","imgError","setImgError","useState","Icon","Building","Person","_jsx","_Fragment","children","src","alt","className","onError","color","_ref","style","overflow","onWeekChange","currentWeek","setCurrentWeek","currentYear","setCurrentYear","Date","getFullYear","weekInfo","setWeekInfo","start","end","currentYearNum","years","Array","from","length","_","i","getWeekNumber","date","firstDayOfYear","pastDaysOfYear","Math","ceil","getDay","getWeekDates","weekNumber","year","daysOffset","formatDate","toLocaleDateString","day","month","useEffect","today","weekNum","updateWeekDates","week","startDate","endDate","isNextButtonDisabled","currentDate","currentWeekNum","_jsxs","gap","position","Dropdown","right","Toggle","as","Button","clsx","button","Calendar3","Menu","map","Item","onClick","selectedYear","parseInt","handleYearSelect","active","background","cursor","opacity","goToPreviousWeek","xmlns","width","height","viewBox","fill","fillRule","clipRule","d","goToNextWeek","disabled","API_BASE_URL","process","getJobsToApprove","async","url","URL","fetchAPI","toString","method","_job$locations","jobId","visible","setVisible","isOpenJobDetailsSection","setIsOpenJobDetailsSection","isOpenPlannedVsActualSection","setIsOpenPlannedVsActualSection","isOpenVariationSection","setIsOpenVariationSection","isOpenJobTrackingSection","setIsOpenJobTrackingSection","selectedColumn","setSelectedColumn","jobQuery","useQuery","queryKey","queryFn","getApprovedJob","enabled","retry","job","data","console","log","formatTime","timestamp","toLocaleTimeString","hour","minute","calculateActualHours","finish","hours","totalMinutes","floor","round","padStart","formatHours","plannedHours","plannedSubtotal","split","actualSubtotal","spent_time","toFixed","plannedTotal","actualTotal","parseFloat","mapEmbedUrl","locations","longitude","latitude","handlePlannedRowClick","handleActualRowClick","Sidebar","onHide","modal","dismissable","content","_job$client","_job$location","_job$locations2","closeIconRef","hide","borderBottom","padding","heading","id","number","type","ref","e","X","Card","border","Body","cardBody","fontWeight","Header","jobDetailHeading","customLabel","text","short_description","long_description","Row","Col","sm","client","name","location","start_date","end_date","plannedTable","fixRateBox","shiftBox","active1","nonActive","Checkbox","checked","onChange","clockIcon","ClockHistory","colSpan","active3","borderRightNone","moneyBox","active2","lastRow","InputText","InputTextarea","rows","placeholder","frameBorder","allowFullScreen","loc","index","toLocaleString","timeZone","second","hour12","borderTop","stopPropagation","minWidth","React","trialHeight","useTrialHeight","selectedApprovals","setSelectedApprovals","selectedInvoiceApprovals","setSelectedInvoiceApprovals","weekData","setSelectedPeriod","isApproveJobVisible","setIsApproveJobVisible","selectedJobId","setSelectedJobId","handleWeekChange","useCallback","periodData","approveData","isLoading","isLoadingApprove","error","approveError","refetchOnWindowFocus","toast","fetchInvoiceData","getApproveNotInvoice","Promise","resolve","invoiceData","isLoadingInvoice","invoiceError","paymentBody","rowData","paymentType","time_type","payment","paymentHours","paymentFix","Repeat","timeBody","timeType","time","frame","tracker","clientHeader","clientBody","_rowData$client","_rowData$client2","_rowData$client3","clientImg","nameBody","_rowData$worker","_rowData$worker2","_rowData$worker3","_rowData$worker4","_rowData$worker5","fullName","worker","first_name","last_name","trim","initials","word","join","clientName","handleApprove","dateString","String","getDate","getMonth","linkToBody","project","Link45deg","totalBody","Tag","value","total","fontSize","rounded","thisWeekTotalBody","header","ProgressSpinner","marginLeft","header2","marginRight","approveTotal","reduce","sum","invoiceTotal","approveFooterGroup","formattedTotal","minimumFractionDigits","maximumFractionDigits","ColumnGroup","Column","footer","footerStyle","invoiceFooterGroup","message","DataTable","footerColumnGroup","scrollable","selectionMode","removableSort","columnResizeMode","resizableColumns","showGridlines","scrollHeight","selection","onSelectionChange","emptyMessage","loading","loadingIcon","bodyClassName","headerStyle","frozen","field","sortable","body","shadowRight","headerClassName","submitted","Chip","finishedAction","label","shadowLeft","alignFrozen","WeekNavigator","statusBody","approved","ApproveJob","ApprovalPage","Helmet","filterBox","Filter","top","left","handleSearch","borderRadius","paddingLeft","transform","totalCount","ApprovalTable"],"sourceRoot":""}