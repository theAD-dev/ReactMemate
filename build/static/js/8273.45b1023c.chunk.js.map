{"version":3,"file":"static/js/8273.45b1023c.chunk.js","mappings":"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","sources":["assets/images/icon/exclamation-circle.svg","APIs/ClientsApi.js","APIs/SalesApi.js","APIs/base-api.js","components/Business/Pages/sales/new-request/scope-of-work.js"],"sourcesContent":["var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgExclamationCircle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 17 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"exclamation-circle\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.5 15.5C4.63401 15.5 1.5 12.366 1.5 8.5C1.5 4.63401 4.63401 1.5 8.5 1.5C12.366 1.5 15.5 4.63401 15.5 8.5C15.5 12.366 12.366 15.5 8.5 15.5ZM8.5 16.5C12.9183 16.5 16.5 12.9183 16.5 8.5C16.5 4.08172 12.9183 0.5 8.5 0.5C4.08172 0.5 0.5 4.08172 0.5 8.5C0.5 12.9183 4.08172 16.5 8.5 16.5Z\",\n    fill: \"#F04438\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.50154 11.5C7.50154 10.9477 7.94926 10.5 8.50154 10.5C9.05383 10.5 9.50154 10.9477 9.50154 11.5C9.50154 12.0523 9.05383 12.5 8.50154 12.5C7.94926 12.5 7.50154 12.0523 7.50154 11.5Z\",\n    fill: \"#F04438\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.5995 5.49504C7.54623 4.96228 7.96459 4.5 8.5 4.5C9.03541 4.5 9.45377 4.96228 9.4005 5.49504L9.04975 9.00248C9.02151 9.28492 8.78384 9.5 8.5 9.5C8.21616 9.5 7.97849 9.28492 7.95025 9.00248L7.5995 5.49504Z\",\n    fill: \"#F04438\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgExclamationCircle);\nexport default __webpack_public_path__ + \"static/media/exclamation-circle.cae916ce28e0a8d8d07a477235f7a993.svg\";\nexport { ForwardRef as ReactComponent };","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createNewIndividualClient = async (data) => {\n  const endpoint = '/clients/individual/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewBusinessClient = async (data) => {\n  const endpoint = '/clients/business/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const restoreClient = async (id) => {\n  const endpoint = `/clients/restore/${id}/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientById = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientCategories = async () => {\n  const endpoint = `/references/clients/categories/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientIndustries = async () => {\n  const endpoint = `/references/clients/industries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getCountries = async () => {\n  const endpoint = `/references/countries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getStates = async (country) => {\n  const endpoint = `/references/states/${country}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getCities = async (state) => {\n  const endpoint = `/references/cities/${state}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getProjectManager = async () => {\n  const endpoint = `/references/desktop-users/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientEditApi = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getListOfClients = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (name) url.searchParams.append(\"name\", name);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientOrderHistory = async (id, page, limit, search = \"\", order = \"\",) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/${id}/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"number\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  \n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainContact = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteClient = async (id) => {\n  const endpoint = `/clients/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteContactPerson = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchClients = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/clients`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Clients fetch error:', error);\n    throw error;\n  }\n};\n\nexport const bringBack = async (id) => {\n  const endpoint = `/projects/back/`;\n  const options = {\n    method: 'PUT',\n    body: { unique_id: id }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const draftSalesRequest = async (data) => {\n  const endpoint = `/sales/new-request/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n// Sale Table Api\nexport const fetchSales = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\n\n// Sales Note Api\nexport const fetchSalesNotes = async (saleUniqueId, updatedNote) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ sales_note: updatedNote }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/notes/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales notes update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales notes update error:', error);\n    throw error;\n  }\n};\n\nexport const markWon = async (ids) => {\n  const endpoint = `/sales/status/won/`;\n  const options = {\n    method: 'PUT',\n    body: { ids: ids }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markLost = async (ids) => {\n  const endpoint = `/sales/status/lost/`;\n  const options = {\n    method: 'PUT',\n    body: { ids: ids }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n// Sale Won Api\nexport const fetchWon = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify({\n    \"ids\": [saleUniqueId]\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  const response = await fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n};\n\n\n// Sale Contact Api\nexport const fetchContacts = async (saleUniqueId, formData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: JSON.stringify(formData),\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/contacts/`, requestOptions);\n    if (response.ok) {\n      return response;\n    } else {\n      console.log('Error:', response.status);\n      return null;\n    }\n  } catch (error) {\n    console.log('Error:', error);\n    return null;\n  }\n};\n\n\n// Sale Lead Api\nexport const fetchSaleslead = async (saleUniqueId, updatedLead) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: JSON.stringify({ lead: updatedLead, unique_id: saleUniqueId }),\n    redirect: 'follow',\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/lead/`, requestOptions);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Sales lead update failed with status ${response.status}: ${errorText}`);\n    }\n\n    const result = await response.text();\n\n    const parsedResult = result.trim() ? JSON.parse(result) : null;\n\n    return parsedResult;\n  } catch (error) {\n    console.error('Sales lead update error:', error);\n    throw error;\n  }\n};\n\n\n\n\n// Sale Multi Won Api\nexport const fetchMultipleData = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n  const responses = await Promise.all([\n    fetch(`${API_BASE_URL}/sales/status/won/`, requestOptions), // Pass requestOptions directly\n  ]);\n\n  const data = await Promise.all(responses.map(response => response.json()));\n  return data;\n};\n\n\n// Sale DUPLICATE Api\nexport const fetchduplicateData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  const response = await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/duplicate/`, requestOptions);\n  const result = await response.json();\n  return result[0];\n};\n\n\n\n\n// Sale history Api\nexport const fetchhistoryData = async (saleUniqueId) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n  };\n\n  try {\n    await fetch(`${API_BASE_URL}/sales/${saleUniqueId}/history/`, requestOptions);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\n\n\n\n// Sale Multi Lost Api\nexport const fetchMultipleLost = async (selectedUniqueIds) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"ids\": selectedUniqueIds\n  });\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: raw, // Include the body here\n    redirect: \"follow\"\n  };\n\n\n  const responses = await Promise.all([\n    fetch(`${API_BASE_URL}/sales/status/lost/`, requestOptions), // Pass requestOptions directly\n  ]);\n\n  const data = await Promise.all(responses.map(response => response.json()));\n  return data; // Return data to handleMoveToManagementWon function\n};\n\n\n\n\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import React, { useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { CardList, ChevronLeft, InfoSquare, Person, FileText, FileImage, FileCode, FilePdf, FileWord, Upload, Trash } from 'react-bootstrap-icons';\nimport { useForm } from 'react-hook-form';\nimport { Link, NavLink, useNavigate, useParams } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as yup from 'yup';\nimport { getClientById } from '../../../../../APIs/ClientsApi';\nimport { draftSalesRequest } from '../../../../../APIs/SalesApi';\nimport exclamationCircle from \"../../../../../assets/images/icon/exclamation-circle.svg\";\n\n\n\nconst schema = yup\n    .object({\n        reference: yup.string().required(\"Project reference is required\")\n    })\n    .required();\n\nconst getFileIcon = (fileType) => {\n    if (fileType.includes('pdf')) return <FilePdf color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('image')) return <FileImage color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('text')) return <FileText color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('word')) return <FileWord color=\"#000000\" width={20} height={20} />;\n    if (fileType.includes('code')) return <FileCode color=\"#000000\" width={20} height={20} />;\n    return <FileText color=\"#000000\" size={20} />; // Default icon\n};\n\nconst ScopeOfWorkComponent = () => {\n    const navigate = useNavigate();\n    const { id } = useParams();\n    let quoteFormData = {};\n    const profileData = JSON.parse(window.localStorage.getItem('profileData') || \"{}\");\n    try {\n        const storedData = window.sessionStorage.getItem(`new-request`);\n        if (storedData) {\n            quoteFormData = JSON.parse(storedData);\n        }\n    } catch (error) {\n        console.error('Failed to parse form data from sessionStorage', error);\n    }\n    const [files, setFiles] = useState([]);\n    const [defaultValues,] = useState({\n        reference: quoteFormData.reference || \"\",\n        requirements: quoteFormData.requirements || \"\"\n    });\n    const { register, handleSubmit, trigger, formState: { errors }, watch } = useForm({\n        resolver: yupResolver(schema),\n        defaultValues\n    });\n\n    const onSubmit = (data) => {\n        const formObject = {\n            id: id,\n            reference: data.reference,\n            requirements: data.requirements,\n            files: files.map(file => file.file)\n        };\n        window.sessionStorage.setItem(`new-request`, JSON.stringify(formObject));\n        navigate(`/sales/quote-calculation`);\n    };\n\n    const handleFileChange = (e) => {\n        const newFiles = Array.from(e.target.files).map(file => ({\n            id: uuidv4(),\n            file,\n            type: file.type,\n        }));\n        setFiles(prevFiles => [...prevFiles, ...newFiles]);\n    };\n\n    const handleRemoveFile = (id) => {\n        setFiles(prevFiles => prevFiles.filter(file => file.id !== id));\n    };\n\n\n    const mutation = useMutation({\n        mutationFn: (data) => draftSalesRequest(data),\n        onSuccess: () => {\n            navigate('/sales');\n            toast.success(`New request created as draft successfully.`);\n        },\n        onError: (error) => {\n            console.error('Error creating draft new request:', error);\n            toast.error(`Failed to create new request. Please try again.`);\n        }\n    });\n\n    const clientQuery = useQuery({\n        queryKey: ['id', id],\n        queryFn: () => getClientById(id),\n        enabled: !!id,\n        retry: 1,\n    });\n\n    const saveAsDraft = async () => {\n        const isValid = await trigger();\n\n        const person = clientQuery.data?.contact_persons[0];\n        const find = clientQuery.data?.contact_persons.find((contact) => contact.is_main === true);\n        const contact_person = find?.id ? find?.id : person?.id;\n        if (!contact_person) {\n            toast.error('No contact person found for this client. Please add a contact person before saving as a draft.');\n            return;\n        }\n\n        if (isValid) {\n            mutation.mutate({\n                client: id,\n                action: 'draft',\n                contact_person,\n                reference: watch('reference'),\n                description: watch('requirements'),\n                managers: [{ manager: profileData?.desktop_user_id }],\n            });\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"newQuotePage existingClients borderSkyColor\">\n                <div style={{ height: 'calc(100vh - 249px)' }}>\n                    <div className=\"newQuoteBack\">\n                        <NavLink to={\"/sales/newquote/selectyourclient\"}>\n                            <button>\n                                <ChevronLeft color=\"#000000\" size={20} /> &nbsp;&nbsp;Go Back\n                            </button>\n                        </NavLink>\n                    </div>\n                    <div className=\"newQuoteContent h-100\">\n                        <div className='navStepClient'>\n                            <ul>\n                                <li><span><Person color=\"#D0D5DD\" size={15} /></span> <p>Choose Client</p></li>\n                                <li><span><InfoSquare color=\"#D0D5DD\" size={15} /></span> <p>Client Information</p> </li>\n                                <li className='activeClientTab'><span><CardList color=\"#D0D5DD\" size={15} /></span> <p>Scope of Work</p> </li>\n                            </ul>\n                        </div>\n                        <div className='individual height'>\n                            <div className='formgroupboxs' style={{ paddingTop: '32px' }}>\n                                <Row className='text-left'>\n                                    <Col sm={12}>\n                                        <div className=\"formgroup mb-3 mt-0\">\n                                            <label>Project Reference<span className='required'>*</span></label>\n                                            <div className={`inputInfo ${errors.reference ? 'error-border' : ''}`}>\n                                                <input {...register(\"reference\")} placeholder='Add Reference for your Project' />\n                                                {errors.reference && <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Exclamation Circle\" />}\n                                            </div>\n                                            {errors.reference && <p className=\"error-message\">{errors.reference.message}</p>}\n                                        </div>\n                                    </Col>\n\n                                    <Col sm={12}>\n                                        <div className=\"formgroup mb-2 mt-0\">\n                                            <label>Describe requirements for the order below<br />\n                                                <small style={{ color: '#475467', fontWeight: 400 }}>Use for organisation. Not customer-facing.</small>\n                                            </label>\n                                            <div style={{ position: 'relative' }} className={`inputInfo textarea ${errors.requirements ? 'error-border' : ''}`}>\n                                                <textarea {...register(\"requirements\")} placeholder='Enter a description...' />\n                                                {errors.requirements && <img className=\"ExclamationCircle\" style={{ position: 'absolute', right: '10px', bottom: '10px' }} src={exclamationCircle} alt=\"Exclamation Circle\" />}\n                                            </div>\n                                            {errors.requirements && <p className=\"error-message\">{errors.requirements.message}</p>}\n                                        </div>\n                                    </Col>\n\n                                    <Col sm={12}>\n                                        <div className=\"formgroup mb-3 mt-0\">\n                                            <label style={{ fontWeight: 'normal' }}>Only for internal use.</label>\n                                            <div className=\"custom-file-upload\" style={{ marginTop: '10px' }}>\n                                                <label htmlFor=\"file-upload\" className=\"custom-upload-btn\" style={{ border: \"1px solid var(--Gray-300, #D0D5DD)\", borderRadius: '4px', padding: '8px 14px' }}>\n                                                    Attach Files &nbsp;<Upload color=\"#1D2939\" width={20} height={20} />\n                                                </label>\n                                                <input id=\"file-upload\" type=\"file\" multiple onChange={handleFileChange} style={{ display: 'none' }} />\n                                            </div>\n                                        </div>\n                                    </Col>\n\n                                    <Col sm={12}>\n                                        {files.length > 0 && (\n                                            <div className=\"uploaded-files pb-5\">\n                                                <ul>\n                                                    {files.map(file => (\n                                                        <li key={file.id} className='ps-0'>\n                                                            {getFileIcon(file.type)}\n                                                            <span className='text-lowercase'>{file.file.name}</span>\n                                                            <Trash color=\"#98A2B3\" style={{ cursor: 'pointer', marginLeft: '20px' }} onClick={() => handleRemoveFile(file.id)} />\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n                                        )}\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                        <div className='individual bottomBox justify-content-between'>\n                            <Link to={\"/sales\"}>\n                                <button type=\"button\" className=\"cancel-button border-0 text-danger\">\n                                    Cancel\n                                </button>\n                            </Link>\n\n                            <div className='d-flex' style={{ gap: '12px' }}>\n                                <button type=\"button\" disabled={mutation.isPending} onClick={saveAsDraft} className=\"cancel-button\">\n                                    Save Draft {\" \"}\n                                    {mutation.isPending && <ProgressSpinner style={{ width: '18px', height: '18px' }} />}\n                                </button>\n\n                                <button type=\"submit\" className=\"submit-button\">\n                                    Calculate\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default ScopeOfWorkComponent;\n"],"names":["API_BASE_URL","process","restoreClient","async","url","URL","id","fetchAPI","toString","method","getClientById","getClientCategories","getClientIndustries","getCountries","getStates","country","getCities","state","getProjectManager","getListOfClients","page","limit","name","arguments","length","undefined","order","isShowDeleted","offset","searchParams","append","clientOrderHistory","search","markeMainAddress","markeMainContact","deleteClient","deleteContactPerson","deleteAddress","bringBack","options","body","unique_id","draftSalesRequest","data","fetchSales","myHeaders","Headers","accessToken","localStorage","getItem","requestOptions","headers","redirect","response","fetch","text","error","console","fetchSalesNotes","saleUniqueId","updatedNote","JSON","stringify","sales_note","ok","errorText","Error","status","result","trim","parse","markWon","ids","markLost","fetchContacts","formData","log","fetchSaleslead","updatedLead","lead","fetchMultipleData","selectedUniqueIds","responses","Promise","all","map","json","fetchduplicateData","fetchMultipleLost","endpoint","isRequiredLoggedin","isFormData","FormData","defaultHeaders","contentType","get","includes","message","schema","yup","reference","required","ScopeOfWorkComponent","navigate","useNavigate","useParams","quoteFormData","profileData","window","storedData","sessionStorage","files","setFiles","useState","defaultValues","requirements","register","handleSubmit","trigger","formState","errors","watch","useForm","resolver","yupResolver","mutation","useMutation","mutationFn","onSuccess","toast","success","onError","clientQuery","useQuery","queryKey","queryFn","enabled","retry","_jsx","onSubmit","formObject","file","setItem","children","className","_jsxs","style","height","NavLink","to","ChevronLeft","color","size","Person","InfoSquare","CardList","paddingTop","Row","Col","sm","placeholder","src","exclamationCircle","alt","fontWeight","position","right","bottom","marginTop","htmlFor","border","borderRadius","padding","Upload","width","type","multiple","onChange","e","newFiles","Array","from","target","uuidv4","prevFiles","display","fileType","FilePdf","FileImage","FileText","FileWord","FileCode","Trash","cursor","marginLeft","onClick","filter","handleRemoveFile","Link","gap","disabled","isPending","_clientQuery$data","_clientQuery$data2","isValid","person","contact_persons","find","contact","is_main","contact_person","mutate","client","action","description","managers","manager","desktop_user_id","ProgressSpinner"],"sourceRoot":""}