{"version":3,"file":"static/js/9488.bc44d458.chunk.js","mappings":"iIA0BA,MACA,EAAe,IAA0B,yD,4CCAzC,MACA,EAAe,IAA0B,4D,4CCMzC,MACA,EAAe,IAA0B,sE,6MCzBzC,MAAMA,EAAU,CACd,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,QAASC,MAAO,UAyN3B,EAtNoBC,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,EAAU,UAAEC,EAAS,QAAEC,EAAO,MAAEC,GAAUL,EAASM,MACrDC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAcC,IAAkBF,EAAAA,EAAAA,UAAS,KACzCG,EAAqBC,IAAyBJ,EAAAA,EAAAA,UAAS,KACvDK,EAAcC,IAAkBN,EAAAA,EAAAA,UAAS,KACzCO,EAAoBC,IAAYR,EAAAA,EAAAA,WAAS,IAEzCS,EAAYC,IAAiBV,EAAAA,EAAAA,UAAS,KACtCW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,IAgC7C,OACEa,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,UACEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,UAAUE,MAAO,CAAEC,SAAU,OAAQC,cAAe,UAAWL,SAAA,EAC5EF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBF,EAAAA,EAAAA,KAAA,OAAKQ,IAAKC,EAAAA,EAAUC,IAAI,iBAG1BN,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACvBE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CAAI,mBACaF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aACrBF,EAAAA,EAAAA,KAAA,SAAS,kBAEXI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAGjBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,SAAKF,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEM,MAAO,WAAYT,SAAC,UAC/CE,EAAAA,EAAAA,MAAA,OACED,UAAW,cAAaP,EAAa,eAAiB,IACjDM,SAAA,EAELF,EAAAA,EAAAA,KAAA,OAAKQ,IAAKI,EAAAA,EAAcF,IAAI,mBAC5BV,EAAAA,EAAAA,KAAA,SACEa,KAAK,QACLC,KAAK,QACLzC,MAAOY,EACP8B,SAAWC,IACT9B,EAAS8B,EAAEC,OAAO5C,OAClBwB,EAAc,GAAG,IAGpBD,IACCI,EAAAA,EAAAA,KAAA,OACEG,UAAU,oBACVK,IAAKU,EAAAA,EACLR,IAAI,0BAITd,IACCI,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SAAEN,QAGlCQ,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPF,EAAAA,EAAAA,KAAA,OAAKG,UAAW,aAAaD,UAC3BF,EAAAA,EAAAA,KAAA,SACEa,KAAK,OACLC,KAAK,eACLzC,MAAOe,EACP2B,SAAWC,IACT3B,EAAe2B,EAAEC,OAAO5C,MAAM,UAKtC+B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPF,EAAAA,EAAAA,KAAA,OAAKG,UAAW,YAAYD,UAC1BF,EAAAA,EAAAA,KAAA,YACEmB,KAAM,EACNL,KAAK,sBACLzC,MAAOiB,EACPyB,SAAWC,IACTzB,EAAsByB,EAAEC,OAAO5C,MAAM,EAEvC+C,YAAY,2CAIlBhB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,SAC3B9B,EAAQiD,KAAKC,IACZlB,EAAAA,EAAAA,MAAA,OAEED,UAAW,8BAA6BX,IAAiB8B,EAAOjD,MAAQ,SAAW,IAC9E6B,SAAA,EAELF,EAAAA,EAAAA,KAAA,SACEa,KAAK,QACLV,UAAU,WACVoB,GAAID,EAAOjD,MACXyC,KAAK,cACLzC,MAAOiD,EAAOjD,MACdmD,QAAShC,IAAiB8B,EAAOjD,MACjC0C,SAAWC,IACTvB,EAAeuB,EAAEC,OAAO5C,MAAM,KAGlC2B,EAAAA,EAAAA,KAAA,SAAOyB,QAASH,EAAOjD,MAAM6B,SAAEoB,EAAOhD,UAfjCgD,EAAOjD,eAqBpB+B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAW,GAAGD,UACjBE,EAAAA,EAAAA,MAAA,SACEmB,GAAG,oBACHpB,UAAU,oBAAmBD,SAAA,CAC9B,qEAGCF,EAAAA,EAAAA,KAAA,SACEa,KAAK,WACLC,KAAK,qBACLU,QAAS9B,EACTqB,SAAWC,IACTrB,EAASqB,EAAEC,OAAO5C,MAAM,KAG5B2B,EAAAA,EAAAA,KAAA,QACEG,UAAW,kBAAiBL,EAAa,yBAA2B,WAKzEA,IACCE,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SAAEJ,QAGlCM,EAAAA,EAAAA,MAAA,UACES,KAAK,SACLV,UAAU,wBACVuB,QApKIC,KAEf1C,EAAM2C,OAAOC,MAAM,wCAMnBnC,EAOLX,EAAS,cAAe,CACtBD,MAAO,CACLJ,aACAC,YACAC,UACAC,QACAI,QACAG,eACAE,sBACAE,eACAE,wBAhBFK,EACE,iEAPFF,EAAc,sCAwBd,EAyIqCK,SAAA,CACxB,aAECF,EAAAA,EAAAA,KAAA,OAAKQ,IAAKsB,EAAAA,EAAYpB,IAAI,oBAE5BV,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,2BACwB,KACzBF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACC,GAAG,SAAQ9B,SAAC,qBAKxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAA4BD,UACzCE,EAAAA,EAAAA,MAAA,QAAMD,UAAU,UAAUE,MAAO,CAAEM,MAAO,WAAYT,SAAA,CAAC,gBAAU,IAAI+B,MAAOC,uBAIhFlC,EAAAA,EAAAA,KAAA,OACEG,UAAU,2BACVE,MAAO,CACL8B,gBAAiB,OAAOC,KACxBC,eAAgB,QAChBC,iBAAkB,aAClBpC,UAEFF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0DAMZ,C","sources":["assets/images/icon/arrow.svg","assets/images/icon/envelope.svg","assets/images/icon/exclamation-circle.svg","components/layout/requestdemo/CompanyName.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 13,\n    viewBox: \"0 0 18 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.25 6.5C0.25 6.15482 0.529822 5.875 0.875 5.875L15.6161 5.875L11.6831 1.94194C11.439 1.69786 11.439 1.30214 11.6831 1.05806C11.9271 0.81398 12.3229 0.81398 12.5669 1.05806L17.5669 6.05806C17.811 6.30213 17.811 6.69786 17.5669 6.94194L12.5669 11.9419C12.3229 12.186 11.9271 12.186 11.6831 11.9419C11.439 11.6979 11.439 11.3021 11.6831 11.0581L15.6161 7.125L0.875 7.125C0.529822 7.125 0.25 6.84518 0.25 6.5Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.39453b4ea8b344e3bb6f41c5a35a5b74.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEnvelope(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 21,\n    viewBox: \"0 0 20 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"envelope\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Rectangle 394 (Stroke)\",\n    d: \"M0 5.5C0 4.11929 1.11929 3 2.5 3H17.5C18.8807 3 20 4.11929 20 5.5V15.5C20 16.8807 18.8807 18 17.5 18H2.5C1.11929 18 0 16.8807 0 15.5V5.5ZM2.5 4.25C1.80964 4.25 1.25 4.80964 1.25 5.5V5.77113L10 11.0211L18.75 5.77113V5.5C18.75 4.80964 18.1904 4.25 17.5 4.25H2.5ZM18.75 7.22887L12.8649 10.7599L18.75 14.3815V7.22887ZM18.7078 15.8233L11.6573 11.4845L10 12.4789L8.34272 11.4845L1.29221 15.8233C1.43468 16.3569 1.92144 16.75 2.5 16.75H17.5C18.0786 16.75 18.5653 16.3569 18.7078 15.8233ZM1.25 14.3815L7.1351 10.7599L1.25 7.22887V14.3815Z\",\n    fill: \"#667085\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEnvelope);\nexport default __webpack_public_path__ + \"static/media/envelope.c9c11cfa6a43774942324c9ac7f33f2d.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgExclamationCircle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 17 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"exclamation-circle\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.5 15.5C4.63401 15.5 1.5 12.366 1.5 8.5C1.5 4.63401 4.63401 1.5 8.5 1.5C12.366 1.5 15.5 4.63401 15.5 8.5C15.5 12.366 12.366 15.5 8.5 15.5ZM8.5 16.5C12.9183 16.5 16.5 12.9183 16.5 8.5C16.5 4.08172 12.9183 0.5 8.5 0.5C4.08172 0.5 0.5 4.08172 0.5 8.5C0.5 12.9183 4.08172 16.5 8.5 16.5Z\",\n    fill: \"#F04438\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.50154 11.5C7.50154 10.9477 7.94926 10.5 8.50154 10.5C9.05383 10.5 9.50154 10.9477 9.50154 11.5C9.50154 12.0523 9.05383 12.5 8.50154 12.5C7.94926 12.5 7.50154 12.0523 7.50154 11.5Z\",\n    fill: \"#F04438\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.5995 5.49504C7.54623 4.96228 7.96459 4.5 8.5 4.5C9.03541 4.5 9.45377 4.96228 9.4005 5.49504L9.04975 9.00248C9.02151 9.28492 8.78384 9.5 8.5 9.5C8.21616 9.5 7.97849 9.28492 7.95025 9.00248L7.5995 5.49504Z\",\n    fill: \"#F04438\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgExclamationCircle);\nexport default __webpack_public_path__ + \"static/media/exclamation-circle.cae916ce28e0a8d8d07a477235f7a993.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport envelopeIcon from \"../../../assets/images/icon/envelope.svg\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport request03 from \"../../../assets/images/img/request03.jpg\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst options = [\n  { value: \"1-10\", label: \"1-10\" },\n  { value: \"11-50\", label: \"11-50\" },\n  { value: \"51-250\", label: \"51-250\" },\n  { value: \"251-1000\", label: \"251-1000\" },\n  { value: \"1000+\", label: \"1000+\" },\n];\n\nconst CompanyName = () => {\n  const location = useLocation();\n  const { first_name, last_name, country, phone } = location.state;\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [company_name, setCompanyname] = useState(\"\");\n  const [company_description, setCompanydescription] = useState(\"\");\n  const [company_size, setCompanySize] = useState(\"\");\n  const [is_agree_marketing, setAgree] = useState(false);\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [checkError, setCheckError] = useState(\"\");\n\n  const handleStepOne = () => {\n    // Email validation\n    if (!email.trim().match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      setEmailError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    // Checkbox validation\n    if (!is_agree_marketing) {\n      setCheckError(\n        \"Please agree to receive marketing communications from MeMate.\"\n      );\n      return;\n    }\n\n    navigate(\"/selectdate\", {\n      state: {\n        first_name,\n        last_name,\n        country,\n        phone,\n        email,\n        company_name,\n        company_description,\n        company_size,\n        is_agree_marketing,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"requestDemoWrap\">\n        <div className=\"OnboardingStep1\">\n          <form>\n            <div className=\"loginPage\">\n              <div className=\"boxinfo\" style={{ overflow: 'auto', flexDirection: 'column' }}>\n                <div className=\"w-100 p-4\">\n                  <img src={LoinLogo} alt=\"Loin Logo\" />\n                </div>\n\n                <div className=\"boxLogin\">\n                  <h2>\n                    Yes, I want to <span>sign up</span>\n                    <br></br> for a demo\n                  </h2>\n                  <div className=\"step-progress\">\n                    <div className=\"step \"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step active\"></div>\n                    <div className=\"step\"></div>\n                    <div className=\"step\"></div>\n                  </div>\n\n                  <div className=\"formgroup\">\n                    <label>Email<span style={{ color: \"#f04438\" }}>*</span></label>\n                    <div\n                      className={`inputInfo ${emailError ? \"error-border\" : \"\"\n                        }`}\n                    >\n                      <img src={envelopeIcon} alt=\"Envelope Icon\" />\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => {\n                          setEmail(e.target.value);\n                          setEmailError(\"\");\n                        }}\n                      />\n                      {emailError && (\n                        <img\n                          className=\"ExclamationCircle\"\n                          src={exclamationCircle}\n                          alt=\"Exclamation Circle\"\n                        />\n                      )}\n                    </div>\n                    {emailError && (\n                      <p className=\"error-message\">{emailError}</p>\n                    )}\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Company Legal Name</label>\n                    <div className={`inputInfo `}>\n                      <input\n                        type=\"text\"\n                        name=\"company_name\"\n                        value={company_name}\n                        onChange={(e) => {\n                          setCompanyname(e.target.value);\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Nature of Business</label>\n                    <div className={`inputInfo`}>\n                      <textarea\n                        rows={4}\n                        name=\"company_description\"\n                        value={company_description}\n                        onChange={(e) => {\n                          setCompanydescription(e.target.value);\n                        }}\n                        placeholder=\"Describe nature of your business\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"formgroup\">\n                    <label>Company Size</label>\n                    <div className=\"sizeRadioWrap\">\n                      {options.map((option) => (\n                        <div\n                          key={option.value}\n                          className={`option inputInfoSizeCheck ${company_size === option.value ? \"active\" : \"\"\n                            }`}\n                        >\n                          <input\n                            type=\"radio\"\n                            className=\"radioBtn\"\n                            id={option.value}\n                            name=\"companySize\"\n                            value={option.value}\n                            checked={company_size === option.value}\n                            onChange={(e) => {\n                              setCompanySize(e.target.value);\n                            }}\n                          />\n                          <label htmlFor={option.value}>{option.label}</label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"formgroup\">\n                    <div className={``}>\n                      <label\n                        id=\"inputInfocheckbox\"\n                        className=\"inputInfocheckbox\"\n                      >\n                        Yes, I would like to receive marketing communications\n                        from MeMate\n                        <input\n                          type=\"checkbox\"\n                          name=\"is_agree_marketing\"\n                          checked={is_agree_marketing}\n                          onChange={(e) => {\n                            setAgree(e.target.value);\n                          }}\n                        />\n                        <span\n                          className={`checkmarkdata ${checkError ? \"agree_marketing-border\" : \"\"\n                            }`}\n                        ></span>\n                      </label>\n                    </div>\n                    {checkError && (\n                      <p className=\"error-message\">{checkError}</p>\n                    )}\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"fillbtn flexcenterbox\"\n                    onClick={handleStepOne}\n                  >\n                    Next Step\n                    <img src={arrowRight} alt=\"Arrow Right\" />\n                  </button>\n                  <div className=\"linkBottom\">\n                    <p>\n                      Already have an account?{\" \"}\n                      <Link to=\"/login\">Sign in</Link>\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"w-100 p-4 footer-copyright\">\n                  <span className=\"font-14\" style={{ color: '#212529' }}>© Memate {new Date().getFullYear()}</span>\n                </div>\n              </div>\n\n              <div\n                className=\"sliderRight SinglBgRight\"\n                style={{\n                  backgroundImage: `url(${request03})`,\n                  backgroundSize: \"cover\",\n                  backgroundRepeat: \"no-repeat\",\n                }}\n              >\n                <p>Predict unprofitable business activities.</p>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CompanyName;\n"],"names":["options","value","label","CompanyName","location","useLocation","first_name","last_name","country","phone","state","navigate","useNavigate","email","setEmail","useState","company_name","setCompanyname","company_description","setCompanydescription","company_size","setCompanySize","is_agree_marketing","setAgree","emailError","setEmailError","checkError","setCheckError","_jsx","_Fragment","children","className","_jsxs","style","overflow","flexDirection","src","LoinLogo","alt","color","envelopeIcon","type","name","onChange","e","target","exclamationCircle","rows","placeholder","map","option","id","checked","htmlFor","onClick","handleStepOne","trim","match","arrowRight","Link","to","Date","getFullYear","backgroundImage","request03","backgroundSize","backgroundRepeat"],"sourceRoot":""}