{"version":3,"file":"static/js/7358.5ec18bb7.chunk.js","mappings":"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","sources":["webpack://memateapp/./src/components/Work/Pages/tasks/task.module.scss?447c","components/Work/Pages/tasks/task-table.js","components/Work/Pages/tasks/index.js","webpack://memateapp/./src/ui/no-data-template/no-data-found-template.module.scss?18de","ui/no-data-template/no-data-found-template.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"active\":\"task_active__XHjXL\",\"selectedCount\":\"task_selectedCount__KCjbh\",\"filterBox\":\"task_filterBox__Vl8TJ\",\"newButton\":\"task_newButton__FgzVj\",\"total\":\"task_total__iv2al\",\"totalCount\":\"task_totalCount__g7jIX\",\"shadowRight\":\"task_shadowRight__POYJ0\",\"clientName\":\"task_clientName__bfmFM\",\"complete\":\"task_complete__zEIDq\",\"pending\":\"task_pending__4JfNO\",\"projectImg\":\"task_projectImg__SdMAS\",\"projectText\":\"task_projectText__2Lg5C\",\"projectNumber\":\"task_projectNumber__bQcj7\",\"linkToProjectCard\":\"task_linkToProjectCard__cP8ki\",\"statusFilter\":\"task_statusFilter__Rk3rx\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { CheckCircle, FileText } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { toast } from 'sonner';\nimport style from './task.module.scss';\nimport { getListOfTasks } from '../../../../APIs/task-api';\nimport { TaskCompleteJob } from '../../../../APIs/TasksApi';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\nimport Loader from '../../../../shared/ui/loader/loader';\nimport NoDataFoundTemplate from '../../../../ui/no-data-template/no-data-found-template';\nimport ViewTaskModal from '../../features/task/view-task/view-task';\n\nconst formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n        month: \"short\",\n    }).format(date);\n    const year = date.getFullYear();\n    return `${day} ${monthAbbreviation} ${year}`;\n};\n\nconst TaskTable = forwardRef(({ searchValue, setTotal, selected, setSelected, refetch, setRefetch, filter }, ref) => {\n    const { trialHeight } = useTrialHeight();\n    const observerRef = useRef(null);\n    const [visible, setVisible] = useState(false);\n    const [taskId, setTaskId] = useState(null);\n\n    const [page, setPage] = useState(1);\n    const [tasks, setTasks] = useState([]);\n    const [sort, setSort] = useState({ sortField: 'id', sortOrder: -1 });\n    const [tempSort, setTempSort] = useState({ sortField: 'id', sortOrder: -1 });\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const limit = 25;\n\n    useEffect(() => {\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    }, [searchValue, refetch, filter]);\n\n    useEffect(() => {\n        const loadData = async () => {\n            setLoading(true);\n\n            let order = \"\";\n            if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n            else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n            let showNotCompleted = filter.status === 'not-complete';\n            if (filter.status === 'all') showNotCompleted = null;\n            if (filter.status === 'complete') showNotCompleted = false;\n\n            const data = await getListOfTasks(page, limit, searchValue, order, false, showNotCompleted, null);\n            setTotal(() => (data?.count || 0));\n            if (page === 1) setTasks(data.results);\n            else {\n                if (data?.results?.length > 0)\n                    setTasks(prev => {\n                        const existingIds = new Set(prev.map(data => data.id));\n                        const newData = data.results.filter(data => !existingIds.has(data.id));\n                        return [...prev, ...newData];\n                    });\n            }\n            setSort(tempSort);\n            setHasMoreData(data.count !== tasks.length);\n            setLoading(false);\n        };\n\n        loadData();\n\n    }, [page, searchValue, tempSort, refetch, filter]);\n\n    useEffect(() => {\n        if (tasks.length > 0 && hasMoreData) {\n            observerRef.current = new IntersectionObserver(entries => {\n                if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n            });\n\n            const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n            if (lastRow) observerRef.current.observe(lastRow);\n        }\n\n        return () => {\n            if (observerRef.current) observerRef.current.disconnect();\n        };\n    }, [tasks, hasMoreData]);\n\n    const idBody = (rowData) => {\n        let isDue = new Date(+rowData.to_date * 1000).getTime() < Date.now();\n\n        return <div className={`d-flex align-items-center justify-content-center show-on-hover`}>\n            <div className='d-flex flex-column'>\n                {rowData.number}\n\n                <span className='font-12' style={{ color: isDue && !rowData.finished ? '#F97066' : '#98A2B3' }}>{formatDate(rowData.to_date)}</span>\n            </div>\n            <Button label=\"Open\" onClick={() => { setTaskId(rowData?.id); setVisible(true); }} className='primary-text-button ms-3 show-on-hover-element' text />\n        </div>;\n    };\n\n    const nameBody = (rowData) => {\n        const name = `${rowData?.user.full_name}`;\n        const initials = `${rowData?.user?.alias}`;\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientName}`} style={{ width: '30px', height: '30px', borderRadius: '50%', overflow: 'hidden' }}>\n                {rowData?.user?.has_photo\n                    ? <FallbackImage has_photo={rowData?.user?.has_photo} photo={rowData?.user?.photo} is_business={false} />\n                    : initials\n                }\n            </div>\n            {name}\n        </div>;\n    };\n\n    const statusBody = (rowdata) => {\n        return <div className={`${style.time} ${rowdata.finished ? style.complete : style.pending}`}>\n            {rowdata.finished ? \"Complete\" : \"Not Complete\"}\n        </div>;\n    };\n\n    const projectBody = (rowData) => {\n        return <div className='d-flex align-items-center gap-2'>\n            <div className={clsx(style.projectImg, 'd-flex align-items-center justify-content-center')}>\n                <FileText color='#475467' size={13} />\n            </div>\n            <div style={{ lineHeight: '1.385' }}>\n                <h1 className={clsx(style.projectText, 'mb-0')}>{rowData?.project?.reference}</h1>\n                <span className='font-12' style={{ color: '#98A2B3' }}><Link className={`${style.linkToProjectCard}`} to={`/management?unique_id=${rowData?.project?.unique_id}`}>{rowData?.project?.number}</Link></span>\n            </div>\n        </div>;\n    };\n\n    const startBody = (rowData) => {\n        return formatDate(rowData.from_date);\n    };\n\n    const endBody = (rowData) => {\n        return formatDate(rowData.to_date);\n    };\n\n    const mutation = useMutation({\n        mutationFn: (updateData) => TaskCompleteJob(updateData.id, updateData.finished),\n        onSuccess: () => {\n            setRefetch((refetch) => !refetch);\n        },\n        onError: (error) => {\n            console.error('Error updating task:', error);\n        }\n    });\n\n    const handleInComplete = async (id) => {\n        await mutation.mutateAsync({ id, finished: false });\n        toast.success('Task marked as incomplete');\n    };\n\n    const handleComplete = async (id) => {\n        await mutation.mutateAsync({ id, finished: true });\n        toast.success('Task marked as complete');\n    };\n\n    const actionBody = (rowData) => {\n        let isComplete = rowData.finished;\n        if (isComplete) {\n            return <Button loading={mutation.isPending && rowData.id === mutation.variables?.id} className='outline-in-complete-button' style={{ minWidth: '136px' }} onClick={() => handleInComplete(rowData.id)}>Completed <CheckCircle size={16} color='#079455' /></Button>;\n        } else {\n            return <Button loading={mutation.isPending && rowData.id === mutation.variables?.id} className='outline-complete-button' style={{ minWidth: '136px' }} onClick={() => handleComplete(rowData.id)}>Mark Complete <CheckCircle size={16} color='#079455' /></Button>;\n        }\n    };\n\n    const rowClassName = (data) => (data?.deleted ? style.deletedRow : '');\n\n    const onSort = (event) => {\n        const { sortField, sortOrder } = event;\n\n        setTempSort({ sortField, sortOrder });\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    };\n\n    return (\n        <>\n            <DataTable ref={ref} value={tasks} scrollable selectionMode={'checkbox'}\n                columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n                scrollHeight={`calc(100vh - 175px - ${trialHeight}px)`} className=\"border\" selection={selected}\n                onSelectionChange={(e) => setSelected(e.value)}\n                loading={loading}\n                loadingIcon={Loader}\n                emptyMessage={<NoDataFoundTemplate isDataExist={!!searchValue} />}\n                sortField={sort?.sortField}\n                sortOrder={sort?.sortOrder}\n                onSort={onSort}\n                rowClassName={rowClassName}\n            >\n                <Column selectionMode=\"multiple\" headerClassName='ps-4 border-end-0' bodyClassName={'show-on-hover border-end-0 ps-4'} headerStyle={{ width: '3rem', textAlign: 'center' }} frozen></Column>\n                <Column field=\"number\" header=\"Task ID\" body={idBody} style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"title\" header=\"Task Title\" body={(rowData) => <div className='ellipsis-width' style={{ maxWidth: '300px' }}>{rowData.title}</div>} style={{ minWidth: '150px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column field=\"user.full_name\" header=\"Assigne\" body={nameBody} style={{ minWidth: '208px' }}></Column>\n                <Column field=\"finished\" header=\"Status\" body={statusBody} style={{ minWidth: '120px', maxWidth: '120px', width: '120px' }}></Column>\n                <Column field=\"project.reference\" header=\"Project\" body={projectBody} style={{ minWidth: '460px' }}></Column>\n                <Column field=\"from_date\" header=\"Start Date\" body={startBody} style={{ minWidth: '115px', maxWidth: '115px', width: '115px' }} sortable></Column>\n                <Column field='id' header=\"Actions\" body={actionBody} style={{ minWidth: '170px', maxWidth: '170px', width: '170px' }}></Column>\n            </DataTable>\n            <ViewTaskModal view={visible} setView={setVisible} taskId={taskId} setTaskId={setTaskId} reInitialize={() => setRefetch((refetch) => !refetch)} />\n        </>\n    );\n});\n\nexport default TaskTable;","import React, { useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Download, Filter } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { Checkbox } from 'primereact/checkbox';\nimport { useDebounce } from 'primereact/hooks';\nimport TaskTable from './task-table';\nimport style from './task.module.scss';\nimport CreateTask from '../../features/task/create-task/create-task';\n\nconst TaskPage = () => {\n    const dt = useRef(null);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n    const [selected, setSelected] = useState([]);\n    const [refetch, setRefetch] = useState(false);\n    const [showStatusFilter, setShowStatusFilter] = useState(false);\n    const [filter, setFilter] = useState({ status: 'not-complete' });\n\n    const exportCSV = (selectionOnly) => {\n        if (dt.current) {\n            dt.current.exportCSV({ selectionOnly });\n        } else {\n            console.error('DataTable ref is null');\n        }\n    };\n\n    // close the status filter when clicked outside\n    React.useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (showStatusFilter && !event.target.closest(`.${style.statusFilter}`) && !event.target.closest('.p-button')) {\n                setShowStatusFilter(false);\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [showStatusFilter]);\n\n    return (\n        <div className='jobs-page'>\n            <Helmet>\n                <title>MeMate - Tasks</title>\n            </Helmet>\n            <div className={`topbar ${selected?.length ? style.active : ''}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    {\n                        selected?.length ? (\n                            <>\n                                <h6 className={style.selectedCount}>Selected: {selected?.length}</h6>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => exportCSV(true)}><Download /></button>\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => {}}><Filter size={20}/></button>\n                                </div>\n                                <div className=\"searchBox\" style={{ position: 'relative' }}>\n                                    <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                            <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                        </svg>\n                                    </div>\n                                    <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                                </div>\n                                <div style={{ position: 'relative' }}>\n                                    <Button className='outline-button' style={{ padding: '4px 8px', height: '32px', fontSize: '14px', color: '#667085', border: '1px solid #D0D5DD', backgroundColor: '#FFFFFF' }} onClick={() => setShowStatusFilter(!showStatusFilter)}>\n                                        <Filter size={16} style={{ marginRight: '0px' }}/>\n                                        <span style={{ color: '#667085', fontSize: '14px', fontWeight: '400' }}>Status</span>\n                                        {/* {\n                                            filter.status === 'complete' ? <span style={{ fontSize: '12px', color: '#067647' }}>Complete</span> :\n                                            filter.status === 'not-complete' ? <span style={{ fontSize: '12px', color: '#93370d' }}>Not Complete</span> :\n                                            <span style={{ color: '#667085', fontSize: '14px', fontWeight: '400' }}>Status</span>\n                                        } */}\n                                    </Button>\n                                    {\n                                        showStatusFilter &&\n                                        <div className={`${style.statusFilter}`}>\n                                            <div className='d-flex align-items-center p-2 mb-2'>\n                                                <Checkbox checked={filter.status === 'complete'} label=\"complete\" onClick={() => setFilter({ status: 'complete' })} />\n                                                <div onClick={() => setFilter({ status: 'complete' })} className={style.complete} style={{ marginLeft: '16px' }}>Complete</div>\n                                            </div>\n                                            <div className='d-flex align-items-center p-2 mb-2'>\n                                                <Checkbox checked={filter.status === 'not-complete'} label=\"not-complete\" onClick={() => setFilter({ status: 'not-complete' })} />\n                                                <div onClick={() => setFilter({ status: 'not-complete' })} className={`${style.pending} cursor-pointer`} style={{ marginLeft: '16px' }}>Not Complete</div>\n                                            </div>\n                                            <div className='d-flex align-items-center p-2 mb-2'>\n                                                <Checkbox checked={filter.status === 'all'} label=\"all\" onClick={() => setFilter({ status: 'all' })} />\n                                                <div onClick={() => setFilter({ status: 'all' })} className={`${style.pending} cursor-pointer`} style={{ marginLeft: '16px' }}>All</div>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </>\n                        )\n                    }\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0\" style={{ marginRight: '16px' }}>Tasks</h1>\n                    <Button onClick={()=> setVisible(true)} className={`${style.newButton}`}>Create New Task </Button>\n                </div>\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    <h1 className={`${style.total} mb-0`}>Total</h1>\n                    <div className={`${style.totalCount}`}>{total} Jobs</div>\n                </div>\n            </div>\n            <TaskTable ref={dt} searchValue={debouncedValue} setTotal={setTotal} selected={selected} setSelected={setSelected} refetch={refetch} setRefetch={setRefetch} filter={filter} />\n            <CreateTask show={visible} setShow={setVisible} refetch={() => setRefetch((refetch)=> !refetch)}/>\n        </div>\n    );\n};\n\nexport default TaskPage;","// extracted by mini-css-extract-plugin\nexport default {\"noDataBox\":\"no-data-found-template_noDataBox__HgeT1\",\"searchImg\":\"no-data-found-template_searchImg__MnYNA\",\"title\":\"no-data-found-template_title__P5uV2\",\"subTitle\":\"no-data-found-template_subTitle__zMBB-\",\"supportext\":\"no-data-found-template_supportext__pHg2P\"};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport style from './no-data-found-template.module.scss';\nimport NodataImg from \"../../assets/images/img/NodataImg.png\";\nimport Support from '../../shared/ui/support/support';\n\n\nconst NoDataFoundTemplate = ({ isDataExist = true }) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <div className={clsx(style.noDataBox)}>\n            <div className='position-relative d-flex flex-column'>\n                <img src={NodataImg} alt='no-data' />\n            </div>\n            {\n                isDataExist ? (\n                    <>\n                        <h2 className={clsx(style.title)}>There is no results</h2>\n                        <p className={clsx(style.subTitle)}>\n                            The user you are looking for doesn't exist. <br />Here are some helpful links:\n                        </p>\n                        <Link to={\"/\"}><Button className='outline-button' style={{ marginBottom: '32px' }}> <ChevronLeft /> Go back</Button></Link>\n                        <Link onClick={() => setVisible(true)} to={\"#\"}><span className={clsx(style.supportext)}>Support</span></Link>\n                    </>\n                ) : (\n                    <>\n                        <h2 className={clsx(style.title)}>No historical records yet.</h2>\n                    </>\n                )\n            }\n            <Support setVisible={setVisible} visible={visible} />\n        </div>\n    );\n};\n\nexport default NoDataFoundTemplate;"],"names":["formatDate","timestamp","date","Date","getDate","Intl","DateTimeFormat","month","format","getFullYear","TaskTable","forwardRef","_ref","ref","searchValue","setTotal","selected","setSelected","refetch","setRefetch","filter","trialHeight","useTrialHeight","observerRef","useRef","visible","setVisible","useState","taskId","setTaskId","page","setPage","tasks","setTasks","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","loading","setLoading","useEffect","async","order","showNotCompleted","status","data","getListOfTasks","_data$results","count","results","length","prev","existingIds","Set","map","id","newData","has","loadData","current","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","mutation","useMutation","mutationFn","updateData","TaskCompleteJob","finished","onSuccess","onError","error","console","_jsxs","_Fragment","children","DataTable","value","scrollable","selectionMode","columnResizeMode","resizableColumns","showGridlines","size","scrollHeight","className","selection","onSelectionChange","e","loadingIcon","Loader","emptyMessage","_jsx","NoDataFoundTemplate","isDataExist","onSort","event","rowClassName","deleted","style","deletedRow","Column","headerClassName","bodyClassName","headerStyle","width","textAlign","frozen","field","header","body","rowData","isDue","to_date","getTime","now","number","color","Button","label","onClick","text","minWidth","sortable","maxWidth","title","shadowRight","_rowData$user","_rowData$user2","_rowData$user3","_rowData$user4","name","user","full_name","initials","alias","clientName","height","borderRadius","overflow","has_photo","FallbackImage","photo","is_business","rowdata","time","complete","pending","_rowData$project","_rowData$project2","_rowData$project3","clsx","projectImg","FileText","lineHeight","projectText","project","reference","Link","linkToProjectCard","to","unique_id","from_date","_mutation$variables","_mutation$variables2","isPending","variables","mutateAsync","toast","success","handleInComplete","CheckCircle","handleComplete","ViewTaskModal","view","setView","reInitialize","TaskPage","dt","total","inputValue","debouncedValue","setInputValue","useDebounce","showStatusFilter","setShowStatusFilter","setFilter","React","handleClickOutside","target","closest","statusFilter","addEventListener","removeEventListener","Helmet","active","padding","position","gap","selectedCount","filterBox","exportCSV","selectionOnly","Download","Filter","top","left","xmlns","viewBox","fill","d","type","placeholder","onChange","border","paddingLeft","fontSize","backgroundColor","marginRight","fontWeight","Checkbox","checked","marginLeft","transform","newButton","totalCount","CreateTask","show","setShow","src","NodataImg","alt","marginBottom","ChevronLeft","Support"],"sourceRoot":""}