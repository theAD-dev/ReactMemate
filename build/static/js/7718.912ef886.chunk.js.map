{"version":3,"file":"static/js/7718.912ef886.chunk.js","mappings":"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","sources":["APIs/ProfileResetPasswordApi.js","APIs/base-api.js","components/layout/Login/forgot-password.js","../node_modules/primereact/progressspinner/progressspinner.esm.js","../node_modules/react-bootstrap-icons/dist/icons/arrow-left-short.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const resetEmail = async (data) => {\n  const endpoint = `/profile/forget/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const ProfileResetUpdate = async (email) => {\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"email\": email\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  fetch(`${API_BASE_URL}/profile/forget/`, requestOptions)\n    .then((response) => response.text())\n    .then((result) => console.log(result))\n    .catch((error) => console.error(error));\n\n};\n\n\nexport const ProfileChangePassword = async (password, tokenId) => {\n  console.log('tokenId: ', tokenId);\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    \"new_password\": password\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_API_URL}/${tokenId}/`, requestOptions);\n    const result = await response.text();\n    console.log(result);\n    return result; // Return the result to handle success or error in the component\n  } catch (error) {\n    console.error(error);\n    throw error; // Throw the error to handle it in the component\n  }\n};\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import React, { useState } from \"react\";\nimport { ArrowLeftShort } from \"react-bootstrap-icons\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { resetEmail } from '../../../APIs/ProfileResetPasswordApi';\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport envelopeIcon from \"../../../assets/images/icon/envelope.svg\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport forgetyourpass from \"../../../assets/images/img/forgetyourpass.jpg\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault(); // Prevents the default form submission behavior\n    setError(null);\n\n    // Basic email format validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      await resetEmail({ email: email });\n      navigate(`/check-mail?email=${encodeURIComponent(email)}`);\n    } catch (error) {\n      if (error.message === \"Not found\") {\n        setError(\"Email does not exist\");\n      } else {\n        setError(\"Failed to send email. Please try again.\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>MeMate - Forgot Password</title>\n      </Helmet>\n      <div className=\"loginPage forgotPage\">\n        <div className=\"boxinfo\">\n          <div className=\"logohead\">\n            <img src={LoinLogo} alt=\"Loin Logo\" />\n          </div>\n          <div className=\"boxLogin\">\n            <h2>Forgot your <span>Password</span></h2>\n            <div className=\"formgroup\">\n              <form onSubmit={handleResetPassword} >\n                <label>Email<span style={{ color: \"#f04438\" }}>*</span></label>\n                <div className={`inputInfo ${error ? \"error-border\" : email ? \"successBorder\" : \"\"}`}>\n                  <img src={envelopeIcon} alt=\"Envelope Icon\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Exclamation Circle\" />\n                </div>\n                {error && <div className=\"error-message\">{error}</div>}\n                <button disabled={isLoading} className=\"fillbtn flexcenterbox\" type=\"submit\" style={{ width: '340px', height: '49px' }}>\n                  {isLoading ? <ProgressSpinner style={{ width: '20px', height: '20px' }}></ProgressSpinner>\n                    : <>Reset Password <img src={arrowRight} alt=\"Arrow Right\" /></>}\n                </button>\n              </form>\n              <Link className=\"backToLogin\" to=\"/login\" style={{ color: '#475467', fontWeight: '600', fontSize: '14px', marginTop: '32px' }}>\n                <ArrowLeftShort color=\"#475467\" size={20} />\n                Back to log in\n              </Link>\n            </div>\n          </div>\n          <div className=\"copywrite\">\n            © Memate {new Date().getFullYear()}\n          </div>\n        </div>\n        <div className=\"sliderRight SinglBgRight\" style={{\n          backgroundImage: `url(${forgetyourpass})`,\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n        }}>\n          <p>It appears your password is momentarily out of reach. Let’s retrieve it together.</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { classNames } from 'primereact/utils';\n\nvar classes = {\n  root: 'p-progress-spinner',\n  spinner: 'p-progress-spinner-svg',\n  circle: 'p-progress-spinner-circle'\n};\nvar styles = \"\\n@layer primereact {\\n    .p-progress-spinner {\\n        position: relative;\\n        margin: 0 auto;\\n        width: 100px;\\n        height: 100px;\\n        display: inline-block;\\n    }\\n    \\n    .p-progress-spinner::before {\\n        content: '';\\n        display: block;\\n        padding-top: 100%;\\n    }\\n    \\n    .p-progress-spinner-svg {\\n        animation: p-progress-spinner-rotate 2s linear infinite;\\n        height: 100%;\\n        transform-origin: center center;\\n        width: 100%;\\n        position: absolute;\\n        top: 0;\\n        bottom: 0;\\n        left: 0;\\n        right: 0;\\n        margin: auto;\\n    }\\n    \\n    .p-progress-spinner-circle {\\n        stroke-dasharray: 89, 200;\\n        stroke-dashoffset: 0;\\n        stroke: #d62d20;\\n        animation: p-progress-spinner-dash 1.5s ease-in-out infinite, p-progress-spinner-color 6s ease-in-out infinite;\\n        stroke-linecap: round;\\n    }\\n}\\n\\n@keyframes p-progress-spinner-rotate {\\n    100% {\\n        transform: rotate(360deg);\\n    }\\n}\\n\\n@keyframes p-progress-spinner-dash {\\n    0% {\\n        stroke-dasharray: 1, 200;\\n        stroke-dashoffset: 0;\\n    }\\n    50% {\\n        stroke-dasharray: 89, 200;\\n        stroke-dashoffset: -35px;\\n    }\\n    100% {\\n        stroke-dasharray: 89, 200;\\n        stroke-dashoffset: -124px;\\n    }\\n}\\n\\n@keyframes p-progress-spinner-color {\\n    100%,\\n    0% {\\n        stroke: #d62d20;\\n    }\\n    40% {\\n        stroke: #0057e7;\\n    }\\n    66% {\\n        stroke: #008744;\\n    }\\n    80%,\\n    90% {\\n        stroke: #ffa700;\\n    }\\n}\\n\";\nvar inlineStyles = {\n  spinner: function spinner(_ref) {\n    var props = _ref.props;\n    return {\n      animationDuration: props.animationDuration\n    };\n  }\n};\nvar ProgressSpinnerBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'ProgressSpinner',\n    id: null,\n    style: null,\n    className: null,\n    strokeWidth: '2',\n    fill: 'none',\n    animationDuration: '2s',\n    children: undefined\n  },\n  css: {\n    classes: classes,\n    styles: styles,\n    inlineStyles: inlineStyles\n  }\n});\n\nvar ProgressSpinner = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = ProgressSpinnerBase.getProps(inProps, context);\n  var elementRef = React.useRef(null);\n  var _ProgressSpinnerBase$ = ProgressSpinnerBase.setMetaData({\n      props: props\n    }),\n    ptm = _ProgressSpinnerBase$.ptm,\n    cx = _ProgressSpinnerBase$.cx,\n    sx = _ProgressSpinnerBase$.sx,\n    isUnstyled = _ProgressSpinnerBase$.isUnstyled;\n  useHandleStyle(ProgressSpinnerBase.css.styles, isUnstyled, {\n    name: 'progressspinner'\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var rootProps = mergeProps({\n    id: props.id,\n    ref: elementRef,\n    style: props.style,\n    className: classNames(props.className, cx('root')),\n    role: 'progressbar',\n    'aria-busy': true\n  }, ProgressSpinnerBase.getOtherProps(props), ptm('root'));\n  var spinnerProps = mergeProps({\n    className: cx('spinner'),\n    viewBox: '25 25 50 50',\n    style: sx('spinner')\n  }, ptm('spinner'));\n  var circleProps = mergeProps({\n    className: cx('circle'),\n    cx: '50',\n    cy: '50',\n    r: '20',\n    fill: props.fill,\n    strokeWidth: props.strokeWidth,\n    strokeMiterlimit: '10'\n  }, ptm('circle'));\n  return /*#__PURE__*/React.createElement(\"div\", rootProps, /*#__PURE__*/React.createElement(\"svg\", spinnerProps, /*#__PURE__*/React.createElement(\"circle\", circleProps)));\n}));\nProgressSpinner.displayName = 'ProgressSpinner';\n\nexport { ProgressSpinner };\n","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowLeftShort = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-arrow-left-short', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5\"\n  }));\n});\nArrowLeftShort.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nArrowLeftShort.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null,\n  className: ''\n};\nexport default ArrowLeftShort;"],"names":["API_BASE_URL","process","resetEmail","async","options","method","body","data","url","URL","fetchAPI","toString","ProfileChangePassword","password","tokenId","console","log","myHeaders","Headers","append","requestOptions","headers","JSON","stringify","redirect","response","fetch","result","text","error","endpoint","arguments","length","undefined","isRequiredLoggedin","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","ok","status","window","clear","sessionStorage","location","replace","Error","contentType","get","includes","json","message","ForgotPassword","navigate","useNavigate","setError","useState","email","setEmail","isLoading","setIsLoading","_jsxs","_Fragment","children","_jsx","Helmet","className","src","LoinLogo","alt","onSubmit","e","preventDefault","test","encodeURIComponent","style","color","envelopeIcon","type","placeholder","value","onChange","target","exclamationCircle","disabled","width","height","ProgressSpinner","arrowRight","Link","to","fontWeight","fontSize","marginTop","ArrowLeftShort","size","Date","getFullYear","backgroundImage","forgetyourpass","backgroundSize","backgroundRepeat","ProgressSpinnerBase","ComponentBase","extend","defaultProps","__TYPE","id","strokeWidth","fill","animationDuration","css","classes","root","spinner","circle","styles","inlineStyles","_ref","props","React","inProps","ref","mergeProps","useMergeProps","context","PrimeReactContext","getProps","elementRef","_ProgressSpinnerBase$","setMetaData","ptm","cx","sx","isUnstyled","useHandleStyle","name","getElement","current","rootProps","classNames","role","getOtherProps","spinnerProps","viewBox","circleProps","cy","r","strokeMiterlimit","displayName","_excluded","_extends","Object","assign","i","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","title","rest","xmlns","filter","Boolean","join","fillRule","d","propTypes","PropTypes"],"sourceRoot":""}