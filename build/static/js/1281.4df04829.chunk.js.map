{"version":3,"file":"static/js/1281.4df04829.chunk.js","mappings":"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","sources":["APIs/base-api.js","APIs/email-template.js","APIs/jobs-api.js","APIs/management-api.js","APIs/team-api.js","webpack://memateapp/./src/components/Work/features/create-job/create-job.module.scss?bf36","components/Work/features/create-job/create-job.js","shared/ui/circular-progressbar/index.js"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getJobTemplates = async () => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createJobTemplate = async (data) => {\n  const endpoint = `/jobs/templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateJobTemplate = async (id, data) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteJobTemplate = async (id) => {\n  const endpoint = `/jobs/templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailTemplates = async () => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailTemplate = async (data) => {\n  const endpoint = `/settings/templates/email-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailTemplate = async (id, data) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmail = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSignatureTemplates = async () => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createEmailSignature = async (data) => {\n  const endpoint = `/email-signatures/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateEmailSignature = async (id, data) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailSignature = async (id) => {\n  const endpoint = `/email-signatures/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const setDefaultEmailSignature = async (id) => {\n  const endpoint = `/settings/email-signatures/default/${id}/`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMSTemplates = async () => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getSMS = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createSMSTemplate = async (data) => {\n  const endpoint = `/sms-templates/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateSMSTemplate = async (id, data) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteSMSTemplate = async (id) => {\n  const endpoint = `/sms-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalBySalesId = async (id) => {\n  const endpoint = `/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getOutgoingEmail = async () => {\n  const endpoint = `/references/outgoing-email/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteEmailTemplates = async (id) => {\n  const endpoint = `/settings/templates/email-templates/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplates = async () => {\n  const endpoint = `/settings/proposals/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProposalsTemplate = async (id) => {\n  const endpoint = `/settings/proposals/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProposalTemplate = async (data) => {\n  const endpoint = `/settings/proposals/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProposalTemplates = async (id) => {\n  const endpoint = `/settings/proposals/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfJobs = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n    const offset = (page - 1) * limit;\n    const endpoint = `/jobs/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n    if (name) url.searchParams.append(\"name\", name);\n    if (order) url.searchParams.append(\"ordering\", order);\n    if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createNewJob = async (data) => {\n    const endpoint = '/jobs/create/';\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJob = async (id) => {\n    const endpoint = `/jobs/${id}/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getJobDashboardData = async () => {\n    const endpoint = `/dashboard/`;\n    const options = {\n        method: 'GET'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};","const API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const defaultHeaders = {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        ...headers\n    };\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            // Handle non-JSON responses\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n\nexport const updateProjectScheduleById = async (id, data) => {\n    const endpoint = `/project-card/schedule/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n    const endpoint = `/project-card/custom-status/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectReferenceById = async (id, data) => {\n    const endpoint = `/project-card/reference/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectNoteById = async (id, data) => {\n    const endpoint = `/project-card/note/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsToSalesUpdate = async (id) => {\n    const endpoint = `/projects/back/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsOrderDecline = async (id) => {\n    const endpoint = `/projects/decline/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const projectsComplete = async (id) => {\n    const endpoint = `/projects/complete/`;\n    const options = {\n        method: 'PUT',\n        body: { unique_id: id }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createInvoiceById = async (id) => {\n    const endpoint = `/invoices/create/${id}/`;\n    const options = {\n        method: 'POST'\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const createAndSendInvoiceById = async (id, data) => {\n    const endpoint = `/invoices/send/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendComposeEmail = async (id, action, data) => {\n    let endpoint;\n    if (action) endpoint = `/custom/email/${id}/${action}/`;\n    else endpoint = `/custom/email/${id}/`;\n\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const sendSms = async (id, data) => {\n    let endpoint = `/sms/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const resendQuoteEmail = async (id, data) => {\n    let endpoint = `/resend/quote/${id}/`;\n    const options = {\n        method: 'POST',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getManagement = async () => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/management/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\nexport const ProjectCardApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/${uniqueId}/`, requestOptions);\n        const result = await response.json();\n        return result; // Return the result if needed\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardScheduleUpdateApi = async (uniqueId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/schedule/${uniqueId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\nexport const cardAddNoteApi = async (projectId) => {\n    const myHeaders = new Headers();\n    const accessToken = localStorage.getItem(\"access_token\");\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n        method: \"PUT\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/project-card/sales-note/${projectId}/`, requestOptions);\n        console.log('response: ', response);\n        const result = await response.text();\n        console.log('result: ', result);\n        return result;\n    } catch (error) {\n        console.error(error);\n        throw error; // Rethrow the error if needed\n    }\n};\n\n\n\n\n\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getTeamMobileUser = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getTeamDesktopUser = async () => {\n    const endpoint = `/users/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"newJobTag\":\"create-job_newJobTag__fPJdn\",\"border\":\"create-job_border__hGK6q\",\"borderBottom\":\"create-job_borderBottom__KJ5iU\",\"background\":\"create-job_background__dGbHa\",\"customLabel\":\"create-job_customLabel__I8dZw\",\"inputBox\":\"create-job_inputBox__yF5TW\",\"chooseUserBox\":\"create-job_chooseUserBox__xDARH\",\"paymentType\":\"create-job_paymentType__oiVO6\",\"typeBorder\":\"create-job_typeBorder__O8Hp4\",\"paymentmain\":\"create-job_paymentmain__SXRTF\",\"customRadio\":\"create-job_customRadio__OfCn+\",\"fix\":\"create-job_fix__GX+LF\",\"hours\":\"create-job_hours__ZBMQO\",\"timetracker\":\"create-job_timetracker__pDwPP\",\"shift\":\"create-job_shift__yhUPp\",\"timeFrame\":\"create-job_timeFrame__V+Ijt\",\"radioLabel\":\"create-job_radioLabel__RPn7y\",\"RadioButton\":\"create-job_RadioButton__0hySC\",\"fileBox\":\"create-job_fileBox__zkj0v\",\"imgBox\":\"create-job_imgBox__Fi0m-\",\"fileType\":\"create-job_fileType__kElHf\",\"fileNameBox\":\"create-job_fileNameBox__0Vs4a\",\"deleteBox\":\"create-job_deleteBox__ZgDq5\",\"openTransition\":\"create-job_openTransition__KZ-SQ\"};","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport { Calendar3, ClockHistory, CloudUpload, X } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from 'primereact/iconfield';\nimport { InputIcon } from 'primereact/inputicon';\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Sidebar } from 'primereact/sidebar';\nimport { toast } from 'sonner';\nimport style from './create-job.module.scss';\nimport { getJobTemplate, getJobTemplates } from '../../../../APIs/email-template';\nimport { createNewJob } from '../../../../APIs/jobs-api';\nimport { getManagement } from '../../../../APIs/management-api';\nimport { getTeamMobileUser } from '../../../../APIs/team-api';\nimport { CircularProgressBar } from '../../../../shared/ui/circular-progressbar';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\n\n\nexport function getFileIcon(fileType) {\n    const fileTypes = {\n        'application/pdf': { name: 'PDF', color: '#D92D20' },\n        'application/vnd.ms-excel': { name: 'Excel', color: '#22A746' },\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': { name: 'Excel', color: '#22A746' },\n        'application/msword': { name: 'Word', color: '#2368E1' },\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': { name: 'Word', color: '#2368E1' },\n        'image/jpeg': { name: 'JPEG', color: '#FFAA00' },\n        'image/png': { name: 'PNG', color: '#00ADEF' },\n        'image/gif': { name: 'GIF', color: '#F64A8A' },\n        'video/mp4': { name: 'MP4', color: '#9C27B0' },\n        'audio/mp3': { name: 'MP3', color: '#4CAF50' },\n        'audio/wav': { name: 'WAV', color: '#795548' },\n        'text/plain': { name: 'Text', color: '#8E8E8E' },\n        'application/zip': { name: 'ZIP', color: '#FFD700' },\n        'application/json': { name: 'JSON', color: '#22A746' },\n        'image/svg+xml': { name: 'SVG', color: '#FF5722' },\n        'application/x-rar-compressed': { name: 'RAR', color: '#F44336' },\n        'application/vnd.ms-powerpoint': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': { name: 'PPT', color: '#FF9800' },\n        'application/vnd.ms-publisher': { name: 'Publisher', color: '#4CAF50' },\n        'application/x-shockwave-flash': { name: 'SWF', color: '#FFEB3B' },\n        'application/x-tar': { name: 'TAR', color: '#FFC107' },\n    };\n\n    const fileData = fileTypes[fileType] || { name: 'Unknown', color: '#000000' };\n\n    return (\n        <div className={style.imgBox}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"41\" viewBox=\"0 0 32 41\" fill=\"none\">\n                <path\n                    d=\"M0 4.5874C0 2.37826 1.79086 0.587402 4 0.587402H20L32 12.5874V36.5874C32 38.7965 30.2091 40.5874 28 40.5874H4C1.79086 40.5874 0 38.7965 0 36.5874V4.5874Z\"\n                    fill={fileData.color}\n                />\n                <path\n                    opacity=\"0.3\"\n                    d=\"M20 0.587402L32 12.5874H24C21.7909 12.5874 20 10.7965 20 8.5874V0.587402Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            <div className={style.fileType}>{fileData.name}</div>\n        </div>\n    );\n}\n\n\nconst CreateJob = ({ visible, setVisible, setRefetch, workerId }) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n\n    const [templateId, setTemplatedId] = useState(\"\");\n    const [isOpenRepeatSection, setIsOpenRepeatSection] = useState(false);\n    const [isOpenAttachmentsSection, setIsOpenAttachmentsSection] = useState(false);\n    const [isOpenProjectPhotoSection, setIsOpenProjectPhotoSection] = useState(false);\n\n    const [jobReference, setJobReference] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [userId, setUserId] = useState(\"\");\n    const [selectedUserInfo, setSelectedUserInfo] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(\"0.00\");\n    const [paymentCycle, setPaymentCycle] = useState(\"\");\n\n    const [projectId, setProjectId] = useState(\"\");\n    // const [projectReference, setProjectReference] = useState(null);\n    // const [projectDescription, setProjectDescription] = useState(null);\n    const [repeat, setRepeat] = useState('Weekly');\n    const [weeks, setWeeks] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [repeatStart, setRepeatStart] = useState(\"\");\n    const [ending, setEnding] = useState([]);\n    const [repeatEnd, setRepeatEnd] = useState(\"\");\n    const [occurrences, setOccurrences] = useState(\"\");\n\n    const [projectPhotoDeliver, setProjectPhotoDeliver] = useState(\"\");\n\n\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        onDrop: acceptedFiles => {\n            console.log('acceptedFiles: ', acceptedFiles);\n            setFiles((prevFiles) => [\n                ...prevFiles,\n                ...acceptedFiles.map((file) =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file),\n                        progress: 0,\n                    })\n                ),\n            ]);\n        }\n    });\n\n\n    const [type, setType] = useState('2');\n    const [cost, setCost] = useState(0.00);\n    const [time_type, set_time_type] = useState('');\n    const [start, setStart] = useState(\"\");\n    const [end, setEnd] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const templateQuery = useQuery({\n        queryKey: [\"jobTemplate\"],\n        queryFn: getJobTemplates,\n    });\n    const getTemplateByIDQuery = useQuery({\n        queryKey: [\"templateId\", templateId],\n        queryFn: () => getJobTemplate(templateId),\n        enabled: !!templateId,\n        retry: 1,\n    });\n\n    const mobileuserQuery = useQuery({\n        queryKey: [\"mobileuser\"],\n        queryFn: getTeamMobileUser,\n    });\n\n    const projectQuery = useQuery({\n        queryKey: [\"getManagement\"],\n        queryFn: getManagement,\n        staleTime: Infinity,\n    });\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"d-flex gap-2 align-items-center\">\n                <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                    <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                </div>\n                <div>{option.label}</div>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option, props) => {\n        if (option) {\n            return (\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <div className='d-flex justify-content-center align-items-center' style={{ width: '24px', height: '24px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                        <FallbackImage photo={option?.image} has_photo={option?.has_photo} is_business={false} size={17} />\n                    </div>\n                    <div>{option.label}</div>\n                </div>\n            );\n        }\n\n        return <span>{props.placeholder}</span>;\n    };\n\n    const reset = () => {\n        setTemplatedId(\"\");\n        setIsOpenRepeatSection(false);\n        setIsOpenAttachmentsSection(false);\n        setIsOpenProjectPhotoSection(false);\n        setJobReference(\"\");\n        setDescription(\"\");\n        setUserId(\"\");\n        setSelectedUserInfo({});\n        setHourlyRate(\"0.00\");\n        setPaymentCycle(\"\");\n        setProjectId(\"\");\n        setRepeat('Weekly');\n        setWeeks([]);\n        setMonths([]);\n        setRepeatStart(\"\");\n        setEnding([]);\n        setRepeatEnd(\"\");\n        setOccurrences(\"\");\n        setProjectPhotoDeliver(\"\");\n        setFiles([]);\n        setType('2');\n        setCost(0.00);\n        set_time_type('');\n        setStart(\"\");\n        setEnd(\"\");\n        setDuration(\"\");\n        setErrors({});\n    };\n\n    useEffect(() => {\n        if (getTemplateByIDQuery?.data) {\n            setJobReference(getTemplateByIDQuery?.data?.title || \"\");\n            setDescription(getTemplateByIDQuery?.data?.description || \"\");\n            setErrors((others) => ({ ...others, jobReference: false }));\n            setErrors((others) => ({ ...others, description: false }));\n        }\n    }, [getTemplateByIDQuery?.data]);\n\n    const uploadToS3 = async (file, url) => {\n        return axios.put(url, file, {\n            headers: {\n                \"Content-Type\": \"\",\n            },\n            onUploadProgress: (progressEvent) => {\n                const progress = Math.round(\n                    (progressEvent.loaded / progressEvent.total) * 100\n                );\n                setFiles((prevFiles) => {\n                    return prevFiles.map((f) =>\n                        f.name === file.name\n                            ? Object.assign(f, { progress, url })\n                            : f\n                    );\n                });\n            },\n        }).catch((err) => {\n            console.log('err: ', err);\n            setFiles((prevFiles) => {\n                return prevFiles.map((f) =>\n                    f.name === file.name\n                        ? Object.assign(f, { progress: 0, url, error: true })\n                        : f\n                );\n            });\n        });\n    };\n\n    const attachmentsUpdateInJob = async (id) => {\n        let attachments = [];\n        for (const file of files) {\n            let obj = {\n                \"name\": file?.name,\n                \"link\": file?.url?.split(\"?\")[0] || \"\",\n                \"size\": file?.size\n            };\n            attachments.push(obj);\n        }\n\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/${id}/`,\n                { attachments: attachments || [] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                }\n            );\n            console.log('response', response);\n        } catch (err) {\n            console.error(\"Error uploading file:\", err);\n            toast.error(`Failed to update attachments in DB. Please try again.`);\n        }\n    };\n\n    const fileUploadBySignedURL = async (id) => {\n        if (!files.length) return;\n        if (!id) return toast.error(`Job id not found`);\n\n        for (const file of files) {\n            try {\n                // Step 1: Get the signed URL from the backend\n                const response = await axios.post(\n                    `${process.env.REACT_APP_BACKEND_API_URL}/jobs/attachments/url/${id}/`,\n                    { filename: file.name },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n                    }\n                );\n\n                const { url } = response.data;\n\n                // Step 2: Upload the file to S3 using the signed URL\n                await uploadToS3(file, url);\n            } catch (error) {\n                console.error(\"Error uploading file:\", file.name, error);\n                toast.error(`Failed to upload ${file.name}. Please try again.`);\n            }\n        }\n    };\n\n    const mutation = useMutation({\n        mutationFn: (data) => createNewJob(data),\n        onSuccess: async (response) => {\n            await fileUploadBySignedURL(response.id);\n            await attachmentsUpdateInJob(response.id);\n            toast.success(`Job created successfully`);\n            setVisible(false);\n            setRefetch((refetch) => !refetch);\n            reset();\n        },\n        onError: (error) => {\n            console.error('Error creating expense:', error);\n            toast.error('Failed to create job. Please try again.');\n        }\n    });\n\n    const onSubmit = () => {\n        // Initialize a temporary errors object\n        const tempErrors = {\n            jobReference: false,\n            description: false,\n            userId: false,\n            type: false,\n            cost: false,\n            duration: false,\n            time_type: false,\n            start: false,\n            end: false,\n            projectId: false\n        };\n\n        const payload = {};\n\n        if (!jobReference) tempErrors.jobReference = true;\n        else payload.short_description = jobReference;\n\n        if (description) payload.long_description = description;\n\n        if (!userId) tempErrors.userId = true;\n        else payload.worker = userId;\n\n        if (!type) tempErrors.type = true;\n        else payload.type = type;\n\n        if (type === '2' && !cost) tempErrors.cost = true;\n        else payload.cost = cost;\n\n        if (type !== '2' && !duration) tempErrors.duration = true;\n        else if (duration) payload.duration = +duration;\n\n        if (!time_type) tempErrors.time_type = true;\n        else payload.time_type = time_type;\n\n        if (!start) tempErrors.start = true;\n        else payload.start_date = new Date(start).toISOString();\n\n        if (time_type !== '1' && !end) tempErrors.end = true;\n        else if (end) payload.end_date = new Date(end).toISOString();\n\n        // if (!projectId) tempErrors.projectId = true;\n        if (projectId) payload.project = projectId;\n\n        payload.project_photos = projectPhotoDeliver;\n\n        // Batch update errors at the end\n        setErrors(tempErrors);\n\n        // Check if there are no errors and proceed\n        if (!Object.values(tempErrors).includes(true)) {\n            mutation.mutate(payload);\n        }\n    };\n\n    const workerDetailsSet = (id) => {\n        let user = mobileuserQuery?.data?.users?.find(user => user.id === id);\n        let paymentCycleObj = {\n            \"7\": \"WEEK\",\n            \"14\": \"TWO_WEEKS\",\n            \"28\": \"FOUR_WEEKS\",\n            \"1\": \"MONTH\"\n        };\n        if (user) {\n            setSelectedUserInfo({\n                hourlyRate: parseFloat(user?.hourly_rate || 0).toFixed(2),\n                paymentCycle: paymentCycleObj[user?.payment_cycle] || \"\",\n                image: user?.photo || \"\",\n                has_photo: user?.has_photo,\n                name: `${user.first_name} ${user.last_name}`,\n            });\n        }\n\n    };\n\n    useEffect(() => {\n        if (workerId) {\n            setUserId(+workerId);\n            workerDetailsSet(+workerId);\n        }\n    }, [workerId]);\n\n    return (\n        <Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)} modal={false} dismissable={false} style={{ width: '702px' }}\n            content={({ closeIconRef, hide }) => (\n                <div className='create-sidebar d-flex flex-column'>\n                    <div className=\"d-flex align-items-center justify-content-between flex-shrink-0\" style={{ borderBottom: '1px solid #EAECF0', padding: '12px' }}>\n                        <div className=\"d-flex align-items-center gap-3\">\n                            <div style={{ position: 'relative', textAlign: 'start' }}>\n                                <Dropdown\n                                    options={\n                                        (templateQuery &&\n                                            templateQuery.data?.map((template) => ({\n                                                value: template.id,\n                                                label: `${template.name}`,\n                                            }))) ||\n                                        []\n                                    }\n                                    className={clsx(\n                                        style.dropdownSelect,\n                                        \"dropdown-height-fixed\",\n                                        \"outline-none\"\n                                    )}\n                                    style={{ height: \"44px\", width: '606px' }}\n                                    placeholder=\"Select template\"\n                                    onChange={(e) => {\n                                        setTemplatedId(e.value);\n                                    }}\n                                    value={templateId}\n                                    loading={templateQuery?.isFetching}\n                                    filter\n                                />\n                            </div>\n                        </div>\n                        <span>\n                            <Button type=\"button\" className='text-button' ref={closeIconRef} onClick={(e) => hide(e)}>\n                                <X size={24} color='#667085' />\n                            </Button>\n                        </span>\n                    </div>\n\n                    <div className='modal-body' style={{ padding: '24px', height: 'calc(100vh - 68px - 80px)', overflow: 'auto' }}>\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx('d-flex justify-content-between align-items-center', style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Job Details</h1>\n                                <div className={clsx(style.newJobTag, 'mb-0')}>New Job</div>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={jobReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setJobReference(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, jobReference: false }));\n                                                }}\n                                                placeholder=\"Enter job reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.jobReference && (\n                                        <p className=\"error-message mb-0\">{\"Job reference is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Job Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {getTemplateByIDQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={description}\n                                                className={clsx(style.inputBox, 'w-100 outline-none')}\n                                                onChange={(e) => {\n                                                    setDescription(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, description: false }));\n                                                }}\n                                                style={{\n                                                    height: '126px'\n                                                }}\n                                                placeholder=\"Enter the detailed quote for the client contract here. Include all relevant information such as project scope, deliverables, timelines, costs, payment terms, and any special conditions. Ensure the quote is clear, comprehensive, and aligns with the client's requirements and expectations.\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                    {errors?.description && (\n                                        <p className=\"error-message mb-0\">{\"Description is required\"}</p>\n                                    )}\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Header className={clsx(style.background, 'border-0 py-4')}>\n                                <h1 className='font-16 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Assigned to*</h1>\n                                <Row>\n                                    <Col sm={5} className='d-flex align-items-center'>\n                                        <div style={{ position: 'relative', textAlign: 'start' }}>\n                                            <label className={clsx(style.customLabel)}>Choose User</label>\n                                            <Dropdown\n                                                options={\n                                                    (mobileuserQuery &&\n                                                        mobileuserQuery.data?.users?.filter((user) => user.status !== 'disconnected')?.map((user) => ({\n                                                            value: user.id,\n                                                            label: `${user.first_name} ${user.last_name}`,\n                                                            image: user?.photo,\n                                                            has_photo: user?.has_photo\n                                                        }))) ||\n                                                    []\n                                                }\n                                                itemTemplate={itemTemplate}\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\"\n                                                )}\n                                                style={{ height: \"44px\", width: '245px' }}\n                                                placeholder=\"Select user\"\n                                                onChange={(e) => {\n                                                    setUserId(e.value);\n                                                    workerDetailsSet(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, userId: false }));\n                                                }}\n                                                value={userId}\n                                                valueTemplate={selectedItemTemplate}\n                                                loading={mobileuserQuery?.isFetching}\n                                                filter\n                                                disabled={!!workerId}\n                                            />\n                                            {errors?.userId && (\n                                                <p className=\"error-message mb-0\">{\"Worker is required\"}</p>\n                                            )}\n                                        </div>\n                                    </Col>\n                                    <Col sm={7}>\n                                        <Row className={clsx(style.chooseUserBox, 'flex-nowrap')}>\n                                            <Col sm={2} className='p-0'>\n                                                <div className='d-flex justify-content-center align-items-center' style={{ width: '62px', height: '62px', borderRadius: '50%', overflow: 'hidden', border: '1px solid #dedede' }}>\n                                                    <FallbackImage photo={selectedUserInfo?.image} has_photo={selectedUserInfo?.has_photo} is_business={false} size={40} />\n                                                </div>\n                                            </Col>\n                                            <Col sm={5} className='pe-0 ps-0'>\n                                                <label className={clsx(style.customLabel, 'text-nowrap')}>{selectedUserInfo?.name || \"-\"}</label>\n                                                <div style={{ background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center' }}>Employee</div>\n                                            </Col>\n                                            <Col sm={5} className=''>\n                                                <div className='d-flex align-items-center gap-2 mb-3'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>$</div>\n                                                    <span>{selectedUserInfo?.hourlyRate || \"-\"} AUD</span>\n                                                </div>\n                                                <div className='d-flex align-items-center gap-2'>\n                                                    <div style={{ width: '16px', height: '16px', background: '#EBF8FF', border: '1px solid #A3E0FF', borderRadius: '23px', textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><Calendar3 color=\"#158ECC\" size={16} /></div>\n                                                    <span>{selectedUserInfo?.paymentCycle || \"-\"}</span>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Time / Money</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0 pt-2', style.borderBottom)}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Payment Type</label>\n                                    <div className={style.paymentmain}>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"fix\"\n                                                name=\"paymentype\"\n                                                value=\"2\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"2\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '2'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"fix\" className={clsx(style.radioLabel, style.fix)}>Fix</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"hours\"\n                                                name=\"paymentype\"\n                                                value=\"3\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"3\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '3'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"hours\" className={clsx(style.radioLabel, style.hours)}>Hours</label>\n                                        </div>\n                                        <span>OR</span>\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timetracker\"\n                                                name=\"paymentype\"\n                                                value=\"4\"\n                                                onChange={(e) => {\n                                                    setType(e.target.value);\n                                                    if (e.target.value === \"4\")\n                                                        setErrors((others) => ({ ...others, type: false }));\n                                                }}\n                                                checked={type === '4'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timetracker\" className={clsx(style.radioLabel, style.timetracker)}>Time Tracker</label>\n                                        </div>\n                                    </div>\n                                    {errors?.type && (\n                                        <p className=\"error-message mb-0\">{\"Payment Type is required\"}</p>\n                                    )}\n                                    {\n                                        type === \"2\" ? <>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2')}>Payment</label>\n                                            <IconField iconPosition=\"left\">\n                                                <InputIcon><span style={{ position: 'relative', top: '-4px' }}>$</span></InputIcon>\n                                                <InputText value={cost} onChange={(e) => {\n                                                    setCost(e.target.value);\n                                                    if (e.target.value)\n                                                        setErrors((others) => ({ ...others, cost: false }));\n                                                }} keyfilter={\"num\"} onBlur={(e) => setCost(parseFloat(e?.target?.value || 0).toFixed(2))} style={{ paddingLeft: '28px', width: '230px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='20' />\n                                            </IconField>\n                                            {errors?.cost && (\n                                                <p className=\"error-message mb-0\">{\"Payment is required\"}</p>\n                                            )}\n                                        </>\n                                            : <div style={{ width: 'fit-content' }}>\n                                                <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>{type === '3' ? \"Hours\" : \"Time Estimation\"}</label>\n                                                <IconField iconPosition=\"left\">\n                                                    <InputIcon><span style={{ position: 'relative', top: '-4px' }}>H</span></InputIcon>\n                                                    <InputText value={duration} onChange={(e) => {\n                                                        setDuration(e.target.value);\n                                                        if (e.target.value)\n                                                            setErrors((others) => ({ ...others, duration: false }));\n                                                    }} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '28px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                                </IconField>\n                                                {errors?.duration && (\n                                                    <p className=\"error-message mb-0\">{type === '3' ? \"Hours is required\" : \"Time Estimation is required\"}</p>\n                                                )}\n                                            </div>\n                                    }\n                                </div>\n                            </Card.Header>\n                            <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className={style.paymentType}>\n                                    <label className={clsx(style.lable)}>Time</label>\n                                    <div className={style.paymentmain}>\n                                        {\n                                            type !== \"4\" && <>\n                                                <div className={`flex align-items-center ${style.RadioButton}`}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id=\"shift\"\n                                                        name=\"timetype\"\n                                                        value=\"1\"\n                                                        onChange={(e) => {\n                                                            set_time_type(e.target.value);\n                                                            if (e.target.value === \"1\")\n                                                                setErrors((others) => ({ ...others, time_type: false }));\n                                                        }}\n                                                        checked={time_type === '1'}\n                                                        className={style.customRadio}\n                                                    />\n                                                    <label htmlFor=\"shift\" className={clsx(style.radioLabel, style.shift)}>Shift</label>\n                                                </div>\n                                                <span>OR</span>\n                                            </>\n                                        }\n\n                                        <div className={`flex align-items-center ${style.RadioButton}`}>\n                                            <input\n                                                type=\"radio\"\n                                                id=\"timeframe\"\n                                                name=\"timetype\"\n                                                value=\"T\"\n                                                onChange={(e) => {\n                                                    set_time_type(e.target.value);\n                                                    if (e.target.value === \"T\")\n                                                        setErrors((others) => ({ ...others, time_type: false }));\n                                                }}\n                                                checked={time_type === 'T'}\n                                                className={style.customRadio}\n                                            />\n                                            <label htmlFor=\"timeframe\" className={clsx(style.radioLabel, style.timeFrame)}>Time Frame</label>\n                                        </div>\n                                    </div>\n                                    {errors?.time_type && (\n                                        <p className=\"error-message mb-0\">{\"Time type is required\"}</p>\n                                    )}\n                                </div>\n\n                                <div className='d-flex gap-2'>\n                                    <div className='form-group'>\n                                        <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Starts</label>\n                                        <Calendar\n                                            value={start}\n                                            onChange={(e) => {\n                                                setStart(e.value);\n                                                if (e.value)\n                                                    setErrors((others) => ({ ...others, start: false }));\n                                            }}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                            hourFormat=\"24\"\n                                            showTime\n                                        />\n                                        {errors?.start && (\n                                            <p className=\"error-message mb-0\">{\"Start is required\"}</p>\n                                        )}\n                                    </div>\n                                    {\n                                        time_type !== '1' && <div className='form-group'>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>End</label>\n                                            <Calendar\n                                                value={end}\n                                                onChange={(e) => {\n                                                    setEnd(e.value);\n                                                    if (e.value)\n                                                        setErrors((others) => ({ ...others, end: false }));\n                                                }}\n                                                showButtonBar\n                                                placeholder='20 Jun 2021'\n                                                dateFormat=\"dd M yy\"\n                                                showIcon\n                                                style={{ height: '46px', width: '230px', overflow: 'hidden' }}\n                                                icon={<Calendar3 color='#667085' size={20} />}\n                                                className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                hourFormat=\"24\"\n                                                showTime\n                                            />\n                                            {errors?.end && (\n                                                <p className=\"error-message mb-0\">{\"End is required\"}</p>\n                                            )}\n                                        </div>\n                                    }\n                                    {\n                                        (time_type === '1' || (time_type !== '1' && type === '4')) && <div style={{ width: 'fit-content' }}>\n                                            <label className={clsx(style.lable, 'mt-4 mb-2 d-block')}>Hours</label>\n                                            <IconField iconPosition=\"right\">\n                                                <InputIcon><ClockHistory color='#667085' size={20} style={{ position: 'relative', top: '-5px' }} /></InputIcon>\n                                                <InputText value={duration} onChange={(e) => setDuration(e.target.value)} keyfilter={\"num\"} onBlur={(e) => setDuration(parseFloat(e?.target?.value || 0).toFixed(1))} style={{ paddingLeft: '12px', width: '150px' }} className={clsx(style.inputBox, \"outline-none\")} placeholder='1.0' />\n                                            </IconField>\n                                        </div>\n                                    }\n                                </div>\n\n                            </Card.Header>\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom)}>\n                                <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Link to Project</h1>\n                            </Card.Body>\n                            <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                <div style={{ position: 'relative', textAlign: 'start' }}>\n                                    <label className={clsx(style.customLabel)}>Project</label>\n                                    <Dropdown\n                                        options={\n                                            (projectQuery &&\n                                                projectQuery.data?.map((project) => ({\n                                                    value: project.unique_id,\n                                                    label: `${project.reference} - ${project.number}`\n                                                }))) ||\n                                            []\n                                        }\n                                        className={clsx(\n                                            style.dropdownSelect,\n                                            \"dropdown-height-fixed\",\n                                            \"outline-none\",\n                                            \"mb-3\"\n                                        )}\n                                        style={{ height: \"44px\", width: '100%' }}\n                                        placeholder=\"Select project\"\n                                        onChange={(e) => {\n                                            setProjectId(e.value);\n                                            if (e.value)\n                                                setErrors((others) => ({ ...others, projectId: false }));\n                                        }}\n                                        value={projectId}\n                                        loading={projectQuery?.isFetching}\n                                        filter\n                                    />\n                                    {errors?.projectId && (\n                                        <p className=\"error-message mb-0\">{\"Project is required\"}</p>\n                                    )}\n                                </div>\n                            </Card.Header>\n                            {/* <Card.Header className={clsx(style.background, 'border-0')}>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Reference</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-5px' }} />}\n                                            </InputIcon>\n                                            <InputText\n                                                value={projectReference}\n                                                className={clsx(style.inputBox, 'w-100')}\n                                                onChange={(e) => {\n                                                    setProjectReference(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectReference: false }));\n                                                }}\n                                                placeholder=\"Enter project reference\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                                <div className='form-group mb-3'>\n                                    <label className={clsx(style.customLabel)}>Description</label>\n                                    <div style={{ position: 'relative' }}>\n                                        <IconField>\n                                            <InputIcon>\n                                                {projectQuery?.isFetching && <ProgressSpinner style={{ width: '20px', height: '20px', position: 'relative', top: '-40px' }} />}\n                                            </InputIcon>\n                                            <InputTextarea\n                                                value={projectDescription}\n                                                style={{ height: '120px' }}\n                                                className={clsx(style.inputBox, 'w-100 outline-0')}\n                                                onChange={(e) => {\n                                                    setProjectDescription(e.target.value);\n                                                    setErrors((others) => ({ ...others, projectDescription: false }));\n                                                }}\n                                                placeholder=\"Enter a description...\"\n                                            />\n                                        </IconField>\n                                    </div>\n                                </div>\n                            </Card.Header> */}\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenRepeatSection(!isOpenRepeatSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Set to repeat</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenRepeatSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenRepeatSection && <div className={style.openTransition}>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex align-items-center gap-4 py-1'>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Weekly\" name=\"repeat\" value=\"Weekly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Weekly'} />\n                                                <label htmlFor=\"Weekly\" className=\"ms-2 cursor-pointer\">Weekly</label>\n                                            </div>\n                                            <div className=\"flex align-items-center\">\n                                                <RadioButton inputId=\"Monthly\" name=\"repeat\" value=\"Monthly\" onChange={(e) => setRepeat(e.value)} checked={repeat === 'Monthly'} />\n                                                <label htmlFor=\"Monthly\" className=\"ms-2 cursor-pointer\">Monthly</label>\n                                            </div>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-2'>Repeat on</label>\n                                            {\n                                                repeat === 'Weekly' && <div className='d-flex gap-3 align-items-center'>\n                                                    {\n                                                        ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) =>\n                                                            <button key={day} onClick={() => {\n                                                                setWeeks((prevWeeks) =>\n                                                                    prevWeeks.includes(index)\n                                                                        ? prevWeeks.filter((d) => d !== index)\n                                                                        : [...prevWeeks, index]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': weeks.includes(index) })}>\n                                                                {day}\n                                                            </button>\n                                                        )\n                                                    }\n                                                </div>\n                                            }\n                                            {\n                                                repeat === 'Monthly' && <div className='d-flex gap-2 align-items-center flex-wrap'>\n                                                    {\n                                                        Array.from({ length: 31 }, (_, i) => i + 1).map((month) => (\n                                                            <button key={month} onClick={() => {\n                                                                setMonths((prevMonths) =>\n                                                                    prevMonths.includes(month)\n                                                                        ? prevMonths.filter((m) => m !== month)\n                                                                        : [...prevMonths, month]\n                                                                );\n                                                            }} className={clsx('outline-button', { 'active-outline-button': months.includes(month) })}>\n                                                                {month}\n                                                            </button>\n                                                        ))\n                                                    }\n                                                </div>\n                                            }\n                                            {errors?.on && (\n                                                <p className=\"error-message mb-0\">{\"Repeats on are required\"}</p>\n                                            )}\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0', style.borderBottom)}>\n                                        <label className='mb-2'>Starts</label>\n                                        <Calendar\n                                            value={repeatStart}\n                                            onChange={(e) => setRepeatStart(e.value)}\n                                            showButtonBar\n                                            placeholder='17 Jun 2021'\n                                            dateFormat=\"dd M yy\"\n                                            showIcon\n                                            style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                            icon={<Calendar3 color='#667085' size={20} />}\n                                            className={clsx(style.inputBox, 'p-0 outline-none')}\n                                        />\n                                        {errors?.repeatStart && (\n                                            <p className=\"error-message mb-0\">{\"Starts is required\"}</p>\n                                        )}\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex', style.borderBottom)}>\n                                        <div className='d-flex flex-column'>\n                                            <label className='mb-1'>Ends</label>\n                                            <div className='d-flex align-items-center gap-4 py-1'>\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"On\" name=\"ending\" value=\"On\" onChange={(e) => setEnding(e.value)} checked={repeat === 'On'} />\n                                                    <label htmlFor=\"On\" className=\"ms-2 cursor-pointer\">On</label>\n                                                </div>\n                                                <Calendar\n                                                    value={repeatEnd}\n                                                    onChange={(e) => setRepeatEnd(e.value)}\n                                                    showButtonBar\n                                                    placeholder='20 Jun 2021'\n                                                    dateFormat=\"dd M yy\"\n                                                    showIcon\n                                                    style={{ height: '46px', width: '180px', overflow: 'hidden' }}\n                                                    icon={<Calendar3 color='#667085' size={20} />}\n                                                    className={clsx(style.inputBox, 'p-0 outline-none')}\n                                                />\n                                                <div className=\"flex align-items-center\">\n                                                    <RadioButton inputId=\"Never\" name=\"ending\" value=\"Never\" onChange={(e) => setEnding(e.value)} checked={repeat === 'Never'} />\n                                                    <label htmlFor=\"Never\" className=\"ms-2 cursor-pointer\">Never</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='d-flex flex-column ms-3'>\n                                            <label className='mb-1'>Occurrences</label>\n                                            <Dropdown\n                                                options={\n                                                    [\n                                                        { label: 1, value: 1 },\n                                                        { label: 2, value: 2 },\n                                                        { label: 3, value: 3 },\n                                                        { label: 4, value: 4 },\n                                                        { label: 5, value: 5 },\n                                                        { label: 6, value: 6 },\n                                                        { label: 7, value: 7 },\n                                                    ]\n                                                }\n                                                className={clsx(\n                                                    style.dropdownSelect,\n                                                    \"dropdown-height-fixed\",\n                                                    \"outline-none\",\n                                                    \"mb-3\"\n                                                )}\n                                                style={{ height: \"44px\", width: '100%' }}\n                                                placeholder=\"Select Occurrences\"\n                                                onChange={(e) => {\n                                                    setProjectId(e.value);\n                                                }}\n                                                value={projectId}\n                                                loading={projectQuery?.isFetching}\n                                                filter\n                                            />\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <label className='mb-1'>Set Schedule Ahead</label>\n                                        <Dropdown\n                                            options={\n                                                [\n                                                    { label: \"1 Week\", value: 1 },\n                                                    { label: \"2 Week\", value: 2 },\n                                                    { label: \"3 Week\", value: 3 },\n                                                    { label: \"4 Week\", value: 4 },\n                                                    { label: \"5 Week\", value: 5 },\n                                                    { label: \"6 Week\", value: 6 },\n                                                    { label: \"7 Week\", value: 7 },\n                                                ]\n                                            }\n                                            className={clsx(\n                                                style.dropdownSelect,\n                                                \"dropdown-height-fixed\",\n                                                \"outline-none\",\n                                                \"mb-3\"\n                                            )}\n                                            style={{ height: \"44px\", width: '250px' }}\n                                            placeholder=\"Select week\"\n                                            onChange={(e) => {\n                                                setOccurrences(e.value);\n                                            }}\n                                            value={occurrences}\n                                        />\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                        <Button className='outline-button'>Cancel</Button>\n                                        <Button className='outline-button active-outline-button'>Apply</Button>\n                                    </Card.Header>\n                                </div>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenProjectPhotoSection(!isOpenProjectPhotoSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Project Photos</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenProjectPhotoSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenProjectPhotoSection && <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between', style.borderBottom)}>\n                                    <div className='d-flex align-items-center gap-4 py-1'>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"Before and After\" name=\"projectPhotoDeliver\" value=\"1\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '1'} />\n                                            <label htmlFor=\"Before and After\" className=\"ms-2 cursor-pointer\">Before and After</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"After\" name=\"projectPhotoDeliver\" value=\"2\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver === '2'} />\n                                            <label htmlFor=\"After\" className=\"ms-2 cursor-pointer\">Photos Of the Process</label>\n                                        </div>\n                                        <div className=\"flex align-items-center\">\n                                            <RadioButton inputId=\"All\" name=\"projectPhotoDeliver\" value=\"3\" onChange={(e) => setProjectPhotoDeliver(e.value)} checked={projectPhotoDeliver == '3'} />\n                                            <label htmlFor=\"All\" className=\"ms-2 cursor-pointer\">All</label>\n                                        </div>\n                                    </div>\n                                </Card.Header>\n                            }\n                        </Card>\n\n                        <Card className={clsx(style.border, 'mb-3')}>\n                            <Card.Body className={clsx(style.borderBottom, 'cursor-pointer')} onClick={() => setIsOpenAttachmentsSection(!isOpenAttachmentsSection)}>\n                                <div className='d-flex justify-content-between align-items-center'>\n                                    <h1 className='font-16 mb-0 font-weight-light' style={{ color: '#475467', fontWeight: 400 }}>Attachments</h1>\n                                    <button className='text-button p-0'>\n                                        {\n                                            isOpenAttachmentsSection ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.3536 7.35355C13.1583 7.54882 12.8417 7.54882 12.6464 7.35355L7 1.70711L1.35355 7.35355C1.15829 7.54881 0.841709 7.54881 0.646446 7.35355C0.451184 7.15829 0.451184 6.84171 0.646446 6.64645L6.64645 0.646446C6.84171 0.451184 7.15829 0.451184 7.35355 0.646446L13.3536 6.64645C13.5488 6.84171 13.5488 7.15829 13.3536 7.35355Z\" fill=\"#344054\" />\n                                            </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.64645 4.64645C1.84171 4.45118 2.15829 4.45118 2.35355 4.64645L8 10.2929L13.6464 4.64645C13.8417 4.45118 14.1583 4.45118 14.3536 4.64645C14.5488 4.84171 14.5488 5.15829 14.3536 5.35355L8.35355 11.3536C8.15829 11.5488 7.84171 11.5488 7.64645 11.3536L1.64645 5.35355C1.45118 5.15829 1.45118 4.84171 1.64645 4.64645Z\" fill=\"#344054\" />\n                                            </svg>\n                                        }\n                                    </button>\n                                </div>\n                            </Card.Body>\n                            {\n                                isOpenAttachmentsSection && <>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex justify-content-between')}>\n                                        <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                                            <input {...getInputProps()} />\n                                            <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                                                <CloudUpload />\n                                            </button>\n                                            <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                                            <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                                        </div>\n                                    </Card.Header>\n                                    <Card.Header className={clsx(style.background, 'border-0 d-flex flex-column', style.borderBottom)}>\n                                        <div className='d-flex flex-column gap-3'>\n                                            {\n                                                files?.map((file, index) => (\n                                                    <div key={index} className={style.fileBox}>\n                                                        {getFileIcon(file.type)}\n                                                        <div className={style.fileNameBox}>\n                                                            <p className='mb-0'>{file?.name || \"\"}</p>\n                                                            <p className='mb-0'>{parseFloat(file?.size / 1024).toFixed(2)} KB - {parseInt(file?.progress) || 0}% uploaded</p>\n                                                        </div>\n                                                        <div className='ms-auto'>\n                                                            <CircularProgressBar percentage={parseInt(file?.progress) || 0} size={30} color=\"#158ECC\" />\n                                                            {/* <div className={style.deleteBox}>\n                                                                <Trash color='#F04438' size={16} />\n                                                            </div> */}\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    </Card.Header>\n                                </>\n                            }\n                        </Card>\n\n\n                    </div>\n\n                    <div className='modal-footer d-flex align-items-center justify-content-end gap-3' style={{ padding: '16px 24px', borderTop: \"1px solid var(--Gray-200, #EAECF0)\", height: '72px' }}>\n                        <Button type='button' onClick={(e) => { e.stopPropagation(); setVisible(false); }} className='outline-button'>Cancel</Button>\n                        {/*  onSubmit ()=>fileUploadBySignedURL(128) */}\n                        <Button type='button' onClick={onSubmit} className='solid-button' style={{ minWidth: '75px' }} disabled={mutation?.isPending}>Create {mutation?.isPending && <ProgressSpinner\n                            style={{ width: \"20px\", height: \"20px\", color: \"#fff\" }}\n                        />}</Button>\n                    </div>\n                </div>\n            )}\n        ></Sidebar>\n    );\n};\n\nexport default CreateJob;","export const CircularProgressBar = ({ percentage, size = 100, strokeWidth = 4, color = \"#4CAF50\", background = \"#ddd\" }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference - (percentage / 100) * circumference;\n\n    return (\n        <svg width={size} height={size}>\n            {/* Background Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={background}\n                strokeWidth={strokeWidth}\n            />\n            {/* Progress Circle */}\n            <circle\n                cx={size / 2}\n                cy={size / 2}\n                r={radius}\n                fill=\"none\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={progressOffset}\n                strokeLinecap=\"round\"\n                style={{ transition: 'stroke-dashoffset 0.3s ease' }}\n            />\n        </svg>\n    );\n};"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","Error","contentType","get","includes","json","message","text","error","console","API_BASE_URL","process","getJobTemplates","toString","getJobTemplate","id","createJobTemplate","data","updateJobTemplate","deleteJobTemplate","getEmailTemplates","createEmailTemplate","updateEmailTemplate","getEmail","getSignatureTemplates","getEmailSignature","createEmailSignature","updateEmailSignature","deleteEmailSignature","setDefaultEmailSignature","getSMSTemplates","getSMS","createSMSTemplate","updateSMSTemplate","deleteSMSTemplate","getProposalBySalesId","getOutgoingEmail","deleteEmailTemplates","getProposalsTemplates","getProposalsTemplate","deleteProposalTemplates","getListOfJobs","page","limit","name","order","isShowDeleted","offset","searchParams","append","createNewJob","getJob","getJobDashboardData","updateProjectScheduleById","updateProjectStatusById","updateProjectReferenceById","createProjectNoteById","projectsToSalesUpdate","unique_id","projectsOrderDecline","projectsComplete","createInvoiceById","createAndSendInvoiceById","sendComposeEmail","action","sendSms","resendQuoteEmail","getManagement","myHeaders","Headers","ProjectCardApi","uniqueId","getTeamMobileUser","getTeamDesktopUser","getFileIcon","fileType","fileData","color","_jsxs","className","style","imgBox","children","xmlns","width","height","viewBox","fill","_jsx","d","opacity","_ref","visible","setVisible","setRefetch","workerId","templateId","setTemplatedId","useState","isOpenRepeatSection","setIsOpenRepeatSection","isOpenAttachmentsSection","setIsOpenAttachmentsSection","isOpenProjectPhotoSection","setIsOpenProjectPhotoSection","jobReference","setJobReference","description","setDescription","userId","setUserId","selectedUserInfo","setSelectedUserInfo","hourlyRate","setHourlyRate","paymentCycle","setPaymentCycle","projectId","setProjectId","repeat","setRepeat","weeks","setWeeks","months","setMonths","repeatStart","setRepeatStart","ending","setEnding","repeatEnd","setRepeatEnd","occurrences","setOccurrences","projectPhotoDeliver","setProjectPhotoDeliver","files","setFiles","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","log","prevFiles","map","file","Object","assign","preview","createObjectURL","progress","type","setType","cost","setCost","time_type","set_time_type","start","setStart","end","setEnd","duration","setDuration","errors","setErrors","templateQuery","useQuery","queryKey","queryFn","getTemplateByIDQuery","enabled","retry","mobileuserQuery","projectQuery","staleTime","Infinity","itemTemplate","option","borderRadius","overflow","border","FallbackImage","photo","image","has_photo","is_business","size","label","selectedItemTemplate","props","placeholder","useEffect","_getTemplateByIDQuery","_getTemplateByIDQuery2","title","others","uploadToS3","axios","put","onUploadProgress","progressEvent","Math","round","loaded","total","f","catch","err","mutation","useMutation","mutationFn","onSuccess","toast","post","filename","Authorization","fileUploadBySignedURL","attachments","_file$url","obj","split","push","attachmentsUpdateInJob","success","refetch","onError","onSubmit","tempErrors","payload","short_description","long_description","worker","start_date","Date","toISOString","end_date","project","project_photos","values","mutate","workerDetailsSet","_mobileuserQuery$data","_mobileuserQuery$data2","user","users","find","paymentCycleObj","parseFloat","hourly_rate","toFixed","payment_cycle","first_name","last_name","Sidebar","position","onHide","modal","dismissable","content","_ref2","_templateQuery$data","_mobileuserQuery$data3","_mobileuserQuery$data4","_mobileuserQuery$data5","_projectQuery$data","closeIconRef","hide","borderBottom","padding","textAlign","Dropdown","template","value","clsx","dropdownSelect","onChange","e","loading","isFetching","filter","Button","ref","onClick","X","Card","Body","fontWeight","newJobTag","Header","background","customLabel","IconField","InputIcon","ProgressSpinner","top","InputText","inputBox","target","InputTextarea","Row","Col","sm","valueTemplate","disabled","chooseUserBox","display","alignItems","justifyContent","Calendar3","paymentType","lable","paymentmain","RadioButton","checked","customRadio","htmlFor","radioLabel","fix","hours","timetracker","_Fragment","iconPosition","keyfilter","onBlur","_e$target","paddingLeft","_e$target2","shift","timeFrame","Calendar","showButtonBar","dateFormat","showIcon","icon","hourFormat","showTime","ClockHistory","_e$target3","reference","number","fillRule","clipRule","openTransition","inputId","day","index","prevWeeks","Array","from","_","i","month","prevMonths","m","on","marginTop","marginBottom","CloudUpload","fontSize","fileBox","fileNameBox","parseInt","CircularProgressBar","percentage","borderTop","stopPropagation","minWidth","isPending","strokeWidth","radius","circumference","PI","progressOffset","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","transition"],"sourceRoot":""}