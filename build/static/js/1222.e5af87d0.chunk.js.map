{"version":3,"file":"static/js/1222.e5af87d0.chunk.js","mappings":"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","sources":["APIs/SettingsGeneral.js","webpack://memateapp/./src/components/layout/settings/generalinformation/general.module.scss?dbc8","APIs/base-api.js","components/layout/settings/generalinformation/RegionLanguage.js","APIs/ClientsApi.js","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/react-bootstrap-icons/dist/icons/pencil-square.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nconst fetchAPI = async (endpoint, options = {}) => {\n  const { method = 'GET', headers = {}, body } = options;\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  const defaultHeaders = {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n    ...headers\n  };\n\n  const requestOptions = {\n    method,\n    headers: defaultHeaders,\n    body: JSON.stringify(body),\n    redirect: 'follow'\n  };\n\n  try {\n    const url = new URL(`${endpoint}`);\n    const response = await fetch(url, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    } else {\n      // Handle non-JSON responses\n      const text = await response.text();\n      return { message: 'Non-JSON response', body: text };\n    }\n\n  } catch (error) {\n    console.error('Fetch API error:', error);\n    throw error;\n  }\n};\n\nexport const getBillingPersonalInfo = async () => {\n  const endpoint = `/settings/subscriptions/tax-id/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateBillingPersonalInfo = async (data) => {\n  const endpoint = `/settings/subscriptions/tax-id/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getPaymentMethodInfo = async () => {\n  const endpoint = `/settings/subscriptions/payment-method/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const retryPayment = async () => {\n  const endpoint = `/subscriptions/retry/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updatePaymentMethodInfo = async (data) => {\n  const endpoint = `/settings/subscriptions/payment-method/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getReginalAndLanguage = async () => {\n  const endpoint = `/settings/organization/region-language/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateReginalAndLanguage = async (data) => {\n  const endpoint = `/settings/organization/region-language/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createProjectStatus = async (data) => {\n  console.log('data: ', data);\n  if (data.id) delete data.id;\n  if (data.isNew) delete data.isNew;\n  if (data.isChanged) delete data.isChanged;\n  if (data.value) delete data.value;\n\n  const endpoint = `/settings/project-statuses/new/`;\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateProjectStatusById = async (id, data) => {\n  const endpoint = `/settings/project-statuses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteProjectStatusById = async (id) => {\n  const endpoint = `/settings/project-statuses/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\n\n\n\n\n\n\nexport const SettingsGeneralInformation = async () => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateGeneralInformation = async (data, photo) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => {\n    formData.append(key, data[key]);\n  });\n\n  if (photo?.croppedImageBlob) {\n    const photoHintId = nanoid(6);\n    formData.append('company_logo', photo?.croppedImageBlob, `${photoHintId}.jpg`);\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/general/`, requestOptions);\n    const result = await response.text();\n    console.log('result>>>>>>>>>>: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const SettingsBankInformation = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const updateBankInformation = async (generalData) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const formData = new FormData();\n  Object.keys(generalData).forEach((key) => {\n    formData.append(key, generalData[key]);\n  });\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formData,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/organization/bank/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n  } catch (error) {\n    console.error('Profile fetch error:', error);\n    throw error;\n  }\n};\n\nexport const ProjectStatusesList = async () => {\n\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/settings/project-statuses/`, requestOptions);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('project fetch error:', error);\n    throw error;\n  }\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"activelist\":\"general_activelist__FWpML\",\"viewBorderWrap\":\"general_viewBorderWrap__h1m3m\",\"editBorderWrap\":\"general_editBorderWrap__p-Bng\",\"editinfo\":\"general_editinfo__FLHp1\",\"editpara\":\"general_editpara__Db271\",\"listwrapp\":\"general_listwrapp__S9ISd\"};","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { PencilSquare } from \"react-bootstrap-icons\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { toast } from \"sonner\";\nimport styles from \"./general.module.scss\";\nimport currency from './lib/currency.json';\nimport timezones from './lib/timezones.json';\nimport { getCountries } from \"../../../../APIs/ClientsApi\";\nimport { getReginalAndLanguage, updateReginalAndLanguage } from \"../../../../APIs/SettingsGeneral\";\nimport { useTrialHeight } from \"../../../../app/providers/trial-height-provider\";\n\n\n\nconst RegionLanguage = () => {\n  const { trialHeight } = useTrialHeight();\n  const [isEditing, setIsEditing] = useState(false);\n  const editingHeight = isEditing ? 100 : 0;\n  const [timezonesOptions, setTimezonesOptions] = useState([]);\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [country, setCountry] = useState(null);\n  const [timezone, setTimezone] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const countriesQuery = useQuery({ queryKey: ['countries'], queryFn: getCountries, enabled: true });\n  const reginalAndLanguageQuery = useQuery({ queryKey: ['getReginalAndLanguage'], queryFn: getReginalAndLanguage, enabled: true, staleTime: 1000 });\n\n  const mutation = useMutation({\n    mutationFn: (data) => updateReginalAndLanguage(data),\n    onSuccess: () => {\n      reginalAndLanguageQuery.refetch();\n      toast.success(`Reginal and language updated successfully`);\n    },\n  });\n\n  const handleUpdate = async () => {\n    await mutation.mutateAsync({\n      country: country,\n      timezone,\n      currency: selectedCurrency\n    });\n    setIsEditing(false);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    if (country) {\n      const findData = timezones.find((timezone) => timezone.name === country);\n      setTimezonesOptions(Object.keys(findData?.timezones || {}));\n\n      const findCurrency = currency.find((data) => data.name === country);\n      setCurrencyOptions([findCurrency]);\n      setSelectedCurrency(`${findCurrency?.currency?.code}`);\n    }\n  }, [country]);\n\n  useEffect(() => {\n    if (reginalAndLanguageQuery?.data) {\n      setCountry(reginalAndLanguageQuery?.data?.country);\n      setTimezone(reginalAndLanguageQuery?.data?.timezone);\n    }\n  }, [reginalAndLanguageQuery?.data]);\n\n\n\n  return (\n    <>\n      <Helmet>\n        <title>MeMate - Region & Language</title>\n      </Helmet>\n      <div className=\"settings-content\">\n        <div className=\"headSticky\">\n          <h1>Company Information</h1>\n          <div className=\"contentMenuTab\">\n            <ul>\n              <li>\n                <Link to=\"/settings/generalinformation\">\n                  General Information\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/settings/generalinformation/bank-details\">\n                  Bank Details\n                </Link>\n              </li>\n              <li className=\"menuActive\">\n                <Link to=\"/settings/generalinformation/region-and-language\">\n                  Region & Language\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className={`content_wrap_main ${isEditing ? \"isEditingwrap\" : \"\"}`} style={{ height: `calc(100vh - 230px - ${trialHeight}px - ${editingHeight}px)` }}>\n          <div className=\"content_wrapper\">\n            <div className={`listwrapper ${styles.listwrapp}`}>\n              <div className=\"topHeadStyle\">\n                <div className=\"\">\n                  <h2>Region & Language</h2>\n                  {isEditing && <p>Select your Country, Timezone, and Currency to ensure accurate localization and a seamless experience.</p>}\n                </div>\n                {!isEditing && (\n                  <Link to=\"#\" onClick={() => setIsEditing(true)}>\n                    Edit\n                    <PencilSquare color=\"#667085\" size={20} />\n                  </Link>\n                )}\n              </div>\n              <ul>\n                <li>\n                  <span>Country</span>\n                  {!isEditing ? (\n                    <strong>{reginalAndLanguageQuery?.data?.country === 1 && 'Australia'}</strong>\n                  ) : (\n                    <Dropdown\n                      value={country}\n                      options={(countriesQuery && countriesQuery.data?.map((country) => ({\n                        value: country.id,\n                        label: country.name\n                      }))) || []}\n                      placeholder=\"Select country\"\n                      className='w-100 rounded'\n                      onChange={(e) => setCountry(e.value)}\n                      filter\n                    />\n                  )}\n                </li>\n                <li>\n                  <span>Timezone</span>\n                  {!isEditing ? (\n                    <strong>{reginalAndLanguageQuery?.data?.timezone}</strong>\n                  ) : (\n                    <Dropdown\n                      value={timezone}\n                      options={timezonesOptions.map((option) => ({ value: option, label: option }))}\n                      placeholder=\"Select timezone\"\n                      className='w-100'\n                      onChange={(e) => setTimezone(e.value)}\n                    />\n                  )}\n                </li>\n                <li>\n                  <span>Currency</span>\n                  {!isEditing ? (\n                    <strong>{reginalAndLanguageQuery?.data?.currency}</strong>\n                  ) : (\n                    <span>{currencyOptions[0]?.currency?.code}</span>\n                  )}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        {isEditing && (\n          <div className=\"updateButtonGeneral\">\n            <button className=\"cancel\" onClick={handleCancel}>\n              Cancel\n            </button>\n            <button className=\"save\" disabled={mutation?.isPending} onClick={handleUpdate}>\n              Save {\" \"}\n              {mutation?.isPending && <ProgressSpinner style={{ width: '20px', height: '20px' }} />}\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default RegionLanguage;\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const createNewIndividualClient = async (data) => {\n  const endpoint = '/clients/individual/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewBusinessClient = async (data) => {\n  const endpoint = '/clients/business/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const restoreClient = async (id) => {\n  const endpoint = `/clients/restore/${id}/`;\n  const options = {\n    method: 'POST'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientById = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientCategories = async () => {\n  const endpoint = `/references/clients/categories/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getClientIndustries = async () => {\n  const endpoint = `/references/clients/industries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getCountries = async () => {\n  const endpoint = `/references/countries/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getStates = async (country) => {\n  const endpoint = `/references/states/${country}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getCities = async (state) => {\n  const endpoint = `/references/cities/${state}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options, false);\n};\n\nexport const getProjectManager = async () => {\n  const endpoint = `/references/desktop-users/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientEditApi = async (id) => {\n  const endpoint = `/clients/${id}/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getListOfClients = async (page, limit, name = \"\", order = \"\", isShowDeleted) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (name) url.searchParams.append(\"name\", name);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowDeleted) url.searchParams.append('deleted', 1);\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const clientOrderHistory = async (id, page, limit, search = \"\", order = \"\",) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/clients/${id}/orders/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"number\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  \n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const markeMainContact = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/main`;\n  const options = {\n    method: 'PUT',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteClient = async (id) => {\n  const endpoint = `/clients/delete/${id}/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteContactPerson = async (id) => {\n  const endpoint = `/clients/contact-persons/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteAddress = async (id) => {\n  const endpoint = `/clients/address/${id}/delete/`;\n  const options = {\n    method: 'DELETE',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const fetchClients = async (limit, offset) => {\n  const myHeaders = new Headers();\n  const accessToken = localStorage.getItem(\"access_token\");\n  myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  myHeaders.append(\"Content-Type\", `application/json`);\n\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    // Append the limit and offset parameters to the URL query string\n    const url = new URL(`${API_BASE_URL}/clients`);\n    url.searchParams.append(\"limit\", limit);\n    url.searchParams.append(\"offset\", offset);\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Clients fetch error:', error);\n    throw error;\n  }\n};\n\nexport const bringBack = async (id) => {\n  const endpoint = `/projects/back/`;\n  const options = {\n    method: 'PUT',\n    body: { unique_id: id }\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n","/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PencilSquare = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '1em' : _ref$size,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? null : _ref$title,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-pencil-square', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z\"\n  }));\n});\nPencilSquare.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nexport default PencilSquare;"],"names":["API_BASE_URL","process","fetchAPI","async","endpoint","options","arguments","length","undefined","method","headers","body","requestOptions","localStorage","getItem","JSON","stringify","redirect","url","URL","response","fetch","ok","Error","status","contentType","get","includes","json","message","text","error","console","getBillingPersonalInfo","toString","updateBillingPersonalInfo","data","getPaymentMethodInfo","retryPayment","updatePaymentMethodInfo","getReginalAndLanguage","updateReginalAndLanguage","createProjectStatus","log","id","isNew","isChanged","value","updateProjectStatusById","deleteProjectStatusById","SettingsGeneralInformation","myHeaders","Headers","accessToken","append","updateGeneralInformation","photo","formData","FormData","Object","keys","forEach","key","croppedImageBlob","photoHintId","nanoid","result","SettingsBankInformation","updateBankInformation","generalData","ProjectStatusesList","isRequiredLoggedin","isFormData","defaultHeaders","window","clear","sessionStorage","location","replace","RegionLanguage","_reginalAndLanguageQu3","_countriesQuery$data","_reginalAndLanguageQu4","_reginalAndLanguageQu5","_currencyOptions$","_currencyOptions$$cur","trialHeight","useTrialHeight","isEditing","setIsEditing","useState","editingHeight","timezonesOptions","setTimezonesOptions","currencyOptions","setCurrencyOptions","country","setCountry","timezone","setTimezone","selectedCurrency","setSelectedCurrency","countriesQuery","useQuery","queryKey","queryFn","getCountries","enabled","reginalAndLanguageQuery","staleTime","mutation","useMutation","mutationFn","onSuccess","refetch","toast","success","useEffect","_findCurrency$currenc","findData","timezones","find","name","findCurrency","currency","code","_reginalAndLanguageQu","_reginalAndLanguageQu2","_jsxs","_Fragment","children","_jsx","Helmet","className","Link","to","style","height","styles","listwrapp","onClick","PencilSquare","color","size","Dropdown","map","label","placeholder","onChange","e","filter","option","handleCancel","disabled","isPending","mutateAsync","ProgressSpinner","width","restoreClient","getClientById","getClientCategories","getClientIndustries","getStates","getCities","state","getProjectManager","getListOfClients","page","limit","order","isShowDeleted","offset","searchParams","clientOrderHistory","search","markeMainAddress","markeMainContact","deleteClient","deleteContactPerson","deleteAddress","bringBack","unique_id","bytes","crypto","getRandomValues","Uint8Array","_excluded","_extends","assign","bind","n","t","r","hasOwnProperty","call","apply","forwardRef","_ref","ref","_ref$color","_ref$size","_ref$title","title","_ref$className","rest","o","i","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","React","xmlns","viewBox","fill","Boolean","join","d","fillRule","propTypes","PropTypes"],"sourceRoot":""}