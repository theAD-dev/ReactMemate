{"version":3,"file":"static/js/77.a1bbb8f5.chunk.js","mappings":"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","sources":["components/layout/settings/generalinformation/BankDetails.js","../node_modules/primereact/skeleton/skeleton.esm.js","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PencilSquare } from \"react-bootstrap-icons\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Skeleton } from \"primereact/skeleton\";\nimport * as yup from \"yup\";\nimport styles from \"./general.module.scss\";\nimport Sidebar from \".././Sidebar\";\nimport {\n  SettingsBankInformation,\n  updateBankInformation,\n} from \"../../../../APIs/SettingsGeneral\";\nimport { useTrialHeight } from \"../../../../app/providers/trial-height-provider\";\n\n\nconst schema = yup.object().shape({\n  bank_name: yup.string().required(\"Bank name is required\"),\n  bsb: yup\n    .string()\n    .matches(/^\\d{6}$/, \"BSB must be 6 digits\")\n    .required(\"BSB is required\"),\n  account_number: yup\n    .string()\n    .matches(/^\\d+$/, \"Account number must be numeric\")\n    .required(\"Account number is required\"),\n});\n\nconst BankDetails = () => {\n  const { trialHeight } = useTrialHeight();\n  const [activeTab, setActiveTab] = useState(\"generalinformation\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    watch\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await SettingsBankInformation();\n        const parsedData = JSON.parse(data);\n        Object.keys(parsedData).forEach((key) => setValue(key, parsedData[key]));\n      } catch (error) {\n        console.error(\"Error fetching Bank information:\", error);\n        setError(\"Failed to load bank details. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [setValue]);\n\n  const onSubmit = async (formData) => {\n    try {\n      setSubmitting(true);\n      await updateBankInformation(formData);\n      setIsEditing(false);\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error updating Bank information:\", error);\n      setError(\"Failed to update bank details. Please try again.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"settings-wrap\">\n      <Helmet>\n        <title>MeMate - Bank Details</title>\n      </Helmet>\n      <div className=\"settings-wrapper\">\n        <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n        <div className=\"settings-content\">\n          <div className=\"headSticky\">\n            <h1>Company Information</h1>\n            <div className=\"contentMenuTab\">\n              <ul>\n                <li>\n                  <Link to=\"/settings/generalinformation\">General Information</Link>\n                </li>\n                <li className=\"menuActive\">\n                  <Link to=\"/settings/generalinformation/bank-details\">Bank Details</Link>\n                </li>\n                <li>\n                  <Link to=\"/settings/generalinformation/region-and-language\">Region & Language</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className={`content_wrap_main pb-0 ${isEditing ? \"isEditingwrap\" : \"\"}`} style={{ height: `calc(100vh - 230px - ${trialHeight}px)` }}>\n            <div className=\"content_wrapper pb-0 h-100\">\n              <div className={`listwrapper ${styles.listwrapp} pb-0`}>\n                <div className=\"topHeadStyle\">\n                  <div>\n                    <h2>Bank Details</h2>\n                    {isEditing && <p>Provide accurate bank account details to ensure smooth transactions and payments.</p>}\n                  </div>\n                  {!isEditing && (\n                    <Link to=\"#\" onClick={() => setIsEditing(true)}>\n                      Edit <PencilSquare color=\"#667085\" size={20} />\n                    </Link>\n                  )}\n                </div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <ul>\n                    {[\"bank_name\", \"bsb\", \"account_number\"].map((field, index) => (\n                      <li key={index}>\n                        <span>{field.replace(/_/g, \" \").replace(/\\b\\w/g, (char) => char.toUpperCase())}</span>\n                        {loading ? (\n                          <Skeleton width=\"100%\" height=\"2rem\" />\n                        ) : !isEditing ? (\n                          <strong>{watch(field) || \"\"}</strong>\n                        ) : (\n                          <div>\n                            <input type=\"text\" {...register(field)} />\n                            {errors[field] && <p className=\"error-message\">{errors[field].message}</p>}\n                          </div>\n                        )}\n                      </li>\n                    ))}\n                  </ul>\n                  {isEditing && (\n                    <div className=\"updateButtonGeneral pb-3\" style={{ position: 'fixed', bottom: 0, width: 'calc(100vw - 320px)', right: 20 }}>\n                      <button type=\"button\" className=\"cancel\" onClick={() => setIsEditing(false)} disabled={loading}>\n                        Cancel\n                      </button>\n                      <button type=\"submit\" className=\"save\" disabled={submitting}>{submitting ? \"Saving...\" : \"Save\"}</button>\n                    </div>\n                  )}\n                </form>\n                {error && <p className=\"error-message\">{error}</p>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BankDetails;\n","'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { classNames } from 'primereact/utils';\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar classes = {\n  root: function root(_ref) {\n    var props = _ref.props;\n    return classNames('p-skeleton p-component', {\n      'p-skeleton-circle': props.shape === 'circle',\n      'p-skeleton-none': props.animation === 'none'\n    });\n  }\n};\nvar styles = \"\\n@layer primereact {\\n    .p-skeleton {\\n        position: relative;\\n        overflow: hidden;\\n    }\\n    \\n    .p-skeleton::after {\\n        content: \\\"\\\";\\n        animation: p-skeleton-animation 1.2s infinite;\\n        height: 100%;\\n        left: 0;\\n        position: absolute;\\n        right: 0;\\n        top: 0;\\n        transform: translateX(-100%);\\n        z-index: 1;\\n    }\\n    \\n    .p-skeleton-circle {\\n        border-radius: 50%;\\n    }\\n    \\n    .p-skeleton-none::after {\\n        animation: none;\\n    }\\n}\\n\\n@keyframes p-skeleton-animation {\\n    from {\\n        transform: translateX(-100%);\\n    }\\n    to {\\n        transform: translateX(100%);\\n    }\\n}\\n\";\nvar inlineStyles = {\n  root: {\n    position: 'relative'\n  }\n};\nvar SkeletonBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'Skeleton',\n    shape: 'rectangle',\n    size: null,\n    width: '100%',\n    height: '1rem',\n    borderRadius: null,\n    animation: 'wave',\n    style: null,\n    className: null\n  },\n  css: {\n    classes: classes,\n    inlineStyles: inlineStyles,\n    styles: styles\n  }\n});\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar Skeleton = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = SkeletonBase.getProps(inProps, context);\n  var _SkeletonBase$setMeta = SkeletonBase.setMetaData({\n      props: props\n    }),\n    ptm = _SkeletonBase$setMeta.ptm,\n    cx = _SkeletonBase$setMeta.cx,\n    sx = _SkeletonBase$setMeta.sx,\n    isUnstyled = _SkeletonBase$setMeta.isUnstyled;\n  useHandleStyle(SkeletonBase.css.styles, isUnstyled, {\n    name: 'skeleton'\n  });\n  var elementRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var style = props.size ? {\n    width: props.size,\n    height: props.size,\n    borderRadius: props.borderRadius\n  } : {\n    width: props.width,\n    height: props.height,\n    borderRadius: props.borderRadius\n  };\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: classNames(props.className, cx('root')),\n    style: _objectSpread(_objectSpread({}, style), sx('root')),\n    'aria-hidden': true\n  }, SkeletonBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"div\", rootProps);\n}));\nSkeleton.displayName = 'Skeleton';\n\nexport { Skeleton };\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["schema","yup","shape","bank_name","required","bsb","matches","account_number","BankDetails","trialHeight","useTrialHeight","activeTab","setActiveTab","useState","isEditing","setIsEditing","loading","setLoading","submitting","setSubmitting","error","setError","register","handleSubmit","setValue","formState","errors","watch","useForm","resolver","yupResolver","useEffect","async","data","SettingsBankInformation","parsedData","JSON","parse","Object","keys","forEach","key","console","fetchData","_jsxs","className","children","_jsx","Helmet","Sidebar","Link","to","style","height","styles","listwrapp","onClick","PencilSquare","color","size","onSubmit","updateBankInformation","formData","window","location","reload","map","field","index","replace","char","toUpperCase","Skeleton","width","type","message","position","bottom","right","disabled","_typeof","o","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","classes","root","_ref","props","classNames","animation","SkeletonBase","ComponentBase","extend","defaultProps","__TYPE","borderRadius","css","inlineStyles","ownKeys","e","r","t","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","obj","value","defineProperty","configurable","writable","getOwnPropertyDescriptors","defineProperties","React","inProps","ref","mergeProps","useMergeProps","context","PrimeReactContext","getProps","_SkeletonBase$setMeta","setMetaData","ptm","cx","sx","isUnstyled","useHandleStyle","name","elementRef","getElement","current","rootProps","getOtherProps","displayName","nanoid","id","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}