{"version":3,"file":"static/js/3720.7ded35da.chunk.js","mappings":"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","sources":["APIs/base-api.js","APIs/settings-user-api.js","components/layout/settings/users/features/create-desktop-user.js","components/layout/settings/users/desktop.js","components/layout/settings/users/Users.js","webpack://memateapp/./src/ui/file-uploader/file-uploader.module.scss?e4f3","ui/file-uploader/file-uploader.js","ui/file-uploader/utils.js","../node_modules/primereact/skeleton/skeleton.esm.js","webpack://memateapp/./src/components/layout/settings/users/users.module.scss?ad61"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 401) {\n                window.localStorage.clear();\n                window.sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n            \n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getPrivilegesList = async () => {\n    const endpoint = `/references/privileges/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getDesktopUserList = async () => {\n    const endpoint = `/desktop-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getDesktopUserPrice = async () => {\n    const endpoint = `/settings/subscriptions/business/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateUserPrice = async (data) => {\n    const endpoint = `/settings/subscriptions/business/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getDesktopUser = async (id) => {\n    const endpoint = `/desktop-users/update/${id}/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const deleteDesktopUser = async (id) => {\n    const endpoint = `/desktop-users/active/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: { is_active: false }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const restoreDesktopUser = async (id) => {\n    const endpoint = `/desktop-users/active/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: { is_active: true }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getMobileUserList = async () => {\n    const endpoint = `/team/mobile-users/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const getMobileUserPrice = async () => {\n    const endpoint = `/settings/subscriptions/work/`;\n    const options = {\n        method: 'GET',\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const updateMobileUserPrice = async (data) => {\n    const endpoint = `/settings/subscriptions/work/`;\n    const options = {\n        method: 'PUT',\n        body: data\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const deleteMobileUser = async (id) => {\n    const endpoint = `/mobile-users/active/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: { is_active: false }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n\nexport const restoreMobileUser = async (id) => {\n    const endpoint = `/mobile-users/active/${id}/`;\n    const options = {\n        method: 'PUT',\n        body: { is_active: true }\n    };\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    return fetchAPI(url.toString(), options);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { CloudUpload, Envelope, PencilSquare, PlusCircle } from 'react-bootstrap-icons';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneInput } from 'react-international-phone';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport { Dropdown } from 'primereact/dropdown';\nimport { IconField } from \"primereact/iconfield\";\nimport { InputIcon } from \"primereact/inputicon\";\nimport { InputText } from \"primereact/inputtext\";\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Skeleton } from 'primereact/skeleton';\nimport { toast } from 'sonner';\nimport * as yup from 'yup';\nimport { getDesktopUser } from '../../../../../APIs/settings-user-api';\nimport FileUploader from '../../../../../ui/file-uploader/file-uploader';\nimport style from '../users.module.scss';\n\nconst getSchema = (isEditMode) => {\n    return yup.object({\n        firstName: yup.string().required('First Name is required'),\n        lastName: yup.string().required('Last Name is required'),\n        email: yup.string().email('Invalid email address').required('Email is required'),\n        phone: yup.string().optional(),\n        role: yup.string().required('Role is required'),\n        privilege: yup.string().required('Privilege is required'),\n        password: isEditMode\n            ? yup.string().notRequired()\n            : yup.string().required('Password is required'),\n        repeatPassword: yup.string()\n            .when('password', {\n                is: (password) => isEditMode ? !!password : true,\n                then: (schema) =>\n                    schema\n                        .required('Repeat Password is required')\n                        .oneOf([yup.ref('password')], 'Passwords must match'),\n                otherwise: (schema) =>\n                    schema.notRequired().nullable()\n            }),\n    }).required();\n};\n\nconst CreateDesktopUser = ({ visible, setVisible, id = null, setId, refetch, privilegeOptions }) => {\n    const [show, setShow] = useState(false);\n    const [photo, setPhoto] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { control, register, reset, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(getSchema(!!id)),\n        defaultValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            role: '',\n            privilege: '',\n            password: '',\n            repeatPassword: ''\n        }\n    });\n\n    const readDesktopUserQuery = useQuery({\n        queryKey: [\"readDesktopUser\", id],\n        queryFn: () => getDesktopUser(id),\n        enabled: !!id,\n        retry: 0,\n    });\n\n    const handleClose = () => {\n        setVisible(false);\n        setId(null);\n        setPhoto(null);\n        reset({\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"email\": \"\",\n            \"phone\": \"\",\n            \"role\": \"\",\n            \"privilege\": \"\",\n            \"password\": \"\",\n            \"repeatPassword\": \"\"\n        });\n    };\n\n    const onSubmit = async (data) => {\n        console.log('data: ', data);\n        const formData = new FormData();\n\n        formData.append(\"first_name\", data.firstName);\n        formData.append(\"last_name\", data.lastName);\n        formData.append(\"email\", data.email.toLowerCase());\n        formData.append(\"phone\", data.phone);\n        formData.append(\"role\", data.role);\n        formData.append(\"privilege\", data.privilege);\n        if (data.password) formData.append(\"password\", data.password);\n\n        if (photo?.croppedImageBlob) {\n            const photoHintId = nanoid(6);\n            formData.append('photo', photo.croppedImageBlob, `${photoHintId}.jpg`);\n        }\n\n        let method = \"POST\";\n        let URL = `${process.env.REACT_APP_BACKEND_API_URL}/desktop-users/new/`;\n        if (id) {\n            method = \"PUT\";\n            URL = `${process.env.REACT_APP_BACKEND_API_URL}/desktop-users/update/${id}/`;\n        }\n        const accessToken = localStorage.getItem(\"access_token\");\n        try {\n            setIsLoading(true);\n\n            const response = await fetch(URL, {\n                method: method,\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`,\n                },\n                body: formData,\n            });\n\n            setIsLoading(false);\n            if (response.ok) {\n                handleClose();\n                toast.success(`Desktop user created successfully!`);\n                refetch();\n                return \"success\";\n            } else {\n                toast.error(`Failed to create the user. Please try again.`);\n                return \"error\";\n            }\n        } catch (error) {\n            setIsLoading(false);\n            console.error(\"Error creating user:\", error);\n            toast.error(`Failed to create the user. Please try again.`);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (readDesktopUserQuery?.data && id) {\n            reset({\n                \"firstName\": readDesktopUserQuery?.data?.['first_name'],\n                \"lastName\": readDesktopUserQuery?.data?.['last_name'],\n                \"email\": readDesktopUserQuery?.data?.['email'],\n                \"phone\": readDesktopUserQuery?.data?.['phone'],\n                \"role\": readDesktopUserQuery?.data?.['role'],\n                \"privilege\": readDesktopUserQuery?.data?.['privilege'],\n            });\n\n            if (readDesktopUserQuery?.data?.photo && readDesktopUserQuery?.data?.has_photo) {\n                setPhoto(readDesktopUserQuery?.data?.photo);\n            }\n        } else {\n            setPhoto('');\n            reset({\n                \"firstName\": \"\",\n                \"lastName\": \"\",\n                \"email\": \"\",\n                \"phone\": \"\",\n                \"role\": \"\",\n                \"privilege\": \"\",\n                \"password\": \"\",\n                \"repeatPassword\": \"\"\n            });\n        }\n    }, [readDesktopUserQuery?.data, id, reset]);\n\n    const headerElement = (\n        <div className={`${style.modalHeader}`}>\n            <div className=\"d-flex align-items-center gap-2\">\n                <div className={style.circledesignstyle}>\n                    <div className={style.out}>\n                        {id\n                            ? <PencilSquare size={24} color=\"#17B26A\" className='mb-0' />\n                            : <PlusCircle size={24} color=\"#17B26A\" className='mb-0' />\n                        }\n                    </div>\n                </div>\n                <span className={`white-space-nowrap ${style.headerTitle}`}>\n                    {id ? 'Edit' : 'Add'} Desktop User\n                </span>\n            </div>\n        </div>\n    );\n\n    const footerContent = (\n        <div className='d-flex justify-content-between'>\n            <span></span>\n            <div className='d-flex justify-content-end gap-2'>\n                <Button className='outline-button' onClick={handleClose}>Cancel</Button>\n                <Button type='submit' disabled={isLoading} onClick={handleSubmit(onSubmit)} className='solid-button'>\n                    {id ? \"Update\" : \"Save\"} Details\n                    {isLoading && <ProgressSpinner style={{ width: '20px', height: '20px' }} />}\n                </Button>\n            </div>\n        </div>\n    );\n\n    const roleOptions = privilegeOptions?.filter((role) => role?.name !== 'Admin' )?.map((data) => ({ label: data?.name || '', value: data?.id }));\n\n    return (\n        <Dialog visible={visible} modal={true} header={headerElement} footer={footerContent} className={`${style.modal} custom-modal`} onHide={handleClose}>\n            <div className=\"d-flex flex-column\">\n                <form onSubmit={handleSubmit(onSubmit)} >\n                    <Row>\n                        <Col sm={12}>\n                            <div className={clsx(style.fileUploadBox, 'cursor-pointer')} onClick={() => setShow(true)}>\n                                <div className={clsx(style.uploadedImgBox)}>\n                                    {photo ? <img src={photo?.croppedImageBase64 || photo} alt='profile-img' /> : <CloudUpload size={20} color='#667085' />}\n                                </div>\n                                <p className={clsx('mb-0', style.uploadedText1)}><span className={clsx('mb-0', style.uploadedText2)}>Click to upload</span></p>\n                                <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                            </div>\n                            <FileUploader show={show} setShow={setShow} setPhoto={setPhoto} />\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                : <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>First Name</label>\n                                    <InputText {...register(\"firstName\")} className={clsx(style.inputText, \"outline-none\", { [style.error]: errors?.firstName })} placeholder='Enter first name' />\n                                    {errors?.firstName && <p className=\"error-message\">{errors?.firstName?.message}</p>}\n                                </div>\n                            }\n\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Last Name</label>\n                                    <InputText {...register(\"lastName\")} className={clsx(style.inputText, \"outline-none\", { [style.error]: errors?.lastName })} placeholder='Enter last name' />\n                                    {errors?.lastName && <p className=\"error-message\">{errors?.lastName?.message}</p>}\n                                </div>\n                            }\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Email</label>\n                                    <IconField iconPosition=\"left\">\n                                        <InputIcon><Envelope style={{ position: 'relative', top: '-5px' }} size={20} color='#667085' /></InputIcon>\n                                        <InputText {...register(\"email\")} disabled={!!id} style={{ paddingLeft: '38px' }} className={clsx(style.inputText, \"outline-none\", { [style.error]: errors?.email })} placeholder='company@email.com' />\n                                    </IconField>\n                                    {errors?.email && <p className=\"error-message\">{errors?.email?.message}</p>}\n                                </div>\n                            }\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Phone (optional)</label>\n                                    <Controller\n                                        name=\"phone\"\n                                        control={control}\n                                        render={({ field }) => (\n                                            <PhoneInput\n                                                defaultCountry='au'\n                                                value={typeof field.value === 'string' ? field.value : ''}\n                                                className='phoneInput rounded'\n                                                onChange={field.onChange}\n                                                placeholder='Enter phone number'\n                                            />\n                                        )}\n                                    />\n                                </div>\n                            }\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Role</label>\n                                    <InputText {...register(\"role\")} className={clsx(style.inputText, \"outline-none\")} placeholder='Select role' />\n                                    {errors?.role && <p className=\"error-message\">{errors?.role?.message}</p>}\n                                </div>\n                            }\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Privilege</label>\n                                    <Controller\n                                        name=\"privilege\"\n                                        control={control}\n                                        defaultValue=\"\"\n                                        render={({ field }) => (\n                                            <Dropdown\n                                                {...field}\n                                                options={roleOptions}\n                                                className={clsx(style.dropdownSelect, 'dropdown-height-fixed', \"outline-none\")}\n                                                placeholder=\"Select privilege\"\n                                                value={field.value}\n                                                style={{ height: '46px' }}\n                                                onChange={(e) => field.onChange(e.value)}\n                                            />\n                                        )}\n                                    />\n                                    {errors?.privilege && <p className=\"error-message\">{errors?.privilege?.message}</p>}\n                                </div>\n                            }\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Password</label>\n                                    <InputText type=\"password\" {...register(\"password\")} className={clsx(style.inputText, \"outline-none\", { [style.error]: errors?.password })} placeholder='Enter password' />\n                                    {errors?.password && <p className=\"error-message\">{errors?.password?.message}</p>}\n                                </div>\n                            }\n                        </Col>\n                        <Col sm={6}>\n                            {readDesktopUserQuery?.isFetching ?\n                                <>\n                                    <Skeleton width=\"20%\" className='mb-2'></Skeleton>\n                                    <Skeleton width=\"100%\" height='3rem' className='mb-4'></Skeleton>\n                                </>\n                                :\n                                <div className=\"d-flex flex-column gap-1 mb-4\">\n                                    <label className={clsx(style.label)}>Repeat Password</label>\n                                    <InputText type=\"password\" {...register(\"repeatPassword\")} className={clsx(style.inputText, \"outline-none\", { [style.error]: errors?.repeatPassword })} placeholder='Repeat password' />\n                                    {errors?.repeatPassword && <p className=\"error-message\">{errors?.repeatPassword?.message}</p>}\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n                </form>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default CreateDesktopUser;\n","import React, { useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { Plus } from 'react-bootstrap-icons';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { toast } from 'sonner';\nimport CreateDesktopUser from './features/create-desktop-user';\nimport style from './users.module.scss';\nimport { deleteDesktopUser, getDesktopUserList, getPrivilegesList, restoreDesktopUser } from '../../../../APIs/settings-user-api';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport ImageAvatar from '../../../../shared/ui/image-with-fallback/image-avatar';\n\n\nconst Desktop = ({ visible, setVisible }) => {\n    const { trialHeight } = useTrialHeight();\n    const navigate = useNavigate();\n    const [id, setId] = useState(null);\n    const [isShowDeleted, setIsShowDeleted] = useState(false);\n    const desktopUsersQuery = useQuery({ queryKey: ['desktop-users-list'], queryFn: getDesktopUserList });\n    const privilegesQuery = useQuery({ queryKey: ['privileges-list'], queryFn: getPrivilegesList });\n    let activeUserCount = desktopUsersQuery?.data?.users?.filter((user) => user.is_active) || 0;\n    const desktopUsers = isShowDeleted ? desktopUsersQuery?.data?.users?.filter((user) => !user.is_active) : desktopUsersQuery?.data?.users?.filter((user) => user.is_active) || [];\n\n    const deleteMutation = useMutation({\n        mutationFn: (data) => deleteDesktopUser(data),\n        onSuccess: () => {\n            desktopUsersQuery?.refetch();\n            toast.success(`User deleted successfully`);\n            deleteMutation.reset();\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            toast.error(`Failed to delete user. Please try again.`);\n        }\n    });\n\n    const restoreMutation = useMutation({\n        mutationFn: (data) => restoreDesktopUser(data),\n        onSuccess: () => {\n            setIsShowDeleted(false);\n            desktopUsersQuery?.refetch();\n            toast.success(`User restored successfully`);\n            restoreMutation.reset();\n        },\n        onError: (error) => {\n            console.log('error: ', error);\n            toast.error(`Failed to restore user. Please try again.`);\n        }\n    });\n\n    console.log('restoreMutation: ', restoreMutation?.variables);\n    const restore = (id) => {\n        if (desktopUsersQuery?.data?.limits?.total <= activeUserCount?.length) {\n            toast.error(`You have reached the maximum number of users allowed.`);\n        } else {\n            restoreMutation.mutate(id);\n        }\n    };\n\n    const nameBody = (data) => {\n        return <div className='d-flex align-items-center justify-content-between show-on-hover'>\n            <div className='d-flex justify-content-center align-items-center'>\n                <ImageAvatar has_photo={data.has_photo} photo={data.photo} is_business={false} />\n                <div className='d-flex flex-column gap-1'>\n                    <div className={`${style.ellipsis}`}>{data.first_name} {data.last_name}</div>\n                </div>\n            </div>\n            <Button label=\"Edit\" onClick={() => {\n                if (data?.privilege_name === \"Admin\") {\n                    navigate('/settings/generalinformation/profile');\n                } else {\n                    setId(data?.id);\n                    setVisible(true);\n                }\n            }} className='primary-text-button ms-3 show-on-hover-element not-show-checked' />\n        </div>;\n    };\n\n    const StatusBody = (data) => {\n        return <div className={`d-flex align-items-center justify-content-between show-on-hover`}>\n            <div className={`styleGrey01  ${style.privilege}`}>\n                {data?.privilege_name || \"-\"}\n            </div>\n        </div>;\n    };\n\n    const ActionsBody = (data) => {\n        if (data?.privilege_name === \"Admin\") return \"-\";\n\n        return <React.Fragment>\n            {\n                data?.is_active\n                    ?\n                    <Button disabled={deleteMutation?.variables === data?.id} onClick={() => { deleteMutation.mutate(data?.id); }} className={clsx(style.dangerTextButton, 'text-button')} style={{ width: '120px' }}>\n                        Delete\n                        {deleteMutation?.variables === data?.id ? <ProgressSpinner style={{ width: '20px', height: '20px' }}></ProgressSpinner> : \"\"}\n                    </Button>\n                    : <Button disabled={restoreMutation?.variables === data?.id} onClick={() => restore(data?.id)} className={clsx(style.successTextButton, 'text-button')} style={{ width: '120px', color: '#067647' }}>\n                        Restore\n                        {restoreMutation?.variables === data?.id ? <ProgressSpinner style={{ width: '20px', height: '20px' }}></ProgressSpinner> : \"\"}\n                    </Button>\n            }\n        </React.Fragment>;\n    };\n\n    return (\n        <>\n            <div className=\"settings-content setModalelBoots w-100\">\n                <div className='headSticky'>\n                    <h1 className='mb-0'>Users</h1>\n                    <div className={`contentMenuTab ${style.contentMenuTab}`}>\n                        <ul>\n                            <li className='menuActive'><Link to=\"/settings/users/desktop\">Desktop</Link></li>\n                            <li><Link to=\"/settings/users/mobile-app\">Mobile App</Link></li>\n                        </ul>\n                        <Button disabled={desktopUsersQuery?.data?.limits?.total <= activeUserCount?.length} onClick={() => setVisible(true)} className={clsx(style.addUserBut, 'outline-none')}>Add <Plus size={20} color=\"#000\" /></Button>\n                    </div>\n                </div>\n                <div className={`content_wrap_main ${style.contentwrapmain}`} style={{ paddingBottom: `${trialHeight}px` }}>\n                    <div className='content_wrapper border-top'>\n                        <div className=\"listwrapper\">\n                            <div className=\"topHeadStyle pb-4\">\n                                <div className={style.userHead}>\n                                    <h2>Desktop Users</h2>\n                                    <p className='d-flex align-items-center gap-2'>\n                                        {activeUserCount?.length || 0} / {desktopUsersQuery?.data?.limits?.total || 0}\n                                        <Link to={\"/settings/generalinformation/subscription\"} className='p-0 border-0' style={{ background: 'transparent' }}><span className='cursor-pointer'>Buy More</span></Link>\n                                    </p>\n                                </div>\n                                <Button onClick={() => setIsShowDeleted(!isShowDeleted)} className={clsx(style.showDeleteBut, 'outline-none')}>{!isShowDeleted ? \"Show\" : \"Hide\"} Deleted</Button>\n                            </div>\n                            <div className={`settings-wrap ${style.userSettingPage}`}>\n                                <DataTable value={desktopUsers} showGridlines tableStyle={{ minWidth: '50rem' }}>\n                                    <Column field=\"name\" style={{ width: 'auto' }} body={nameBody} header=\"Name\"></Column>\n                                    <Column field=\"email\" style={{ width: '267px' }} header=\"Email\"></Column>\n                                    <Column field=\"phone\" style={{ width: '210px' }} header=\"Phone\"></Column>\n                                    <Column field=\"role\" style={{ width: '210px' }} header=\"Role\"></Column>\n                                    <Column field=\"privilege\" body={StatusBody} style={{ width: '147px' }} header=\"Privilege\"></Column>\n                                    <Column style={{ width: '210px' }} header=\"Actions\" body={ActionsBody}></Column>\n                                </DataTable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {\n                desktopUsersQuery.isLoading &&\n                <div style={{ position: 'fixed', top: '50%', left: '50%', background: 'white', width: '60px', height: '60px', borderRadius: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 10 }} className=\"shadow-lg\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                </div>\n            }\n            <CreateDesktopUser id={id} setId={setId} visible={visible} setVisible={setVisible} refetch={() => desktopUsersQuery?.refetch()} privilegeOptions={privilegesQuery?.data || []} />\n        </>\n    );\n};\n\nexport default Desktop;\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Desktop from './desktop';\nimport style from './users.module.scss';\n\nconst Users = () => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <>\n            <Helmet>\n                <title>MeMate - Desktop Users</title>\n            </Helmet>\n            <div className={`${style.userSettingPage}`}>\n                <Desktop visible={visible} setVisible={setVisible} />\n            </div>\n        </>\n    );\n};\n\n\nexport default Users;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"file-uploader_title__+HTTy\",\"previewSection\":\"file-uploader_previewSection__mnNRf\",\"previewBox\":\"file-uploader_previewBox__j6psm\",\"previewBoxImg1\":\"file-uploader_previewBoxImg1__SR-1w\",\"previewBoxImg2\":\"file-uploader_previewBoxImg2__zYCKK\",\"previewBoxImg3\":\"file-uploader_previewBoxImg3__YNTWI\",\"previewBoxImg4\":\"file-uploader_previewBoxImg4__cRl+e\",\"previewBoxImg5\":\"file-uploader_previewBoxImg5__GzHFj\",\"previewActions\":\"file-uploader_previewActions__UO1dp\",\"label\":\"file-uploader_label__Udhfq\",\"label2\":\"file-uploader_label2__cY-JF\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { ArrowClockwise, CloudUpload } from 'react-bootstrap-icons';\nimport { useDropzone } from 'react-dropzone';\nimport Cropper from 'react-easy-crop';\nimport clsx from 'clsx';\nimport Form from 'react-bootstrap/Form';\nimport styles from './file-uploader.module.scss';\nimport { base64ToBlob } from './utils';\n\nconst FileUploader = ({ show, setShow, setPhoto, additionalDesign, shape=\"rect\" }) => {\n    const [files, setFiles] = useState([]);\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n    const [rotation, setRotation] = useState(0);\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    const [croppedImages, setCroppedImages] = useState({});\n\n    const handleClose = () => setShow(false);\n\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n    }, []);\n\n    const getCroppedImg = useCallback(async () => {\n        if (!files.length || !croppedAreaPixels) return;\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        const img = new Image();\n        img.src = files[0].preview;\n        await new Promise((resolve) => (img.onload = resolve));\n\n        // Set canvas dimensions to the cropped area's dimensions\n        canvas.width = croppedAreaPixels.width;\n        canvas.height = croppedAreaPixels.height;\n\n        // Translate canvas to center to rotate around the center\n        ctx.translate(canvas.width / 2, canvas.height / 2);\n        ctx.rotate((rotation * Math.PI) / 180);\n        ctx.translate(-canvas.width / 2, -canvas.height / 2);\n\n        ctx.drawImage(\n            img,\n            croppedAreaPixels.x,\n            croppedAreaPixels.y,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height,\n            0,\n            0,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height\n        );\n\n        const base64Image = canvas.toDataURL('image/jpeg');\n        return base64Image;\n    }, [files, croppedAreaPixels, rotation]);\n\n    const generateCroppedImages = async () => {\n        const croppedImage = await getCroppedImg();\n        if (croppedImage) {\n            setCroppedImages({\n                img2: croppedImage,\n                img3: croppedImage,\n                img4: croppedImage,\n                img5: croppedImage,\n            });\n        }\n    };\n\n    useEffect(() => {\n        generateCroppedImages();\n    }, [zoom, crop, rotation, files, croppedAreaPixels]);\n\n    const {\n        getRootProps,\n        getInputProps\n    } = useDropzone({\n        maxFiles: 1,\n        accept: {\n            'image/*': []\n        },\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    });\n\n    const remove = (e) => {\n        e.stopPropagation();\n        setFiles([]);\n        setCroppedImages({});\n        setPhoto(null);\n        setShow(false);\n    };\n\n    const rotateImage = () => {\n        setRotation((prevRotation) => (prevRotation + 90) % 360);\n    };\n\n    const handleImage = async () => {\n        const croppedImageBase64 = await getCroppedImg();\n        const croppedImageBlob = base64ToBlob(croppedImageBase64, 'image/jpeg');\n        setPhoto({ croppedImageBase64, croppedImageBlob });\n        setShow(false);\n    };\n\n    return (\n        <Modal style={{ zIndex: 1111 }} show={show} centered onHide={handleClose} onShow={generateCroppedImages}>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <span className={`${styles.title}`}>Edit Photo</span>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {additionalDesign}\n                <div className={`${styles.previewSection}`}>\n                    <div className={`${styles.previewBox}`}>\n                        <div className={clsx(styles.previewBoxImg1, shape === 'round' ? 'rounded-circle' : '')}>\n                            <Cropper\n                                image={files.length > 0 ? files[0].preview : null}\n                                crop={crop}\n                                zoom={zoom}\n                                cropShape={shape}\n                                rotation={rotation}\n                                onCropChange={setCrop}\n                                onZoomChange={setZoom}\n                                onCropComplete={onCropComplete}\n                                aspect={1} // or remove this if you want a flexible aspect ratio\n                                restrictPosition={false} // Allow full movement within the bounds\n                                style={{\n                                    containerStyle: {\n                                        width: '100%',\n                                        height: '100%',\n                                        position: 'relative',\n                                    },\n                                    cropAreaStyle: {\n                                        width: '100%',\n                                        height: '100%',\n                                    },\n                                    mediaStyle: {\n                                        width: '100%',\n                                        height: '100%',\n                                        objectFit: 'contain',\n                                    },\n                                }}\n                            />\n                        </div>\n                        <div className={clsx(styles.previewBoxImg2, shape === 'round' ? 'rounded-circle' : '')}>\n                            {croppedImages.img2 && (\n                                <img src={croppedImages.img2} alt=\"Preview 2\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n                            )}\n                        </div>\n                        <div className={clsx(styles.previewBoxImg3, shape === 'round' ? 'rounded-circle' : '')}>\n                            {croppedImages.img3 && (\n                                <img src={croppedImages.img3} alt=\"Preview 3\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n                            )}\n                        </div>\n                        <div className={clsx(styles.previewBoxImg4, shape === 'round' ? 'rounded-circle' : '')}>\n                            {croppedImages.img4 && (\n                                <img src={croppedImages.img4} alt=\"Preview 4\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n                            )}\n                        </div>\n                        <div className={clsx(styles.previewBoxImg5, shape === 'round' ? 'rounded-circle' : '')}>\n                            {croppedImages.img5 && (\n                                <img src={croppedImages.img5} alt=\"Preview 5\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n                            )}\n                        </div>\n                    </div>\n                    <div className={`${styles.previewActions}`}>\n                        <Form.Group>\n                            <Form.Label className={`${styles.label}`}>Zoom</Form.Label>\n                            <Form.Range\n                                value={zoom}\n                                min={1}\n                                max={3}\n                                step={0.1}\n                                className='custom-range'\n                                onChange={(e) => setZoom(e.target.value)}\n                            />\n                        </Form.Group>\n                        <div className='d-flex align-item-center pt-4 ms-4' style={{ gap: '8px' }}>\n                            <Button className='text-button' onClick={rotateImage}>\n                                <ArrowClockwise color='#106B99' size={24} />\n                                Rotate\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n\n                <div {...getRootProps({ className: 'dropzone d-flex justify-content-center align-items-center flex-column cursor-pointer' })} style={{ width: '100%', height: '126px', background: '#fff', borderRadius: '4px', border: '1px solid #EAECF0', marginTop: '16px' }}>\n                    <input {...getInputProps()} />\n                    <button type='button' className='d-flex justify-content-center align-items-center' style={{ width: '40px', height: '40px', border: '1px solid #EAECF0', background: '#fff', borderRadius: '8px', marginBottom: '16px' }}>\n                        <CloudUpload />\n                    </button>\n                    <p className='mb-0' style={{ color: '#475467', fontSize: '14px' }}><span style={{ color: '#106B99', fontWeight: '600' }}>Click to upload</span> or drag and drop</p>\n                    <span style={{ color: '#475467', fontSize: '12px' }}>SVG, PNG, JPG or GIF (max. 800x400px)</span>\n                </div>\n            </Modal.Body>\n            <Modal.Footer className='d-flex justify-content-end'>\n                <Button className='outline-button' onClick={remove}>Cancel</Button>\n                <Button className='solid-button' onClick={handleImage}>Save Photo</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default FileUploader;\n","import { nanoid } from \"nanoid\";\n\nexport function base64ToBlob(base64, mime) {\n    const byteString = atob(base64.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], { type: mime });\n}\n\nexport const base64ToFile = (base64String) => {\n    const photoHintId = nanoid(6);\n    const fileName = `${photoHintId}.jpg`;\n    const byteString = atob(base64String.split(',')[1]); // Decode Base64 string\n    const mimeString = base64String.split(',')[0].split(':')[1].split(';')[0]; // Get MIME type\n\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const uint8Array = new Uint8Array(arrayBuffer);\n\n    for (let i = 0; i < byteString.length; i++) {\n        uint8Array[i] = byteString.charCodeAt(i);\n    }\n\n    return new File([uint8Array], fileName, { type: mimeString });\n};","'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { classNames } from 'primereact/utils';\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar classes = {\n  root: function root(_ref) {\n    var props = _ref.props;\n    return classNames('p-skeleton p-component', {\n      'p-skeleton-circle': props.shape === 'circle',\n      'p-skeleton-none': props.animation === 'none'\n    });\n  }\n};\nvar styles = \"\\n@layer primereact {\\n    .p-skeleton {\\n        position: relative;\\n        overflow: hidden;\\n    }\\n    \\n    .p-skeleton::after {\\n        content: \\\"\\\";\\n        animation: p-skeleton-animation 1.2s infinite;\\n        height: 100%;\\n        left: 0;\\n        position: absolute;\\n        right: 0;\\n        top: 0;\\n        transform: translateX(-100%);\\n        z-index: 1;\\n    }\\n    \\n    .p-skeleton-circle {\\n        border-radius: 50%;\\n    }\\n    \\n    .p-skeleton-none::after {\\n        animation: none;\\n    }\\n}\\n\\n@keyframes p-skeleton-animation {\\n    from {\\n        transform: translateX(-100%);\\n    }\\n    to {\\n        transform: translateX(100%);\\n    }\\n}\\n\";\nvar inlineStyles = {\n  root: {\n    position: 'relative'\n  }\n};\nvar SkeletonBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'Skeleton',\n    shape: 'rectangle',\n    size: null,\n    width: '100%',\n    height: '1rem',\n    borderRadius: null,\n    animation: 'wave',\n    style: null,\n    className: null\n  },\n  css: {\n    classes: classes,\n    inlineStyles: inlineStyles,\n    styles: styles\n  }\n});\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar Skeleton = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = SkeletonBase.getProps(inProps, context);\n  var _SkeletonBase$setMeta = SkeletonBase.setMetaData({\n      props: props\n    }),\n    ptm = _SkeletonBase$setMeta.ptm,\n    cx = _SkeletonBase$setMeta.cx,\n    sx = _SkeletonBase$setMeta.sx,\n    isUnstyled = _SkeletonBase$setMeta.isUnstyled;\n  useHandleStyle(SkeletonBase.css.styles, isUnstyled, {\n    name: 'skeleton'\n  });\n  var elementRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var style = props.size ? {\n    width: props.size,\n    height: props.size,\n    borderRadius: props.borderRadius\n  } : {\n    width: props.width,\n    height: props.height,\n    borderRadius: props.borderRadius\n  };\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: classNames(props.className, cx('root')),\n    style: _objectSpread(_objectSpread({}, style), sx('root')),\n    'aria-hidden': true\n  }, SkeletonBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"div\", rootProps);\n}));\nSkeleton.displayName = 'Skeleton';\n\nexport { Skeleton };\n","// extracted by mini-css-extract-plugin\nexport default {\"userSettingPage\":\"users_userSettingPage__KqRqG\",\"userHead\":\"users_userHead__Qb-45\",\"users_userHead\":\"users_users_userHead__66zxc\",\"contentwrapmain\":\"users_contentwrapmain__9EuvG\",\"ellipsis\":\"users_ellipsis__MtwMP\",\"userImg\":\"users_userImg__-Ft5y\",\"privilege\":\"users_privilege__yA6Qo\",\"contentMenuTab\":\"users_contentMenuTab__Znvft\",\"addUserBut\":\"users_addUserBut__H4HT5\",\"showDeleteBut\":\"users_showDeleteBut__YDAwL\",\"appSettingPage\":\"users_appSettingPage__urt2L\",\"appaction\":\"users_appaction__vcXFf\",\"connected\":\"users_connected__jXreM\",\"invited\":\"users_invited__Rgnv8\",\"disconnected\":\"users_disconnected__t2YHg\",\"selectuserInput\":\"users_selectuserInput__YZrqN\",\"modal\":\"users_modal__XmOaj\",\"modalHeader\":\"users_modalHeader__q7QkG\",\"headerTitle\":\"users_headerTitle__ZVL6h\",\"circledesignstyle\":\"users_circledesignstyle__7Fx4h\",\"out\":\"users_out__HXDgH\",\"lable\":\"users_lable__Wc5bm\",\"inputText\":\"users_inputText__U6PZ4\",\"error\":\"users_error__vuT5H\",\"td\":\"users_td__d5O9J\",\"hoverShow\":\"users_hoverShow__+hAKM\",\"borderNone\":\"users_borderNone__BKq3M\",\"dangerTextButton\":\"users_dangerTextButton__pvNTe\",\"fileUploadBox\":\"users_fileUploadBox__SSDRH\",\"uploadedImgBox\":\"users_uploadedImgBox__Kal3a\",\"uploadedText1\":\"users_uploadedText1__mtBeo\",\"uploadedText2\":\"users_uploadedText2__5sLVb\",\"successTextButton\":\"users_successTextButton__gV-ns\",\"leftBoxParent\":\"users_leftBoxParent__HuTuY\",\"leftbox\":\"users_leftbox__xpVNj\",\"leftboxText\":\"users_leftboxText__T8ElD\",\"active\":\"users_active__yxWuy\"};"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","window","clear","sessionStorage","location","replace","Error","contentType","get","includes","json","message","text","error","console","API_BASE_URL","process","getPrivilegesList","toString","getDesktopUserList","updateUserPrice","data","getDesktopUser","id","deleteDesktopUser","is_active","restoreDesktopUser","getMobileUserList","updateMobileUserPrice","deleteMobileUser","restoreMobileUser","_ref","_privilegeOptions$fil","_errors$firstName","_errors$lastName","_errors$email","_errors$role","_errors$privilege","_errors$password","_errors$repeatPasswor","visible","setVisible","setId","refetch","privilegeOptions","show","setShow","useState","photo","setPhoto","isLoading","setIsLoading","control","register","reset","handleSubmit","formState","errors","useForm","resolver","yupResolver","isEditMode","yup","firstName","required","lastName","email","phone","optional","role","privilege","password","notRequired","repeatPassword","when","is","then","schema","oneOf","otherwise","nullable","defaultValues","readDesktopUserQuery","useQuery","queryKey","queryFn","enabled","retry","handleClose","onSubmit","log","formData","append","toLowerCase","croppedImageBlob","photoHintId","nanoid","toast","success","useEffect","_readDesktopUserQuery","_readDesktopUserQuery2","_readDesktopUserQuery3","_readDesktopUserQuery4","_readDesktopUserQuery5","_readDesktopUserQuery6","_readDesktopUserQuery7","_readDesktopUserQuery8","_readDesktopUserQuery9","has_photo","headerElement","_jsx","className","style","modalHeader","children","_jsxs","circledesignstyle","out","PencilSquare","size","color","PlusCircle","headerTitle","footerContent","Button","onClick","type","disabled","ProgressSpinner","width","height","roleOptions","filter","name","map","label","value","Dialog","modal","header","footer","onHide","Row","Col","sm","clsx","fileUploadBox","uploadedImgBox","src","croppedImageBase64","alt","CloudUpload","uploadedText1","uploadedText2","fontSize","FileUploader","isFetching","_Fragment","Skeleton","InputText","inputText","placeholder","IconField","iconPosition","InputIcon","Envelope","position","top","paddingLeft","Controller","render","_ref2","field","PhoneInput","defaultCountry","onChange","defaultValue","_ref3","Dropdown","dropdownSelect","e","_desktopUsersQuery$da","_desktopUsersQuery$da2","_desktopUsersQuery$da3","_desktopUsersQuery$da4","_desktopUsersQuery$da5","_desktopUsersQuery$da6","_desktopUsersQuery$da9","_desktopUsersQuery$da10","_desktopUsersQuery$da11","_desktopUsersQuery$da12","trialHeight","useTrialHeight","navigate","useNavigate","isShowDeleted","setIsShowDeleted","desktopUsersQuery","privilegesQuery","activeUserCount","users","user","desktopUsers","deleteMutation","useMutation","mutationFn","onSuccess","onError","restoreMutation","variables","contentMenuTab","Link","to","limits","total","addUserBut","Plus","contentwrapmain","paddingBottom","userHead","background","showDeleteBut","userSettingPage","DataTable","showGridlines","tableStyle","minWidth","Column","ImageAvatar","is_business","ellipsis","first_name","last_name","privilege_name","React","mutate","dangerTextButton","_desktopUsersQuery$da7","_desktopUsersQuery$da8","restore","successTextButton","left","borderRadius","display","justifyContent","alignItems","zIndex","Spinner","animation","CreateDesktopUser","Users","Helmet","Desktop","additionalDesign","shape","files","setFiles","crop","setCrop","x","y","zoom","setZoom","rotation","setRotation","croppedAreaPixels","setCroppedAreaPixels","croppedImages","setCroppedImages","onCropComplete","useCallback","croppedArea","getCroppedImg","canvas","document","createElement","ctx","getContext","img","Image","preview","Promise","resolve","onload","translate","rotate","Math","PI","drawImage","toDataURL","generateCroppedImages","croppedImage","img2","img3","img4","img5","getRootProps","getInputProps","useDropzone","maxFiles","accept","onDrop","acceptedFiles","file","Object","assign","createObjectURL","Modal","centered","onShow","Header","closeButton","Title","styles","Body","Cropper","image","cropShape","onCropChange","onZoomChange","aspect","restrictPosition","containerStyle","cropAreaStyle","mediaStyle","objectFit","Form","Group","Label","Range","min","max","step","target","gap","rotateImage","prevRotation","ArrowClockwise","border","marginTop","marginBottom","fontWeight","Footer","stopPropagation","base64","mime","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","base64ToBlob","_typeof","o","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","classes","root","props","classNames","SkeletonBase","ComponentBase","extend","defaultProps","__TYPE","css","inlineStyles","ownKeys","r","t","keys","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","obj","defineProperty","configurable","writable","getOwnPropertyDescriptors","defineProperties","inProps","ref","mergeProps","useMergeProps","context","PrimeReactContext","getProps","_SkeletonBase$setMeta","setMetaData","ptm","cx","sx","isUnstyled","useHandleStyle","elementRef","getElement","current","rootProps","getOtherProps","displayName"],"sourceRoot":""}