{"version":3,"file":"static/js/4681.435b8af2.chunk.js","mappings":"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","sources":["APIs/expenses-api.js","webpack://memateapp/./src/components/Work/Pages/tasks/task.module.scss?447c","components/Work/Pages/tasks/task-table.js","components/Work/Pages/tasks/index.js","APIs/base-api.js","components/Work/features/task/view-task/view-task.js","webpack://memateapp/./src/ui/no-data-template/no-data-found-template.module.scss?18de","ui/no-data-template/no-data-found-template.js"],"sourcesContent":["import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const getListOfExpense = async (page, limit, search = \"\", order = \"\", isShowUnpaid) => {\n  const offset = (page - 1) * limit;\n  const endpoint = `/expenses/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  url.searchParams.append(\"limit\", limit);\n  url.searchParams.append(\"offset\", offset);\n  if (search) url.searchParams.append(\"search\", search);\n  if (order) url.searchParams.append(\"ordering\", order);\n  if (isShowUnpaid) url.searchParams.append('status', 'not_paid');\n\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getXeroCodesList = async () => {\n  const endpoint = `/references/xero-codes/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getProjectsList = async () => {\n  const endpoint = `/references/projects/`;\n  const options = {\n    method: 'GET',\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const getExpense = async (id) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'GET'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const createNewExpense = async (data) => {\n  const endpoint = '/expenses/new/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const updateExpense = async (id, data) => {\n  const endpoint = `/expenses/update/${id}/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const paidExpense = async (data) => {\n  const endpoint = '/expenses/paid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const unpaidExpense = async (data) => {\n  const endpoint = '/expenses/unpaid/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendExpenseToXeroApi = async (data) => {\n  const endpoint = `/expenses/to-xero/`;\n  const options = {\n    method: 'PUT',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const deleteExpense = async (uniqueId) => {\n  const endpoint = `/expenses/delete/${uniqueId}/`;\n  const options = {\n    method: 'DELETE'\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const downloadStatement = async (data) => {\n  const endpoint = '/clients/statement/pdf/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};\n\nexport const sendStatementEmail = async (data) => {\n  const endpoint = '/clients/statement/send/';\n  const options = {\n    method: 'POST',\n    body: data\n  };\n  const url = new URL(`${API_BASE_URL}${endpoint}`);\n  return fetchAPI(url.toString(), options);\n};","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"task_active__XHjXL\",\"selectedCount\":\"task_selectedCount__KCjbh\",\"filterBox\":\"task_filterBox__Vl8TJ\",\"newButton\":\"task_newButton__FgzVj\",\"total\":\"task_total__iv2al\",\"totalCount\":\"task_totalCount__g7jIX\",\"shadowRight\":\"task_shadowRight__POYJ0\",\"clientName\":\"task_clientName__bfmFM\",\"complete\":\"task_complete__zEIDq\",\"pending\":\"task_pending__4JfNO\",\"projectImg\":\"task_projectImg__SdMAS\",\"projectText\":\"task_projectText__2Lg5C\",\"projectNumber\":\"task_projectNumber__bQcj7\",\"linkToProjectCard\":\"task_linkToProjectCard__cP8ki\",\"statusFilter\":\"task_statusFilter__Rk3rx\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { CheckCircle, FileText } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { toast } from 'sonner';\nimport style from './task.module.scss';\nimport { getListOfTasks } from '../../../../APIs/task-api';\nimport { TaskCompleteJob } from '../../../../APIs/TasksApi';\nimport { useTrialHeight } from '../../../../app/providers/trial-height-provider';\nimport { FallbackImage } from '../../../../shared/ui/image-with-fallback/image-avatar';\nimport Loader from '../../../../shared/ui/loader/loader';\nimport NoDataFoundTemplate from '../../../../ui/no-data-template/no-data-found-template';\nimport ViewTaskModal from '../../features/task/view-task/view-task';\n\nconst formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const monthAbbreviation = new Intl.DateTimeFormat(\"en-US\", {\n        month: \"short\",\n    }).format(date);\n    const year = date.getFullYear();\n    return `${day} ${monthAbbreviation} ${year}`;\n};\n\nconst TaskTable = forwardRef(({ searchValue, setTotal, selected, setSelected, refetch, setRefetch, filter }, ref) => {\n    const { trialHeight } = useTrialHeight();\n    const observerRef = useRef(null);\n    const [visible, setVisible] = useState(false);\n    const [taskId, setTaskId] = useState(null);\n\n    const [page, setPage] = useState(1);\n    const [tasks, setTasks] = useState([]);\n    const [sort, setSort] = useState({ sortField: 'id', sortOrder: -1 });\n    const [tempSort, setTempSort] = useState({ sortField: 'id', sortOrder: -1 });\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const limit = 25;\n\n    useEffect(() => {\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    }, [searchValue, refetch, filter]);\n\n    useEffect(() => {\n        const loadData = async () => {\n            setLoading(true);\n\n            let order = \"\";\n            if (tempSort?.sortOrder === 1) order = `${tempSort.sortField}`;\n            else if (tempSort?.sortOrder === -1) order = `-${tempSort.sortField}`;\n\n            let showNotCompleted = filter.status === 'not-complete';\n            if (filter.status === 'all') showNotCompleted = null;\n            if (filter.status === 'complete') showNotCompleted = false;\n\n            const data = await getListOfTasks(page, limit, searchValue, order, false, showNotCompleted, null);\n            setTotal(() => (data?.count || 0));\n            if (page === 1) setTasks(data.results);\n            else {\n                if (data?.results?.length > 0)\n                    setTasks(prev => {\n                        const existingIds = new Set(prev.map(data => data.id));\n                        const newData = data.results.filter(data => !existingIds.has(data.id));\n                        return [...prev, ...newData];\n                    });\n            }\n            setSort(tempSort);\n            setHasMoreData(data.count !== tasks.length);\n            setLoading(false);\n        };\n\n        loadData();\n\n    }, [page, searchValue, tempSort, refetch, filter]);\n\n    useEffect(() => {\n        if (tasks.length > 0 && hasMoreData) {\n            observerRef.current = new IntersectionObserver(entries => {\n                if (entries[0].isIntersecting) setPage(prevPage => prevPage + 1);\n            });\n\n            const lastRow = document.querySelector('.p-datatable-tbody tr:not(.p-datatable-emptymessage):last-child');\n            if (lastRow) observerRef.current.observe(lastRow);\n        }\n\n        return () => {\n            if (observerRef.current) observerRef.current.disconnect();\n        };\n    }, [tasks, hasMoreData]);\n\n    const idBody = (rowData) => {\n        let isDue = new Date(+rowData.to_date * 1000).getTime() < Date.now();\n\n        return <div className={`d-flex align-items-center justify-content-center show-on-hover`}>\n            <div className='d-flex flex-column'>\n                {rowData.number}\n\n                <span className='font-12' style={{ color: isDue && !rowData.finished ? '#F97066' : '#98A2B3' }}>{formatDate(rowData.to_date)}</span>\n            </div>\n            <Button label=\"Open\" onClick={() => { setTaskId(rowData?.id); setVisible(true); }} className='primary-text-button ms-3 show-on-hover-element' text />\n        </div>;\n    };\n\n    const nameBody = (rowData) => {\n        const name = `${rowData?.user.full_name}`;\n        const initials = `${rowData?.user?.alias}`;\n        return <div className='d-flex align-items-center'>\n            <div className={`d-flex justify-content-center align-items-center ${style.clientName}`} style={{ width: '30px', height: '30px', borderRadius: '50%', overflow: 'hidden' }}>\n                {rowData?.user?.has_photo\n                    ? <FallbackImage has_photo={rowData?.user?.has_photo} photo={rowData?.user?.photo} is_business={false} />\n                    : initials\n                }\n            </div>\n            {name}\n        </div>;\n    };\n\n    const statusBody = (rowdata) => {\n        return <div className={`${style.time} ${rowdata.finished ? style.complete : style.pending}`}>\n            {rowdata.finished ? \"Complete\" : \"Not Complete\"}\n        </div>;\n    };\n\n    const projectBody = (rowData) => {\n        return <div className='d-flex align-items-center gap-2'>\n            <div className={clsx(style.projectImg, 'd-flex align-items-center justify-content-center')}>\n                <FileText color='#475467' size={13} />\n            </div>\n            <div style={{ lineHeight: '1.385' }}>\n                <h1 className={clsx(style.projectText, 'mb-0')}>{rowData?.project?.reference}</h1>\n                <span className='font-12' style={{ color: '#98A2B3' }}><Link className={`${style.linkToProjectCard}`} to={`/management?unique_id=${rowData?.project?.unique_id}`}>{rowData?.project?.number}</Link></span>\n            </div>\n        </div>;\n    };\n\n    const startBody = (rowData) => {\n        return formatDate(rowData.from_date);\n    };\n\n    const endBody = (rowData) => {\n        return formatDate(rowData.to_date);\n    };\n\n    const mutation = useMutation({\n        mutationFn: (updateData) => TaskCompleteJob(updateData.id, updateData.finished),\n        onSuccess: () => {\n            setRefetch((refetch) => !refetch);\n        },\n        onError: (error) => {\n            console.error('Error updating task:', error);\n        }\n    });\n\n    const handleInComplete = async (id) => {\n        await mutation.mutateAsync({ id, finished: false });\n        toast.success('Task marked as incomplete');\n    };\n\n    const handleComplete = async (id) => {\n        await mutation.mutateAsync({ id, finished: true });\n        toast.success('Task marked as complete');\n    };\n\n    const actionBody = (rowData) => {\n        let isComplete = rowData.finished;\n        if (isComplete) {\n            return <Button loading={mutation.isPending && rowData.id === mutation.variables?.id} className='outline-in-complete-button' style={{ minWidth: '136px' }} onClick={() => handleInComplete(rowData.id)}>Completed <CheckCircle size={16} color='#079455' /></Button>;\n        } else {\n            return <Button loading={mutation.isPending && rowData.id === mutation.variables?.id} className='outline-complete-button' style={{ minWidth: '136px' }} onClick={() => handleComplete(rowData.id)}>Mark Complete <CheckCircle size={16} color='#079455' /></Button>;\n        }\n    };\n\n    const rowClassName = (data) => (data?.deleted ? style.deletedRow : '');\n\n    const onSort = (event) => {\n        const { sortField, sortOrder } = event;\n\n        setTempSort({ sortField, sortOrder });\n        setPage(1);  // Reset to page 1 whenever searchValue changes\n    };\n\n    return (\n        <>\n            <DataTable ref={ref} value={tasks} scrollable selectionMode={'checkbox'}\n                columnResizeMode=\"expand\" resizableColumns showGridlines size={'large'}\n                scrollHeight={`calc(100vh - 175px - ${trialHeight}px)`} className=\"border\" selection={selected}\n                onSelectionChange={(e) => setSelected(e.value)}\n                loading={loading}\n                loadingIcon={Loader}\n                emptyMessage={<NoDataFoundTemplate isDataExist={!!searchValue} />}\n                sortField={sort?.sortField}\n                sortOrder={sort?.sortOrder}\n                onSort={onSort}\n                rowClassName={rowClassName}\n            >\n                <Column selectionMode=\"multiple\" headerClassName='ps-4 border-end-0' bodyClassName={'show-on-hover border-end-0 ps-4'} headerStyle={{ width: '3rem', textAlign: 'center' }} frozen></Column>\n                <Column field=\"number\" header=\"Task ID\" body={idBody} style={{ minWidth: '100px' }} frozen sortable></Column>\n                <Column field=\"title\" header=\"Task Title\" body={(rowData) => <div className='ellipsis-width' style={{ maxWidth: '300px' }}>{rowData.title}</div>} style={{ minWidth: '150px' }} bodyClassName={`${style.shadowRight}`} headerClassName={`${style.shadowRight}`} frozen></Column>\n                <Column field=\"user.full_name\" header=\"Assigne\" body={nameBody} style={{ minWidth: '208px' }}></Column>\n                <Column field=\"finished\" header=\"Status\" body={statusBody} style={{ minWidth: '120px', maxWidth: '120px', width: '120px' }}></Column>\n                <Column field=\"project.reference\" header=\"Project\" body={projectBody} style={{ minWidth: '460px' }}></Column>\n                <Column field=\"from_date\" header=\"Start Date\" body={startBody} style={{ minWidth: '115px', maxWidth: '115px', width: '115px' }} sortable></Column>\n                <Column field='id' header=\"Actions\" body={actionBody} style={{ minWidth: '170px', maxWidth: '170px', width: '170px' }}></Column>\n            </DataTable>\n            <ViewTaskModal view={visible} setView={setVisible} taskId={taskId} setTaskId={setTaskId} reInitialize={() => setRefetch((refetch) => !refetch)} />\n        </>\n    );\n});\n\nexport default TaskTable;","import React, { useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Download, Filter } from 'react-bootstrap-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { Checkbox } from 'primereact/checkbox';\nimport { useDebounce } from 'primereact/hooks';\nimport TaskTable from './task-table';\nimport style from './task.module.scss';\nimport CreateTask from '../../features/task/create-task/create-task';\n\nconst TaskPage = () => {\n    const dt = useRef(null);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [inputValue, debouncedValue, setInputValue] = useDebounce('', 400);\n    const [selected, setSelected] = useState([]);\n    const [refetch, setRefetch] = useState(false);\n    const [showStatusFilter, setShowStatusFilter] = useState(false);\n    const [filter, setFilter] = useState({ status: 'not-complete' });\n\n    const exportCSV = (selectionOnly) => {\n        if (dt.current) {\n            dt.current.exportCSV({ selectionOnly });\n        } else {\n            console.error('DataTable ref is null');\n        }\n    };\n\n    // close the status filter when clicked outside\n    React.useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (showStatusFilter && !event.target.closest(`.${style.statusFilter}`) && !event.target.closest('.p-button')) {\n                setShowStatusFilter(false);\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [showStatusFilter]);\n\n    return (\n        <div className='jobs-page'>\n            <Helmet>\n                <title>MeMate - Tasks</title>\n            </Helmet>\n            <div className={`topbar ${selected?.length ? style.active : ''}`} style={{ padding: '4px 32px 4px 23px', position: 'relative', height: '48px' }}>\n                <div className='left-side d-flex align-items-center' style={{ gap: '16px' }}>\n                    {\n                        selected?.length ? (\n                            <>\n                                <h6 className={style.selectedCount}>Selected: {selected?.length}</h6>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => exportCSV(true)}><Download /></button>\n                                </div>\n                            </>\n                        ) : (\n                            <>\n                                <div className='filtered-box'>\n                                    <button className={`${style.filterBox}`} onClick={() => {}}><Filter size={20}/></button>\n                                </div>\n                                <div className=\"searchBox\" style={{ position: 'relative' }}>\n                                    <div style={{ position: 'absolute', top: '2px', left: '6px' }}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                            <path d=\"M14.6777 12.9299C15.6661 11.5841 16.25 9.92275 16.25 8.125C16.25 3.63769 12.6123 0 8.125 0C3.63769 0 0 3.63769 0 8.125C0 12.6123 3.63769 16.25 8.125 16.25C9.92323 16.25 11.585 15.6658 12.9309 14.6769L12.9299 14.6777C12.9667 14.7277 13.0078 14.7756 13.053 14.8208L17.8661 19.6339C18.3543 20.122 19.1457 20.122 19.6339 19.6339C20.122 19.1457 20.122 18.3543 19.6339 17.8661L14.8208 13.053C14.7756 13.0078 14.7277 12.9667 14.6777 12.9299ZM15 8.125C15 11.922 11.922 15 8.125 15C4.32804 15 1.25 11.922 1.25 8.125C1.25 4.32804 4.32804 1.25 8.125 1.25C11.922 1.25 15 4.32804 15 8.125Z\" fill=\"#98A2B3\" />\n                                        </svg>\n                                    </div>\n                                    <input type=\"text\" placeholder=\"Search\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"border search-resource\" style={{ borderRadius: '4px', width: '184px', border: '1px solid #D0D5DD', color: '#424242', paddingLeft: '36px', fontSize: '14px', height: '32px' }} />\n                                </div>\n                                <div style={{ position: 'relative' }}>\n                                    <Button className='outline-button' style={{ padding: '4px 8px', height: '32px', fontSize: '14px', color: '#667085', border: '1px solid #D0D5DD', backgroundColor: '#FFFFFF' }} onClick={() => setShowStatusFilter(!showStatusFilter)}>\n                                        <Filter size={16} style={{ marginRight: '0px' }}/>\n                                        <span style={{ color: '#667085', fontSize: '14px', fontWeight: '400' }}>Status</span>\n                                        {/* {\n                                            filter.status === 'complete' ? <span style={{ fontSize: '12px', color: '#067647' }}>Complete</span> :\n                                            filter.status === 'not-complete' ? <span style={{ fontSize: '12px', color: '#93370d' }}>Not Complete</span> :\n                                            <span style={{ color: '#667085', fontSize: '14px', fontWeight: '400' }}>Status</span>\n                                        } */}\n                                    </Button>\n                                    {\n                                        showStatusFilter &&\n                                        <div className={`${style.statusFilter}`}>\n                                            <div className='d-flex align-items-center p-2 mb-2'>\n                                                <Checkbox checked={filter.status === 'complete'} label=\"complete\" onClick={() => setFilter({ status: 'complete' })} />\n                                                <div onClick={() => setFilter({ status: 'complete' })} className={style.complete} style={{ marginLeft: '16px' }}>Complete</div>\n                                            </div>\n                                            <div className='d-flex align-items-center p-2 mb-2'>\n                                                <Checkbox checked={filter.status === 'not-complete'} label=\"not-complete\" onClick={() => setFilter({ status: 'not-complete' })} />\n                                                <div onClick={() => setFilter({ status: 'not-complete' })} className={`${style.pending} cursor-pointer`} style={{ marginLeft: '16px' }}>Not Complete</div>\n                                            </div>\n                                            <div className='d-flex align-items-center p-2 mb-2'>\n                                                <Checkbox checked={filter.status === 'all'} label=\"all\" onClick={() => setFilter({ status: 'all' })} />\n                                                <div onClick={() => setFilter({ status: 'all' })} className={`${style.pending} cursor-pointer`} style={{ marginLeft: '16px' }}>All</div>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </>\n                        )\n                    }\n                </div>\n\n                <div className=\"featureName d-flex align-items-center\" style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}>\n                    <h1 className=\"title p-0\" style={{ marginRight: '16px' }}>Tasks</h1>\n                    <Button onClick={()=> setVisible(true)} className={`${style.newButton}`}>Create New Task </Button>\n                </div>\n                <div className=\"right-side d-flex align-items-center\" style={{ gap: '8px' }}>\n                    <h1 className={`${style.total} mb-0`}>Total</h1>\n                    <div className={`${style.totalCount}`}>{total} Jobs</div>\n                </div>\n            </div>\n            <TaskTable ref={dt} searchValue={debouncedValue} setTotal={setTotal} selected={selected} setSelected={setSelected} refetch={refetch} setRefetch={setRefetch} filter={filter} />\n            <CreateTask show={visible} setShow={setVisible} refetch={() => setRefetch((refetch)=> !refetch)}/>\n        </div>\n    );\n};\n\nexport default TaskPage;","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n\n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(endpoint);\n        const response = await fetch(url, requestOptions);\n        const contentType = response.headers.get('Content-Type');\n\n        if (!response.ok) {\n            let errorData = null;\n\n            if (contentType && contentType.includes('application/json')) {\n                errorData = await response.json();\n            } else {\n                errorData = await response.text();\n            }\n\n            if (response.status === 401) {\n                localStorage.clear();\n                sessionStorage.clear();\n                window.location.replace(\"/login\");\n            }\n\n            const error = new Error(errorData?.message || `HTTP error! Status: ${response.status}`);\n            error.status = response.status;\n            error.data = errorData;\n            throw error;\n        }\n\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        // Rethrow to propagate to useMutation\n        throw error;\n    }\n};\n","import { useQuery } from '@tanstack/react-query';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { getTask } from '../../../../../APIs/task-api';\nimport CreateTask from '../create-task/create-task';\n\nconst TaskLoadingView = () => {\n  return (\n    <>\n      <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n        <Placeholder xs={12} bg=\"secondary\" size='lg' />\n      </Placeholder>\n      <Placeholder as=\"p\" animation=\"wave\">\n        <Placeholder xs={12} bg=\"secondary\" style={{ height: '80px' }} size='lg' />\n      </Placeholder>\n      <table className='task-deatils-table w-100'>\n        <tbody>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n          <tr style={{ marginBottom: '12px' }}>\n            <td style={{ width: '122px', paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n            <td style={{ paddingBottom: '12px' }}>\n              <Placeholder as=\"p\" animation=\"wave\" style={{ marginBottom: '4px' }}>\n                <Placeholder xs={12} bg=\"secondary\" />\n              </Placeholder>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n    </>\n  );\n};\n\nconst ViewTaskModal = ({ view, setView, taskId, setTaskId, reInitialize }) => {\n  const { data } = useQuery({\n    queryKey: ['taskId', taskId],\n    queryFn: () => getTask(taskId),\n    enabled: !!taskId && !!view,\n    retry: 1,\n    cacheTime: 0,\n    staleTime: 0,\n  });\n\n  return (\n    <>\n      {view && <CreateTask show={view} setShow={setView} taskId={taskId} setTaskId={setTaskId} defaultValue={data} refetch={reInitialize} />}\n    </>\n  );\n};\n\nexport default ViewTaskModal;","// extracted by mini-css-extract-plugin\nexport default {\"noDataBox\":\"no-data-found-template_noDataBox__HgeT1\",\"searchImg\":\"no-data-found-template_searchImg__MnYNA\",\"title\":\"no-data-found-template_title__P5uV2\",\"subTitle\":\"no-data-found-template_subTitle__zMBB-\",\"supportext\":\"no-data-found-template_supportext__pHg2P\"};","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { ChevronLeft } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport style from './no-data-found-template.module.scss';\nimport NodataImg from \"../../assets/images/img/NodataImg.png\";\nimport Support from '../../shared/ui/support/support';\n\n\nconst NoDataFoundTemplate = ({ isDataExist = true }) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <div className={clsx(style.noDataBox)}>\n            <div className='position-relative d-flex flex-column'>\n                <img src={NodataImg} alt='no-data' />\n            </div>\n            {\n                isDataExist ? (\n                    <>\n                        <h2 className={clsx(style.title)}>There is no results</h2>\n                        <p className={clsx(style.subTitle)}>\n                            The user you are looking for doesn't exist. <br />Here are some helpful links:\n                        </p>\n                        <Link to={\"/\"}><Button className='outline-button' style={{ marginBottom: '32px' }}> <ChevronLeft /> Go back</Button></Link>\n                        <Link onClick={() => setVisible(true)} to={\"#\"}><span className={clsx(style.supportext)}>Support</span></Link>\n                    </>\n                ) : (\n                    <>\n                        <h2 className={clsx(style.title)}>No historical records yet.</h2>\n                    </>\n                )\n            }\n            <Support setVisible={setVisible} visible={visible} />\n        </div>\n    );\n};\n\nexport default NoDataFoundTemplate;"],"names":["API_BASE_URL","process","getListOfExpense","async","page","limit","search","arguments","length","undefined","order","isShowUnpaid","offset","url","URL","searchParams","append","fetchAPI","toString","method","getXeroCodesList","getProjectsList","getExpense","id","createNewExpense","options","body","data","updateExpense","paidExpense","unpaidExpense","sendExpenseToXeroApi","deleteExpense","uniqueId","downloadStatement","sendStatementEmail","formatDate","timestamp","date","Date","getDate","Intl","DateTimeFormat","month","format","getFullYear","TaskTable","forwardRef","_ref","ref","searchValue","setTotal","selected","setSelected","refetch","setRefetch","filter","trialHeight","useTrialHeight","observerRef","useRef","visible","setVisible","useState","taskId","setTaskId","setPage","tasks","setTasks","sort","setSort","sortField","sortOrder","tempSort","setTempSort","hasMoreData","setHasMoreData","loading","setLoading","useEffect","showNotCompleted","status","getListOfTasks","_data$results","count","results","prev","existingIds","Set","map","newData","has","loadData","current","IntersectionObserver","entries","isIntersecting","prevPage","lastRow","document","querySelector","observe","disconnect","mutation","useMutation","mutationFn","updateData","TaskCompleteJob","finished","onSuccess","onError","error","console","_jsxs","_Fragment","children","DataTable","value","scrollable","selectionMode","columnResizeMode","resizableColumns","showGridlines","size","scrollHeight","className","selection","onSelectionChange","e","loadingIcon","Loader","emptyMessage","_jsx","NoDataFoundTemplate","isDataExist","onSort","event","rowClassName","deleted","style","deletedRow","Column","headerClassName","bodyClassName","headerStyle","width","textAlign","frozen","field","header","rowData","isDue","to_date","getTime","now","number","color","Button","label","onClick","text","minWidth","sortable","maxWidth","title","shadowRight","_rowData$user","_rowData$user2","_rowData$user3","_rowData$user4","name","user","full_name","initials","alias","clientName","height","borderRadius","overflow","has_photo","FallbackImage","photo","is_business","rowdata","time","complete","pending","_rowData$project","_rowData$project2","_rowData$project3","clsx","projectImg","FileText","lineHeight","projectText","project","reference","Link","linkToProjectCard","to","unique_id","from_date","_mutation$variables","_mutation$variables2","isPending","variables","mutateAsync","toast","success","handleInComplete","CheckCircle","handleComplete","ViewTaskModal","view","setView","reInitialize","TaskPage","dt","total","inputValue","debouncedValue","setInputValue","useDebounce","showStatusFilter","setShowStatusFilter","setFilter","React","handleClickOutside","target","closest","statusFilter","addEventListener","removeEventListener","Helmet","active","padding","position","gap","selectedCount","filterBox","exportCSV","selectionOnly","Download","Filter","top","left","xmlns","viewBox","fill","d","type","placeholder","onChange","border","paddingLeft","fontSize","backgroundColor","marginRight","fontWeight","Checkbox","checked","marginLeft","transform","newButton","totalCount","CreateTask","show","setShow","endpoint","isRequiredLoggedin","headers","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","response","fetch","contentType","get","ok","_errorData","errorData","includes","json","clear","sessionStorage","window","location","replace","Error","message","useQuery","queryKey","queryFn","getTask","enabled","retry","cacheTime","staleTime","defaultValue","src","NodataImg","alt","marginBottom","ChevronLeft","Support"],"sourceRoot":""}