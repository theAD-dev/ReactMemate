{"version":3,"file":"static/js/3630.a12231f3.chunk.js","mappings":"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","sources":["assets/images/icon/arrow.svg","assets/images/icon/exclamation-circle.svg","APIs/OnboardingApi.js","APIs/base-api.js","components/layout/onboarding/Discovermemate.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 13,\n    viewBox: \"0 0 18 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.25 6.5C0.25 6.15482 0.529822 5.875 0.875 5.875L15.6161 5.875L11.6831 1.94194C11.439 1.69786 11.439 1.30214 11.6831 1.05806C11.9271 0.81398 12.3229 0.81398 12.5669 1.05806L17.5669 6.05806C17.811 6.30213 17.811 6.69786 17.5669 6.94194L12.5669 11.9419C12.3229 12.186 11.9271 12.186 11.6831 11.9419C11.439 11.6979 11.439 11.3021 11.6831 11.0581L15.6161 7.125L0.875 7.125C0.529822 7.125 0.25 6.84518 0.25 6.5Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.39453b4ea8b344e3bb6f41c5a35a5b74.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgExclamationCircle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 17 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"exclamation-circle\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.5 15.5C4.63401 15.5 1.5 12.366 1.5 8.5C1.5 4.63401 4.63401 1.5 8.5 1.5C12.366 1.5 15.5 4.63401 15.5 8.5C15.5 12.366 12.366 15.5 8.5 15.5ZM8.5 16.5C12.9183 16.5 16.5 12.9183 16.5 8.5C16.5 4.08172 12.9183 0.5 8.5 0.5C4.08172 0.5 0.5 4.08172 0.5 8.5C0.5 12.9183 4.08172 16.5 8.5 16.5Z\",\n    fill: \"#F04438\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.50154 11.5C7.50154 10.9477 7.94926 10.5 8.50154 10.5C9.05383 10.5 9.50154 10.9477 9.50154 11.5C9.50154 12.0523 9.05383 12.5 8.50154 12.5C7.94926 12.5 7.50154 12.0523 7.50154 11.5Z\",\n    fill: \"#F04438\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.5995 5.49504C7.54623 4.96228 7.96459 4.5 8.5 4.5C9.03541 4.5 9.45377 4.96228 9.4005 5.49504L9.04975 9.00248C9.02151 9.28492 8.78384 9.5 8.5 9.5C8.21616 9.5 7.97849 9.28492 7.95025 9.00248L7.5995 5.49504Z\",\n    fill: \"#F04438\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgExclamationCircle);\nexport default __webpack_public_path__ + \"static/media/exclamation-circle.cae916ce28e0a8d8d07a477235f7a993.svg\";\nexport { ForwardRef as ReactComponent };","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// Onboarding API endpoints\nexport const OnboardingCreateApi = async (data) => {\n  const endpoint = `/onboarding/create/user/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const onboardingNextStep = async (uuid) => {\n  const endpoint = `/onboarding/next-step/${uuid}/`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCode = async (otpCode, uuid) => {\n  const endpoint = `/onboarding/verify/user/${uuid}/`;\n  const options = {\n    method: \"PUT\",\n    body: { code: otpCode },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateOrganisation = async (uuid, data) => {\n  const endpoint = `/onboarding/create/organization/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateSubscription = async (uuid, data) => {\n  const endpoint = `/onboarding/create/subscription/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreatePassword = async (uuid, data) => {\n  const endpoint = `/onboarding/create/password/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\n\nexport const requestDemoCreate = async (mainData) => {\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify(mainData);\n  console.log('raw: ', raw);\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/onboarding/request_demo/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n\n  } catch (error) {\n    console.error('Error:', error);\n    return error.text().then(errorMessage => {\n      console.error('Error Message:', errorMessage);\n      throw new Error(errorMessage);\n    });\n  }\n};\n\n\n\n\n","/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { OnboardingCreateSubscription } from \"../../../APIs/OnboardingApi\";\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport Checkicon from \"../../../assets/images/icon/Checkicon.png\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport LinepatternBottom from \"../../../assets/images/icon/Linepattern.png\";\nimport Linepatterntop from \"../../../assets/images/icon/Linepatterntop.png\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISH_KEY);\n\nconst Discovermemate = () => {\n  const navigate = useNavigate();\n  const { uuid } = useParams();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  if (!uuid) navigate('/onboarding');\n\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n    });\n\n    if (error) {\n      console.error(error.message);\n      setError(error.message);\n    } else {\n      console.log(\"PaymentMethod:\", paymentMethod);\n      setLoading(true);\n      OnboardingCreateSubscription(uuid, { payment_method: paymentMethod.id })\n        .then(() => navigate(`/create-password/${uuid}`))\n        .catch((err) => {\n          console.error(\"Error submitting form:\", err);\n          setError(err.message);\n        }).finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"requestDemoWrap\">\n      <div className=\"logohead\">\n        <img src={LoinLogo} alt=\"Logo\" />\n      </div>\n      <div className=\"copywrite\">© Memate {new Date().getFullYear()}</div>\n      <div className=\"OnboardingStep1\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"loginPage\">\n            <div className=\"boxinfo\">\n              <div className=\"boxLogin\">\n                <h2>\n                  10-Day <span>Free Trial</span> Discover <span>Memate</span>\n                </h2>\n                <div className=\"step-progress\">\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step active\"></div>\n                </div>\n                <div className=\"formgroup mb-3\">\n                  <label>Name on card<span style={{ color: \"#f04438\" }}>*</span></label>\n                  <div className={`inputInfo ${error ? \"error-border\" : name ? \"successBorder\" : \"\"}`}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Full name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                    <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Error\" />\n                  </div>\n                </div>\n                <label>Card<span style={{ color: \"#f04438\" }}>*</span></label>\n                <div className=\"border rounded\" style={{ padding: '13px 15px' }}>\n                  <CardElement\n                    options={{\n                      hidePostalCode: true\n                    }}\n                  />\n                </div>\n\n                {error && <p className=\"error-message\">{error}</p>}\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className=\"fillbtn flexcenterbox\"\n                >\n                  {loading ? \"Processing...\" : \"Next Step\"}\n                  {!loading && <img src={arrowRight} alt=\"Arrow Right\" />}\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"sliderRight BusinessPlanwrap\"\n              style={{\n                backgroundImage: `url(${LinepatternBottom}), url(${Linepatterntop})`,\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"left bottom, right top\",\n              }}\n            >\n              <div className=\"BusinessPlanBox\">\n                <div className=\"headPlan\">\n                  <h1>Business Plan</h1>\n                  <h3>Billed monthly.</h3>\n                  <p>$99/mth + GST</p>\n                </div>\n                <div className=\"listPlan\">\n                  <ul>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Includes all features of MeMate\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Project Management\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Real Time Cost Breakdown\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Work\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Invoicing\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Quoting\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Sales Activities\n                    </li>\n                  </ul>\n                  <ul>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Company Performance and Reports\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Customer Database\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Project Database\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Company Target Reports\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Expense Management\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Outstanding Accounts Tracking\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Custom Flagging and Alerts\n                    </li>\n                  </ul>\n                </div>\n                <p>\n                  Get started with no upfront cost. Your{\" \"}\n                  <strong>subscription begins in 10 days</strong>, allowing you to explore our services\n                  without immediate charges.\n                </p>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst DiscovermemateWrapper = () => (\n  <Elements stripe={stripePromise}>\n    <Discovermemate />\n  </Elements>\n);\n\nexport default DiscovermemateWrapper;\n"],"names":["API_BASE_URL","process","onboardingNextStep","async","endpoint","uuid","fetchAPI","method","headers","OnboardingCode","otpCode","options","body","code","OnboardingCreateOrganisation","data","OnboardingCreateSubscription","OnboardingCreatePassword","requestDemoCreate","myHeaders","Headers","append","raw","JSON","stringify","mainData","console","log","requestOptions","redirect","response","fetch","result","text","error","then","errorMessage","Error","arguments","length","undefined","isRequiredLoggedin","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","url","URL","ok","status","contentType","get","includes","json","message","stripePromise","loadStripe","Discovermemate","navigate","useNavigate","useParams","stripe","useStripe","elements","useElements","name","setName","useState","setError","loading","setLoading","_jsxs","className","children","_jsx","src","LoinLogo","alt","Date","getFullYear","onSubmit","event","preventDefault","cardElement","getElement","CardElement","paymentMethod","createPaymentMethod","type","card","payment_method","id","catch","err","finally","style","color","placeholder","value","onChange","e","target","exclamationCircle","padding","hidePostalCode","disabled","arrowRight","backgroundImage","Linepatterntop","backgroundRepeat","backgroundPosition","Checkicon","DiscovermemateWrapper","Elements"],"sourceRoot":""}