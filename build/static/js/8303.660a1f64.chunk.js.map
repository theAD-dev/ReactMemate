{"version":3,"file":"static/js/8303.660a1f64.chunk.js","mappings":"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","sources":["components/layout/settings/templates/edit-email.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from '../Sidebar';\nimport style from './job-template.module.scss';\nimport BreadCrumbPage from './bread-crumb';\nimport { useLocation ,useNavigate} from 'react-router-dom';\nimport { PencilSquare} from \"react-bootstrap-icons\";\nimport { Button, Col, Row } from 'react-bootstrap';\nimport clsx from 'clsx';\nimport { IconField } from \"primereact/iconfield\";\nimport { InputIcon } from \"primereact/inputicon\";\nimport { InputText } from \"primereact/inputtext\";\nimport { useForm } from 'react-hook-form';\nimport exclamationCircle from \"../../../../assets/images/icon/exclamation-circle.svg\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { InputTextarea } from \"primereact/inputtextarea\"\nimport { Editor } from \"primereact/editor\";\n\n\nconst EditEmail = () => {\n    const [activeTab, setActiveTab] = useState('email-templates');\n    const location = useLocation();\n    const [ingredient, setIngredient] = useState('');\n    const [text, setText] = useState('');\n    const { departments } = location.state || {};\n    const [cardData, setCardData] = useState(null);\n    const [isDepartments, setisDepartments] = useState(false);\n    const [editedDepartments, seteditedDepartments] = useState('');\n   \n\n    const onSubmit = data => {\n        console.log(data);\n      };\n\n      const schema = yup.object().shape({\n        username: yup.string().required('Username is required'),\n      });\n\n  \n      const { control, register, handleSubmit, setValue, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n\n    const handleEditDepartments = () => {\n        setisDepartments(true);\n        seteditedDepartments(departments || '');\n      };\n      const handleDepartmentsChange = (e) => {\n        seteditedDepartments(e.target.value);\n      };\n      const handleSaveDepartment = () => {\n        setCardData(prevData => ({\n          ...prevData,\n          reference: editedDepartments\n        }));\n        setisDepartments(false);\n      };\n\n\n      const navigate = useNavigate(); \n      const backHandle = () => {   \n        navigate(\"/settings/templates/email-templates/\");\n      };\n\n    return (\n        <>\n        <div className='content_wrap_main'>\n            \n        <div className='settings-wrap'>\n        <div className=\"settings-wrapper\">\n            <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n            <div className='settings-content'>\n            <div className={` ${style.templateBoxWrap}`}>\n            <BreadCrumbPage backHandle={backHandle} templateName='Email Templates' departmentsName={departments || 'No Departments'} /> \n               \n                <div className={style.templateHeadBorder}>\n                <h1>\n                {isDepartments ? (\n                  <input\n                    type=\"text\"\n                    value={editedDepartments}\n                    onChange={handleDepartmentsChange}\n                    onBlur={handleSaveDepartment}\n                    autoFocus\n                  />\n                ) : (\n                  <>\n                     {departments}\n                    <span> <PencilSquare size={16} color='#106B99' onClick={handleEditDepartments} style={{ cursor: 'pointer' }} /></span>\n                  </>\n                )}\n            </h1>\n                </div>\n                <div className={style.formTemplateGroup}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                \n                <Row>\n            \n             <Col sm={12}>\n            <div className=\"d-flex flex-column gap-1 mb-4\">\n                 <label className={clsx(style.lable)}>Subject</label>\n                 <IconField>\n                 <InputIcon>{errors.name && <img src={exclamationCircle} className='mb-3' alt='error-icon' />}</InputIcon>\n                 <InputText {...register(\"name\")} className={clsx(style.inputText, { [style.error]: errors.name })} placeholder='Enter subject' />\n                 </IconField>\n                 {errors.name && <p className=\"error-message\">{errors.name.message}</p>}\n             </div>\n             </Col>\n            \n             <Col sm={12}>\n                     <div className=\"d-flex flex-column gap-1\">\n                         <label className={clsx(style.lable)}>Message </label>\n                         <Editor value={text} onTextChange={(e) => setText(e.htmlValue)} style={{ height: '320px' }} />\n                         {errors.description && <p className=\"error-message\">{errors.description.message}</p>}\n                     </div>\n                 </Col>\n            \n                </Row>\n \n                \n                \n                 </form>\n                </div>  \n                 \n            </div>\n            <Row className='bg-white mt-4 pt-4 pb-4'>\n               <Col>\n               <Button type=\"button\" className='danger-outline-button' >Delete Template</Button>\n               </Col>\n              \n               <Col className='d-flex justify-content-end align-items-center'>\n               <Button type='button'  className='me-2 outline-button'>Cancel</Button>\n               <Button type='button' className='solid-button'>Save Template</Button>\n               </Col>\n               </Row>\n            </div>\n            \n        </div>\n        \n        </div>\n        </div>\n        </>\n    );\n}\n\nexport default EditEmail;\n"],"names":["EditEmail","activeTab","setActiveTab","useState","location","useLocation","ingredient","setIngredient","text","setText","departments","state","cardData","setCardData","isDepartments","setisDepartments","editedDepartments","seteditedDepartments","schema","yup","shape","username","required","control","register","handleSubmit","setValue","formState","errors","useForm","resolver","yupResolver","navigate","useNavigate","_jsx","_Fragment","children","className","_jsxs","Sidebar","style","templateBoxWrap","BreadCrumbPage","backHandle","templateName","departmentsName","templateHeadBorder","type","value","onChange","e","target","onBlur","handleSaveDepartment","prevData","reference","autoFocus","PencilSquare","size","color","onClick","handleEditDepartments","cursor","formTemplateGroup","onSubmit","data","console","log","Row","Col","sm","clsx","lable","IconField","InputIcon","name","src","exclamationCircle","alt","InputText","inputText","error","placeholder","message","Editor","onTextChange","htmlValue","height","description","Button"],"sourceRoot":""}