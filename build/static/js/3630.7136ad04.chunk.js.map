{"version":3,"file":"static/js/3630.7136ad04.chunk.js","mappings":"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","sources":["APIs/base-api.js","APIs/OnboardingApi.js","components/layout/onboarding/Discovermemate.js"],"sourcesContent":["/**\n * A generic fetch function to make API calls.\n * @param {string} endpoint - The API endpoint to call.\n * @param {object} options - The fetch options including method, headers, and body.\n * @returns {Promise<any>} - The JSON response from the API.\n */\nexport const fetchAPI = async (endpoint, options = {}, isRequiredLoggedin = true) => {\n    const { method = 'GET', headers = {}, body } = options;\n    const accessToken = localStorage.getItem(\"access_token\");\n    const isFormData = body instanceof FormData;\n\n    const defaultHeaders = {\n        'Content-Type': isFormData ? 'multipart/form-data' : 'application/json',\n        ...headers\n    };\n    \n    if (isRequiredLoggedin) {\n        defaultHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    const requestOptions = {\n        method,\n        headers: defaultHeaders,\n        body: isFormData ? body : JSON.stringify(body),\n        redirect: 'follow'\n    };\n\n    try {\n        const url = new URL(`${endpoint}`);\n        const response = await fetch(url, requestOptions);\n        if (!response.ok) {\n            if (response.status === 404) throw new Error('Not found');\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n            return await response.json();\n        } else {\n            const text = await response.text();\n            return { message: 'Non-JSON response', body: text };\n        }\n    } catch (error) {\n        console.error('Fetch API error:', error);\n        throw error;\n    }\n};\n\n","import { fetchAPI } from \"./base-api\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL;\n\n// Onboarding API endpoints\nexport const OnboardingCreateApi = async (data) => {\n  const endpoint = `/onboarding/create/user/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const onboardingNextStep = async (uuid) => {\n  const endpoint = `/onboarding/next-step/${uuid}/`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCode = async (otpCode, uuid) => {\n  const endpoint = `/onboarding/verify/user/${uuid}/`;\n  const options = {\n    method: \"PUT\",\n    body: { code: otpCode },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateOrganisation = async (uuid, data) => {\n  const endpoint = `/onboarding/create/organization/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreateSubscription = async (uuid, data) => {\n  const endpoint = `/onboarding/create/subscription/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\nexport const OnboardingCreatePassword = async (uuid, data) => {\n  const endpoint = `/onboarding/create/password/${uuid}/`;\n  const options = {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetchAPI(`${API_BASE_URL}${endpoint}`, options, false);\n};\n\n\nexport const requestDemoCreate = async (mainData) => {\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const raw = JSON.stringify(mainData);\n  console.log('raw: ', raw);\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/onboarding/request_demo/`, requestOptions);\n    const result = await response.text();\n    console.log('result: ', result);\n    return result;\n\n  } catch (error) {\n    console.error('Error:', error);\n    return error.text().then(errorMessage => {\n      console.error('Error Message:', errorMessage);\n      throw new Error(errorMessage);\n    });\n  }\n};\n\n\n\n\n","import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { OnboardingCreateSubscription } from \"../../../APIs/OnboardingApi\";\nimport arrowRight from \"../../../assets/images/icon/arrow.svg\";\nimport Checkicon from \"../../../assets/images/icon/Checkicon.png\";\nimport exclamationCircle from \"../../../assets/images/icon/exclamation-circle.svg\";\nimport LinepatternBottom from \"../../../assets/images/icon/Linepattern.png\";\nimport Linepatterntop from \"../../../assets/images/icon/Linepatterntop.png\";\nimport LoinLogo from \"../../../assets/images/logo.svg\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISH_KEY);\n\nconst Discovermemate = () => {\n  const navigate = useNavigate();\n  const { uuid } = useParams();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  if (!uuid) navigate('/onboarding');\n\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n    });\n\n    if (error) {\n      console.error(error.message);\n      setError(error.message);\n    } else {\n      console.log(\"PaymentMethod:\", paymentMethod);\n      setLoading(true);\n      OnboardingCreateSubscription(uuid, { payment_method: paymentMethod.id })\n        .then(() => navigate(`/create-password/${uuid}`))\n        .catch((err) => {\n          console.error(\"Error submitting form:\", err);\n          setError(err.message);\n        }).finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"requestDemoWrap\">\n      <div className=\"logohead\">\n        <img src={LoinLogo} alt=\"Logo\" />\n      </div>\n      <div className=\"copywrite\">© Memate {new Date().getFullYear()}</div>\n      <div className=\"OnboardingStep1\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"loginPage\">\n            <div className=\"boxinfo\">\n              <div className=\"boxLogin\">\n                <h2>\n                  10-Day <span>Free Trial</span> Discover <span>Memate</span>\n                </h2>\n                <div className=\"step-progress\">\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step\"></div>\n                  <div className=\"step active\"></div>\n                </div>\n                <div className=\"formgroup mb-3\">\n                  <label>Name on card<span style={{ color: \"#f04438\" }}>*</span></label>\n                  <div className={`inputInfo ${error ? \"error-border\" : name ? \"successBorder\" : \"\"}`}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Full name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                    <img className=\"ExclamationCircle\" src={exclamationCircle} alt=\"Error\" />\n                  </div>\n                </div>\n                <label>Card<span style={{ color: \"#f04438\" }}>*</span></label>\n                <div className=\"border rounded\" style={{ padding: '13px 15px' }}>\n                  <CardElement\n                    options={{\n                      hidePostalCode: true\n                    }}\n                  />\n                </div>\n\n                {error && <p className=\"error-message\">{error}</p>}\n                <button\n                  type=\"submit\"\n                  disabled={loading}\n                  className=\"fillbtn flexcenterbox\"\n                >\n                  {loading ? \"Processing...\" : \"Next Step\"}\n                  {!loading && <img src={arrowRight} alt=\"Arrow Right\" />}\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"sliderRight BusinessPlanwrap\"\n              style={{\n                backgroundImage: `url(${LinepatternBottom}), url(${Linepatterntop})`,\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"left bottom, right top\",\n              }}\n            >\n              <div className=\"BusinessPlanBox\">\n                <div className=\"headPlan\">\n                  <h1>Business Plan</h1>\n                  <h3>Billed monthly.</h3>\n                  <p>$99/mth + GST</p>\n                </div>\n                <div className=\"listPlan\">\n                  <ul>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Includes all features of MeMate\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Project Management\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Real Time Cost Breakdown\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Work\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Invoicing\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Quoting\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Sales Activities\n                    </li>\n                  </ul>\n                  <ul>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Company Performance and Reports\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Customer Database\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Project Database\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Company Target Reports\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Expense Management\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Outstanding Accounts Tracking\n                    </li>\n                    <li>\n                      <img src={Checkicon} alt=\"Check\" /> Custom Flagging and Alerts\n                    </li>\n                  </ul>\n                </div>\n                <p>\n                  Get started with no upfront cost. Your{\" \"}\n                  <strong>subscription begins in 10 days</strong>, allowing you to explore our services\n                  without immediate charges.\n                </p>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst DiscovermemateWrapper = () => (\n  <Elements stripe={stripePromise}>\n    <Discovermemate />\n  </Elements>\n);\n\nexport default DiscovermemateWrapper;\n"],"names":["fetchAPI","async","endpoint","options","arguments","length","undefined","isRequiredLoggedin","method","headers","body","accessToken","localStorage","getItem","isFormData","FormData","defaultHeaders","requestOptions","JSON","stringify","redirect","url","URL","response","fetch","ok","status","Error","contentType","get","includes","json","message","text","error","console","API_BASE_URL","process","onboardingNextStep","uuid","OnboardingCode","otpCode","code","OnboardingCreateOrganisation","data","OnboardingCreateSubscription","OnboardingCreatePassword","requestDemoCreate","myHeaders","Headers","append","raw","mainData","log","result","then","errorMessage","stripePromise","loadStripe","Discovermemate","navigate","useNavigate","useParams","stripe","useStripe","elements","useElements","name","setName","useState","setError","loading","setLoading","_jsxs","className","children","_jsx","src","LoinLogo","alt","Date","getFullYear","onSubmit","event","preventDefault","cardElement","getElement","CardElement","paymentMethod","createPaymentMethod","type","card","payment_method","id","catch","err","finally","style","color","placeholder","value","onChange","e","target","exclamationCircle","padding","hidePostalCode","disabled","arrowRight","backgroundImage","Linepatterntop","backgroundRepeat","backgroundPosition","Checkicon","DiscovermemateWrapper","Elements"],"sourceRoot":""}